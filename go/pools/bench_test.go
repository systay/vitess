// Generated by generate_bench/main.go
package pools

import (
	"testing"
)

func Benchmark_Res_1Workers_10Capacity(b *testing.B) {
	benchmarkGetPut(b, 0, VerySlowFactory, 1, 10)
}

func Benchmark_Fst_1Workers_10Capacity(b *testing.B) {
	benchmarkGetPut(b, 1, VerySlowFactory, 1, 10)
}

func Benchmark_Res_1Workers_100Capacity(b *testing.B) {
	benchmarkGetPut(b, 0, VerySlowFactory, 1, 100)
}

func Benchmark_Fst_1Workers_100Capacity(b *testing.B) {
	benchmarkGetPut(b, 1, VerySlowFactory, 1, 100)
}

func Benchmark_Res_1Workers_1000Capacity(b *testing.B) {
	benchmarkGetPut(b, 0, VerySlowFactory, 1, 1000)
}

func Benchmark_Fst_1Workers_1000Capacity(b *testing.B) {
	benchmarkGetPut(b, 1, VerySlowFactory, 1, 1000)
}

func Benchmark_Res_10Workers_10Capacity(b *testing.B) {
	benchmarkGetPut(b, 0, VerySlowFactory, 10, 10)
}

func Benchmark_Fst_10Workers_10Capacity(b *testing.B) {
	benchmarkGetPut(b, 1, VerySlowFactory, 10, 10)
}

func Benchmark_Res_10Workers_100Capacity(b *testing.B) {
	benchmarkGetPut(b, 0, VerySlowFactory, 10, 100)
}

func Benchmark_Fst_10Workers_100Capacity(b *testing.B) {
	benchmarkGetPut(b, 1, VerySlowFactory, 10, 100)
}

func Benchmark_Res_10Workers_1000Capacity(b *testing.B) {
	benchmarkGetPut(b, 0, VerySlowFactory, 10, 1000)
}

func Benchmark_Fst_10Workers_1000Capacity(b *testing.B) {
	benchmarkGetPut(b, 1, VerySlowFactory, 10, 1000)
}

func Benchmark_Res_100Workers_10Capacity(b *testing.B) {
	benchmarkGetPut(b, 0, VerySlowFactory, 100, 10)
}

func Benchmark_Fst_100Workers_10Capacity(b *testing.B) {
	benchmarkGetPut(b, 1, VerySlowFactory, 100, 10)
}

func Benchmark_Res_100Workers_100Capacity(b *testing.B) {
	benchmarkGetPut(b, 0, VerySlowFactory, 100, 100)
}

func Benchmark_Fst_100Workers_100Capacity(b *testing.B) {
	benchmarkGetPut(b, 1, VerySlowFactory, 100, 100)
}

func Benchmark_Res_100Workers_1000Capacity(b *testing.B) {
	benchmarkGetPut(b, 0, VerySlowFactory, 100, 1000)
}

func Benchmark_Fst_100Workers_1000Capacity(b *testing.B) {
	benchmarkGetPut(b, 1, VerySlowFactory, 100, 1000)
}

