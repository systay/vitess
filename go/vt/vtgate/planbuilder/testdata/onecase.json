[
  {
    "comment": "Add your test case here for debugging and run go test -run=One.",
    "query": "select foo, count(*) from (select user.x as foo, count(*) from user, user_extra group by foo) T group by foo",
    "plan": {
      "QueryType": "SELECT",
      "Original": "select foo, count(*) from (select user.x as foo, count(*) from user, user_extra group by foo) T group by foo",
      "Instructions": {
        "OperatorType": "Aggregate",
        "Variant": "Ordered",
        "Aggregates": "count_star(1) AS count(*)",
        "GroupBy": "0",
        "Inputs": [
          {
            "OperatorType": "SimpleProjection",
            "Columns": [
              2
            ],
            "Inputs": [
              {
                "OperatorType": "Aggregate",
                "Variant": "Ordered",
                "Aggregates": "sum_count_star(1) AS count(*)",
                "GroupBy": "(0|2)",
                "Inputs": [
                  {
                    "OperatorType": "Projection",
                    "Expressions": [
                      "[COLUMN 4] as foo",
                      "[COLUMN 0] * [COLUMN 1] as count(*)",
                      "[COLUMN 3] as weight_string(`user`.x)"
                    ],
                    "Inputs": [
                      {
                        "OperatorType": "Join",
                        "Variant": "Join",
                        "JoinColumnIndexes": "L:0,R:0,L:2,L:3,L:1",
                        "TableName": "`user`_user_extra",
                        "Inputs": [
                          {
                            "OperatorType": "Route",
                            "Variant": "Scatter",
                            "Keyspace": {
                              "Name": "user",
                              "Sharded": true
                            },
                            "FieldQuery": "select count(*), `user`.x as foo, foo, weight_string(`user`.x) from `user` where 1 != 1 group by foo, weight_string(`user`.x)",
                            "OrderBy": "(1|3) ASC",
                            "Query": "select count(*), `user`.x as foo, foo, weight_string(`user`.x) from `user` group by foo, weight_string(`user`.x) order by foo asc",
                            "Table": "`user`"
                          },
                          {
                            "OperatorType": "Route",
                            "Variant": "Scatter",
                            "Keyspace": {
                              "Name": "user",
                              "Sharded": true
                            },
                            "FieldQuery": "select count(*) from user_extra where 1 != 1 group by .0",
                            "Query": "select count(*) from user_extra group by .0",
                            "Table": "user_extra"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "TablesUsed": [
        "user.user",
        "user.user_extra"
      ]
    }
  }
]