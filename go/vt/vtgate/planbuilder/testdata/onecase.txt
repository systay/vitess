# Add your test case here for debugging and run go test -run=One.
"select count(*) from aggr_test a1 join aggr_test a2 on a1.val2 = a2.id join t3 t on a2.val2 = t.id7"
{
}
{
  "QueryType": "SELECT",
  "Original": "select count(*) from aggr_test a1 join aggr_test a2 on a1.val2 = a2.id join t3 t on a2.val2 = t.id7",
  "Instructions": {
    "OperatorType": "Aggregate",
    "Variant": "Scalar",
    "Aggregates": "sum(0) AS count(*)",
    "ResultColumns": 1,
    "Inputs": [
      {
        "OperatorType": "Projection",
        "Expressions": [
          "[COLUMN 0] * [COLUMN 1] as count(*)"
        ],
        "Inputs": [
          {
            "OperatorType": "Join",
            "Variant": "Join",
            "JoinColumnIndexes": "-1,1",
            "JoinVars": {
              "a2_val2": 0
            },
            "TableName": "aggr_test_aggr_test_t3",
            "Inputs": [
              {
                "OperatorType": "Projection",
                "Expressions": [
                  "[COLUMN 3] * [COLUMN 4] as count(*)",
                  "[COLUMN 2]",
                  "[COLUMN 1]"
                ],
                "Inputs": [
                  {
                    "OperatorType": "Join",
                    "Variant": "Join",
                    "JoinColumnIndexes": "1,1,3,-2,2",
                    "JoinVars": {
                      "a1_val2": 0
                    },
                    "TableName": "aggr_test_aggr_test",
                    "Inputs": [
                      {
                        "OperatorType": "Route",
                        "Variant": "Scatter",
                        "Keyspace": {
                          "Name": "aggrtest",
                          "Sharded": true
                        },
                        "FieldQuery": "select a1.val2, count(*), weight_string(a1.val2) from aggr_test as a1 where 1 != 1 group by a1.val2, weight_string(a1.val2)",
                        "Query": "select a1.val2, count(*), weight_string(a1.val2) from aggr_test as a1 group by a1.val2, weight_string(a1.val2)",
                        "Table": "aggr_test"
                      },
                      {
                        "OperatorType": "Route",
                        "Variant": "EqualUnique",
                        "Keyspace": {
                          "Name": "aggrtest",
                          "Sharded": true
                        },
                        "FieldQuery": "select a2.val2, count(*), weight_string(a2.val2) from aggr_test as a2 where 1 != 1 group by a2.val2, weight_string(a2.val2)",
                        "Query": "select a2.val2, count(*), weight_string(a2.val2) from aggr_test as a2 where a2.id = :a1_val2 group by a2.val2, weight_string(a2.val2)",
                        "Table": "aggr_test",
                        "Values": [
                          ":a1_val2"
                        ],
                        "Vindex": "hash"
                      }
                    ]
                  }
                ]
              },
              {
                "OperatorType": "Route",
                "Variant": "Equal",
                "Keyspace": {
                  "Name": "aggrtest",
                  "Sharded": true
                },
                "FieldQuery": "select count(*) from t3 as t where 1 != 1",
                "Query": "select count(*) from t3 as t where t.id7 = :a2_val2",
                "Table": "t3",
                "Values": [
                  ":a2_val2"
                ],
                "Vindex": "t3_id7_vdx"
              }
            ]
          }
        ]
      }
    ]
  }
}
