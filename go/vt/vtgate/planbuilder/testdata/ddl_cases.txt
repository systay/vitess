# simple create table
"create table t1(id bigint, primary key(id))"
{
  "QueryType": "DDL",
  "Original": "create table t1(id bigint, primary key(id))",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "Query": "create table t1 (\n\tid bigint,\n\tprimary key (id)\n)"
  }
}

# simple create table with keyspace
"create table user.t1(id bigint, primary key(id))"
{
  "QueryType": "DDL",
  "Original": "create table user.t1(id bigint, primary key(id))",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create table t1 (\n\tid bigint,\n\tprimary key (id)\n)"
  }
}

# DDL
"create table a(id int)"
{
  "QueryType": "DDL",
  "Original": "create table a(id int)",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "Query": "create table a (\n\tid int\n)"
  }
}

# simple create table with table qualifier that does not exists
"create table a.b(id int)"
"no keyspace with name [a] found"

#Alter table
"alter table a ADD id int"
{
  "QueryType": "DDL",
  "Original": "alter table a ADD id int",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "Query": "alter table a ADD id int"
  }
}

#Alter table with qualifier
"alter table user.b ADD id int"
{
  "QueryType": "DDL",
  "Original": "alter table user.b ADD id int",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "alter table user.b ADD id int"
  }
}

#Alter table with unknown qualifier
"alter table a.b ADD id int"
"no keyspace with name [a] found"

# create db foo
"create database foo"
"create database not allowed"

# create db main
"create database main"
"cannot create database 'main'; database exists"

# create db if not exists main
"create database if not exists main"
{
  "QueryType": "DDL",
  "Original": "create database if not exists main",
  "Instructions": {
    "OperatorType": "Rows"
  }
}

# alter db foo
"alter database foo collate utf8"
"cannot alter database 'foo'; database does not exists"

# alter db main
"alter database main collate utf8"
"alter database not allowed"

# drop db foo
"drop database foo"
"cannot drop database 'foo'; database does not exists"

# drop db main
"drop database main"
"drop database not allowed"

# drop db if exists main
"drop database if exists main"
"drop database not allowed"

# drop db if exists foo
"drop schema if exists foo"
{
  "QueryType": "DDL",
  "Original": "drop schema if exists foo",
  "Instructions": {
    "OperatorType": "Rows"
  }
}

# DDL
"create index a on user(id)"
{
  "QueryType": "DDL",
  "Original": "create index a on user(id)",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "alter table user add index a (id)"
  }
}

# DDL with qualifier
"create index a on user.user(id)"
{
  "QueryType": "DDL",
  "Original": "create index a on user.user(id)",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "alter table user add index a (id)"
  }
}

# DDL with qualifier for a table not in vschema of an unsharded keyspace
"create index a on main.unknown(id)"
{
  "QueryType": "DDL",
  "Original": "create index a on main.unknown(id)",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "Query": "alter table unknown add index a (id)"
  }
}

# Create View with qualifier
"create view user.a as select* from user"
{
  "QueryType": "DDL",
  "Original": "create view user.a as select* from user",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view a as select * from user"
  }
}

# create view with qualifier in select as well
"create view user.a as select* from user.user"
{
  "QueryType": "DDL",
  "Original": "create view user.a as select* from user.user",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view a as select * from user"
  }
}

# create view with No column referenced
"create view user.view_a as select 1 from user"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select 1 from user",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select 1 from user"
  }
}

# create view with '*' expression for simple route
"create view user.view_a as select user.* from user"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select user.* from user",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select user.* from user"
  }
}

# create view with unqualified '*' expression for simple route
"create view user.view_a as select * from user"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select * from user",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select * from user"
  }
}

# create view with fully qualified '*' expression for simple route
"create view user.view_a as select user.user.* from user.user"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select user.user.* from user.user",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select user.* from user"
  }
}

# create view with select * from authoritative table
"create view user.view_a as select * from authoritative"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select * from authoritative",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select * from authoritative"
  }
}

# create view with select * from join of authoritative tables
"create view user.view_a as select * from authoritative a join authoritative b on a.user_id=b.user_id"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select * from authoritative a join authoritative b on a.user_id=b.user_id",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select * from authoritative as a join authoritative as b on a.user_id = b.user_id"
  }
}

# create view with select * from qualified authoritative table
"create view user.view_a as select a.* from authoritative a"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select a.* from authoritative a",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select a.* from authoritative as a"
  }
}

# create view with select * from intermixing of authoritative table with non-authoritative results in no expansion
"create view user.view_a as select * from authoritative join user on authoritative.user_id=user.id"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select * from authoritative join user on authoritative.user_id=user.id",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select * from authoritative join user on authoritative.user_id = user.id"
  }
}

# create view with select authoritative.* with intermixing still expands
"create view user.view_a as select user.id, a.*, user.col1 from authoritative a join user on a.user_id=user.id"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select user.id, a.*, user.col1 from authoritative a join user on a.user_id=user.id",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select user.id, a.*, user.col1 from authoritative as a join user on a.user_id = user.id"
  }
}

# create view with auto-resolve anonymous columns for simple route
"create view user.view_a as select col from user join user_extra on user.id = user_extra.user_id"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select col from user join user_extra on user.id = user_extra.user_id",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select col from user join user_extra on user.id = user_extra.user_id"
  }
}

# create view with join that can be solved in each shard separately
"create view user.view_a as select user.id from user join user_extra on user.id = user_extra.user_id"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select user.id from user join user_extra on user.id = user_extra.user_id",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select user.id from user join user_extra on user.id = user_extra.user_id"
  }
}

# create view with last_insert_id for unsharded route
"create view main.view_a as select last_insert_id() as x from main.unsharded"
{
  "QueryType": "DDL",
  "Original": "create view main.view_a as select last_insert_id() as x from main.unsharded",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "Query": "create view view_a as select :__lastInsertId as x from unsharded"
  }
}

# create view with select from pinned table
"create view user.view_a as select * from pin_test"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select * from pin_test",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select * from pin_test"
  }
}

# create view with Expression with single-route reference
"create view user.view_a as select user.col, user_extra.id + user_extra.col from user join user_extra on user.id = user_extra.user_id"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select user.col, user_extra.id + user_extra.col from user join user_extra on user.id = user_extra.user_id",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select user.col, user_extra.id + user_extra.col from user join user_extra on user.id = user_extra.user_id"
  }
}

# create view with Comments
"create view user.view_a as select /* comment */ user.col from user join user_extra on user.id = user_extra.user_id"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select /* comment */ user.col from user join user_extra on user.id = user_extra.user_id",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select /* comment */ user.col from user join user_extra on user.id = user_extra.user_id"
  }
}

# create view with for update
"create view user.view_a as select user.col from user join user_extra on user.id = user_extra.user_id for update"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select user.col from user join user_extra on user.id = user_extra.user_id for update",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select user.col from user join user_extra on user.id = user_extra.user_id for update"
  }
}

# create view with Case preservation
"create view user.view_a as select user.Col, user_extra.Id from user join user_extra on user.id = user_extra.user_id"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select user.Col, user_extra.Id from user join user_extra on user.id = user_extra.user_id",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select user.Col, user_extra.Id from user join user_extra on user.id = user_extra.user_id"
  }
}

# create view with syntax error
"create view user.view_a as the quick brown fox"
"syntax error at position 31 near 'the'"

# create view with Hex number is not treated as a simple value
"create view user.view_a as select * from user where id = 0x04"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select * from user where id = 0x04",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select * from user where id = 0x04"
  }
}

# create view with limit works if it can be dropped
"create view user.view_a as select * from user where name ='abc' AND (id = 4) limit 5"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select * from user where name ='abc' AND (id = 4) limit 5",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select * from user where `name` = 'abc' and id = 4 limit 5"
  }
}

# create view with Multiple parenthesized expressions
"create view user.view_a as select * from user where (id = 4) AND (name ='abc') limit 5"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select * from user where (id = 4) AND (name ='abc') limit 5",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select * from user where id = 4 and `name` = 'abc' limit 5"
  }
}

# create view with Multiple parenthesized expressions
"create view user.view_a as select * from user where (id = 4 and name ='abc') limit 5"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select * from user where (id = 4 and name ='abc') limit 5",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select * from user where id = 4 and `name` = 'abc' limit 5"
  }
}

# create view with Column Aliasing with Table.Column
"create view user.view_a as select user0_.col as col0_ from user user0_ where id = 1 order by user0_.col"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select user0_.col as col0_ from user user0_ where id = 1 order by user0_.col",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select user0_.col as col0_ from user as user0_ where id = 1 order by user0_.col asc"
  }
}

# create view with Column Aliasing with Column
"create view user.view_a as select user0_.col as col0_ from user user0_ where id = 1 order by col0_ desc"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select user0_.col as col0_ from user user0_ where id = 1 order by col0_ desc",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select user0_.col as col0_ from user as user0_ where id = 1 order by col0_ desc"
  }
}

# create view with Booleans and parenthesis
"create view user.view_a as select * from user where (id = 1) AND name = true"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select * from user where (id = 1) AND name = true",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select * from user where id = 1 and `name` = true"
  }
}

# create view with union with the same target shard
"create view user.view_a as select * from music where user_id = 1 union select * from user where id = 1"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select * from music where user_id = 1 union select * from user where id = 1",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select * from music where user_id = 1 union select * from user where id = 1"
  }
}

# create view with subquery in unsharded keyspace
"create view view_a as select * from (select col1, col2 from unsharded where id = 1 union select col1, col2 from unsharded where id = 3) a"
{
  "QueryType": "DDL",
  "Original": "create view view_a as select * from (select col1, col2 from unsharded where id = 1 union select col1, col2 from unsharded where id = 3) a",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "Query": "create view view_a as select * from (select col1, col2 from unsharded where id = 1 union select col1, col2 from unsharded where id = 3) as a"
  }
}

# create view with subquery in unsharded keyspace with IN clause
"create view view_a as select id, name from unsharded where id in (select id from unsharded where id = 1 union select id from unsharded where id = 3)"
{
  "QueryType": "DDL",
  "Original": "create view view_a as select id, name from unsharded where id in (select id from unsharded where id = 1 union select id from unsharded where id = 3)",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "Query": "create view view_a as select id, `name` from unsharded where id in (select id from unsharded where id = 1 union select id from unsharded where id = 3)"
  }
}

# create view with subquery in unsharded keyspace with UNION clause
"create view view_a as (select id from unsharded) union (select id from unsharded_auto) order by id limit 5"
{
  "QueryType": "DDL",
  "Original": "create view view_a as (select id from unsharded) union (select id from unsharded_auto) order by id limit 5",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "Query": "create view view_a as (select id from unsharded) union (select id from unsharded_auto) order by id asc limit 5"
  }
}

# create view with subquery in unsharded keyspace with multiple UNION clauses
"create view view_a as select id from unsharded union select id from unsharded_auto union select id from unsharded_auto where id in (132)"
{
  "QueryType": "DDL",
  "Original": "create view view_a as select id from unsharded union select id from unsharded_auto union select id from unsharded_auto where id in (132)",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "Query": "create view view_a as select id from unsharded union select id from unsharded_auto union select id from unsharded_auto where id in (132)"
  }
}

# create view with subquery in unsharded keyspace with UNION clauses in subqueries
"create view view_a as (select id from unsharded union select id from unsharded_auto) union (select id from unsharded_auto union select name from unsharded)"
{
  "QueryType": "DDL",
  "Original": "create view view_a as (select id from unsharded union select id from unsharded_auto) union (select id from unsharded_auto union select name from unsharded)",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "main",
      "Sharded": false
    },
    "Query": "create view view_a as (select id from unsharded union select id from unsharded_auto) union (select id from unsharded_auto union select `name` from unsharded)"
  }
}

# create view with testing SingleRow Projection
"create view user.view_a as select 42 from user"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select 42 from user",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select 42 from user"
  }
}

# create view with sql_calc_found_rows without limit
"create view user.view_a as select sql_calc_found_rows * from music where user_id = 1"
{
  "QueryType": "DDL",
  "Original": "create view user.view_a as select sql_calc_found_rows * from music where user_id = 1",
  "Instructions": {
    "OperatorType": "DDL",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "create view view_a as select * from music where user_id = 1"
  }
}
