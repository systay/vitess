// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const DIRECTORY = 57517
const NAME = 57518
const UPGRADE = 57519
const STATUS = 57520
const VARIABLES = 57521
const WARNINGS = 57522
const SEQUENCE = 57523
const BEGIN = 57524
const START = 57525
const TRANSACTION = 57526
const COMMIT = 57527
const ROLLBACK = 57528
const SAVEPOINT = 57529
const RELEASE = 57530
const WORK = 57531
const BIT = 57532
const TINYINT = 57533
const SMALLINT = 57534
const MEDIUMINT = 57535
const INT = 57536
const INTEGER = 57537
const BIGINT = 57538
const INTNUM = 57539
const REAL = 57540
const DOUBLE = 57541
const FLOAT_TYPE = 57542
const DECIMAL = 57543
const NUMERIC = 57544
const TIME = 57545
const TIMESTAMP = 57546
const DATETIME = 57547
const YEAR = 57548
const CHAR = 57549
const VARCHAR = 57550
const BOOL = 57551
const CHARACTER = 57552
const VARBINARY = 57553
const NCHAR = 57554
const TEXT = 57555
const TINYTEXT = 57556
const MEDIUMTEXT = 57557
const LONGTEXT = 57558
const BLOB = 57559
const TINYBLOB = 57560
const MEDIUMBLOB = 57561
const LONGBLOB = 57562
const JSON = 57563
const ENUM = 57564
const GEOMETRY = 57565
const POINT = 57566
const LINESTRING = 57567
const POLYGON = 57568
const GEOMETRYCOLLECTION = 57569
const MULTIPOINT = 57570
const MULTILINESTRING = 57571
const MULTIPOLYGON = 57572
const NULLX = 57573
const AUTO_INCREMENT = 57574
const APPROXNUM = 57575
const SIGNED = 57576
const UNSIGNED = 57577
const ZEROFILL = 57578
const COLLATION = 57579
const DATABASES = 57580
const TABLES = 57581
const VITESS_METADATA = 57582
const VSCHEMA = 57583
const FULL = 57584
const PROCESSLIST = 57585
const COLUMNS = 57586
const FIELDS = 57587
const ENGINES = 57588
const PLUGINS = 57589
const EXTENDED = 57590
const KEYSPACES = 57591
const VITESS_KEYSPACES = 57592
const VITESS_SHARDS = 57593
const VITESS_TABLETS = 57594
const NAMES = 57595
const CHARSET = 57596
const GLOBAL = 57597
const SESSION = 57598
const ISOLATION = 57599
const LEVEL = 57600
const READ = 57601
const WRITE = 57602
const ONLY = 57603
const REPEATABLE = 57604
const COMMITTED = 57605
const UNCOMMITTED = 57606
const SERIALIZABLE = 57607
const CURRENT_TIMESTAMP = 57608
const DATABASE = 57609
const CURRENT_DATE = 57610
const CURRENT_TIME = 57611
const LOCALTIME = 57612
const LOCALTIMESTAMP = 57613
const UTC_DATE = 57614
const UTC_TIME = 57615
const UTC_TIMESTAMP = 57616
const REPLACE = 57617
const CONVERT = 57618
const CAST = 57619
const SUBSTR = 57620
const SUBSTRING = 57621
const GROUP_CONCAT = 57622
const SEPARATOR = 57623
const TIMESTAMPADD = 57624
const TIMESTAMPDIFF = 57625
const MATCH = 57626
const AGAINST = 57627
const BOOLEAN = 57628
const LANGUAGE = 57629
const WITH = 57630
const QUERY = 57631
const EXPANSION = 57632
const UNUSED = 57633
const ARRAY = 57634
const CUME_DIST = 57635
const DESCRIPTION = 57636
const DENSE_RANK = 57637
const EMPTY = 57638
const EXCEPT = 57639
const FIRST_VALUE = 57640
const GROUPING = 57641
const GROUPS = 57642
const JSON_TABLE = 57643
const LAG = 57644
const LAST_VALUE = 57645
const LATERAL = 57646
const LEAD = 57647
const MEMBER = 57648
const NTH_VALUE = 57649
const NTILE = 57650
const OF = 57651
const OVER = 57652
const PERCENT_RANK = 57653
const RANK = 57654
const RECURSIVE = 57655
const ROW_NUMBER = 57656
const SYSTEM = 57657
const WINDOW = 57658
const ACTIVE = 57659
const ADMIN = 57660
const BUCKETS = 57661
const CLONE = 57662
const COMPONENT = 57663
const DEFINITION = 57664
const ENFORCED = 57665
const EXCLUDE = 57666
const FOLLOWING = 57667
const GEOMCOLLECTION = 57668
const GET_MASTER_PUBLIC_KEY = 57669
const HISTOGRAM = 57670
const HISTORY = 57671
const INACTIVE = 57672
const INVISIBLE = 57673
const LOCKED = 57674
const MASTER_COMPRESSION_ALGORITHMS = 57675
const MASTER_PUBLIC_KEY_PATH = 57676
const MASTER_TLS_CIPHERSUITES = 57677
const MASTER_ZSTD_COMPRESSION_LEVEL = 57678
const NESTED = 57679
const NETWORK_NAMESPACE = 57680
const NOWAIT = 57681
const NULLS = 57682
const OJ = 57683
const OLD = 57684
const OPTIONAL = 57685
const ORDINALITY = 57686
const ORGANIZATION = 57687
const OTHERS = 57688
const PATH = 57689
const PERSIST = 57690
const PERSIST_ONLY = 57691
const PRECEDING = 57692
const PRIVILEGE_CHECKS_USER = 57693
const PROCESS = 57694
const RANDOM = 57695
const REFERENCE = 57696
const REQUIRE_ROW_FORMAT = 57697
const RESOURCE = 57698
const RESPECT = 57699
const RESTART = 57700
const RETAIN = 57701
const REUSE = 57702
const ROLE = 57703
const SECONDARY = 57704
const SECONDARY_ENGINE = 57705
const SECONDARY_LOAD = 57706
const SECONDARY_UNLOAD = 57707
const SKIP = 57708
const SRID = 57709
const THREAD_PRIORITY = 57710
const TIES = 57711
const UNBOUNDED = 57712
const VCPU = 57713
const VISIBLE = 57714
const FORMAT = 57715
const TREE = 57716
const VITESS = 57717
const TRADITIONAL = 57718

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	136, 107,
	227, 107,
	-2, 101,
	-1, 48,
	34, 344,
	155, 344,
	167, 344,
	195, 358,
	196, 358,
	-2, 346,
	-1, 53,
	157, 368,
	-2, 366,
	-1, 77,
	55, 404,
	-2, 412,
	-1, 101,
	136, 107,
	227, 107,
	-2, 102,
	-1, 438,
	143, 779,
	-2, 775,
	-1, 439,
	143, 780,
	-2, 776,
	-1, 454,
	55, 405,
	-2, 417,
	-1, 455,
	55, 406,
	-2, 418,
	-1, 475,
	111, 1055,
	-2, 78,
	-1, 476,
	111, 959,
	-2, 79,
	-1, 481,
	111, 918,
	-2, 740,
	-1, 483,
	111, 997,
	-2, 742,
	-1, 632,
	136, 107,
	227, 107,
	-2, 270,
	-1, 1018,
	143, 782,
	-2, 778,
	-1, 1105,
	73, 60,
	81, 60,
	-2, 64,
	-1, 1483,
	5, 656,
	18, 656,
	20, 656,
	32, 656,
	82, 656,
	-2, 443,
	-1, 1682,
	45, 711,
	-2, 709,
}

const yyPrivate = 57344

const yyLast = 19518

var yyAct = [...]int{

	438, 1771, 1682, 1529, 1760, 1729, 1591, 1404, 1611, 1662,
	382, 1310, 1628, 1330, 397, 1178, 1127, 1099, 1311, 411,
	1385, 1462, 1459, 1361, 1463, 786, 1297, 647, 1136, 1172,
	746, 76, 3, 905, 793, 613, 1384, 610, 447, 1096,
	1126, 1469, 1246, 480, 111, 1475, 939, 124, 664, 349,
	124, 1424, 958, 1005, 1012, 361, 464, 124, 1180, 1141,
	831, 824, 1377, 1123, 74, 607, 1078, 1101, 1085, 813,
	791, 441, 456, 796, 814, 384, 982, 1196, 1061, 1168,
	1038, 606, 29, 828, 1107, 361, 953, 656, 361, 124,
	361, 124, 830, 373, 803, 614, 380, 821, 72, 102,
	71, 77, 103, 968, 1679, 864, 8, 1630, 124, 124,
	1520, 7, 1601, 1764, 6, 1726, 124, 1758, 638, 374,
	1181, 1707, 124, 759, 1751, 1530, 1157, 896, 1725, 1706,
	760, 368, 1441, 1559, 79, 80, 81, 82, 83, 84,
	617, 1183, 91, 120, 116, 117, 118, 666, 99, 107,
	377, 108, 1493, 462, 466, 442, 423, 1117, 429, 430,
	427, 428, 426, 425, 424, 112, 113, 114, 474, 1494,
	1495, 31, 431, 432, 65, 35, 36, 1673, 708, 707,
	717, 718, 710, 711, 712, 713, 714, 715, 716, 709,
	369, 1347, 719, 372, 1346, 99, 92, 1348, 90, 1118,
	1119, 623, 95, 679, 622, 96, 97, 832, 371, 833,
	370, 852, 1182, 1151, 31, 32, 33, 65, 35, 36,
	674, 672, 673, 1369, 675, 672, 673, 1594, 112, 113,
	114, 1709, 477, 625, 69, 1158, 653, 1550, 655, 37,
	59, 60, 1406, 62, 1548, 64, 359, 967, 363, 63,
	357, 677, 865, 109, 1015, 633, 969, 970, 971, 927,
	667, 668, 669, 1409, 1226, 1408, 924, 1750, 678, 1739,
	652, 654, 1663, 1079, 119, 1218, 1692, 1777, 49, 98,
	1176, 878, 881, 882, 883, 884, 885, 886, 64, 887,
	888, 889, 890, 891, 866, 867, 868, 869, 850, 851,
	879, 1407, 853, 928, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 870, 871, 872, 873, 874, 875,
	876, 877, 1176, 926, 624, 1176, 98, 1500, 662, 609,
	124, 645, 1654, 637, 651, 619, 468, 1331, 1333, 1410,
	1145, 361, 932, 682, 899, 1486, 1485, 1519, 1145, 1484,
	361, 620, 1184, 917, 40, 42, 45, 44, 47, 925,
	61, 1674, 631, 1705, 361, 361, 650, 916, 329, 115,
	1775, 1225, 1158, 1686, 1224, 1575, 680, 880, 731, 732,
	1215, 1492, 1302, 48, 68, 67, 1217, 1265, 57, 58,
	46, 1275, 1254, 1262, 112, 113, 114, 688, 681, 1113,
	807, 744, 643, 1343, 112, 113, 114, 50, 51, 1425,
	52, 53, 54, 55, 1710, 709, 1124, 719, 719, 959,
	112, 113, 114, 658, 659, 1332, 1057, 657, 87, 1665,
	989, 915, 699, 700, 906, 1473, 628, 696, 629, 1261,
	834, 630, 692, 1206, 987, 988, 986, 1039, 954, 661,
	1427, 670, 101, 699, 649, 729, 1443, 66, 1511, 901,
	1752, 663, 636, 1655, 1653, 361, 1144, 88, 124, 374,
	124, 124, 691, 361, 1144, 784, 783, 689, 757, 361,
	690, 1039, 1148, 1272, 912, 909, 910, 1753, 908, 1149,
	1429, 1367, 1433, 1695, 1428, 747, 1426, 1202, 1203, 1204,
	66, 1431, 693, 694, 1778, 789, 792, 1600, 1773, 812,
	1430, 1774, 1216, 1772, 1214, 64, 697, 698, 696, 731,
	732, 919, 922, 1432, 1434, 731, 732, 985, 960, 797,
	698, 696, 1062, 1063, 699, 1744, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 785, 699, 762, 764,
	766, 768, 770, 772, 773, 763, 765, 955, 769, 771,
	648, 774, 1745, 632, 914, 800, 1599, 1059, 1525, 1205,
	1779, 1381, 782, 1380, 1210, 1207, 1198, 1208, 1201, 1187,
	1197, 639, 640, 641, 1199, 1200, 913, 707, 717, 718,
	710, 711, 712, 713, 714, 715, 716, 709, 1209, 1449,
	719, 1239, 1240, 1241, 1755, 1754, 124, 697, 698, 696,
	892, 1746, 618, 697, 698, 696, 1737, 361, 64, 124,
	477, 902, 903, 1720, 1624, 699, 1597, 921, 361, 1058,
	918, 699, 124, 1563, 112, 113, 114, 124, 1007, 1526,
	124, 937, 938, 1451, 124, 920, 361, 1450, 697, 698,
	696, 361, 361, 361, 124, 361, 361, 710, 711, 712,
	713, 714, 715, 716, 709, 898, 699, 719, 361, 361,
	112, 113, 114, 1382, 943, 1391, 923, 717, 718, 710,
	711, 712, 713, 714, 715, 716, 709, 941, 1378, 719,
	952, 697, 698, 696, 942, 977, 979, 980, 944, 946,
	947, 948, 978, 950, 951, 829, 945, 621, 795, 699,
	712, 713, 714, 715, 716, 709, 956, 957, 719, 451,
	1006, 1660, 983, 1659, 962, 1472, 112, 113, 114, 1008,
	1398, 467, 623, 963, 933, 622, 1651, 1756, 1393, 1260,
	697, 698, 696, 361, 1651, 1703, 1146, 1259, 1445, 1699,
	451, 1570, 972, 973, 974, 975, 695, 961, 699, 1651,
	451, 1651, 1687, 1027, 1030, 964, 697, 698, 696, 1040,
	400, 399, 402, 403, 404, 405, 361, 361, 984, 401,
	406, 1298, 1022, 1738, 699, 112, 113, 114, 1018, 1350,
	472, 1017, 112, 113, 114, 361, 1194, 1651, 1650, 895,
	1590, 73, 124, 1577, 451, 361, 31, 1025, 1026, 124,
	1337, 124, 1664, 747, 469, 470, 1573, 451, 1108, 124,
	124, 124, 1052, 1517, 1516, 1109, 439, 361, 1009, 1010,
	361, 1305, 1064, 1048, 1049, 1513, 1514, 1513, 1512, 1070,
	451, 361, 361, 75, 1019, 1082, 451, 695, 451, 1082,
	1097, 1018, 981, 1306, 1076, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1072, 895, 894, 125, 841, 840, 125, 1613, 451, 1143,
	64, 362, 1109, 125, 31, 1298, 1110, 1071, 1515, 1460,
	1081, 1122, 1016, 1082, 1112, 1351, 361, 1602, 1472, 1074,
	124, 1116, 1278, 1277, 1070, 1108, 1193, 1111, 1070, 1060,
	1114, 362, 1044, 931, 362, 125, 362, 125, 1106, 444,
	1115, 1174, 826, 1131, 31, 124, 124, 124, 124, 124,
	1175, 1635, 124, 124, 125, 125, 124, 361, 1192, 1387,
	1082, 1582, 125, 1110, 1603, 1604, 1605, 1405, 125, 897,
	1177, 1108, 1766, 1472, 124, 1016, 1070, 1173, 64, 1504,
	124, 124, 124, 893, 1355, 1169, 124, 361, 1170, 1171,
	1163, 1162, 89, 1614, 477, 1186, 1152, 477, 1153, 1154,
	1155, 1156, 1159, 1160, 1161, 1230, 1232, 1211, 1128, 1191,
	1236, 1185, 1761, 64, 1164, 1165, 1166, 1167, 64, 1386,
	1476, 1477, 1506, 1023, 1024, 451, 983, 1029, 1032, 1033,
	708, 707, 717, 718, 710, 711, 712, 713, 714, 715,
	716, 709, 1479, 1460, 719, 1606, 1395, 1087, 1090, 1091,
	1092, 1088, 1047, 1089, 1093, 1050, 1051, 1476, 1477, 1195,
	965, 935, 1482, 1387, 1043, 708, 707, 717, 718, 710,
	711, 712, 713, 714, 715, 716, 709, 1741, 1481, 719,
	1322, 1256, 984, 1242, 1319, 1323, 1320, 1247, 1318, 1607,
	1608, 1321, 124, 1087, 1090, 1091, 1092, 1088, 1284, 1089,
	1093, 1724, 1452, 124, 124, 124, 124, 124, 1287, 794,
	1291, 1255, 1312, 1722, 1574, 124, 1273, 1296, 1324, 124,
	1091, 1092, 442, 124, 1303, 1295, 1715, 1712, 124, 124,
	1307, 1300, 124, 124, 124, 1288, 1289, 792, 1271, 1743,
	1728, 450, 1730, 1736, 1285, 1349, 1735, 361, 1683, 1681,
	1329, 1290, 1286, 930, 440, 94, 1356, 1556, 1243, 1244,
	1245, 1362, 1362, 1352, 1299, 1301, 1392, 1338, 1386, 1035,
	1373, 1340, 1313, 904, 787, 1316, 125, 941, 1314, 1315,
	1562, 1317, 1325, 1036, 839, 1363, 788, 362, 646, 1366,
	1335, 105, 1336, 1697, 1341, 1696, 362, 1344, 106, 1633,
	1364, 1357, 1389, 1568, 1528, 1062, 1063, 1189, 1055, 361,
	362, 362, 361, 1397, 934, 1095, 448, 1354, 1358, 1359,
	1360, 708, 707, 717, 718, 710, 711, 712, 713, 714,
	715, 716, 709, 124, 1294, 719, 1390, 445, 446, 361,
	1748, 1372, 1293, 1374, 1375, 1376, 1379, 1747, 1733, 1716,
	361, 1567, 449, 75, 1566, 1455, 1298, 1394, 1388, 708,
	707, 717, 718, 710, 711, 712, 713, 714, 715, 716,
	709, 676, 1266, 719, 1263, 361, 1768, 1767, 78, 808,
	801, 1006, 1768, 1684, 1595, 1056, 444, 73, 1251, 1252,
	70, 1, 348, 1759, 1128, 110, 1531, 1610, 1411, 911,
	1370, 1371, 1423, 1661, 1412, 1383, 1414, 1179, 1413, 1269,
	1422, 362, 1134, 124, 125, 1125, 125, 125, 86, 362,
	604, 85, 660, 361, 1442, 362, 1133, 1132, 1420, 361,
	361, 1652, 1368, 1436, 1435, 1150, 1312, 1461, 1593, 1018,
	1505, 1365, 1017, 1694, 847, 845, 1464, 846, 1399, 1444,
	844, 849, 848, 843, 457, 361, 341, 1471, 124, 966,
	358, 1094, 1458, 1400, 835, 1402, 802, 1213, 458, 1212,
	907, 1518, 361, 1147, 361, 1456, 361, 338, 671, 1362,
	1362, 1362, 1480, 1488, 343, 1490, 727, 1491, 1292, 1345,
	1497, 798, 799, 460, 1510, 459, 1487, 1489, 478, 471,
	1466, 1190, 1501, 1502, 1503, 1499, 93, 1734, 1713, 1711,
	1680, 1498, 1496, 1629, 1143, 1714, 124, 1678, 1416, 1417,
	1742, 1727, 1421, 1054, 790, 1521, 1532, 361, 361, 361,
	457, 124, 1565, 1437, 1438, 1454, 1439, 1440, 1270, 756,
	1523, 1524, 1522, 1446, 458, 1037, 817, 383, 1447, 1448,
	976, 398, 125, 395, 1508, 1509, 396, 1065, 1304, 701,
	1537, 1538, 381, 362, 375, 125, 816, 454, 455, 460,
	1421, 459, 809, 1086, 362, 1084, 412, 30, 125, 1546,
	1083, 1541, 822, 125, 1478, 1474, 125, 815, 1069, 453,
	125, 1034, 362, 1672, 1558, 452, 56, 362, 362, 362,
	125, 362, 362, 1312, 1569, 34, 365, 30, 684, 461,
	28, 1579, 23, 22, 362, 362, 21, 361, 20, 1128,
	19, 1128, 1560, 25, 18, 361, 1578, 17, 16, 104,
	100, 43, 41, 1352, 39, 634, 1589, 1507, 38, 27,
	26, 15, 374, 1588, 14, 13, 12, 11, 10, 443,
	1580, 361, 9, 1581, 5, 4, 1583, 687, 24, 745,
	2, 0, 0, 0, 0, 1617, 0, 0, 0, 0,
	0, 0, 0, 1543, 1544, 0, 1545, 0, 0, 1547,
	0, 1549, 0, 0, 0, 0, 1539, 1615, 0, 362,
	0, 0, 0, 0, 361, 0, 361, 1564, 361, 0,
	0, 0, 0, 361, 0, 361, 361, 361, 124, 1642,
	1464, 1643, 1645, 1646, 1464, 1634, 1638, 1623, 1632, 0,
	0, 0, 362, 362, 1636, 1647, 1649, 0, 0, 0,
	1656, 0, 0, 0, 361, 124, 0, 1641, 0, 0,
	1666, 362, 0, 1631, 374, 0, 0, 1648, 125, 0,
	0, 362, 0, 0, 0, 125, 0, 125, 0, 1596,
	0, 1598, 0, 0, 1128, 125, 125, 125, 0, 0,
	0, 0, 361, 362, 0, 1464, 362, 1685, 0, 0,
	1657, 1691, 1658, 0, 361, 361, 361, 362, 362, 0,
	0, 1616, 0, 1701, 0, 0, 0, 0, 1612, 0,
	0, 0, 1702, 0, 0, 0, 0, 361, 0, 0,
	1627, 1708, 0, 124, 0, 1312, 1717, 0, 0, 0,
	0, 0, 0, 0, 1618, 1619, 1620, 1621, 1622, 1721,
	0, 1723, 1625, 1626, 1732, 0, 1731, 0, 0, 0,
	0, 0, 362, 0, 0, 0, 125, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 0, 1749, 0, 0, 0, 0,
	0, 125, 125, 125, 125, 125, 0, 0, 125, 125,
	0, 0, 125, 362, 1765, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 125, 125, 125, 0,
	1020, 1021, 125, 362, 0, 0, 0, 665, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 0, 0, 0,
	0, 0, 1612, 1128, 0, 0, 0, 0, 0, 0,
	0, 0, 30, 0, 0, 0, 0, 0, 0, 1053,
	703, 0, 706, 0, 0, 728, 730, 0, 720, 721,
	722, 723, 724, 725, 726, 0, 704, 705, 702, 708,
	707, 717, 718, 710, 711, 712, 713, 714, 715, 716,
	709, 0, 0, 719, 0, 0, 743, 0, 1555, 0,
	748, 749, 750, 751, 752, 753, 754, 755, 0, 758,
	761, 761, 761, 767, 761, 761, 767, 761, 775, 776,
	777, 778, 779, 780, 781, 0, 1554, 0, 125, 0,
	30, 0, 0, 0, 0, 0, 0, 0, 1762, 125,
	125, 125, 125, 125, 1561, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 125, 818, 0, 0, 125,
	0, 0, 0, 0, 125, 125, 0, 0, 125, 125,
	125, 0, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 708, 707, 717, 718, 710,
	711, 712, 713, 714, 715, 716, 709, 0, 0, 719,
	708, 707, 717, 718, 710, 711, 712, 713, 714, 715,
	716, 709, 0, 0, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 708, 707,
	717, 718, 710, 711, 712, 713, 714, 715, 716, 709,
	0, 0, 719, 0, 0, 362, 0, 0, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	608, 0, 615, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 362, 0, 0, 0, 0,
	0, 0, 0, 1249, 0, 0, 362, 1250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1257, 1258,
	0, 0, 0, 665, 1264, 0, 819, 1267, 1268, 0,
	0, 362, 0, 0, 665, 1274, 0, 0, 0, 1276,
	0, 0, 1279, 1280, 1281, 1282, 1283, 0, 0, 0,
	0, 0, 665, 0, 0, 0, 0, 665, 665, 665,
	0, 665, 665, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 122, 665, 665, 0, 0, 0, 362,
	0, 0, 0, 364, 0, 362, 362, 1553, 0, 0,
	0, 1327, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 113, 114, 0, 0, 0,
	0, 362, 0, 0, 125, 612, 0, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	362, 0, 362, 0, 626, 627, 0, 0, 0, 0,
	0, 0, 635, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 125, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 0, 362, 362, 362, 0, 125, 0, 708,
	707, 717, 718, 710, 711, 712, 713, 714, 715, 716,
	709, 0, 0, 719, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 1098, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 0, 0, 0, 0,
	1415, 0, 479, 0, 0, 0, 1418, 1419, 331, 0,
	0, 0, 0, 0, 0, 0, 683, 685, 410, 0,
	708, 707, 717, 718, 710, 711, 712, 713, 714, 715,
	716, 709, 0, 362, 719, 344, 334, 0, 345, 346,
	353, 362, 0, 0, 337, 339, 350, 335, 336, 355,
	354, 0, 332, 352, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 0, 123, 1248, 362, 356, 0,
	0, 0, 0, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 0, 0, 1483, 0, 708, 707, 717, 718,
	710, 711, 712, 713, 714, 715, 716, 709, 465, 465,
	719, 0, 0, 665, 0, 0, 0, 123, 0, 123,
	362, 0, 362, 0, 362, 0, 644, 805, 0, 362,
	0, 362, 362, 362, 125, 479, 123, 123, 0, 0,
	0, 836, 0, 0, 123, 0, 0, 0, 0, 0,
	123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 125, 708, 707, 717, 718, 710, 711, 712, 713,
	714, 715, 716, 709, 0, 0, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 1540, 0, 0, 0, 1542,
	0, 0, 0, 1253, 0, 0, 443, 0, 362, 0,
	1551, 1552, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 362, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1571, 1572, 0, 362, 1576, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 818, 0,
	0, 0, 1587, 0, 0, 1308, 1309, 0, 0, 818,
	818, 818, 818, 818, 811, 0, 0, 823, 0, 0,
	0, 0, 0, 0, 0, 1098, 0, 1334, 0, 479,
	0, 0, 0, 0, 818, 362, 0, 0, 818, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 479, 479, 479, 0, 479, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	479, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1644,
	0, 0, 0, 0, 0, 0, 0, 0, 123, 0,
	0, 0, 0, 0, 0, 665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1668, 1669, 1670, 1671, 0, 1675, 0,
	1676, 1677, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 842, 0, 0, 1011, 665, 479, 1688, 0,
	1689, 1690, 0, 0, 0, 900, 0, 0, 0, 0,
	0, 1041, 0, 0, 0, 0, 1698, 0, 929, 0,
	0, 0, 0, 823, 0, 0, 936, 1704, 1045, 1046,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 1066, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 805, 0, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 1465, 0, 30, 0, 0, 0, 479,
	0, 0, 479, 0, 0, 0, 123, 0, 123, 825,
	0, 0, 0, 479, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1769, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1073, 479,
	0, 0, 0, 0, 0, 1077, 0, 1080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1105, 1557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1238,
	0, 0, 0, 0, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 1584, 1585, 1586, 0, 123, 0, 0, 123, 0,
	0, 0, 940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1188, 0, 0, 0,
	0, 0, 0, 0, 0, 1609, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1219, 1220, 1221, 1222, 1223, 0, 0, 1227, 1228,
	0, 0, 1229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1041, 0, 0, 1465, 0, 30,
	1231, 1465, 0, 0, 0, 0, 0, 0, 1235, 0,
	0, 0, 1237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 940, 0, 0, 0, 465, 465, 0,
	0, 465, 465, 465, 0, 0, 0, 1042, 0, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 465, 465, 465,
	465, 0, 1465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 0, 0, 0, 0, 0, 940, 123, 0, 123,
	0, 0, 0, 0, 0, 0, 0, 123, 1103, 123,
	0, 479, 0, 0, 1396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1757, 123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 123, 123, 123, 123, 0, 0,
	123, 123, 0, 0, 123, 479, 0, 0, 1041, 0,
	0, 1468, 1470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 123, 0, 0, 0, 0, 0, 1233, 1234,
	123, 0, 0, 0, 123, 0, 0, 1470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1401,
	0, 0, 0, 0, 479, 0, 479, 0, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 0, 1533,
	1534, 1535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1042, 123, 123, 123, 123, 123, 0, 0, 0, 0,
	0, 0, 0, 1326, 0, 0, 0, 123, 0, 0,
	0, 1103, 0, 0, 0, 1041, 123, 123, 0, 0,
	123, 1342, 940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 0, 0, 0, 0, 0, 1592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1527, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1637, 0, 1639, 0,
	1640, 123, 0, 0, 0, 1592, 0, 1592, 1592, 1592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1592, 0, 0, 0,
	0, 0, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1693, 0, 0, 0, 0, 0,
	0, 123, 0, 0, 0, 0, 1700, 479, 479, 0,
	0, 0, 0, 0, 1042, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1041, 0, 1718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1042, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1042, 0, 0, 0, 0, 590, 578,
	0, 123, 534, 593, 507, 524, 601, 525, 528, 565,
	492, 547, 229, 522, 0, 511, 487, 518, 488, 509,
	536, 161, 540, 506, 580, 550, 592, 195, 0, 512,
	240, 567, 272, 152, 203, 201, 291, 166, 162, 160,
	151, 183, 207, 239, 288, 233, 599, 198, 556, 0,
	280, 215, 0, 0, 0, 538, 582, 545, 575, 533,
	566, 497, 555, 594, 523, 563, 595, 187, 150, 130,
	226, 281, 168, 0, 0, 0, 112, 113, 114, 0,
	1129, 1130, 0, 0, 0, 0, 0, 146, 0, 560,
	589, 520, 562, 564, 603, 486, 557, 0, 490, 493,
	600, 585, 515, 516, 1353, 0, 0, 0, 0, 0,
	0, 537, 546, 572, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 0, 554, 0, 0, 0, 494,
	491, 0, 0, 0, 0, 535, 0, 0, 0, 496,
	0, 514, 573, 0, 484, 173, 577, 584, 532, 314,
	588, 530, 529, 591, 251, 0, 285, 177, 194, 142,
	191, 127, 138, 0, 175, 225, 259, 263, 581, 510,
	519, 153, 517, 261, 237, 304, 553, 241, 260, 199,
	293, 252, 303, 315, 316, 158, 219, 309, 289, 312,
	324, 277, 131, 287, 301, 147, 271, 0, 0, 0,
	133, 299, 284, 213, 188, 189, 132, 0, 257, 159,
	171, 155, 228, 296, 297, 154, 327, 139, 311, 135,
	140, 310, 221, 292, 300, 214, 206, 134, 298, 212,
	205, 193, 165, 179, 249, 202, 250, 180, 217, 216,
	218, 0, 489, 0, 282, 307, 328, 144, 505, 290,
	320, 323, 0, 253, 145, 172, 164, 248, 170, 196,
	319, 321, 322, 220, 141, 182, 278, 192, 200, 256,
	326, 236, 262, 148, 306, 279, 501, 504, 499, 500,
	548, 549, 596, 597, 598, 574, 495, 0, 502, 503,
	0, 579, 586, 587, 552, 126, 136, 197, 325, 254,
	169, 308, 485, 498, 157, 508, 0, 0, 521, 526,
	527, 539, 541, 542, 543, 544, 551, 558, 559, 561,
	568, 569, 570, 571, 576, 583, 602, 128, 129, 137,
	143, 149, 156, 163, 167, 174, 178, 181, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 222, 223, 224,
	227, 230, 231, 232, 234, 235, 238, 242, 243, 244,
	245, 246, 247, 255, 258, 264, 265, 266, 267, 268,
	269, 270, 273, 274, 275, 276, 283, 286, 294, 295,
	305, 313, 317, 176, 302, 318, 590, 578, 0, 0,
	534, 593, 507, 524, 601, 525, 528, 565, 492, 547,
	229, 522, 0, 511, 487, 518, 488, 509, 536, 161,
	540, 506, 580, 550, 592, 195, 0, 512, 240, 567,
	272, 152, 203, 201, 291, 166, 162, 160, 151, 183,
	207, 239, 288, 233, 599, 198, 556, 0, 280, 215,
	0, 0, 0, 538, 582, 545, 575, 533, 566, 497,
	555, 594, 523, 563, 595, 187, 150, 130, 226, 281,
	168, 0, 0, 0, 112, 113, 114, 0, 1129, 1130,
	0, 0, 0, 0, 0, 146, 0, 560, 589, 520,
	562, 564, 603, 486, 557, 0, 490, 493, 600, 585,
	515, 516, 0, 0, 0, 0, 0, 0, 0, 537,
	546, 572, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 0, 554, 0, 0, 0, 494, 491, 0,
	0, 0, 0, 535, 0, 0, 0, 496, 0, 514,
	573, 0, 484, 173, 577, 584, 532, 314, 588, 530,
	529, 591, 251, 0, 285, 177, 194, 142, 191, 127,
	138, 0, 175, 225, 259, 263, 581, 510, 519, 153,
	517, 261, 237, 304, 553, 241, 260, 199, 293, 252,
	303, 315, 316, 158, 219, 309, 289, 312, 324, 277,
	131, 287, 301, 147, 271, 0, 0, 0, 133, 299,
	284, 213, 188, 189, 132, 0, 257, 159, 171, 155,
	228, 296, 297, 154, 327, 139, 311, 135, 140, 310,
	221, 292, 300, 214, 206, 134, 298, 212, 205, 193,
	165, 179, 249, 202, 250, 180, 217, 216, 218, 0,
	489, 0, 282, 307, 328, 144, 505, 290, 320, 323,
	0, 253, 145, 172, 164, 248, 170, 196, 319, 321,
	322, 220, 141, 182, 278, 192, 200, 256, 326, 236,
	262, 148, 306, 279, 501, 504, 499, 500, 548, 549,
	596, 597, 598, 574, 495, 0, 502, 503, 0, 579,
	586, 587, 552, 126, 136, 197, 325, 254, 169, 308,
	485, 498, 157, 508, 0, 0, 521, 526, 527, 539,
	541, 542, 543, 544, 551, 558, 559, 561, 568, 569,
	570, 571, 576, 583, 602, 128, 129, 137, 143, 149,
	156, 163, 167, 174, 178, 181, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 222, 223, 224, 227, 230,
	231, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 283, 286, 294, 295, 305, 313,
	317, 176, 302, 318, 590, 578, 0, 0, 534, 593,
	507, 524, 601, 525, 528, 565, 492, 547, 229, 522,
	0, 511, 487, 518, 488, 509, 536, 161, 540, 506,
	580, 550, 592, 195, 0, 512, 240, 567, 272, 152,
	203, 201, 291, 166, 162, 160, 151, 183, 207, 239,
	288, 233, 599, 198, 556, 0, 280, 215, 0, 0,
	0, 538, 582, 545, 575, 533, 566, 497, 555, 594,
	523, 563, 595, 187, 150, 130, 226, 281, 168, 0,
	0, 0, 112, 113, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 560, 589, 520, 562, 564,
	603, 486, 557, 0, 490, 493, 600, 585, 515, 516,
	0, 0, 0, 0, 0, 0, 0, 537, 546, 572,
	531, 0, 0, 0, 0, 0, 0, 1457, 0, 513,
	0, 554, 0, 0, 0, 494, 491, 0, 0, 0,
	0, 535, 0, 0, 0, 496, 0, 514, 573, 0,
	484, 173, 577, 584, 532, 314, 588, 530, 529, 591,
	251, 0, 285, 177, 194, 142, 191, 127, 138, 0,
	175, 225, 259, 263, 581, 510, 519, 153, 517, 261,
	237, 304, 553, 241, 260, 199, 293, 252, 303, 315,
	316, 158, 219, 309, 289, 312, 324, 277, 131, 287,
	301, 147, 271, 0, 0, 0, 133, 299, 284, 213,
	188, 189, 132, 0, 257, 159, 171, 155, 228, 296,
	297, 154, 327, 139, 311, 135, 140, 310, 221, 292,
	300, 214, 206, 134, 298, 212, 205, 193, 165, 179,
	249, 202, 250, 180, 217, 216, 218, 0, 489, 0,
	282, 307, 328, 144, 505, 290, 320, 323, 0, 253,
	145, 172, 164, 248, 170, 196, 319, 321, 322, 220,
	141, 182, 278, 192, 200, 256, 326, 236, 262, 148,
	306, 279, 501, 504, 499, 500, 548, 549, 596, 597,
	598, 574, 495, 0, 502, 503, 0, 579, 586, 587,
	552, 126, 136, 197, 325, 254, 169, 308, 485, 498,
	157, 508, 0, 0, 521, 526, 527, 539, 541, 542,
	543, 544, 551, 558, 559, 561, 568, 569, 570, 571,
	576, 583, 602, 128, 129, 137, 143, 149, 156, 163,
	167, 174, 178, 181, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 222, 223, 224, 227, 230, 231, 232,
	234, 235, 238, 242, 243, 244, 245, 246, 247, 255,
	258, 264, 265, 266, 267, 268, 269, 270, 273, 274,
	275, 276, 283, 286, 294, 295, 305, 313, 317, 176,
	302, 318, 590, 578, 0, 0, 534, 593, 507, 524,
	601, 525, 528, 565, 492, 547, 229, 522, 0, 511,
	487, 518, 488, 509, 536, 161, 540, 506, 580, 550,
	592, 195, 0, 512, 240, 567, 272, 152, 203, 201,
	291, 166, 162, 160, 151, 183, 207, 239, 288, 233,
	599, 198, 556, 0, 280, 215, 0, 0, 0, 538,
	582, 545, 575, 533, 566, 497, 555, 594, 523, 563,
	595, 187, 150, 130, 226, 281, 168, 64, 0, 0,
	112, 113, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 560, 589, 520, 562, 564, 603, 486,
	557, 0, 490, 493, 600, 585, 515, 516, 0, 0,
	0, 0, 0, 0, 0, 537, 546, 572, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 0, 554,
	0, 0, 0, 494, 491, 0, 0, 0, 0, 535,
	0, 0, 0, 496, 0, 514, 573, 0, 484, 173,
	577, 584, 532, 314, 588, 530, 529, 591, 251, 0,
	285, 177, 194, 142, 191, 127, 138, 0, 175, 225,
	259, 263, 581, 510, 519, 153, 517, 261, 237, 304,
	553, 241, 260, 199, 293, 252, 303, 315, 316, 158,
	219, 309, 289, 312, 324, 277, 131, 287, 301, 147,
	271, 0, 0, 0, 133, 299, 284, 213, 188, 189,
	132, 0, 257, 159, 171, 155, 228, 296, 297, 154,
	327, 139, 311, 135, 140, 310, 221, 292, 300, 214,
	206, 134, 298, 212, 205, 193, 165, 179, 249, 202,
	250, 180, 217, 216, 218, 0, 489, 0, 282, 307,
	328, 144, 505, 290, 320, 323, 0, 253, 145, 172,
	164, 248, 170, 196, 319, 321, 322, 220, 141, 182,
	278, 192, 200, 256, 326, 236, 262, 148, 306, 279,
	501, 504, 499, 500, 548, 549, 596, 597, 598, 574,
	495, 0, 502, 503, 0, 579, 586, 587, 552, 126,
	136, 197, 325, 254, 169, 308, 485, 498, 157, 508,
	0, 0, 521, 526, 527, 539, 541, 542, 543, 544,
	551, 558, 559, 561, 568, 569, 570, 571, 576, 583,
	602, 128, 129, 137, 143, 149, 156, 163, 167, 174,
	178, 181, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 222, 223, 224, 227, 230, 231, 232, 234, 235,
	238, 242, 243, 244, 245, 246, 247, 255, 258, 264,
	265, 266, 267, 268, 269, 270, 273, 274, 275, 276,
	283, 286, 294, 295, 305, 313, 317, 176, 302, 318,
	590, 578, 0, 0, 534, 593, 507, 524, 601, 525,
	528, 565, 492, 547, 229, 522, 0, 511, 487, 518,
	488, 509, 536, 161, 540, 506, 580, 550, 592, 195,
	0, 512, 240, 567, 272, 152, 203, 201, 291, 166,
	162, 160, 151, 183, 207, 239, 288, 233, 599, 198,
	556, 0, 280, 215, 0, 0, 0, 538, 582, 545,
	575, 533, 566, 497, 555, 594, 523, 563, 595, 187,
	150, 130, 226, 281, 168, 0, 0, 0, 112, 113,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 560, 589, 520, 562, 564, 603, 486, 557, 0,
	490, 493, 600, 585, 515, 516, 0, 0, 0, 0,
	0, 0, 0, 537, 546, 572, 531, 0, 0, 0,
	0, 0, 0, 1343, 0, 513, 0, 554, 0, 0,
	0, 494, 491, 0, 0, 0, 0, 535, 0, 0,
	0, 496, 0, 514, 573, 0, 484, 173, 577, 584,
	532, 314, 588, 530, 529, 591, 251, 0, 285, 177,
	194, 142, 191, 127, 138, 0, 175, 225, 259, 263,
	581, 510, 519, 153, 517, 261, 237, 304, 553, 241,
	260, 199, 293, 252, 303, 315, 316, 158, 219, 309,
	289, 312, 324, 277, 131, 287, 301, 147, 271, 0,
	0, 0, 133, 299, 284, 213, 188, 189, 132, 0,
	257, 159, 171, 155, 228, 296, 297, 154, 327, 139,
	311, 135, 140, 310, 221, 292, 300, 214, 206, 134,
	298, 212, 205, 193, 165, 179, 249, 202, 250, 180,
	217, 216, 218, 0, 489, 0, 282, 307, 328, 144,
	505, 290, 320, 323, 0, 253, 145, 172, 164, 248,
	170, 196, 319, 321, 322, 220, 141, 182, 278, 192,
	200, 256, 326, 236, 262, 148, 306, 279, 501, 504,
	499, 500, 548, 549, 596, 597, 598, 574, 495, 0,
	502, 503, 0, 579, 586, 587, 552, 126, 136, 197,
	325, 254, 169, 308, 485, 498, 157, 508, 0, 0,
	521, 526, 527, 539, 541, 542, 543, 544, 551, 558,
	559, 561, 568, 569, 570, 571, 576, 583, 602, 128,
	129, 137, 143, 149, 156, 163, 167, 174, 178, 181,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 222,
	223, 224, 227, 230, 231, 232, 234, 235, 238, 242,
	243, 244, 245, 246, 247, 255, 258, 264, 265, 266,
	267, 268, 269, 270, 273, 274, 275, 276, 283, 286,
	294, 295, 305, 313, 317, 176, 302, 318, 590, 578,
	0, 0, 534, 593, 507, 524, 601, 525, 528, 565,
	492, 547, 229, 522, 0, 511, 487, 518, 488, 509,
	536, 161, 540, 506, 580, 550, 592, 195, 0, 512,
	240, 567, 272, 152, 203, 201, 291, 166, 162, 160,
	151, 183, 207, 239, 288, 233, 599, 198, 556, 0,
	280, 215, 0, 0, 0, 538, 582, 545, 575, 533,
	566, 497, 555, 594, 523, 563, 595, 187, 150, 130,
	226, 281, 168, 0, 0, 0, 112, 113, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 560,
	589, 520, 562, 564, 603, 486, 557, 0, 490, 493,
	600, 585, 515, 516, 0, 0, 0, 0, 0, 0,
	0, 537, 546, 572, 531, 0, 0, 0, 0, 0,
	0, 1075, 0, 513, 0, 554, 0, 0, 0, 494,
	491, 0, 0, 0, 0, 535, 0, 0, 0, 496,
	0, 514, 573, 0, 484, 173, 577, 584, 532, 314,
	588, 530, 529, 591, 251, 0, 285, 177, 194, 142,
	191, 127, 138, 0, 175, 225, 259, 263, 581, 510,
	519, 153, 517, 261, 237, 304, 553, 241, 260, 199,
	293, 252, 303, 315, 316, 158, 219, 309, 289, 312,
	324, 277, 131, 287, 301, 147, 271, 0, 0, 0,
	133, 299, 284, 213, 188, 189, 132, 0, 257, 159,
	171, 155, 228, 296, 297, 154, 327, 139, 311, 135,
	140, 310, 221, 292, 300, 214, 206, 134, 298, 212,
	205, 193, 165, 179, 249, 202, 250, 180, 217, 216,
	218, 0, 489, 0, 282, 307, 328, 144, 505, 290,
	320, 323, 0, 253, 145, 172, 164, 248, 170, 196,
	319, 321, 322, 220, 141, 182, 278, 192, 200, 256,
	326, 236, 262, 148, 306, 279, 501, 504, 499, 500,
	548, 549, 596, 597, 598, 574, 495, 0, 502, 503,
	0, 579, 586, 587, 552, 126, 136, 197, 325, 254,
	169, 308, 485, 498, 157, 508, 0, 0, 521, 526,
	527, 539, 541, 542, 543, 544, 551, 558, 559, 561,
	568, 569, 570, 571, 576, 583, 602, 128, 129, 137,
	143, 149, 156, 163, 167, 174, 178, 181, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 222, 223, 224,
	227, 230, 231, 232, 234, 235, 238, 242, 243, 244,
	245, 246, 247, 255, 258, 264, 265, 266, 267, 268,
	269, 270, 273, 274, 275, 276, 283, 286, 294, 295,
	305, 313, 317, 176, 302, 318, 590, 578, 0, 0,
	534, 593, 507, 524, 601, 525, 528, 565, 492, 547,
	229, 522, 0, 511, 487, 518, 488, 509, 536, 161,
	540, 506, 580, 550, 592, 195, 0, 512, 240, 567,
	272, 152, 203, 201, 291, 166, 162, 160, 151, 183,
	207, 239, 288, 233, 599, 198, 556, 0, 280, 215,
	0, 0, 0, 538, 582, 545, 575, 533, 566, 497,
	555, 594, 523, 563, 595, 187, 150, 130, 226, 281,
	168, 0, 0, 0, 112, 113, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 560, 589, 520,
	562, 564, 603, 486, 557, 0, 490, 493, 600, 585,
	515, 516, 0, 0, 0, 0, 0, 0, 0, 537,
	546, 572, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 0, 554, 0, 0, 0, 494, 491, 0,
	0, 0, 0, 535, 0, 0, 0, 496, 0, 514,
	573, 0, 484, 173, 577, 584, 532, 314, 588, 530,
	529, 591, 251, 0, 285, 177, 194, 142, 191, 127,
	138, 0, 175, 225, 259, 263, 581, 510, 519, 153,
	517, 261, 237, 304, 553, 241, 260, 199, 293, 252,
	303, 315, 316, 158, 219, 309, 289, 312, 324, 277,
	131, 287, 301, 147, 271, 0, 0, 0, 133, 299,
	284, 213, 188, 189, 132, 0, 257, 159, 171, 155,
	228, 296, 297, 154, 327, 139, 311, 135, 140, 310,
	221, 292, 300, 214, 206, 134, 298, 212, 205, 193,
	165, 179, 249, 202, 250, 180, 217, 216, 218, 0,
	489, 0, 282, 307, 328, 144, 505, 290, 320, 323,
	0, 253, 145, 172, 164, 248, 170, 196, 319, 321,
	322, 220, 141, 182, 278, 192, 200, 256, 326, 236,
	262, 148, 306, 279, 501, 504, 499, 500, 548, 549,
	596, 597, 598, 574, 495, 0, 502, 503, 0, 579,
	586, 587, 552, 126, 136, 197, 325, 254, 169, 308,
	485, 498, 157, 508, 0, 0, 521, 526, 527, 539,
	541, 542, 543, 544, 551, 558, 559, 561, 568, 569,
	570, 571, 576, 583, 602, 128, 129, 137, 143, 149,
	156, 163, 167, 174, 178, 181, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 222, 223, 224, 227, 230,
	231, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 283, 286, 294, 295, 305, 313,
	317, 176, 302, 318, 590, 578, 0, 0, 534, 593,
	507, 524, 601, 525, 528, 565, 492, 547, 229, 522,
	0, 511, 487, 518, 488, 509, 536, 161, 540, 506,
	580, 550, 592, 195, 0, 512, 240, 567, 272, 152,
	203, 201, 291, 166, 162, 160, 151, 183, 207, 239,
	288, 233, 599, 198, 556, 0, 280, 215, 0, 0,
	0, 538, 582, 545, 575, 533, 566, 497, 555, 594,
	523, 563, 595, 187, 150, 130, 226, 281, 168, 0,
	0, 0, 112, 113, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 560, 589, 520, 562, 564,
	603, 486, 557, 0, 490, 493, 600, 585, 515, 516,
	0, 0, 0, 0, 0, 0, 0, 537, 546, 572,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	0, 554, 0, 0, 0, 494, 491, 0, 0, 0,
	0, 535, 0, 0, 0, 496, 0, 514, 573, 0,
	484, 173, 577, 584, 532, 314, 588, 530, 529, 591,
	251, 0, 285, 177, 194, 142, 191, 127, 138, 0,
	175, 225, 259, 263, 581, 510, 519, 153, 517, 261,
	237, 304, 553, 241, 260, 199, 293, 252, 303, 315,
	316, 158, 219, 309, 289, 312, 324, 277, 131, 287,
	301, 147, 271, 0, 0, 0, 133, 299, 284, 213,
	188, 189, 132, 0, 257, 159, 171, 155, 228, 296,
	297, 154, 327, 139, 311, 135, 482, 310, 221, 292,
	300, 214, 206, 134, 298, 212, 205, 193, 165, 179,
	249, 202, 250, 180, 217, 216, 218, 0, 489, 0,
	282, 307, 328, 144, 505, 290, 320, 323, 0, 253,
	145, 172, 164, 248, 170, 196, 319, 321, 322, 483,
	481, 476, 475, 192, 200, 256, 326, 236, 262, 148,
	306, 279, 501, 504, 499, 500, 548, 549, 596, 597,
	598, 574, 495, 0, 502, 503, 0, 579, 586, 587,
	552, 126, 136, 197, 325, 254, 169, 308, 485, 498,
	157, 508, 0, 0, 521, 526, 527, 539, 541, 542,
	543, 544, 551, 558, 559, 561, 568, 569, 570, 571,
	576, 583, 602, 128, 129, 137, 143, 149, 156, 163,
	167, 174, 178, 181, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 222, 223, 224, 227, 230, 231, 232,
	234, 235, 238, 242, 243, 244, 245, 246, 247, 255,
	258, 264, 265, 266, 267, 268, 269, 270, 273, 274,
	275, 276, 283, 286, 294, 295, 305, 313, 317, 176,
	302, 318, 590, 578, 0, 0, 534, 593, 507, 524,
	601, 525, 528, 565, 492, 547, 229, 522, 0, 511,
	487, 518, 488, 509, 536, 161, 540, 506, 580, 550,
	592, 195, 0, 512, 240, 567, 272, 152, 203, 201,
	291, 166, 162, 160, 151, 183, 207, 239, 288, 233,
	599, 198, 556, 0, 280, 215, 0, 0, 0, 538,
	582, 545, 575, 533, 566, 497, 555, 594, 523, 563,
	595, 187, 150, 130, 226, 281, 168, 0, 0, 0,
	112, 113, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 560, 589, 520, 562, 564, 603, 486,
	557, 0, 490, 493, 600, 585, 515, 516, 0, 0,
	0, 0, 0, 0, 0, 537, 546, 572, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 0, 554,
	0, 0, 0, 494, 491, 0, 0, 0, 0, 535,
	0, 0, 0, 496, 0, 514, 573, 0, 484, 173,
	577, 584, 532, 314, 588, 530, 529, 591, 251, 0,
	285, 177, 194, 142, 191, 127, 138, 0, 175, 225,
	259, 263, 581, 510, 519, 153, 517, 261, 237, 304,
	553, 241, 260, 199, 293, 252, 303, 315, 316, 158,
	219, 309, 289, 312, 324, 277, 131, 287, 827, 147,
	271, 0, 0, 0, 133, 299, 284, 213, 188, 189,
	132, 0, 257, 159, 171, 155, 228, 296, 297, 154,
	327, 139, 311, 135, 482, 310, 221, 292, 300, 214,
	206, 134, 298, 212, 205, 193, 165, 179, 249, 202,
	250, 180, 217, 216, 218, 0, 489, 0, 282, 307,
	328, 144, 505, 290, 320, 323, 0, 253, 145, 172,
	164, 248, 170, 196, 319, 321, 322, 483, 481, 476,
	475, 192, 200, 256, 326, 236, 262, 148, 306, 279,
	501, 504, 499, 500, 548, 549, 596, 597, 598, 574,
	495, 0, 502, 503, 0, 579, 586, 587, 552, 126,
	136, 197, 325, 254, 169, 308, 485, 498, 157, 508,
	0, 0, 521, 526, 527, 539, 541, 542, 543, 544,
	551, 558, 559, 561, 568, 569, 570, 571, 576, 583,
	602, 128, 129, 137, 143, 149, 156, 163, 167, 174,
	178, 181, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 222, 223, 224, 227, 230, 231, 232, 234, 235,
	238, 242, 243, 244, 245, 246, 247, 255, 258, 264,
	265, 266, 267, 268, 269, 270, 273, 274, 275, 276,
	283, 286, 294, 295, 305, 313, 317, 176, 302, 318,
	590, 578, 0, 0, 534, 593, 507, 524, 601, 525,
	528, 565, 492, 547, 229, 522, 0, 511, 487, 518,
	488, 509, 536, 161, 540, 506, 580, 550, 592, 195,
	0, 512, 240, 567, 272, 152, 203, 201, 291, 166,
	162, 160, 151, 183, 207, 239, 288, 233, 599, 198,
	556, 0, 280, 215, 0, 0, 0, 538, 582, 545,
	575, 533, 566, 497, 555, 594, 523, 563, 595, 187,
	150, 130, 226, 281, 168, 0, 0, 0, 112, 113,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 560, 589, 520, 562, 564, 603, 486, 557, 0,
	490, 493, 600, 585, 515, 516, 0, 0, 0, 0,
	0, 0, 0, 537, 546, 572, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 0, 554, 0, 0,
	0, 494, 491, 0, 0, 0, 0, 535, 0, 0,
	0, 496, 0, 514, 573, 0, 484, 173, 577, 584,
	532, 314, 588, 530, 529, 591, 251, 0, 285, 177,
	194, 142, 191, 127, 138, 0, 175, 225, 259, 263,
	581, 510, 519, 153, 517, 261, 237, 304, 553, 241,
	260, 199, 293, 252, 303, 315, 316, 158, 219, 309,
	289, 312, 324, 277, 131, 287, 473, 147, 271, 0,
	0, 0, 133, 299, 284, 213, 188, 189, 132, 0,
	257, 159, 171, 155, 228, 296, 297, 154, 327, 139,
	311, 135, 482, 310, 221, 292, 300, 214, 206, 134,
	298, 212, 205, 193, 165, 179, 249, 202, 250, 180,
	217, 216, 218, 0, 489, 0, 282, 307, 328, 144,
	505, 290, 320, 323, 0, 253, 145, 172, 164, 248,
	170, 196, 319, 321, 322, 483, 481, 476, 475, 192,
	200, 256, 326, 236, 262, 148, 306, 279, 501, 504,
	499, 500, 548, 549, 596, 597, 598, 574, 495, 0,
	502, 503, 0, 579, 586, 587, 552, 126, 136, 197,
	325, 254, 169, 308, 485, 498, 157, 508, 0, 0,
	521, 526, 527, 539, 541, 542, 543, 544, 551, 558,
	559, 561, 568, 569, 570, 571, 576, 583, 602, 128,
	129, 137, 143, 149, 156, 163, 167, 174, 178, 181,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 222,
	223, 224, 227, 230, 231, 232, 234, 235, 238, 242,
	243, 244, 245, 246, 247, 255, 258, 264, 265, 266,
	267, 268, 269, 270, 273, 274, 275, 276, 283, 286,
	294, 295, 305, 313, 317, 176, 302, 318, 229, 0,
	0, 1013, 0, 379, 0, 0, 0, 161, 0, 378,
	0, 0, 0, 195, 0, 1014, 240, 0, 272, 152,
	203, 201, 291, 166, 162, 160, 151, 183, 207, 239,
	288, 233, 422, 198, 0, 0, 280, 215, 0, 0,
	0, 0, 0, 413, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 150, 130, 226, 281, 168, 64,
	0, 0, 112, 113, 114, 400, 399, 402, 403, 404,
	405, 0, 0, 146, 401, 406, 407, 408, 0, 0,
	0, 0, 376, 393, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 463, 0, 0,
	0, 436, 0, 392, 0, 0, 385, 386, 388, 387,
	389, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 435, 0, 0, 314, 0, 0, 433, 0,
	251, 0, 285, 177, 194, 142, 191, 127, 138, 0,
	175, 225, 259, 263, 0, 0, 0, 153, 0, 261,
	237, 304, 0, 241, 260, 199, 293, 252, 303, 315,
	316, 158, 219, 309, 289, 312, 324, 277, 131, 287,
	301, 147, 271, 0, 0, 0, 133, 299, 284, 213,
	188, 189, 132, 0, 257, 159, 171, 155, 228, 296,
	297, 154, 327, 139, 311, 135, 140, 310, 221, 292,
	300, 214, 206, 134, 298, 212, 205, 193, 165, 179,
	249, 202, 250, 180, 217, 216, 218, 0, 0, 0,
	282, 307, 328, 144, 0, 290, 320, 323, 0, 253,
	145, 172, 164, 248, 170, 196, 319, 321, 322, 220,
	141, 182, 278, 192, 200, 256, 326, 236, 262, 148,
	306, 279, 423, 434, 429, 430, 427, 428, 426, 425,
	424, 437, 415, 416, 417, 418, 420, 0, 431, 432,
	419, 126, 136, 197, 325, 254, 169, 308, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 129, 137, 143, 149, 156, 163,
	167, 174, 178, 181, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 222, 223, 224, 227, 230, 231, 232,
	234, 235, 238, 242, 243, 244, 245, 246, 247, 255,
	258, 264, 265, 266, 267, 268, 269, 270, 273, 274,
	275, 276, 283, 286, 294, 295, 305, 313, 317, 176,
	302, 318, 229, 0, 0, 0, 0, 379, 0, 0,
	0, 161, 0, 378, 0, 0, 0, 195, 0, 0,
	240, 0, 272, 152, 203, 201, 291, 166, 162, 160,
	151, 183, 207, 239, 288, 233, 422, 198, 0, 0,
	280, 215, 0, 0, 0, 0, 0, 413, 414, 0,
	0, 0, 0, 0, 0, 1120, 0, 187, 150, 130,
	226, 281, 168, 64, 0, 0, 112, 113, 114, 400,
	399, 402, 403, 404, 405, 0, 0, 146, 401, 406,
	407, 408, 1121, 0, 0, 0, 376, 393, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	391, 0, 0, 0, 0, 436, 0, 392, 0, 0,
	385, 386, 388, 387, 389, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 435, 0, 0, 314,
	0, 0, 433, 0, 251, 0, 285, 177, 194, 142,
	191, 127, 138, 0, 175, 225, 259, 263, 0, 0,
	0, 153, 0, 261, 237, 304, 0, 241, 260, 199,
	293, 252, 303, 315, 316, 158, 219, 309, 289, 312,
	324, 277, 131, 287, 301, 147, 271, 0, 0, 0,
	133, 299, 284, 213, 188, 189, 132, 0, 257, 159,
	171, 155, 228, 296, 297, 154, 327, 139, 311, 135,
	140, 310, 221, 292, 300, 214, 206, 134, 298, 212,
	205, 193, 165, 179, 249, 202, 250, 180, 217, 216,
	218, 0, 0, 0, 282, 307, 328, 144, 0, 290,
	320, 323, 0, 253, 145, 172, 164, 248, 170, 196,
	319, 321, 322, 220, 141, 182, 278, 192, 200, 256,
	326, 236, 262, 148, 306, 279, 423, 434, 429, 430,
	427, 428, 426, 425, 424, 437, 415, 416, 417, 418,
	420, 0, 431, 432, 419, 126, 136, 197, 325, 254,
	169, 308, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 129, 137,
	143, 149, 156, 163, 167, 174, 178, 181, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 222, 223, 224,
	227, 230, 231, 232, 234, 235, 238, 242, 243, 244,
	245, 246, 247, 255, 258, 264, 265, 266, 267, 268,
	269, 270, 273, 274, 275, 276, 283, 286, 294, 295,
	305, 313, 317, 176, 302, 318, 229, 0, 0, 0,
	0, 379, 0, 0, 0, 161, 0, 378, 0, 0,
	0, 195, 0, 0, 240, 0, 272, 152, 203, 201,
	291, 166, 162, 160, 151, 183, 207, 239, 288, 233,
	422, 198, 0, 0, 280, 215, 0, 0, 0, 0,
	0, 413, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 150, 130, 226, 281, 168, 64, 0, 451,
	112, 113, 114, 400, 399, 402, 403, 404, 405, 0,
	0, 146, 401, 406, 407, 408, 0, 0, 0, 0,
	376, 393, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 391, 0, 0, 0, 0, 436,
	0, 392, 0, 0, 385, 386, 388, 387, 389, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	435, 0, 0, 314, 0, 0, 433, 0, 251, 0,
	285, 177, 194, 142, 191, 127, 138, 0, 175, 225,
	259, 263, 0, 0, 0, 153, 0, 261, 237, 304,
	0, 241, 260, 199, 293, 252, 303, 315, 316, 158,
	219, 309, 289, 312, 324, 277, 131, 287, 301, 147,
	271, 0, 0, 0, 133, 299, 284, 213, 188, 189,
	132, 0, 257, 159, 171, 155, 228, 296, 297, 154,
	327, 139, 311, 135, 140, 310, 221, 292, 300, 214,
	206, 134, 298, 212, 205, 193, 165, 179, 249, 202,
	250, 180, 217, 216, 218, 0, 0, 0, 282, 307,
	328, 144, 0, 290, 320, 323, 0, 253, 145, 172,
	164, 248, 170, 196, 319, 321, 322, 220, 141, 182,
	278, 192, 200, 256, 326, 236, 262, 148, 306, 279,
	423, 434, 429, 430, 427, 428, 426, 425, 424, 437,
	415, 416, 417, 418, 420, 0, 431, 432, 419, 126,
	136, 197, 325, 254, 169, 308, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 129, 137, 143, 149, 156, 163, 167, 174,
	178, 181, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 222, 223, 224, 227, 230, 231, 232, 234, 235,
	238, 242, 243, 244, 245, 246, 247, 255, 258, 264,
	265, 266, 267, 268, 269, 270, 273, 274, 275, 276,
	283, 286, 294, 295, 305, 313, 317, 176, 302, 318,
	229, 0, 0, 0, 0, 379, 0, 0, 0, 161,
	0, 378, 0, 0, 0, 195, 0, 0, 240, 0,
	272, 152, 203, 201, 291, 166, 162, 160, 151, 183,
	207, 239, 288, 233, 422, 198, 0, 0, 280, 215,
	0, 0, 0, 0, 0, 413, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 150, 130, 226, 281,
	168, 64, 0, 0, 112, 113, 114, 400, 399, 402,
	403, 404, 405, 0, 0, 146, 401, 406, 407, 408,
	0, 0, 0, 0, 376, 393, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 391, 463,
	0, 0, 0, 436, 0, 392, 0, 0, 385, 386,
	388, 387, 389, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 435, 0, 0, 314, 0, 0,
	433, 0, 251, 0, 285, 177, 194, 142, 191, 127,
	138, 0, 175, 225, 259, 263, 0, 0, 0, 153,
	0, 261, 237, 304, 0, 241, 260, 199, 293, 252,
	303, 315, 316, 158, 219, 309, 289, 312, 324, 277,
	131, 287, 301, 147, 271, 0, 0, 0, 133, 299,
	284, 213, 188, 189, 132, 0, 257, 159, 171, 155,
	228, 296, 297, 154, 327, 139, 311, 135, 140, 310,
	221, 292, 300, 214, 206, 134, 298, 212, 205, 193,
	165, 179, 249, 202, 250, 180, 217, 216, 218, 0,
	0, 0, 282, 307, 328, 144, 0, 290, 320, 323,
	0, 253, 145, 172, 164, 248, 170, 196, 319, 321,
	322, 220, 141, 182, 278, 192, 200, 256, 326, 236,
	262, 148, 306, 279, 423, 434, 429, 430, 427, 428,
	426, 425, 424, 437, 415, 416, 417, 418, 420, 0,
	431, 432, 419, 126, 136, 197, 325, 254, 169, 308,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 129, 137, 143, 149,
	156, 163, 167, 174, 178, 181, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 222, 223, 224, 227, 230,
	231, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 283, 286, 294, 295, 305, 313,
	317, 176, 302, 318, 229, 0, 0, 0, 0, 379,
	0, 0, 0, 161, 0, 378, 0, 0, 0, 195,
	0, 0, 240, 0, 272, 152, 203, 201, 291, 166,
	162, 160, 151, 183, 207, 239, 288, 233, 422, 198,
	0, 0, 280, 215, 0, 0, 0, 0, 0, 413,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	150, 130, 226, 281, 168, 64, 0, 0, 112, 113,
	114, 400, 1031, 402, 403, 404, 405, 0, 0, 146,
	401, 406, 407, 408, 0, 0, 0, 0, 376, 393,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 391, 463, 0, 0, 0, 436, 0, 392,
	0, 0, 385, 386, 388, 387, 389, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 435, 0,
	0, 314, 0, 0, 433, 0, 251, 0, 285, 177,
	194, 142, 191, 127, 138, 0, 175, 225, 259, 263,
	0, 0, 0, 153, 0, 261, 237, 304, 0, 241,
	260, 199, 293, 252, 303, 315, 316, 158, 219, 309,
	289, 312, 324, 277, 131, 287, 301, 147, 271, 0,
	0, 0, 133, 299, 284, 213, 188, 189, 132, 0,
	257, 159, 171, 155, 228, 296, 297, 154, 327, 139,
	311, 135, 140, 310, 221, 292, 300, 214, 206, 134,
	298, 212, 205, 193, 165, 179, 249, 202, 250, 180,
	217, 216, 218, 0, 0, 0, 282, 307, 328, 144,
	0, 290, 320, 323, 0, 253, 145, 172, 164, 248,
	170, 196, 319, 321, 322, 220, 141, 182, 278, 192,
	200, 256, 326, 236, 262, 148, 306, 279, 423, 434,
	429, 430, 427, 428, 426, 425, 424, 437, 415, 416,
	417, 418, 420, 0, 431, 432, 419, 126, 136, 197,
	325, 254, 169, 308, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	129, 137, 143, 149, 156, 163, 167, 174, 178, 181,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 222,
	223, 224, 227, 230, 231, 232, 234, 235, 238, 242,
	243, 244, 245, 246, 247, 255, 258, 264, 265, 266,
	267, 268, 269, 270, 273, 274, 275, 276, 283, 286,
	294, 295, 305, 313, 317, 176, 302, 318, 229, 0,
	0, 0, 0, 379, 0, 0, 0, 161, 0, 378,
	0, 0, 0, 195, 0, 0, 240, 0, 272, 152,
	203, 201, 291, 166, 162, 160, 151, 183, 207, 239,
	288, 233, 422, 198, 0, 0, 280, 215, 0, 0,
	0, 0, 0, 413, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 150, 130, 226, 281, 168, 64,
	0, 0, 112, 113, 114, 400, 1028, 402, 403, 404,
	405, 0, 0, 146, 401, 406, 407, 408, 0, 0,
	0, 0, 376, 393, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 391, 463, 0, 0,
	0, 436, 0, 392, 0, 0, 385, 386, 388, 387,
	389, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 435, 0, 0, 314, 0, 0, 433, 0,
	251, 0, 285, 177, 194, 142, 191, 127, 138, 0,
	175, 225, 259, 263, 0, 0, 0, 153, 0, 261,
	237, 304, 0, 241, 260, 199, 293, 252, 303, 315,
	316, 158, 219, 309, 289, 312, 324, 277, 131, 287,
	301, 147, 271, 0, 0, 0, 133, 299, 284, 213,
	188, 189, 132, 0, 257, 159, 171, 155, 228, 296,
	297, 154, 327, 139, 311, 135, 140, 310, 221, 292,
	300, 214, 206, 134, 298, 212, 205, 193, 165, 179,
	249, 202, 250, 180, 217, 216, 218, 0, 0, 0,
	282, 307, 328, 144, 0, 290, 320, 323, 0, 253,
	145, 172, 164, 248, 170, 196, 319, 321, 322, 220,
	141, 182, 278, 192, 200, 256, 326, 236, 262, 148,
	306, 279, 423, 434, 429, 430, 427, 428, 426, 425,
	424, 437, 415, 416, 417, 418, 420, 0, 431, 432,
	419, 126, 136, 197, 325, 254, 169, 308, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 129, 137, 143, 149, 156, 163,
	167, 174, 178, 181, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 222, 223, 224, 227, 230, 231, 232,
	234, 235, 238, 242, 243, 244, 245, 246, 247, 255,
	258, 264, 265, 266, 267, 268, 269, 270, 273, 274,
	275, 276, 283, 286, 294, 295, 305, 313, 317, 176,
	302, 318, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	379, 0, 0, 0, 161, 0, 378, 0, 0, 0,
	195, 0, 0, 240, 0, 272, 152, 203, 201, 291,
	166, 162, 160, 151, 183, 207, 239, 288, 233, 422,
	198, 0, 0, 280, 215, 0, 0, 0, 0, 0,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 150, 130, 226, 281, 168, 64, 0, 0, 112,
	113, 114, 400, 399, 402, 403, 404, 405, 0, 0,
	146, 401, 406, 407, 408, 0, 0, 0, 0, 376,
	393, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 391, 0, 0, 0, 0, 436, 0,
	392, 0, 0, 385, 386, 388, 387, 389, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 435,
	0, 0, 314, 0, 0, 433, 0, 251, 0, 285,
	177, 194, 142, 191, 127, 138, 0, 175, 225, 259,
	263, 0, 0, 0, 153, 0, 261, 237, 304, 0,
	241, 260, 199, 293, 252, 303, 315, 316, 158, 219,
	309, 289, 312, 324, 277, 131, 287, 301, 147, 271,
	0, 0, 0, 133, 299, 284, 213, 188, 189, 132,
	0, 257, 159, 171, 155, 228, 296, 297, 154, 327,
	139, 311, 135, 140, 310, 221, 292, 300, 214, 206,
	134, 298, 212, 205, 193, 165, 179, 249, 202, 250,
	180, 217, 216, 218, 0, 0, 0, 282, 307, 328,
	144, 0, 290, 320, 323, 0, 253, 145, 172, 164,
	248, 170, 196, 319, 321, 322, 220, 141, 182, 278,
	192, 200, 256, 326, 236, 262, 148, 306, 279, 423,
	434, 429, 430, 427, 428, 426, 425, 424, 437, 415,
	416, 417, 418, 420, 0, 431, 432, 419, 126, 136,
	197, 325, 254, 169, 308, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 129, 137, 143, 149, 156, 163, 167, 174, 178,
	181, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	222, 223, 224, 227, 230, 231, 232, 234, 235, 238,
	242, 243, 244, 245, 246, 247, 255, 258, 264, 265,
	266, 267, 268, 269, 270, 273, 274, 275, 276, 283,
	286, 294, 295, 305, 313, 317, 176, 302, 318, 229,
	0, 0, 0, 0, 379, 0, 0, 0, 161, 0,
	378, 0, 0, 0, 195, 0, 0, 240, 0, 272,
	152, 203, 201, 291, 166, 162, 160, 151, 183, 207,
	239, 288, 233, 422, 198, 0, 0, 280, 215, 0,
	0, 0, 0, 0, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 150, 130, 226, 281, 168,
	64, 0, 0, 112, 113, 114, 400, 399, 402, 403,
	404, 405, 0, 0, 146, 401, 406, 407, 408, 0,
	0, 0, 0, 376, 393, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 391, 0, 0,
	0, 0, 436, 0, 392, 0, 0, 385, 386, 388,
	387, 389, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 435, 0, 0, 314, 0, 0, 433,
	0, 251, 0, 285, 177, 194, 142, 191, 127, 138,
	0, 175, 225, 259, 263, 0, 0, 0, 153, 0,
	261, 237, 304, 0, 241, 260, 199, 293, 252, 303,
	315, 316, 158, 219, 309, 289, 312, 324, 277, 131,
	287, 301, 147, 271, 0, 0, 0, 133, 299, 284,
	213, 188, 189, 132, 0, 257, 159, 171, 155, 228,
	296, 297, 154, 327, 139, 311, 135, 140, 310, 221,
	292, 300, 214, 206, 134, 298, 212, 205, 193, 165,
	179, 249, 202, 250, 180, 217, 216, 218, 0, 0,
	0, 282, 307, 328, 144, 0, 290, 320, 323, 0,
	253, 145, 172, 164, 248, 170, 196, 319, 321, 322,
	220, 141, 182, 278, 192, 200, 256, 326, 236, 262,
	148, 306, 279, 423, 434, 429, 430, 427, 428, 426,
	425, 424, 437, 415, 416, 417, 418, 420, 0, 431,
	432, 419, 126, 136, 197, 325, 254, 169, 308, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 129, 137, 143, 149, 156,
	163, 167, 174, 178, 181, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 222, 223, 224, 227, 230, 231,
	232, 234, 235, 238, 242, 243, 244, 245, 246, 247,
	255, 258, 264, 265, 266, 267, 268, 269, 270, 273,
	274, 275, 276, 283, 286, 294, 295, 305, 313, 317,
	176, 302, 318, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 195, 0,
	0, 240, 0, 272, 152, 203, 201, 291, 166, 162,
	160, 151, 183, 207, 239, 288, 233, 422, 198, 0,
	0, 280, 215, 0, 0, 0, 0, 0, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 150,
	130, 226, 281, 168, 64, 0, 0, 112, 113, 114,
	400, 399, 402, 403, 404, 405, 0, 0, 146, 401,
	406, 407, 408, 0, 0, 0, 0, 0, 393, 0,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 391, 0, 0, 0, 0, 436, 0, 392, 0,
	0, 385, 386, 388, 387, 389, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 435, 0, 0,
	314, 0, 0, 433, 0, 251, 0, 285, 177, 194,
	142, 191, 127, 138, 0, 175, 225, 259, 263, 0,
	0, 0, 153, 0, 261, 237, 304, 1763, 241, 260,
	199, 293, 252, 303, 315, 316, 158, 219, 309, 289,
	312, 324, 277, 131, 287, 301, 147, 271, 0, 0,
	0, 133, 299, 284, 213, 188, 189, 132, 0, 257,
	159, 171, 155, 228, 296, 297, 154, 327, 139, 311,
	135, 140, 310, 221, 292, 300, 214, 206, 134, 298,
	212, 205, 193, 165, 179, 249, 202, 250, 180, 217,
	216, 218, 0, 0, 0, 282, 307, 328, 144, 0,
	290, 320, 323, 0, 253, 145, 172, 164, 248, 170,
	196, 319, 321, 322, 220, 141, 182, 278, 192, 200,
	256, 326, 236, 262, 148, 306, 279, 423, 434, 429,
	430, 427, 428, 426, 425, 424, 437, 415, 416, 417,
	418, 420, 0, 431, 432, 419, 126, 136, 197, 325,
	254, 169, 308, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 129,
	137, 143, 149, 156, 163, 167, 174, 178, 181, 184,
	185, 186, 190, 204, 208, 209, 210, 211, 222, 223,
	224, 227, 230, 231, 232, 234, 235, 238, 242, 243,
	244, 245, 246, 247, 255, 258, 264, 265, 266, 267,
	268, 269, 270, 273, 274, 275, 276, 283, 286, 294,
	295, 305, 313, 317, 176, 302, 318, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 195, 0, 0, 240, 0, 272, 152, 203,
	201, 291, 166, 162, 160, 151, 183, 207, 239, 288,
	233, 422, 198, 0, 0, 280, 215, 0, 0, 0,
	0, 0, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 150, 130, 226, 281, 168, 64, 0,
	451, 112, 113, 114, 400, 399, 402, 403, 404, 405,
	0, 0, 146, 401, 406, 407, 408, 0, 0, 0,
	0, 0, 393, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 391, 0, 0, 0, 0,
	436, 0, 392, 0, 0, 385, 386, 388, 387, 389,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 435, 0, 0, 314, 0, 0, 433, 0, 251,
	0, 285, 177, 194, 142, 191, 127, 138, 0, 175,
	225, 259, 263, 0, 0, 0, 153, 0, 261, 237,
	304, 0, 241, 260, 199, 293, 252, 303, 315, 316,
	158, 219, 309, 289, 312, 324, 277, 131, 287, 301,
	147, 271, 0, 0, 0, 133, 299, 284, 213, 188,
	189, 132, 0, 257, 159, 171, 155, 228, 296, 297,
	154, 327, 139, 311, 135, 140, 310, 221, 292, 300,
	214, 206, 134, 298, 212, 205, 193, 165, 179, 249,
	202, 250, 180, 217, 216, 218, 0, 0, 0, 282,
	307, 328, 144, 0, 290, 320, 323, 0, 253, 145,
	172, 164, 248, 170, 196, 319, 321, 322, 220, 141,
	182, 278, 192, 200, 256, 326, 236, 262, 148, 306,
	279, 423, 434, 429, 430, 427, 428, 426, 425, 424,
	437, 415, 416, 417, 418, 420, 0, 431, 432, 419,
	126, 136, 197, 325, 254, 169, 308, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 129, 137, 143, 149, 156, 163, 167,
	174, 178, 181, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 222, 223, 224, 227, 230, 231, 232, 234,
	235, 238, 242, 243, 244, 245, 246, 247, 255, 258,
	264, 265, 266, 267, 268, 269, 270, 273, 274, 275,
	276, 283, 286, 294, 295, 305, 313, 317, 176, 302,
	318, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 195, 0, 0, 240,
	0, 272, 152, 203, 201, 291, 166, 162, 160, 151,
	183, 207, 239, 288, 233, 422, 198, 0, 0, 280,
	215, 0, 0, 0, 0, 0, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 150, 130, 226,
	281, 168, 64, 0, 0, 112, 113, 114, 400, 399,
	402, 403, 404, 405, 0, 0, 146, 401, 406, 407,
	408, 0, 0, 0, 0, 0, 393, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 391,
	0, 0, 0, 0, 436, 0, 392, 0, 0, 385,
	386, 388, 387, 389, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 435, 0, 0, 314, 0,
	0, 433, 0, 251, 0, 285, 177, 194, 142, 191,
	127, 138, 0, 175, 225, 259, 263, 0, 0, 0,
	153, 0, 261, 237, 304, 0, 241, 260, 199, 293,
	252, 303, 315, 316, 158, 219, 309, 289, 312, 324,
	277, 131, 287, 301, 147, 271, 0, 0, 0, 133,
	299, 284, 213, 188, 189, 132, 0, 257, 159, 171,
	155, 228, 296, 297, 154, 327, 139, 311, 135, 140,
	310, 221, 292, 300, 214, 206, 134, 298, 212, 205,
	193, 165, 179, 249, 202, 250, 180, 217, 216, 218,
	0, 0, 0, 282, 307, 328, 144, 0, 290, 320,
	323, 0, 253, 145, 172, 164, 248, 170, 196, 319,
	321, 322, 220, 141, 182, 278, 192, 200, 256, 326,
	236, 262, 148, 306, 279, 423, 434, 429, 430, 427,
	428, 426, 425, 424, 437, 415, 416, 417, 418, 420,
	0, 431, 432, 419, 126, 136, 197, 325, 254, 169,
	308, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 129, 137, 143,
	149, 156, 163, 167, 174, 178, 181, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 222, 223, 224, 227,
	230, 231, 232, 234, 235, 238, 242, 243, 244, 245,
	246, 247, 255, 258, 264, 265, 266, 267, 268, 269,
	270, 273, 274, 275, 276, 283, 286, 294, 295, 305,
	313, 317, 176, 302, 318, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 0, 0, 0,
	195, 0, 0, 240, 0, 272, 152, 203, 201, 291,
	166, 162, 160, 151, 183, 207, 239, 288, 233, 0,
	198, 0, 0, 280, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 150, 130, 226, 281, 168, 0, 0, 0, 112,
	113, 114, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 708, 707,
	717, 718, 710, 711, 712, 713, 714, 715, 716, 709,
	0, 0, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 314, 0, 0, 0, 0, 251, 0, 285,
	177, 194, 142, 191, 127, 138, 0, 175, 225, 259,
	263, 0, 0, 0, 153, 0, 261, 237, 304, 0,
	241, 260, 199, 293, 252, 303, 315, 316, 158, 219,
	309, 289, 312, 324, 277, 131, 287, 301, 147, 271,
	0, 0, 0, 133, 299, 284, 213, 188, 189, 132,
	0, 257, 159, 171, 155, 228, 296, 297, 154, 327,
	139, 311, 135, 140, 310, 221, 292, 300, 214, 206,
	134, 298, 212, 205, 193, 165, 179, 249, 202, 250,
	180, 217, 216, 218, 0, 0, 0, 282, 307, 328,
	144, 0, 290, 320, 323, 0, 253, 145, 172, 164,
	248, 170, 196, 319, 321, 322, 220, 141, 182, 278,
	192, 200, 256, 326, 236, 262, 148, 306, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 136,
	197, 325, 254, 169, 308, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 129, 137, 143, 149, 156, 163, 167, 174, 178,
	181, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	222, 223, 224, 227, 230, 231, 232, 234, 235, 238,
	242, 243, 244, 245, 246, 247, 255, 258, 264, 265,
	266, 267, 268, 269, 270, 273, 274, 275, 276, 283,
	286, 294, 295, 305, 313, 317, 176, 302, 318, 229,
	0, 0, 0, 804, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 195, 0, 0, 240, 0, 272,
	152, 203, 201, 291, 166, 162, 160, 151, 183, 207,
	239, 288, 233, 0, 198, 0, 0, 280, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 150, 130, 226, 281, 168,
	0, 0, 0, 112, 113, 114, 0, 806, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	697, 698, 696, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 314, 0, 0, 0,
	0, 251, 0, 285, 177, 194, 142, 191, 127, 138,
	0, 175, 225, 259, 263, 0, 0, 0, 153, 0,
	261, 237, 304, 0, 241, 260, 199, 293, 252, 303,
	315, 316, 158, 219, 309, 289, 312, 324, 277, 131,
	287, 301, 147, 271, 0, 0, 0, 133, 299, 284,
	213, 188, 189, 132, 0, 257, 159, 171, 155, 228,
	296, 297, 154, 327, 139, 311, 135, 140, 310, 221,
	292, 300, 214, 206, 134, 298, 212, 205, 193, 165,
	179, 249, 202, 250, 180, 217, 216, 218, 0, 0,
	0, 282, 307, 328, 144, 0, 290, 320, 323, 0,
	253, 145, 172, 164, 248, 170, 196, 319, 321, 322,
	220, 141, 182, 278, 192, 200, 256, 326, 236, 262,
	148, 306, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 136, 197, 325, 254, 169, 308, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 129, 137, 143, 149, 156,
	163, 167, 174, 178, 181, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 222, 223, 224, 227, 230, 231,
	232, 234, 235, 238, 242, 243, 244, 245, 246, 247,
	255, 258, 264, 265, 266, 267, 268, 269, 270, 273,
	274, 275, 276, 283, 286, 294, 295, 305, 313, 317,
	176, 302, 318, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 1145, 0, 0, 0, 0, 195, 0,
	0, 240, 0, 272, 152, 203, 201, 291, 166, 162,
	160, 151, 183, 207, 239, 288, 233, 0, 198, 0,
	0, 280, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 150,
	130, 226, 281, 168, 0, 0, 0, 112, 113, 114,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 1144,
	314, 0, 0, 0, 1140, 1137, 0, 1138, 1139, 194,
	611, 191, 127, 138, 1135, 1142, 225, 259, 263, 0,
	0, 0, 153, 0, 261, 237, 304, 0, 241, 260,
	199, 293, 252, 303, 315, 316, 158, 219, 309, 289,
	312, 324, 277, 131, 287, 301, 147, 271, 0, 0,
	0, 133, 299, 284, 213, 188, 189, 132, 0, 257,
	159, 171, 155, 228, 296, 297, 154, 327, 139, 311,
	135, 140, 310, 221, 292, 300, 214, 206, 134, 298,
	212, 205, 193, 165, 179, 249, 202, 250, 180, 217,
	216, 218, 0, 0, 0, 282, 307, 328, 144, 0,
	290, 320, 323, 0, 253, 145, 172, 164, 248, 170,
	196, 319, 321, 322, 220, 141, 182, 278, 192, 200,
	256, 326, 236, 262, 148, 306, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 136, 197, 325,
	254, 169, 308, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 129,
	137, 143, 149, 156, 163, 167, 174, 178, 181, 184,
	185, 186, 190, 204, 208, 209, 210, 211, 222, 223,
	224, 227, 230, 231, 232, 234, 235, 238, 242, 243,
	244, 245, 246, 247, 255, 258, 264, 265, 266, 267,
	268, 269, 270, 273, 274, 275, 276, 283, 286, 294,
	295, 305, 313, 317, 176, 302, 318, 31, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 0, 195, 0, 0, 240, 0,
	272, 152, 203, 201, 291, 166, 162, 160, 151, 183,
	207, 239, 288, 233, 0, 198, 0, 0, 280, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 150, 130, 226, 281,
	168, 64, 0, 451, 112, 113, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 314, 0, 0,
	0, 0, 251, 0, 285, 177, 194, 142, 191, 127,
	138, 0, 175, 225, 259, 263, 0, 0, 0, 153,
	0, 261, 237, 304, 0, 241, 260, 199, 293, 252,
	303, 315, 316, 158, 219, 309, 289, 312, 324, 277,
	131, 287, 301, 147, 271, 0, 0, 0, 133, 299,
	284, 213, 188, 189, 132, 0, 257, 159, 171, 155,
	228, 296, 297, 154, 327, 139, 311, 135, 140, 310,
	221, 292, 300, 214, 206, 134, 298, 212, 205, 193,
	165, 179, 249, 202, 250, 180, 217, 216, 218, 0,
	0, 0, 282, 307, 328, 144, 0, 290, 320, 323,
	0, 253, 145, 172, 164, 248, 170, 196, 319, 321,
	322, 220, 141, 182, 278, 192, 200, 256, 326, 236,
	262, 148, 306, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 136, 197, 325, 254, 169, 308,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 129, 137, 143, 149,
	156, 163, 167, 174, 178, 181, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 222, 223, 224, 227, 230,
	231, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 283, 286, 294, 295, 305, 313,
	317, 176, 302, 318, 229, 0, 0, 0, 1102, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 195,
	0, 0, 240, 0, 272, 152, 203, 201, 291, 166,
	162, 160, 151, 183, 207, 239, 288, 233, 0, 198,
	0, 0, 280, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	150, 130, 226, 281, 168, 0, 0, 0, 112, 113,
	114, 0, 1104, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 314, 0, 0, 0, 0, 251, 0, 285, 177,
	194, 142, 191, 127, 138, 0, 175, 225, 259, 263,
	0, 0, 0, 153, 0, 261, 237, 304, 0, 241,
	260, 199, 293, 252, 303, 315, 316, 158, 219, 309,
	289, 312, 324, 277, 131, 287, 301, 147, 271, 0,
	0, 0, 133, 299, 284, 213, 188, 189, 132, 0,
	257, 159, 171, 155, 228, 296, 297, 154, 327, 139,
	311, 135, 140, 310, 221, 292, 300, 214, 206, 134,
	298, 212, 205, 193, 165, 179, 249, 202, 250, 180,
	217, 216, 218, 0, 0, 0, 282, 307, 328, 144,
	0, 290, 320, 323, 0, 253, 145, 172, 164, 248,
	170, 196, 319, 321, 322, 220, 141, 182, 278, 192,
	200, 256, 326, 236, 262, 148, 306, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 136, 197,
	325, 254, 169, 308, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	129, 137, 143, 149, 156, 163, 167, 174, 178, 181,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 222,
	223, 224, 227, 230, 231, 232, 234, 235, 238, 242,
	243, 244, 245, 246, 247, 255, 258, 264, 265, 266,
	267, 268, 269, 270, 273, 274, 275, 276, 283, 286,
	294, 295, 305, 313, 317, 176, 302, 318, 31, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 195, 0, 0, 240,
	0, 272, 152, 203, 201, 291, 166, 162, 160, 151,
	183, 207, 239, 288, 233, 0, 198, 0, 0, 280,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 150, 130, 226,
	281, 168, 64, 0, 0, 112, 113, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 314, 0,
	0, 0, 0, 251, 0, 285, 177, 194, 142, 191,
	127, 138, 0, 175, 225, 259, 263, 0, 0, 0,
	153, 0, 261, 237, 304, 0, 241, 260, 199, 293,
	252, 303, 315, 316, 158, 219, 309, 289, 312, 324,
	277, 131, 287, 301, 147, 271, 0, 0, 0, 133,
	299, 284, 213, 188, 189, 132, 0, 257, 159, 171,
	155, 228, 296, 297, 154, 327, 139, 311, 135, 140,
	310, 221, 292, 300, 214, 206, 134, 298, 212, 205,
	193, 165, 179, 249, 202, 250, 180, 217, 216, 218,
	0, 0, 0, 282, 307, 328, 144, 0, 290, 320,
	323, 0, 253, 145, 172, 164, 248, 170, 196, 319,
	321, 322, 220, 141, 182, 278, 192, 200, 256, 326,
	236, 262, 148, 306, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 136, 197, 325, 254, 169,
	308, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 129, 137, 143,
	149, 156, 163, 167, 174, 178, 181, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 222, 223, 224, 227,
	230, 231, 232, 234, 235, 238, 242, 243, 244, 245,
	246, 247, 255, 258, 264, 265, 266, 267, 268, 269,
	270, 273, 274, 275, 276, 283, 286, 294, 295, 305,
	313, 317, 176, 302, 318, 229, 0, 0, 0, 1102,
	0, 0, 0, 0, 161, 0, 0, 0, 0, 0,
	195, 0, 0, 240, 0, 272, 152, 203, 201, 291,
	166, 162, 160, 151, 183, 207, 239, 288, 233, 0,
	198, 0, 0, 280, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 150, 130, 226, 281, 168, 0, 0, 0, 112,
	113, 114, 0, 1104, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 314, 0, 0, 0, 0, 251, 0, 285,
	177, 194, 142, 191, 127, 138, 0, 175, 225, 259,
	263, 0, 0, 0, 153, 0, 261, 237, 304, 0,
	1100, 260, 199, 293, 252, 303, 315, 316, 158, 219,
	309, 289, 312, 324, 277, 131, 287, 301, 147, 271,
	0, 0, 0, 133, 299, 284, 213, 188, 189, 132,
	0, 257, 159, 171, 155, 228, 296, 297, 154, 327,
	139, 311, 135, 140, 310, 221, 292, 300, 214, 206,
	134, 298, 212, 205, 193, 165, 179, 249, 202, 250,
	180, 217, 216, 218, 0, 0, 0, 282, 307, 328,
	144, 0, 290, 320, 323, 0, 253, 145, 172, 164,
	248, 170, 196, 319, 321, 322, 220, 141, 182, 278,
	192, 200, 256, 326, 236, 262, 148, 306, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 136,
	197, 325, 254, 169, 308, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 129, 137, 143, 149, 156, 163, 167, 174, 178,
	181, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	222, 223, 224, 227, 230, 231, 232, 234, 235, 238,
	242, 243, 244, 245, 246, 247, 255, 258, 264, 265,
	266, 267, 268, 269, 270, 273, 274, 275, 276, 283,
	286, 294, 295, 305, 313, 317, 176, 302, 318, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 195, 0, 0, 240, 0, 272,
	152, 203, 201, 291, 166, 162, 160, 151, 183, 207,
	239, 288, 233, 0, 198, 0, 0, 280, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 150, 130, 226, 281, 168,
	0, 0, 0, 112, 113, 114, 0, 0, 1067, 0,
	0, 1068, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 314, 0, 0, 0,
	0, 251, 0, 285, 177, 194, 142, 191, 127, 138,
	0, 175, 225, 259, 263, 0, 0, 0, 153, 0,
	261, 237, 304, 0, 241, 260, 199, 293, 252, 303,
	315, 316, 158, 219, 309, 289, 312, 324, 277, 131,
	287, 301, 147, 271, 0, 0, 0, 133, 299, 284,
	213, 188, 189, 132, 0, 257, 159, 171, 155, 228,
	296, 297, 154, 327, 139, 311, 135, 140, 310, 221,
	292, 300, 214, 206, 134, 298, 212, 205, 193, 165,
	179, 249, 202, 250, 180, 217, 216, 218, 0, 0,
	0, 282, 307, 328, 144, 0, 290, 320, 323, 0,
	253, 145, 172, 164, 248, 170, 196, 319, 321, 322,
	220, 141, 182, 278, 192, 200, 256, 326, 236, 262,
	148, 306, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 136, 197, 325, 254, 169, 308, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 129, 137, 143, 149, 156,
	163, 167, 174, 178, 181, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 222, 223, 224, 227, 230, 231,
	232, 234, 235, 238, 242, 243, 244, 245, 246, 247,
	255, 258, 264, 265, 266, 267, 268, 269, 270, 273,
	274, 275, 276, 283, 286, 294, 295, 305, 313, 317,
	176, 302, 318, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 838, 0, 0, 0, 195, 0,
	0, 240, 0, 272, 152, 203, 201, 291, 166, 162,
	160, 151, 183, 207, 239, 288, 233, 0, 198, 0,
	0, 280, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 150,
	130, 226, 281, 168, 0, 0, 0, 112, 113, 114,
	0, 837, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	314, 0, 0, 0, 0, 251, 0, 285, 177, 194,
	142, 191, 127, 138, 0, 175, 225, 259, 263, 0,
	0, 0, 153, 0, 261, 237, 304, 0, 241, 260,
	199, 293, 252, 303, 315, 316, 158, 219, 309, 289,
	312, 324, 277, 131, 287, 301, 147, 271, 0, 0,
	0, 133, 299, 284, 213, 188, 189, 132, 0, 257,
	159, 171, 155, 228, 296, 297, 154, 327, 139, 311,
	135, 140, 310, 221, 292, 300, 214, 206, 134, 298,
	212, 205, 193, 165, 179, 249, 202, 250, 180, 217,
	216, 218, 0, 0, 0, 282, 307, 328, 144, 0,
	290, 320, 323, 0, 253, 145, 172, 164, 248, 170,
	196, 319, 321, 322, 220, 141, 182, 278, 192, 200,
	256, 326, 236, 262, 148, 306, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 136, 197, 325,
	254, 169, 308, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 129,
	137, 143, 149, 156, 163, 167, 174, 178, 181, 184,
	185, 186, 190, 204, 208, 209, 210, 211, 222, 223,
	224, 227, 230, 231, 232, 234, 235, 238, 242, 243,
	244, 245, 246, 247, 255, 258, 264, 265, 266, 267,
	268, 269, 270, 273, 274, 275, 276, 283, 286, 294,
	295, 305, 313, 317, 176, 302, 318, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 195, 0, 0, 240, 0, 272, 152, 203,
	201, 291, 166, 162, 160, 151, 183, 207, 239, 288,
	233, 0, 198, 0, 0, 280, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 150, 130, 226, 281, 168, 0, 0,
	0, 112, 113, 114, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 314, 0, 0, 0, 0, 251,
	0, 285, 177, 194, 611, 191, 127, 138, 609, 175,
	225, 259, 263, 0, 0, 0, 153, 0, 261, 237,
	304, 0, 241, 260, 199, 293, 252, 303, 315, 316,
	158, 219, 309, 289, 312, 324, 277, 131, 287, 301,
	147, 271, 0, 0, 0, 133, 299, 284, 213, 188,
	189, 132, 0, 257, 159, 171, 155, 228, 296, 297,
	154, 327, 139, 311, 135, 140, 310, 221, 292, 300,
	214, 206, 134, 298, 212, 205, 193, 165, 179, 249,
	202, 250, 180, 217, 216, 218, 0, 0, 0, 282,
	307, 328, 144, 0, 290, 320, 323, 0, 253, 145,
	172, 164, 248, 170, 196, 319, 321, 322, 220, 141,
	182, 278, 192, 200, 256, 326, 236, 262, 148, 306,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 136, 197, 325, 254, 169, 308, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 129, 137, 143, 149, 156, 163, 167,
	174, 178, 181, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 222, 223, 224, 227, 230, 231, 232, 234,
	235, 238, 242, 243, 244, 245, 246, 247, 255, 258,
	264, 265, 266, 267, 268, 269, 270, 273, 274, 275,
	276, 283, 286, 294, 295, 305, 313, 317, 176, 302,
	318, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 195, 0, 0, 240,
	0, 272, 152, 203, 201, 291, 166, 162, 160, 151,
	183, 207, 239, 288, 233, 0, 198, 0, 0, 280,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 150, 130, 226,
	281, 168, 0, 0, 451, 112, 113, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 314, 0,
	0, 0, 0, 251, 0, 285, 177, 194, 142, 191,
	127, 138, 0, 175, 225, 259, 263, 0, 0, 0,
	153, 0, 261, 237, 304, 0, 241, 260, 199, 293,
	252, 303, 315, 316, 158, 219, 309, 289, 312, 324,
	277, 131, 287, 301, 147, 271, 0, 0, 0, 133,
	299, 284, 213, 188, 189, 132, 0, 257, 159, 171,
	155, 228, 296, 297, 154, 327, 139, 311, 135, 140,
	310, 221, 292, 300, 214, 206, 134, 298, 212, 205,
	193, 165, 179, 249, 202, 250, 180, 217, 216, 218,
	0, 0, 0, 282, 307, 328, 144, 0, 290, 320,
	323, 0, 253, 145, 172, 164, 248, 170, 196, 319,
	321, 322, 220, 141, 182, 278, 192, 200, 256, 326,
	236, 262, 148, 306, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 136, 197, 325, 254, 169,
	308, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 129, 137, 143,
	149, 156, 163, 167, 174, 178, 181, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 222, 223, 224, 227,
	230, 231, 232, 234, 235, 238, 242, 243, 244, 245,
	246, 247, 255, 258, 264, 265, 266, 267, 268, 269,
	270, 273, 274, 275, 276, 283, 286, 294, 295, 305,
	313, 317, 176, 302, 318, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 0, 0, 0,
	195, 0, 0, 240, 0, 272, 152, 203, 201, 291,
	166, 162, 160, 151, 183, 207, 239, 288, 233, 0,
	198, 0, 0, 280, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 150, 130, 226, 281, 168, 64, 0, 0, 112,
	113, 114, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 314, 0, 0, 0, 0, 251, 0, 285,
	177, 194, 142, 191, 127, 138, 0, 175, 225, 259,
	263, 0, 0, 0, 153, 0, 261, 237, 304, 0,
	241, 260, 199, 293, 252, 303, 315, 316, 158, 219,
	309, 289, 312, 324, 277, 131, 287, 301, 147, 271,
	0, 0, 0, 133, 299, 284, 213, 188, 189, 132,
	0, 257, 159, 171, 155, 228, 296, 297, 154, 327,
	139, 311, 135, 140, 310, 221, 292, 300, 214, 206,
	134, 298, 212, 205, 193, 165, 179, 249, 202, 250,
	180, 217, 216, 218, 0, 0, 0, 282, 307, 328,
	144, 0, 290, 320, 323, 0, 253, 145, 172, 164,
	248, 170, 196, 319, 321, 322, 220, 141, 182, 278,
	192, 200, 256, 326, 236, 262, 148, 306, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 136,
	197, 325, 254, 169, 308, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 129, 137, 143, 149, 156, 163, 167, 174, 178,
	181, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	222, 223, 224, 227, 230, 231, 232, 234, 235, 238,
	242, 243, 244, 245, 246, 247, 255, 258, 264, 265,
	266, 267, 268, 269, 270, 273, 274, 275, 276, 283,
	286, 294, 295, 305, 313, 317, 176, 302, 318, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 195, 0, 0, 240, 0, 272,
	152, 203, 201, 291, 166, 162, 160, 151, 183, 207,
	239, 288, 233, 0, 198, 0, 0, 280, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 150, 130, 226, 281, 168,
	0, 0, 0, 112, 113, 114, 0, 1104, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 314, 0, 0, 0,
	0, 251, 0, 285, 177, 194, 142, 191, 127, 138,
	0, 175, 225, 259, 263, 0, 0, 0, 153, 0,
	261, 237, 304, 0, 241, 260, 199, 293, 252, 303,
	315, 316, 158, 219, 309, 289, 312, 324, 277, 131,
	287, 301, 147, 271, 0, 0, 0, 133, 299, 284,
	213, 188, 189, 132, 0, 257, 159, 171, 155, 228,
	296, 297, 154, 327, 139, 311, 135, 140, 310, 221,
	292, 300, 214, 206, 134, 298, 212, 205, 193, 165,
	179, 249, 202, 250, 180, 217, 216, 218, 0, 0,
	0, 282, 307, 328, 144, 0, 290, 320, 323, 0,
	253, 145, 172, 164, 248, 170, 196, 319, 321, 322,
	220, 141, 182, 278, 192, 200, 256, 326, 236, 262,
	148, 306, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 136, 197, 325, 254, 169, 308, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 129, 137, 143, 149, 156,
	163, 167, 174, 178, 181, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 222, 223, 224, 227, 230, 231,
	232, 234, 235, 238, 242, 243, 244, 245, 246, 247,
	255, 258, 264, 265, 266, 267, 268, 269, 270, 273,
	274, 275, 276, 283, 286, 294, 295, 305, 313, 317,
	176, 302, 318, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 195, 0,
	0, 240, 0, 272, 152, 203, 201, 291, 166, 162,
	160, 151, 183, 207, 239, 288, 233, 0, 198, 0,
	0, 280, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 150,
	130, 226, 281, 168, 0, 0, 0, 112, 113, 114,
	0, 806, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	314, 0, 0, 0, 0, 251, 0, 285, 177, 194,
	142, 191, 127, 138, 0, 175, 225, 259, 263, 0,
	0, 0, 153, 0, 261, 237, 304, 0, 241, 260,
	199, 293, 252, 303, 315, 316, 158, 219, 309, 289,
	312, 324, 277, 131, 287, 301, 147, 271, 0, 0,
	0, 133, 299, 284, 213, 188, 189, 132, 0, 257,
	159, 171, 155, 228, 296, 297, 154, 327, 139, 311,
	135, 140, 310, 221, 292, 300, 214, 206, 134, 298,
	212, 205, 193, 165, 179, 249, 202, 250, 180, 217,
	216, 218, 0, 0, 0, 282, 307, 328, 144, 0,
	290, 320, 323, 0, 253, 145, 172, 164, 248, 170,
	196, 319, 321, 322, 220, 141, 182, 278, 192, 200,
	256, 326, 236, 262, 148, 306, 279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 136, 197, 325,
	254, 169, 308, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 129,
	137, 143, 149, 156, 163, 167, 174, 178, 181, 184,
	185, 186, 190, 204, 208, 209, 210, 211, 222, 223,
	224, 227, 230, 231, 232, 234, 235, 238, 242, 243,
	244, 245, 246, 247, 255, 258, 264, 265, 266, 267,
	268, 269, 270, 273, 274, 275, 276, 283, 286, 294,
	295, 305, 313, 317, 176, 302, 318, 820, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 195,
	0, 0, 240, 0, 272, 152, 203, 201, 291, 166,
	162, 160, 151, 183, 207, 239, 288, 233, 0, 198,
	0, 0, 280, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	150, 130, 226, 281, 168, 0, 0, 0, 112, 113,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 314, 0, 0, 0, 0, 251, 0, 285, 177,
	194, 142, 191, 127, 138, 0, 175, 225, 259, 263,
	0, 0, 0, 153, 0, 261, 237, 304, 0, 241,
	260, 199, 293, 252, 303, 315, 316, 158, 219, 309,
	289, 312, 324, 277, 131, 287, 301, 147, 271, 0,
	0, 0, 133, 299, 284, 213, 188, 189, 132, 0,
	257, 159, 171, 155, 228, 296, 297, 154, 327, 139,
	311, 135, 140, 310, 221, 292, 300, 214, 206, 134,
	298, 212, 205, 193, 165, 179, 249, 202, 250, 180,
	217, 216, 218, 0, 0, 0, 282, 307, 328, 144,
	0, 290, 320, 323, 0, 253, 145, 172, 164, 248,
	170, 196, 319, 321, 322, 220, 141, 182, 278, 192,
	200, 256, 326, 236, 262, 148, 306, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 136, 197,
	325, 254, 169, 308, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	129, 137, 143, 149, 156, 163, 167, 174, 178, 181,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 222,
	223, 224, 227, 230, 231, 232, 234, 235, 238, 242,
	243, 244, 245, 246, 247, 255, 258, 264, 265, 266,
	267, 268, 269, 270, 273, 274, 275, 276, 283, 286,
	294, 295, 305, 313, 317, 176, 302, 318, 229, 0,
	0, 0, 0, 0, 0, 0, 810, 161, 0, 0,
	0, 0, 0, 195, 0, 0, 240, 0, 272, 152,
	203, 201, 291, 166, 162, 160, 151, 183, 207, 239,
	288, 233, 0, 198, 0, 0, 280, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 150, 130, 226, 281, 168, 0,
	0, 0, 112, 113, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 314, 0, 0, 0, 0,
	251, 0, 285, 177, 194, 142, 191, 127, 138, 0,
	175, 225, 259, 263, 0, 0, 0, 153, 0, 261,
	237, 304, 0, 241, 260, 199, 293, 252, 303, 315,
	316, 158, 219, 309, 289, 312, 324, 277, 131, 287,
	301, 147, 271, 0, 0, 0, 133, 299, 284, 213,
	188, 189, 132, 0, 257, 159, 171, 155, 228, 296,
	297, 154, 327, 139, 311, 135, 140, 310, 221, 292,
	300, 214, 206, 134, 298, 212, 205, 193, 165, 179,
	249, 202, 250, 180, 217, 216, 218, 0, 0, 0,
	282, 307, 328, 144, 0, 290, 320, 323, 0, 253,
	145, 172, 164, 248, 170, 196, 319, 321, 322, 220,
	141, 182, 278, 192, 200, 256, 326, 236, 262, 148,
	306, 279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 136, 197, 325, 254, 169, 308, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 129, 137, 143, 149, 156, 163,
	167, 174, 178, 181, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 222, 223, 224, 227, 230, 231, 232,
	234, 235, 238, 242, 243, 244, 245, 246, 247, 255,
	258, 264, 265, 266, 267, 268, 269, 270, 273, 274,
	275, 276, 283, 286, 294, 295, 305, 313, 317, 176,
	302, 318, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 195, 0, 0,
	240, 0, 272, 152, 203, 201, 291, 166, 162, 160,
	151, 183, 207, 239, 288, 233, 0, 198, 0, 0,
	280, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 150, 130,
	226, 281, 168, 0, 0, 0, 112, 113, 114, 0,
	686, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 314,
	0, 0, 0, 0, 251, 0, 285, 177, 194, 142,
	191, 127, 138, 0, 175, 225, 259, 263, 0, 0,
	0, 153, 0, 261, 237, 304, 0, 241, 260, 199,
	293, 252, 303, 315, 316, 158, 219, 309, 289, 312,
	324, 277, 131, 287, 301, 147, 271, 0, 0, 0,
	133, 299, 284, 213, 188, 189, 132, 0, 257, 159,
	171, 155, 228, 296, 297, 154, 327, 139, 311, 135,
	140, 310, 221, 292, 300, 214, 206, 134, 298, 212,
	205, 193, 165, 179, 249, 202, 250, 180, 217, 216,
	218, 0, 0, 0, 282, 307, 328, 144, 0, 290,
	320, 323, 0, 253, 145, 172, 164, 248, 170, 196,
	319, 321, 322, 220, 141, 182, 278, 192, 200, 256,
	326, 236, 262, 148, 306, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 136, 197, 325, 254,
	169, 308, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 129, 137,
	143, 149, 156, 163, 167, 174, 178, 181, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 222, 223, 224,
	227, 230, 231, 232, 234, 235, 238, 242, 243, 244,
	245, 246, 247, 255, 258, 264, 265, 266, 267, 268,
	269, 270, 273, 274, 275, 276, 283, 286, 294, 295,
	305, 313, 317, 176, 302, 318, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 195, 0, 0, 240, 0, 272, 152, 203, 201,
	291, 166, 162, 160, 151, 183, 207, 239, 288, 233,
	0, 198, 0, 0, 280, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 150, 130, 226, 281, 168, 0, 0, 0,
	112, 113, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 0, 173,
	0, 0, 0, 314, 0, 0, 0, 0, 251, 0,
	285, 177, 194, 142, 191, 127, 138, 0, 175, 225,
	259, 263, 0, 0, 0, 153, 0, 261, 237, 304,
	0, 241, 260, 199, 293, 252, 303, 315, 316, 158,
	219, 309, 289, 312, 324, 277, 131, 287, 301, 147,
	271, 0, 0, 0, 133, 299, 284, 213, 188, 189,
	132, 0, 257, 159, 171, 155, 228, 296, 297, 154,
	327, 139, 311, 135, 140, 310, 221, 292, 300, 214,
	206, 134, 298, 212, 205, 193, 165, 179, 249, 202,
	250, 180, 217, 216, 218, 0, 0, 0, 282, 307,
	328, 144, 0, 290, 320, 323, 0, 253, 145, 172,
	164, 248, 170, 196, 319, 321, 322, 220, 141, 182,
	278, 192, 200, 256, 326, 236, 262, 148, 306, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	136, 197, 325, 254, 169, 308, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 129, 137, 143, 149, 156, 163, 167, 174,
	178, 181, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 222, 223, 224, 227, 230, 231, 232, 234, 235,
	238, 242, 243, 244, 245, 246, 247, 255, 258, 264,
	265, 266, 267, 268, 269, 270, 273, 274, 275, 276,
	283, 286, 294, 295, 305, 313, 317, 366, 302, 318,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 0, 195, 0, 0, 240, 0,
	272, 152, 203, 201, 291, 166, 162, 160, 151, 183,
	207, 239, 288, 233, 0, 198, 0, 0, 280, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 150, 130, 226, 281,
	168, 0, 0, 0, 112, 113, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 121, 0, 314, 0, 0,
	0, 0, 251, 0, 285, 177, 194, 142, 191, 127,
	138, 0, 175, 225, 259, 263, 0, 0, 0, 153,
	0, 261, 237, 304, 0, 241, 260, 199, 293, 252,
	303, 315, 316, 158, 219, 309, 289, 312, 324, 277,
	131, 287, 301, 147, 271, 0, 0, 0, 133, 299,
	284, 213, 188, 189, 132, 0, 257, 159, 171, 155,
	228, 296, 297, 154, 327, 139, 311, 135, 140, 310,
	221, 292, 300, 214, 206, 134, 298, 212, 205, 193,
	165, 179, 249, 202, 250, 180, 217, 216, 218, 0,
	0, 0, 282, 307, 328, 144, 0, 290, 320, 323,
	0, 253, 145, 172, 164, 248, 170, 196, 319, 321,
	322, 220, 141, 182, 278, 192, 200, 256, 326, 236,
	262, 148, 306, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 136, 197, 325, 254, 169, 308,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 129, 137, 143, 149,
	156, 163, 167, 174, 178, 181, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 222, 223, 224, 227, 230,
	231, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 283, 286, 294, 295, 305, 313,
	317, 176, 302, 318, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 195,
	0, 0, 240, 0, 272, 152, 203, 201, 291, 166,
	162, 160, 151, 183, 207, 239, 288, 233, 0, 198,
	0, 0, 280, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	150, 130, 226, 281, 168, 0, 0, 0, 112, 113,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 314, 0, 0, 0, 0, 251, 0, 285, 177,
	194, 142, 191, 127, 138, 0, 175, 225, 259, 263,
	0, 0, 0, 153, 0, 261, 237, 304, 0, 241,
	260, 199, 293, 252, 303, 315, 316, 158, 219, 309,
	289, 312, 324, 277, 131, 287, 301, 147, 271, 0,
	0, 0, 133, 299, 284, 213, 188, 189, 132, 0,
	257, 159, 171, 155, 228, 296, 297, 154, 327, 139,
	311, 135, 140, 310, 221, 292, 300, 214, 206, 134,
	298, 212, 205, 193, 165, 179, 249, 202, 250, 180,
	217, 216, 218, 0, 0, 0, 282, 307, 328, 144,
	0, 290, 320, 323, 0, 253, 145, 172, 164, 248,
	170, 196, 319, 321, 322, 220, 141, 182, 278, 192,
	200, 256, 326, 236, 262, 148, 306, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 136, 197,
	325, 254, 169, 308, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	129, 137, 143, 149, 156, 163, 167, 174, 178, 181,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 222,
	223, 224, 227, 230, 231, 232, 234, 235, 238, 242,
	243, 244, 245, 246, 247, 255, 258, 264, 265, 266,
	267, 268, 269, 270, 273, 274, 275, 276, 283, 286,
	294, 295, 305, 313, 317, 176, 302, 318,
}
var yyPact = [...]int{

	208, -1000, -294, 1262, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1217,
	918, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 348, 892,
	42, 1141, -5, 587, 215, -10, 18751, 214, 2071, 19125,
	-1000, 49, -1000, 40, 19125, 44, 18377, -1000, -1000, -46,
	-48, -1000, 10490, 1094, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 913, 1196, 1178, 1215, 796, 1388, -1000, 8981,
	8981, 178, 178, 178, 7485, -1000, -1000, 15378, 19125, 19125,
	19125, -152, 176, 196, 176, -1000, -1000, -1000, -1000, -1000,
	-1000, 1141, -1000, -1000, 97, -1000, -1000, 19125, 19125, 290,
	1141, 61, -1000, -1000, -1000, 19125, 174, 587, 174, 174,
	174, 19125, -1000, 259, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19125,
	587, 1137, 441, 82, 308, 308, 308, -1000, 294, -1000,
	5157, 65, 67, -36, 1238, 55, 12, -1000, 441, 5157,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 186, -1000,
	-1000, -1000, -1000, 19125, 18003, 165, 331, -1000, -1000, -1000,
	-1000, -1000, -1000, 675, 513, -1000, 10490, 1727, 538, 538,
	-1000, -1000, 234, -1000, -1000, 11612, 11612, 11612, 11612, 11612,
	11612, 11612, 11612, 11612, 11612, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 538,
	258, -1000, 10116, 538, 538, 538, 538, 538, 538, 538,
	538, 10490, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, -1000, -1000,
	-1000, 1217, -1000, 918, -1000, -1000, -1000, 1134, 10490, 10490,
	1217, -1000, 1034, 8981, -1000, -1000, 1312, -1000, -1000, -1000,
	-1000, 472, 1248, -1000, 12360, 257, 1247, 17629, -1000, 16126,
	17255, 841, 7097, -67, -1000, -1000, -1000, 329, 15004, -1000,
	-1000, -1000, 1133, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 793, 19125, -1000, -1000, 74, 587,
	-1000, 883, -1000, 790, -1000, 869, 5157, 188, 19125, 356,
	587, 587, -1000, -1000, 1122, 323, 337, 5157, 76, 169,
	105, 19125, 1141, 1093, 832, 185, 19125, 1170, 969, 19125,
	587, 587, -1000, 6321, -1000, 5157, 441, -1000, 611, 10490,
	5157, 5157, 5157, 19125, 5157, 5157, -1000, 603, -1000, -1000,
	436, -1000, -1000, -1000, -1000, -1000, -1000, 5157, 5157, 407,
	436, 407, -1000, -1000, -1000, -1000, 10490, 308, -1000, 968,
	-1000, -1000, 43, -1000, -1000, -1000, -1000, -1000, 1262, -1000,
	-1000, -1000, -135, -1000, -1000, 10490, 10490, 10490, 10490, 599,
	314, 11612, 435, 325, 11612, 11612, 11612, 11612, 11612, 11612,
	11612, 11612, 11612, 11612, 11612, 11612, 11612, 11612, 11612, 551,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 587, -1000,
	1260, 684, 684, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 11986, 7859, 6321, 796, 766, 1217, 8981, 8981,
	10490, 10490, 9729, 9355, 8981, 1127, 340, 513, 19125, -1000,
	-1000, 11238, -1000, -1000, -1000, -1000, -1000, 637, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 19125, 19125, 8981, 8981, 8981,
	8981, 8981, -1000, 1178, 796, 1312, 1161, 1255, 305, 548,
	828, -1000, 507, 1178, 14630, 875, -1000, 1312, -1000, -1000,
	-1000, 19125, -1000, -1000, 16874, -1000, -1000, 5933, 19125, 89,
	19125, -1000, 859, 1011, -1000, -1000, -1000, 1172, 13882, 14256,
	19125, 870, 813, -1000, -1000, 256, 6709, -67, -1000, 6709,
	820, -1000, -118, -78, 8233, 280, -1000, -1000, -1000, -1000,
	4381, 12734, 664, 386, -39, -1000, -1000, -1000, 869, -1000,
	869, 869, 869, 869, 8, 8, 8, 8, -1000, -1000,
	-1000, -1000, -1000, 891, 890, -1000, 869, 869, 869, 869,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 885, 885, 885,
	877, 877, 114, 10490, 47, 19125, 1160, 491, -1000, 19125,
	-1000, 1163, 916, -1000, 323, 709, -1000, -1000, 414, 414,
	357, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 91, -1000, 19125, 19125, 19125, 19125, 19125, 223,
	72, 19125, 19125, 824, -1000, 19125, 5157, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 513, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 19125, -1000, -1000, -1000, -1000, 441, 19125,
	19125, 19125, 441, 513, -1000, 19125, 19125, -1000, -1000, -1000,
	-1000, -1000, 513, 314, 429, 335, -1000, -1000, 505, -1000,
	-1000, 2320, -1000, -1000, -1000, -1000, 435, 11612, 11612, 11612,
	888, 2320, 2254, 553, 464, 281, 582, 582, 282, 282,
	282, 282, 282, 531, 531, -1000, -1000, -1000, 637, -1000,
	-1000, -1000, 637, 8981, 8981, 823, 538, 249, -1000, 913,
	-1000, -1000, 1178, 758, 758, 666, 416, 381, 1242, 758,
	375, 1240, 758, 758, 8981, -1000, -1000, 374, -1000, 10490,
	637, -1000, 248, -1000, 923, 822, 821, 758, 637, 637,
	758, 758, 1134, -1000, -1000, 1086, -1000, 1031, 10490, 10490,
	10490, -1000, -1000, -1000, 1134, 1202, -1000, 1052, 1044, 1223,
	8981, 16126, 1312, -1000, -1000, -1000, 239, 1223, 800, 538,
	-1000, 19125, 16126, 16126, 16126, 16126, 16126, -1000, 1006, 1002,
	-1000, 1004, 998, 1036, 19125, -1000, 764, 796, 13882, 267,
	538, -1000, 16500, -1000, -1000, 89, 737, 16126, 19125, -1000,
	-1000, 16126, 19125, 5545, -1000, 820, -67, -85, -1000, -1000,
	-1000, -1000, 513, -1000, 702, 814, 3993, -1000, -1000, -1000,
	-1000, 159, -1000, -1000, 884, 587, -1000, 1152, 319, 319,
	311, 587, 1151, -1000, -1000, -1000, -1000, 1139, -1000, 395,
	-30, -1000, -1000, 8, 8, -1000, -1000, 280, 1119, 280,
	280, 280, 601, 601, -1000, -1000, -1000, -1000, -1000, 485,
	-1000, -1000, -1000, 483, -1000, -1000, 883, 591, 967, 47,
	-1000, 587, 323, 588, 1109, -1000, -1000, 656, 5157, -1000,
	954, 19125, 643, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19125, -1000, -1000, -1000, -1000, -1000, 19125, 874,
	-1000, -1000, -1000, -1000, 52, 75, 70, 182, -1000, 5157,
	-1000, 407, -1000, -1000, -1000, 407, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 888, 2320, 2188, -1000, 11612, 11612, -1000,
	-1000, 758, 758, 8981, 6321, 1217, 1134, -1000, -1000, 272,
	551, 272, 11612, 11612, -1000, 11612, 11612, -1000, -170, 827,
	346, -1000, 10490, 640, -1000, 6321, -1000, 11612, 11612, -1000,
	-1000, -1000, -1000, -1000, -1000, 560, 556, 1024, 513, 513,
	-1000, -1000, 19125, -1000, -1000, -1000, -1000, 1221, 10490, -1000,
	812, -1000, 4769, 1178, 951, 19125, 538, 1262, 13121, 19125,
	872, -1000, 324, 1011, 928, 950, 965, -1000, -1000, -1000,
	-1000, 996, -1000, 980, -1000, -1000, -1000, -1000, -1000, 796,
	-1000, 194, 191, 190, 19125, -1000, 1223, 16126, 768, -1000,
	768, -1000, 238, -1000, -1000, -1000, -124, -111, -1000, -1000,
	-1000, 4381, -1000, 4381, -1000, 19125, 156, -1000, 587, 587,
	587, -1000, -1000, -1000, 879, 930, 11612, -1000, -1000, -1000,
	280, 280, -1000, 321, -1000, -1000, -1000, 756, -1000, 754,
	807, 742, 7, -1000, 863, 1116, 323, 323, -1000, -1000,
	480, -1000, 552, -1000, -1000, 19125, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1157, -180, 587, 19125, 19125, 19125, -1000,
	19125, -1000, 441, 441, -1000, 11612, 2320, 2320, -1000, -1000,
	637, -1000, 1178, -1000, 637, 869, 869, -1000, 869, 877,
	-1000, 869, 32, 869, 25, 637, 637, 2117, 1876, 1848,
	1117, 538, -165, -1000, 513, 10490, -1000, 1833, 1079, 546,
	8, -1000, -1000, -1000, 1219, 1214, 513, -1000, -1000, -1000,
	1155, 817, 670, -1000, -1000, 8607, 735, 1041, 232, 722,
	-1000, 1217, 19125, 10490, -1000, -1000, 10490, 861, -1000, 10490,
	-1000, -1000, -1000, 1217, 538, 538, 538, 722, 1217, 768,
	-1000, -1000, 275, -1000, -1000, -1000, 3993, -1000, 718, -1000,
	1151, -1000, -1000, -1000, 19125, -22, 1254, 2320, -1000, -1000,
	-1000, -1000, 8, 539, 8, 478, -1000, 419, -1000, -1000,
	-228, -1000, -1000, 867, 995, -1000, -1000, -1000, 538, -1000,
	6321, -1000, -1000, 797, 900, -1000, -1000, -1000, -1000, 2320,
	-1000, 1134, -1000, -1000, 145, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 11612, 11612, 11612, 11612, 11612, 1178, 537,
	513, 11612, 11612, 8, -40, -1000, 10490, 10490, 1150, -1000,
	538, -1000, 878, 19125, 538, 19125, -1000, 19125, 1178, -1000,
	513, 513, 19125, 513, 15752, 19125, 19125, 13495, 1178, -1000,
	47, 716, -1000, 303, -1000, -127, 280, -1000, 280, 641,
	639, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 88,
	731, -1000, 318, 19125, 19125, -1000, -1000, -1000, 923, 923,
	923, 923, 56, 637, -1000, 923, 923, -286, -1000, 1087,
	1085, 513, 675, 1253, -1000, 538, 1262, 230, 670, -1000,
	-1000, -1000, 680, 678, -1000, 678, 678, 267, -1000, -1000,
	103, 19125, 399, 1146, -1000, 1144, -1000, -1000, -1000, -1000,
	-1000, 668, -1000, 19125, 6321, 4381, 663, -1000, -1000, -1000,
	-1000, -1000, 637, 60, -185, -1000, -1000, -1000, -40, 184,
	-1000, 1056, 1054, 1212, 19125, 670, 19125, -1000, -1000, -1000,
	-1000, -1000, 19125, -1000, -1000, 536, -1000, -1000, -1000, 88,
	1040, -1000, -1000, 874, -1000, 1023, -176, -192, 1071, 1074,
	1074, 1085, 1211, 1082, 1078, -1000, 529, 644, -1000, 703,
	-1000, -1000, 83, -180, -1000, 999, -1000, 1069, 463, -1000,
	-1000, -1000, -1000, 524, -1000, 1210, 1203, -1000, 19125, 80,
	-1000, -181, -1000, 388, -1000, -1000, -1000, 518, 517, 655,
	538, -189, -1000, -1000, -1000, -1000, 920, 10864, -194, 880,
	-1000, 1246, 923, 637, -1000, -1000, 1252, 339, 339, -1000,
	-1000, -1000, -1000, -1000, 109, 474, -1000, -1000, -1000, -1000,
}
var yyPgo = [...]int{

	0, 1540, 1539, 31, 82, 71, 1538, 1537, 1535, 1534,
	114, 111, 106, 1532, 1528, 1527, 1526, 1525, 1524, 1521,
	1520, 1519, 1518, 1515, 1514, 1512, 1511, 102, 99, 452,
	1510, 1509, 1508, 1507, 1504, 1503, 1500, 1498, 1496, 1493,
	1492, 1490, 101, 1489, 1488, 1486, 1485, 1476, 1475, 1474,
	1473, 1471, 98, 42, 254, 54, 73, 1469, 72, 56,
	1468, 39, 69, 74, 1467, 45, 1465, 1464, 97, 1462,
	1460, 68, 1455, 1453, 2076, 1452, 61, 1446, 13, 26,
	1444, 1442, 1439, 1438, 96, 150, 1437, 1436, 14, 1433,
	1431, 130, 1430, 76, 30, 21, 19, 24, 1427, 75,
	1426, 10, 1425, 80, 1419, 1418, 1415, 1412, 34, 1404,
	70, 78, 38, 1403, 5, 12, 1401, 1400, 1397, 1395,
	1393, 1390, 2, 1389, 1388, 1387, 1386, 1381, 25, 1380,
	6, 66, 41, 22, 11, 1379, 1378, 18, 83, 60,
	92, 1369, 1368, 1366, 731, 1364, 52, 1358, 107, 1357,
	27, 87, 462, 612, 1353, 1351, 1350, 1349, 1347, 43,
	826, 1942, 147, 94, 1346, 1344, 2308, 46, 67, 17,
	1341, 1340, 1339, 131, 48, 53, 705, 1336, 51, 1333,
	1332, 1331, 1330, 1327, 1325, 1324, 127, 1323, 1321, 1320,
	126, 63, 79, 29, 1318, 1315, 1312, 1311, 62, 81,
	1307, 1306, 65, 59, 1302, 86, 23, 33, 1301, 1300,
	1298, 1295, 40, 16, 1292, 95, 35, 58, 36, 20,
	1287, 15, 1285, 28, 37, 1283, 9, 1279, 8, 1277,
	3, 0, 1276, 7, 1275, 77, 1135, 1, 1273, 4,
	1272, 1271, 1270, 1456, 1044, 84, 1258, 123,
}
var yyR1 = [...]int{

	0, 241, 242, 242, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 231, 231, 231, 234, 234, 21, 41, 3, 3,
	3, 3, 2, 2, 8, 9, 4, 5, 5, 10,
	10, 46, 46, 11, 12, 12, 12, 12, 245, 245,
	68, 68, 69, 69, 131, 131, 13, 14, 14, 140,
	140, 139, 139, 139, 141, 141, 141, 141, 176, 176,
	15, 15, 15, 15, 15, 15, 233, 233, 232, 230,
	230, 229, 229, 228, 22, 24, 25, 26, 236, 236,
	208, 30, 30, 29, 29, 29, 29, 31, 31, 28,
	28, 27, 27, 210, 210, 209, 209, 209, 209, 209,
	209, 199, 179, 179, 179, 179, 182, 182, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 181, 181, 181,
	181, 181, 183, 183, 183, 183, 183, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 185, 185, 185, 185, 185, 185, 185, 185,
	198, 198, 186, 186, 192, 192, 193, 193, 193, 195,
	195, 196, 196, 154, 154, 154, 188, 188, 189, 189,
	194, 194, 190, 190, 190, 191, 191, 191, 197, 197,
	197, 197, 197, 187, 187, 200, 221, 221, 220, 220,
	217, 217, 217, 217, 207, 207, 214, 214, 214, 214,
	214, 214, 204, 204, 204, 205, 205, 203, 203, 206,
	206, 216, 216, 215, 201, 201, 202, 202, 223, 223,
	223, 223, 223, 224, 238, 239, 237, 237, 237, 237,
	237, 155, 155, 155, 211, 211, 211, 212, 212, 212,
	213, 213, 213, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 227, 225, 225, 226, 226, 17,
	23, 23, 18, 18, 18, 18, 18, 19, 19, 32,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	147, 147, 240, 240, 149, 149, 145, 145, 148, 148,
	146, 146, 146, 150, 150, 150, 151, 151, 177, 177,
	177, 34, 34, 36, 36, 37, 38, 38, 171, 171,
	172, 172, 39, 40, 45, 45, 45, 45, 45, 45,
	47, 47, 47, 7, 7, 7, 7, 44, 44, 44,
	6, 6, 35, 35, 35, 35, 20, 246, 42, 43,
	43, 52, 52, 52, 48, 48, 48, 51, 51, 51,
	55, 55, 57, 57, 57, 57, 57, 58, 58, 58,
	58, 58, 58, 54, 54, 56, 56, 56, 56, 164,
	164, 164, 163, 163, 60, 60, 61, 61, 62, 62,
	63, 63, 63, 100, 77, 77, 130, 130, 132, 132,
	64, 64, 64, 64, 65, 65, 66, 66, 67, 67,
	170, 170, 169, 169, 169, 168, 168, 70, 70, 70,
	72, 71, 71, 71, 71, 73, 73, 75, 75, 74,
	74, 76, 78, 78, 78, 78, 78, 79, 79, 59,
	59, 59, 59, 59, 59, 59, 59, 143, 143, 81,
	81, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 92, 92, 92, 92, 92, 92, 82, 82, 82,
	82, 82, 82, 82, 53, 53, 93, 93, 93, 99,
	94, 94, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 89, 89, 89, 89,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 247,
	247, 91, 90, 90, 90, 90, 90, 90, 90, 50,
	50, 50, 50, 50, 175, 175, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 104,
	104, 49, 49, 102, 102, 103, 105, 105, 101, 101,
	101, 84, 84, 84, 84, 84, 84, 84, 84, 86,
	86, 86, 106, 106, 107, 107, 108, 108, 109, 109,
	110, 111, 111, 111, 112, 112, 112, 112, 222, 222,
	222, 222, 222, 218, 218, 218, 218, 219, 219, 219,
	128, 128, 128, 113, 113, 113, 113, 118, 118, 118,
	114, 114, 116, 116, 116, 117, 117, 117, 115, 121,
	121, 123, 123, 122, 122, 120, 120, 125, 125, 124,
	124, 119, 119, 83, 83, 83, 83, 83, 129, 129,
	129, 129, 133, 133, 95, 95, 97, 97, 96, 98,
	134, 134, 137, 135, 135, 138, 138, 138, 138, 138,
	136, 136, 136, 165, 165, 165, 142, 142, 152, 152,
	153, 153, 144, 144, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 157, 157, 157, 158, 158, 126,
	126, 126, 126, 127, 127, 161, 161, 162, 162, 166,
	166, 167, 167, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 243, 244, 173, 174,
	174, 174,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 2, 3, 5, 6,
	6, 7, 4, 6, 5, 7, 8, 1, 3, 7,
	8, 1, 1, 9, 9, 8, 7, 7, 1, 1,
	1, 3, 1, 3, 0, 4, 3, 5, 4, 1,
	3, 3, 2, 2, 2, 2, 2, 1, 1, 1,
	2, 2, 6, 4, 6, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 4, 7, 4, 2, 1, 1,
	4, 0, 1, 1, 1, 2, 2, 0, 1, 5,
	5, 4, 4, 2, 4, 1, 1, 3, 4, 3,
	3, 8, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 4, 4, 2,
	2, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	6, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 0, 1, 0, 1, 2, 0, 2, 0, 3,
	0, 1, 0, 3, 3, 0, 2, 2, 0, 2,
	1, 2, 1, 0, 2, 5, 0, 1, 1, 2,
	2, 3, 2, 3, 0, 1, 2, 3, 3, 3,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 10, 11,
	11, 12, 1, 5, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 0, 1, 3, 1, 2, 3,
	1, 1, 1, 5, 6, 6, 6, 6, 4, 4,
	3, 6, 7, 5, 5, 5, 12, 7, 5, 9,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 7, 1, 3, 8, 8, 3,
	3, 5, 4, 6, 5, 4, 4, 3, 2, 3,
	4, 4, 3, 4, 4, 4, 4, 4, 4, 3,
	3, 3, 2, 7, 2, 3, 4, 5, 7, 5,
	4, 2, 4, 4, 3, 3, 5, 2, 3, 3,
	1, 1, 1, 1, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 2, 1, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 3, 2, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 2, 1, 3, 1, 1,
	1, 3, 3, 3, 3, 7, 1, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 5, 4, 5, 5, 0, 2, 1,
	3, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 4, 5, 5, 6,
	4, 4, 6, 6, 6, 8, 8, 8, 8, 9,
	8, 5, 4, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 0, 2, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 2, 4, 0, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	3, 0, 3, 0, 3, 0, 4, 0, 3, 0,
	4, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}
var yyChk = [...]int{

	-1000, -241, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -32, -33, -34, -36,
	-37, -38, -39, -40, -6, -35, -20, -21, -41, -4,
	-243, 6, 7, 8, -46, 10, 11, 31, -22, -24,
	146, -25, 147, -26, 149, 148, 182, 150, 175, 70,
	199, 200, 202, 203, 204, 205, -47, 180, 181, 32,
	33, 152, 35, 41, 80, 9, 292, 177, 176, 26,
	-242, 394, -52, 5, -108, 16, -3, -42, -246, -42,
	-42, -42, -42, -42, -42, -208, -210, 80, 119, 80,
	156, 100, 154, -126, -236, 160, 163, 164, 284, 153,
	-30, -29, -28, -27, -31, 30, -236, 154, 156, 258,
	-234, -231, 83, 84, 85, 154, 154, 155, 156, 284,
	153, 154, -74, -166, -231, -160, 302, 168, 334, 335,
	76, 199, 213, 207, 234, 226, 303, 336, 169, 224,
	227, 271, 166, 337, 254, 261, 94, 202, 280, 338,
	75, 47, 40, 178, 222, 218, 339, 311, 192, 216,
	46, 28, 45, 340, 263, 239, 44, 341, 79, 307,
	265, 217, 262, 152, 342, 171, 390, 164, 343, 240,
	244, 344, 272, 48, 345, 346, 347, 74, 211, 212,
	348, 167, 274, 238, 165, 34, 266, 304, 54, 186,
	275, 42, 242, 41, 349, 237, 233, 49, 350, 351,
	352, 353, 236, 210, 232, 58, 246, 245, 247, 193,
	270, 229, 354, 355, 356, 172, 77, 357, 219, 19,
	358, 359, 360, 52, 361, 362, 278, 181, 363, 50,
	37, 184, 364, 365, 366, 367, 368, 369, 264, 241,
	243, 161, 188, 260, 306, 370, 276, 215, 371, 173,
	185, 180, 279, 174, 372, 373, 374, 375, 376, 377,
	378, 203, 39, 379, 380, 381, 382, 198, 273, 282,
	57, 78, 251, 383, 209, 163, 384, 200, 51, 195,
	256, 43, 230, 187, 385, 386, 220, 221, 235, 208,
	231, 201, 391, 189, 182, 387, 281, 252, 308, 194,
	228, 225, 196, 388, 156, 190, 191, 389, 392, 267,
	257, 268, 269, 258, 197, 305, 277, 223, 253, 154,
	137, 227, 271, 146, 255, 266, 267, 263, -149, 264,
	188, -177, 154, -145, 254, 257, 258, 197, -240, -231,
	265, 273, 272, 259, 269, 268, -166, 201, -171, 206,
	-161, -231, -160, 204, -74, -45, 390, 150, -173, -173,
	256, 256, -173, -94, -59, -80, 103, -85, 30, 24,
	-84, -81, -101, -98, -99, 137, 138, 140, 139, 141,
	126, 127, 134, 104, 142, -89, -87, -88, -90, 87,
	86, 95, 88, 89, 90, 91, 96, 97, 98, -161,
	-166, -96, -243, 64, 65, 293, 294, 295, 296, 301,
	297, 106, 53, 283, 291, 290, 289, 287, 288, 285,
	286, 299, 300, 159, 284, 153, 132, 292, -231, -160,
	40, -5, -4, -243, 6, 21, 22, -112, 18, 17,
	-244, 82, -48, -57, 59, 60, -58, 22, 36, 63,
	61, -43, -56, 128, -59, -166, -56, -144, 158, -144,
	-144, -135, -176, 201, -138, 273, 272, -162, -136, -161,
	-159, 271, 227, 270, 151, 309, 102, 23, 25, 249,
	105, 137, 17, 106, 136, 293, 146, 68, 310, 285,
	286, 283, 295, 296, 284, 255, 30, 11, 312, 26,
	176, 22, 36, 130, 148, 109, 110, 179, 24, 177,
	98, 315, 20, 71, 12, 14, 316, 317, 15, 159,
	158, 121, 155, 66, 9, 142, 27, 118, 62, 318,
	29, 319, 320, 321, 322, 64, 119, 18, 287, 288,
	32, 323, 301, 183, 132, 69, 55, 103, 324, 325,
	96, 326, 99, 72, 100, 16, 67, 38, 327, 328,
	329, 330, 120, 149, 292, 65, 331, 153, 6, 298,
	31, 175, 63, 332, 154, 108, 299, 300, 157, 97,
	5, 160, 33, 10, 70, 73, 289, 290, 291, 53,
	107, 13, 333, 101, -209, 119, -199, -202, -161, 170,
	-224, 166, -74, -216, -215, -161, -74, 292, -153, 159,
	155, -153, -27, -28, 227, 136, -74, -74, 146, 148,
	151, 72, -29, 194, -23, -74, -152, 159, -231, -152,
	-152, -152, -74, 143, -74, -231, 31, -150, 119, 13,
	284, -231, 188, 154, 189, 156, -151, 119, -151, -151,
	-204, 155, 34, 167, -174, -243, -162, 195, 196, 195,
	-148, -147, 261, 262, 256, 260, 13, 196, 256, 191,
	-150, -174, 157, -161, -44, -161, 87, -7, -3, -11,
	-10, -12, 111, -173, -173, 81, 102, 100, 101, 118,
	-59, -82, 121, 103, 119, 120, 105, 123, 122, 133,
	126, 127, 128, 129, 130, 131, 132, 124, 125, 136,
	111, 112, 113, 114, 115, 116, 117, -143, -243, -99,
	-243, 144, 145, -85, -85, -85, -85, -85, -85, -85,
	-85, -85, -85, -243, 143, -2, -94, -4, -243, -243,
	-243, -243, -243, -243, -243, -243, -104, -59, -243, -247,
	-91, -243, -247, -91, -247, -91, -247, -243, -247, -91,
	-247, -91, -247, -247, -91, -243, -243, -243, -243, -243,
	-243, -243, -173, -108, -3, -42, -128, 20, 32, -59,
	-109, -110, -59, -108, 55, -54, -56, -58, 59, 60,
	93, 12, -164, -163, 23, -161, 87, 143, 12, -75,
	27, -74, -61, -62, -63, -64, -77, -100, -243, -74,
	12, -68, -69, -74, -76, -166, 81, 201, -138, -176,
	-140, -139, 274, 276, 111, -165, -161, 87, 30, 31,
	82, 81, -74, -179, -182, -184, -183, -185, -180, -181,
	224, 225, 137, 228, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 31, 178, 220, 221, 222, 223,
	240, 241, 242, 243, 244, 245, 246, 247, 207, 226,
	303, 208, 209, 210, 211, 212, 213, 215, 216, 217,
	218, 219, -231, 80, 82, 81, -186, 80, -174, 156,
	-74, 103, -231, -231, 31, -207, 111, -156, 151, 148,
	149, -227, 147, 249, 227, 94, 30, 16, 293, 184,
	308, -231, 185, -174, 190, 190, 154, 154, 198, -74,
	40, 81, 157, -68, 24, 72, -74, -231, -231, -167,
	-166, -159, -174, -150, 87, -59, -174, -174, -174, -74,
	-174, -174, 87, -205, 12, 121, -174, -174, -146, 12,
	121, -205, -146, -59, -151, 72, -172, 204, 238, 391,
	392, 393, -59, -59, -59, -59, -92, 96, 103, 97,
	98, -85, -93, -96, -99, 92, 121, 119, 120, 105,
	-85, -85, -85, -85, -85, -85, -85, -85, -85, -85,
	-85, -85, -85, -85, -85, -175, -231, 87, -231, -84,
	-84, -161, -55, 22, 36, -54, -162, -167, -159, -52,
	-244, -244, -108, -54, -54, -59, -59, -101, 87, -54,
	-101, 87, -54, -54, -51, 22, 36, -102, -103, 107,
	-101, -161, -166, -244, -85, -161, -161, -54, -55, -55,
	-54, -54, -112, -244, -113, 27, 10, 121, 81, 19,
	81, -111, 25, 26, -112, -86, -161, 88, 91, -60,
	81, 12, -58, -74, -163, 128, -167, -74, -131, 184,
	-74, 31, 81, -70, -72, -71, -73, 62, 66, 68,
	63, 64, 65, 69, -170, 23, -61, -3, -243, -169,
	184, -168, 23, -166, 87, -74, -68, -245, 81, 12,
	73, -245, 81, 143, -138, -140, 81, 275, 277, 278,
	72, 99, -59, -191, 136, -211, -212, -213, -162, 87,
	88, -199, -200, -201, -214, 170, -223, 161, 163, 164,
	160, -203, 171, -224, 155, 29, 82, -154, 96, 103,
	-195, 252, -186, -186, -186, -186, -186, -190, 227, -190,
	-190, -190, 80, 80, -186, -186, -186, -186, -192, 80,
	-192, -192, -193, 80, -193, -224, 166, -59, -221, -220,
	-217, 73, 165, 94, 305, -215, -111, 88, -74, 24,
	-127, 73, -207, -231, 87, -173, -235, 166, 162, 170,
	171, 164, 83, 84, 85, 155, 29, 161, 163, 184,
	160, -235, -157, -158, 157, 23, 155, 29, 184, -74,
	-74, -74, -74, -74, 151, 148, 192, -74, -74, -74,
	-174, -74, -150, -166, -166, -74, -150, -74, -161, 96,
	97, 98, -93, -85, -85, -85, -53, 179, 102, -244,
	-244, -54, -54, -243, 143, -5, -112, -244, -244, 81,
	73, 23, 12, 12, -244, 12, 12, -244, -244, -54,
	-105, -103, 109, -59, -244, 143, -244, 81, 81, -244,
	-244, -244, -244, -244, -128, 38, 46, 57, -59, -59,
	-110, -128, -142, 20, 12, 53, 53, -79, 13, -56,
	-61, -58, 143, -79, -83, 31, 53, -3, -243, -243,
	-134, -137, -101, -62, -63, -63, -62, -63, 62, 62,
	62, 67, 62, 67, 62, -71, -166, -244, -244, -3,
	-78, 70, 158, 71, -243, -168, -131, 73, -61, -74,
	-61, -76, -166, 128, -139, -141, 279, 276, 282, -231,
	87, 81, -213, 111, -202, 80, -231, 29, -203, -203,
	-203, -206, -231, -206, 29, -188, 30, 96, -196, 253,
	-190, -190, -191, 31, -191, -191, -191, -198, 87, -198,
	88, 88, 82, -222, -218, -219, 32, 76, -217, -231,
	-207, 87, 37, 82, -174, 72, -161, -231, 87, -173,
	-173, -74, -173, -161, -233, 73, 190, 249, 190, 193,
	157, -174, -146, -146, -53, 102, -85, -85, -244, -244,
	-55, -162, -108, -128, -178, 137, 224, 178, 222, 218,
	238, 229, 251, 220, 252, -175, -178, -85, -85, -85,
	-85, 302, -108, 110, -59, 108, -162, -85, -85, 39,
	87, 87, 58, -74, -106, 14, -59, 128, -112, -133,
	72, -134, -95, -97, -96, -243, -129, -244, -161, -132,
	-161, -79, 81, 111, -66, -65, 72, 73, -67, 72,
	-65, 62, 62, -244, 155, 155, 155, -132, -79, -61,
	-79, -79, 143, 276, 280, 281, -212, -213, -216, -223,
	171, -206, -206, -206, 80, -189, 72, -85, -191, -191,
	-231, 137, 82, 81, 82, 81, 82, 81, -155, 340,
	103, -219, -218, -207, -207, 88, 87, -74, 27, -230,
	305, -232, -231, -161, -161, -161, -74, -150, -150, -85,
	-244, -112, -244, -186, -186, -186, -193, -186, 212, -186,
	212, -244, -244, 20, 20, 20, 20, -243, -49, 298,
	-59, 81, 81, 87, -190, -107, 15, 17, 28, -133,
	81, -244, -244, 81, 53, 143, -244, 81, -108, -137,
	-59, -59, 80, -59, -243, -243, -243, -244, -108, -79,
	82, -130, -161, -194, 249, 10, -190, 87, -190, 88,
	88, 340, 30, 77, 78, 79, 30, 74, 75, -243,
	-229, -228, -162, 80, 73, -128, -190, -231, -85, -85,
	-85, -85, -85, -112, 87, -85, -85, -190, -115, -120,
	-148, -59, -94, 29, -97, 53, -3, -161, -95, -161,
	-161, -112, -130, -130, -244, -130, -130, -169, -112, -221,
	82, 81, -197, 161, 29, 160, -88, -191, -191, 82,
	82, -225, -226, 184, 81, 111, -130, -74, -244, -244,
	-244, -244, -50, 121, 305, -244, -244, -244, -118, 390,
	-121, 42, -122, 43, 10, -95, 143, 82, -244, -244,
	-244, -78, 173, -161, -187, 94, 29, 29, -244, 81,
	-161, -228, -213, 82, -244, 303, 69, 306, -115, 47,
	230, -123, 51, -124, -119, 52, 17, -134, -161, -74,
	87, -226, 53, -233, 58, 304, 307, -116, 49, -114,
	48, -114, -122, 17, -125, 44, 45, 87, 80, 186,
	-230, 58, -117, 50, 72, 99, 87, 17, 17, -130,
	187, 305, 72, 99, 87, 87, 82, -243, 306, -238,
	-239, 72, -85, 183, 307, -239, 72, 11, 10, -244,
	-244, -237, 174, 169, 172, 31, -237, 168, 30, 96,
}
var yyDef = [...]int{

	30, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 656,
	0, 397, 397, 397, 397, 397, 397, 397, 0, 0,
	769, -2, 0, 34, 0, 0, 0, 0, -2, 362,
	363, 0, 365, -2, 0, 0, 374, 1108, 1108, 0,
	0, 1108, 0, 0, 1106, 51, 52, 380, 381, 382,
	1, 3, 0, 401, 664, 0, 0, -2, 399, 0,
	0, 752, 752, 752, 0, 80, 81, 0, 0, 0,
	0, 0, 750, 0, 750, 770, 771, 772, 98, 99,
	85, -2, 103, 104, 0, 108, 97, 0, 0, 0,
	107, 35, 31, 32, 33, 0, 748, 0, 748, 748,
	748, 0, 308, 479, 779, 780, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 918, 919, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 931, 932, 933, 934, 935, 936,
	937, 938, 939, 940, 941, 942, 943, 944, 945, 946,
	947, 948, 949, 950, 951, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 0,
	0, 0, 353, 0, 356, 356, 356, 322, 0, 324,
	1109, 0, 0, 0, 331, 0, 0, 337, 353, 1109,
	345, 359, 360, 347, 342, 343, 361, 364, 0, 369,
	372, 775, 776, 0, 387, 0, 953, 379, 392, 393,
	1108, 1108, 396, 36, 530, 489, 0, 495, 497, 0,
	532, 533, 534, 535, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 563, 564, 565, 641,
	642, 643, 644, 645, 646, 647, 648, 499, 500, 638,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 629, 0, 599, 599, 599, 599, 599, 599, 599,
	599, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	1108, 656, 47, 0, 397, 402, 403, 680, 0, 0,
	656, 1107, 0, 0, -2, -2, 413, 419, 420, 421,
	422, 398, 0, 425, 429, 0, 0, 0, 753, 0,
	0, 66, 0, 1078, 733, -2, -2, 0, 0, 777,
	778, -2, 917, -2, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 800, 801, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 811, 812, 813, 814, 815, 816, 817, 818,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 893, 894, 895, 896, 897, 898,
	899, 900, 901, 902, 0, 0, 115, 116, 0, 0,
	237, 919, 113, 0, 231, 172, 1109, 0, 0, 0,
	0, 0, 105, 106, 0, 214, 0, 1109, 0, 0,
	0, 0, -2, 0, 299, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 309, 1109, 353, 312, 0, 0,
	1109, 1109, 1109, 0, 1109, 1109, 319, 0, 320, 321,
	0, 222, 223, 224, 325, 1110, 1111, 1109, 1109, 350,
	0, 350, 348, 349, 340, 341, 0, 356, 334, 335,
	338, 339, 370, 373, 390, 388, 389, 391, 383, 384,
	385, 386, 0, 394, 395, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 496, 0, 510,
	0, 0, 0, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 0, 410, 0, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 630, 0, 583,
	591, 0, 584, 592, 585, 593, 586, 0, 587, 594,
	588, 595, 589, 590, 596, 0, 0, 0, 410, 410,
	0, 0, 37, 664, 0, 412, 683, 0, 0, 665,
	657, 658, 661, 664, 0, 434, 423, 414, 417, 418,
	400, 0, 426, 430, 0, 432, 433, 0, 0, 64,
	0, 478, 0, 436, 438, 439, 440, 460, 0, 462,
	0, 0, 0, 60, 62, 479, 0, 1078, 739, 0,
	68, 69, 0, 0, 0, 195, 743, 744, 745, 741,
	254, 0, 0, 183, 179, 123, 124, 125, 172, 127,
	172, 172, 172, 172, 192, 192, 192, 192, 155, 156,
	157, 158, 159, 0, 0, 142, 172, 172, 172, 172,
	162, 163, 164, 165, 166, 167, 168, 169, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 174, 174, 174,
	176, 176, 0, 0, 206, 0, 661, 0, 83, 0,
	94, 0, 773, 96, 214, 0, 215, 1108, 0, 0,
	764, 269, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 749, 0, 1109, 305, 306, 480,
	781, 782, 310, 311, 354, 355, 313, 314, 315, 316,
	317, 318, 357, 0, 225, 226, 326, 330, 353, 0,
	0, 0, 353, 332, 333, 0, 0, 371, 375, 376,
	377, 378, 531, 490, 491, 492, 494, 511, 0, 513,
	515, 501, 502, 526, 527, 528, 0, 0, 0, 0,
	524, 506, 0, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 551, 614, 615, 0, 549,
	550, 561, 0, 0, 0, 411, 639, 0, -2, 0,
	529, 728, 664, 0, 0, 0, 0, 534, 641, 0,
	534, 641, 0, 0, 0, 408, 409, 636, 633, 0,
	0, 638, 0, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 48, 38, 0, 681, 0, 0, 0,
	0, 660, 662, 663, 680, 0, 649, 0, 0, 487,
	0, 0, 415, 44, 431, 427, 0, 487, 0, 0,
	477, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	470, 0, 0, 0, 0, 461, 0, 0, 0, 482,
	1018, 463, 0, 465, 466, -2, 0, 0, 0, 58,
	59, 0, 0, 0, 734, 67, 0, 0, 72, 73,
	735, 736, 737, 738, 0, 100, 255, 257, 260, 261,
	262, 117, 119, 120, 0, 0, 235, 1028, 1062, 954,
	229, 229, 952, 242, 227, 228, 114, 186, 184, 0,
	181, 180, 126, 192, 192, 149, 150, 195, 0, 195,
	195, 195, 0, 0, 143, 144, 145, 146, 137, 0,
	138, 139, 140, 0, 141, 236, 0, 0, 668, 207,
	208, 0, 214, 0, 0, 232, 233, 0, 1109, 751,
	0, 0, 0, 111, 112, 263, 1108, 280, 281, 282,
	283, 284, 285, 286, 287, 288, 289, 290, 291, 292,
	293, 1108, 0, 1108, 765, 766, 767, 768, 0, 86,
	273, 275, 274, 278, 0, 0, 0, 0, 300, 1109,
	304, 350, 327, 351, 352, 350, 329, 336, 367, 512,
	514, 516, 503, 524, 507, 0, 504, 0, 0, 498,
	566, 0, 0, 410, 0, 656, 680, 570, 571, 0,
	0, 0, 0, 0, 607, 0, 0, 608, 0, 656,
	0, 634, 0, 0, 582, 0, 601, 0, 0, 602,
	603, 604, 605, 606, 40, 0, 0, 0, 666, 667,
	659, 39, 0, 746, 747, 650, 651, 652, 0, 424,
	435, 416, 0, 664, 722, 0, 0, 714, 0, 0,
	487, 730, 0, 437, 456, 458, 0, 453, 468, 469,
	471, 0, 473, 0, 475, 476, 441, 442, 443, 0,
	444, 0, 0, 0, 0, 464, 487, 0, 487, 61,
	487, 63, 0, 481, 70, 71, 0, 0, 77, 196,
	197, 0, 258, 0, 118, 0, 0, 216, 229, 229,
	229, 220, 230, 221, 0, 188, 0, 185, 122, 182,
	195, 195, 151, 0, 152, 153, 154, 0, 170, 0,
	0, 0, 251, 82, 672, 671, 214, 214, 209, 210,
	0, 212, 0, 173, 84, 0, 774, 109, 110, 264,
	265, 266, 267, 0, 89, 0, 0, 0, 0, 271,
	0, 303, 353, 353, 505, 0, 525, 508, 567, 568,
	0, 640, 664, 42, 0, 172, 172, 619, 172, 176,
	622, 172, 624, 172, 627, 0, 0, 0, 0, 0,
	0, 0, 631, 581, 637, 0, 639, 0, 0, 0,
	192, 685, 682, 41, 654, 0, 488, 428, 45, 49,
	0, 722, 713, 724, 726, 0, 0, 0, 718, 0,
	448, 656, 0, 0, 450, 457, 0, 0, 451, 0,
	452, 472, 474, -2, 0, 0, 0, 0, 656, 487,
	56, 57, 0, 74, 75, 76, 256, 259, 0, 234,
	0, 217, 218, 219, 0, 190, 0, 187, 147, 148,
	193, 194, 192, 0, 192, 0, 177, 0, 243, 252,
	0, 669, 670, 0, 0, 211, 213, 95, 0, 272,
	0, 87, 88, 0, 0, 277, 301, 323, 328, 509,
	569, 680, 572, 616, 192, 620, 621, 623, 625, 626,
	628, 574, 573, 0, 0, 0, 0, 0, 664, 0,
	635, 0, 0, 192, 705, 46, 0, 0, 0, 50,
	0, 727, 0, 0, 0, 0, 65, 0, 664, 731,
	732, 454, 0, 459, 0, 0, 0, 462, 664, 55,
	206, 0, 446, 198, 191, 0, 195, 171, 195, 0,
	0, 253, 673, 674, 675, 676, 677, 678, 679, 0,
	90, 91, 0, 0, 0, 43, 617, 618, 0, 0,
	0, 0, 609, 0, 632, 0, 0, 687, 686, 699,
	703, 655, 653, 0, 725, 0, 717, 720, 716, 719,
	449, 53, 0, 0, 484, 0, 0, 482, 54, 205,
	0, 0, 203, 0, 200, 202, 189, 160, 161, 175,
	178, 0, 295, 0, 0, 0, 0, 279, 575, 577,
	576, 578, 0, 0, 0, 580, 597, 598, 705, 0,
	698, 701, -2, 0, 0, 715, 0, 455, 483, 485,
	486, 445, 0, 447, 121, 0, 199, 201, 294, 0,
	0, 92, 93, 86, 579, 0, 0, 0, 692, 690,
	690, 703, 0, 707, 0, 712, 0, 723, 721, 0,
	204, 296, 0, 89, 610, 0, 613, 695, 0, 688,
	691, 689, 700, 0, 706, 0, 0, 704, 0, 0,
	276, 611, 684, 0, 693, 694, 702, 0, 0, 0,
	0, 0, 696, 697, 708, 710, 238, 0, 0, 239,
	240, 0, 0, 0, 612, 241, 0, 0, 0, 297,
	298, 244, 246, 247, 0, 0, 245, 248, 249, 250,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 394,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:374
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:379
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:380
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:384
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:413
		{
			setParseTree(yylex, nil)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:419
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:423
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:427
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:432
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:436
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 36:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:442
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 37:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:448
		{
			yyVAL.statement = &Load{}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:454
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 39:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:463
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:467
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 41:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:471
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 42:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:494
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:502
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 44:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:508
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:514
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 46:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:522
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:528
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:532
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:539
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:551
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.insertAction = InsertAct
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 53:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:573
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 54:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:579
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:583
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 56:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:587
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 57:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:591
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:596
		{
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:597
		{
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:601
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:605
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:611
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:615
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:620
		{
			yyVAL.partitions = nil
		}
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:624
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:630
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 67:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:636
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:640
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:646
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:650
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:660
		{
			yyVAL.characteristic = ReadWrite
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:664
		{
			yyVAL.characteristic = ReadOnly
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:670
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:674
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:678
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:682
		{
			yyVAL.isolationLevel = Serializable
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:688
		{
			yyVAL.scope = SessionScope
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:692
		{
			yyVAL.scope = GlobalScope
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:698
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:703
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 82:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:709
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[5].indexOptions, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:716
		{
			yyVAL.statement = &DDL{Action: CreateDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:720
		{
			yyVAL.statement = &DDL{Action: CreateDDLAction, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:724
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:731
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:735
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:741
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:746
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:751
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:757
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:762
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:768
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:774
		{
			yyVAL.ddl = &DDL{Action: CreateDDLAction, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:781
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, IndexType: yyDollar[5].str, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:788
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:795
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:806
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:812
		{
			yyVAL.collateAndCharsets = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:816
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:822
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:826
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:830
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:834
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:839
		{
			yyVAL.boolean = false
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:843
		{
			yyVAL.boolean = true
		}
	case 109:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:849
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:853
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:859
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 112:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:863
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:870
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:874
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:880
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:885
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:894
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:899
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:903
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:909
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:920
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:931
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:936
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:942
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:946
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:950
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:954
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:958
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:962
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:966
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:970
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:974
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1042
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1074
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1078
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1082
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1086
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1091
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1101
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1131
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1141
		{
			yyVAL.literal = nil
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1145
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1150
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1154
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1162
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1166
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 178:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1172
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1180
		{
			yyVAL.boolean = false
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1184
		{
			yyVAL.boolean = true
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1189
		{
			yyVAL.boolean = false
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1193
		{
			yyVAL.boolean = true
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1199
		{
			yyVAL.boolean = false
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1203
		{
			yyVAL.boolean = false
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1207
		{
			yyVAL.boolean = true
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1212
		{
			yyVAL.optVal = nil
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1216
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1221
		{
			yyVAL.optVal = nil
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1230
		{
			yyVAL.boolean = false
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1234
		{
			yyVAL.boolean = true
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1239
		{
			yyVAL.str = ""
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1243
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1252
		{
			yyVAL.str = ""
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1256
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1260
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1265
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1269
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.colKeyOpt = colKey
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1277
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1281
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1286
		{
			yyVAL.literal = nil
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1290
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 205:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1296
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1301
		{
			yyVAL.indexOptions = nil
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1305
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1311
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1325
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1330
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1334
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1340
		{
			yyVAL.str = ""
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1344
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1354
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1358
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1362
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1366
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1370
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1376
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1380
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1384
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1391
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1395
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1401
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1405
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1410
		{
			yyVAL.str = ""
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1420
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1430
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1436
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1446
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 238:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1456
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 239:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1460
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 240:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1464
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 241:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1468
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.constraintInfo = yyDollar[1].constraintInfo
		}
	case 243:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1478
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1484
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1490
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1504
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1508
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1512
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1517
		{
			yyVAL.boolean = true
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.boolean = true
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1525
		{
			yyVAL.boolean = false
		}
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = ""
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = yyDollar[1].str
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 263:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1574
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 264:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1578
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 265:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1582
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1586
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[3].tableName}, ToTables: TableNames{yyDollar[6].tableName}}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1591
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1596
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1600
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName, PartitionSpec: yyDollar[4].partSpec}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1604
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1611
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1618
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1630
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1640
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1644
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 276:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1648
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 277:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1661
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1671
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 279:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1675
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 294:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1704
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1714
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 297:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1720
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 298:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1724
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1730
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1736
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1740
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1748
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 303:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1752
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1757
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1761
		{
			yyVAL.statement = &DBDDL{Action: DropDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1765
		{
			yyVAL.statement = &DBDDL{Action: DropDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1771
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1775
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1780
		{
			yyVAL.statement = &OtherRead{}
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1786
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1791
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: CharsetStr, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1796
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1801
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1806
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1810
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1814
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1818
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1822
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1826
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1831
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1836
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1841
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 323:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1845
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1850
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1854
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1858
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1862
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1866
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1870
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1880
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1884
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1888
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr, Scope: ImplicitScope}}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1892
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1897
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1901
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 336:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1905
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1909
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1914
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1928
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1938
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1954
		{
			yyVAL.str = ""
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1958
		{
			yyVAL.str = "extended "
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1964
		{
			yyVAL.str = ""
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.str = "full "
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1978
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1984
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1988
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1992
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1998
		{
			yyVAL.showFilter = nil
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2006
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2012
		{
			yyVAL.showFilter = nil
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2016
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2022
		{
			yyVAL.scope = ImplicitScope
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.scope = SessionScope
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.scope = GlobalScope
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.statement = &Begin{}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.statement = &Begin{}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.statement = &Commit{}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.statement = &Rollback{}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2066
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2071
		{
			yyVAL.empty = struct{}{}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.empty = struct{}{}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2076
		{
			yyVAL.empty = struct{}{}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.empty = struct{}{}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2083
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2089
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2094
		{
			yyVAL.explainType = EmptyType
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2098
		{
			yyVAL.explainType = JSONType
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2102
		{
			yyVAL.explainType = TreeType
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			yyVAL.explainType = VitessType
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2110
		{
			yyVAL.explainType = TraditionalType
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.explainType = AnalyzeType
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2120
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2128
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2142
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2151
		{
			yyVAL.str = ""
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2165
		{
			yyVAL.statement = &OtherRead{}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2169
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2175
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2179
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2183
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2187
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2193
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2197
		{
			setAllowComments(yylex, true)
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2201
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2207
		{
			yyVAL.bytes2 = nil
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2211
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.boolean = true
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2221
		{
			yyVAL.boolean = false
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2225
		{
			yyVAL.boolean = true
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.str = SQLCacheStr
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2243
		{
			yyVAL.boolean = false
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2247
		{
			yyVAL.boolean = true
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.boolean = true
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2256
		{
			yyVAL.selectExprs = nil
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2260
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2265
		{
			yyVAL.strs = nil
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2269
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2273
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2277
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2281
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2287
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.str = SQLCacheStr
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2295
		{
			yyVAL.str = DistinctStr
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.str = DistinctStr
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2303
		{
			yyVAL.str = StraightJoinHint
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2307
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2313
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2317
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2323
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2331
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2335
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2340
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2344
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2355
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2360
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2364
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2370
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2374
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2388
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2392
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2398
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2404
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 445:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2408
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2414
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2418
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2424
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2428
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2441
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2445
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2449
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2453
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2459
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2461
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2465
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2467
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2471
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2473
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2476
		{
			yyVAL.empty = struct{}{}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.empty = struct{}{}
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2481
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2485
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2489
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.joinType = NormalJoinType
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2506
		{
			yyVAL.joinType = NormalJoinType
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2510
		{
			yyVAL.joinType = NormalJoinType
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			yyVAL.joinType = StraightJoinType
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2522
		{
			yyVAL.joinType = LeftJoinType
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2526
		{
			yyVAL.joinType = LeftJoinType
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2530
		{
			yyVAL.joinType = RightJoinType
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2534
		{
			yyVAL.joinType = RightJoinType
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2540
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2544
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2554
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2558
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2564
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2568
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2574
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2579
		{
			yyVAL.indexHints = nil
		}
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2583
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2587
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2591
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2595
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2600
		{
			yyVAL.expr = nil
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2604
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2610
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2614
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2618
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2622
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2626
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2630
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2634
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2638
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2644
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2648
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2664
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2668
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2672
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2676
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2680
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2684
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2688
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2692
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 509:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2696
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2700
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2706
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2710
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2714
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2718
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2722
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2726
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2761
		{
			yyVAL.expr = nil
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2765
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2771
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2775
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2779
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2785
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2791
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2795
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2801
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2805
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2809
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2813
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2817
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2821
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2825
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2829
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2833
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2837
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2841
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2845
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2849
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2853
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2857
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2861
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2869
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2873
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2877
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2881
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2885
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2889
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2893
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2897
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2901
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2909
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2923
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2927
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2931
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2949
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2953
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2957
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2961
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2971
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2975
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2979
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2983
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2987
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 575:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2991
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 576:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2995
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 577:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2999
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 578:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3003
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 579:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3007
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3011
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3015
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3019
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3029
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3033
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3037
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3042
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3047
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3052
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3058
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3063
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3068
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3072
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3076
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3081
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3086
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3091
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3095
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 598:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3099
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3109
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3119
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3123
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3127
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3131
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3135
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3139
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3143
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3149
		{
			yyVAL.matchExprOption = NoOption
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3153
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3157
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 612:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3161
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3165
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3175
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3181
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3185
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3189
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3193
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3197
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3201
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3207
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3211
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3215
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3219
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3223
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3227
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3231
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3236
		{
			yyVAL.expr = nil
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3240
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3245
		{
			yyVAL.str = string("")
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3249
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3255
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3259
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3265
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3270
		{
			yyVAL.expr = nil
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3274
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3280
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3284
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3288
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3294
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3298
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3302
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3306
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3310
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3314
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3318
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3322
		{
			yyVAL.expr = &NullVal{}
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3328
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3337
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3341
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3346
		{
			yyVAL.exprs = nil
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3350
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3355
		{
			yyVAL.expr = nil
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3359
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3364
		{
			yyVAL.orderBy = nil
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3368
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3374
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3378
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3384
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3389
		{
			yyVAL.orderDirection = AscOrder
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3393
		{
			yyVAL.orderDirection = AscOrder
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3397
		{
			yyVAL.orderDirection = DescOrder
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3402
		{
			yyVAL.limit = nil
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3406
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3410
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3414
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3419
		{
			yyVAL.indexOptions = nil
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3423
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3427
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3431
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3435
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3442
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3446
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3450
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3454
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3460
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3464
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3468
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3473
		{
			yyVAL.lock = NoLock
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3477
		{
			yyVAL.lock = ForUpdateLock
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3481
		{
			yyVAL.lock = ShareModeLock
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3486
		{
			yyVAL.selectInto = nil
		}
	case 684:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3490
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3494
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3498
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3503
		{
			yyVAL.str = ""
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3507
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3511
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3516
		{
			yyVAL.str = ""
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3520
		{
			yyVAL.str = " header"
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3525
		{
			yyVAL.str = ""
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3529
		{
			yyVAL.str = " manifest on"
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3533
		{
			yyVAL.str = " manifest off"
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3538
		{
			yyVAL.str = ""
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3542
		{
			yyVAL.str = " overwrite on"
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3546
		{
			yyVAL.str = " overwrite off"
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3552
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3557
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3561
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3566
		{
			yyVAL.str = ""
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3570
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3575
		{
			yyVAL.str = ""
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3579
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3584
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3588
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3593
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3597
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3602
		{
			yyVAL.str = ""
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3606
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = " optionally"
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3628
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3636
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3640
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3644
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3650
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3654
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3658
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3662
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3667
		{
			yyVAL.updateExprs = nil
		}
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3671
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3677
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3681
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3691
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3697
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3703
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3713
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3717
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3723
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3729
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3733
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3739
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3743
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3747
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3751
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3755
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3763
		{
			yyVAL.bytes = []byte("charset")
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3770
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3774
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3778
		{
			yyVAL.expr = &Default{}
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3787
		{
			yyVAL.boolean = false
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3789
		{
			yyVAL.boolean = true
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3792
		{
			yyVAL.boolean = false
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3794
		{
			yyVAL.boolean = true
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3797
		{
			yyVAL.ignore = false
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3799
		{
			yyVAL.ignore = true
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3803
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3805
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3807
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3809
		{
			yyVAL.empty = struct{}{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3811
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3813
		{
			yyVAL.empty = struct{}{}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3815
		{
			yyVAL.empty = struct{}{}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3817
		{
			yyVAL.empty = struct{}{}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3819
		{
			yyVAL.empty = struct{}{}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3821
		{
			yyVAL.empty = struct{}{}
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3825
		{
			yyVAL.empty = struct{}{}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.empty = struct{}{}
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3835
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3838
		{
			yyVAL.str = ""
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3840
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3842
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3847
		{
			yyVAL.str = ""
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = yyDollar[2].colIdent.val
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3870
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3874
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4230
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4239
		{
			decNesting(yylex)
		}
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4244
		{
			skipToEnd(yylex)
		}
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4249
		{
			skipToEnd(yylex)
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4253
		{
			skipToEnd(yylex)
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
