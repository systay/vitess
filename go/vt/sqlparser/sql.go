// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                  int
	empty                struct{}
	statement            Statement
	selStmt              SelectStatement
	ddl                  *DDL
	ins                  *Insert
	byt                  byte
	bytes                []byte
	bytes2               [][]byte
	str                  string
	strs                 []string
	selectExprs          SelectExprs
	selectExpr           SelectExpr
	columns              Columns
	partitions           Partitions
	colName              *ColName
	tableExprs           TableExprs
	tableExpr            TableExpr
	joinCondition        JoinCondition
	tableName            TableName
	tableNames           TableNames
	indexHints           *IndexHints
	expr                 Expr
	exprs                Exprs
	boolVal              BoolVal
	sqlVal               *SQLVal
	colTuple             ColTuple
	values               Values
	valTuple             ValTuple
	subquery             *Subquery
	whens                []*When
	when                 *When
	orderBy              OrderBy
	order                *Order
	limit                *Limit
	updateExprs          UpdateExprs
	setExprs             SetExprs
	updateExpr           *UpdateExpr
	setExpr              *SetExpr
	colIdent             ColIdent
	tableIdent           TableIdent
	convertType          *ConvertType
	aliasedTableName     *AliasedTableExpr
	TableSpec            *TableSpec
	columnType           ColumnType
	colKeyOpt            ColumnKeyOption
	optVal               Expr
	LengthScaleOption    LengthScaleOption
	columnDefinition     *ColumnDefinition
	indexDefinition      *IndexDefinition
	indexInfo            *IndexInfo
	indexOption          *IndexOption
	indexOptions         []*IndexOption
	indexColumn          *IndexColumn
	indexColumns         []*IndexColumn
	constraintDefinition *ConstraintDefinition
	constraintInfo       ConstraintInfo
	ReferenceAction      ReferenceAction
	partDefs             []*PartitionDefinition
	partDef              *PartitionDefinition
	partSpec             *PartitionSpec
	vindexParam          VindexParam
	vindexParams         []VindexParam
	showFilter           *ShowFilter
	optLike              *OptLike
}

const LEX_ERROR = 57346
const UNION = 57347
const EXPLAIN = 57348
const SELECT = 57349
const STREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const VALUES = 57377
const LAST_INSERT_ID = 57378
const NEXT = 57379
const VALUE = 57380
const SHARE = 57381
const MODE = 57382
const SQL_NO_CACHE = 57383
const SQL_CACHE = 57384
const JOIN = 57385
const STRAIGHT_JOIN = 57386
const LEFT = 57387
const RIGHT = 57388
const INNER = 57389
const OUTER = 57390
const CROSS = 57391
const NATURAL = 57392
const USE = 57393
const FORCE = 57394
const ON = 57395
const USING = 57396
const ID = 57397
const HEX = 57398
const STRING = 57399
const INTEGRAL = 57400
const FLOAT = 57401
const HEXNUM = 57402
const VALUE_ARG = 57403
const LIST_ARG = 57404
const COMMENT = 57405
const COMMENT_KEYWORD = 57406
const BIT_LITERAL = 57407
const NULL = 57408
const TRUE = 57409
const FALSE = 57410
const OFF = 57411
const FORMAT = 57412
const OR = 57413
const AND = 57414
const NOT = 57415
const BETWEEN = 57416
const CASE = 57417
const WHEN = 57418
const THEN = 57419
const ELSE = 57420
const END = 57421
const LE = 57422
const GE = 57423
const NE = 57424
const NULL_SAFE_EQUAL = 57425
const IS = 57426
const LIKE = 57427
const REGEXP = 57428
const IN = 57429
const SHIFT_LEFT = 57430
const SHIFT_RIGHT = 57431
const DIV = 57432
const MOD = 57433
const UNARY = 57434
const COLLATE = 57435
const BINARY = 57436
const UNDERSCORE_BINARY = 57437
const UNDERSCORE_UTF8MB4 = 57438
const INTERVAL = 57439
const JSON_EXTRACT_OP = 57440
const JSON_UNQUOTE_EXTRACT_OP = 57441
const CREATE = 57442
const ALTER = 57443
const DROP = 57444
const RENAME = 57445
const ANALYZE = 57446
const ADD = 57447
const FLUSH = 57448
const SCHEMA = 57449
const TABLE = 57450
const INDEX = 57451
const VIEW = 57452
const TO = 57453
const IGNORE = 57454
const IF = 57455
const UNIQUE = 57456
const PRIMARY = 57457
const COLUMN = 57458
const SPATIAL = 57459
const FULLTEXT = 57460
const KEY_BLOCK_SIZE = 57461
const ACTION = 57462
const CASCADE = 57463
const CONSTRAINT = 57464
const FOREIGN = 57465
const NO = 57466
const REFERENCES = 57467
const RESTRICT = 57468
const SHOW = 57469
const DESCRIBE = 57470
const DATE = 57471
const ESCAPE = 57472
const REPAIR = 57473
const OPTIMIZE = 57474
const TRUNCATE = 57475
const MAXVALUE = 57476
const PARTITION = 57477
const REORGANIZE = 57478
const LESS = 57479
const THAN = 57480
const PROCEDURE = 57481
const TRIGGER = 57482
const VINDEX = 57483
const VINDEXES = 57484
const STATUS = 57485
const VARIABLES = 57486
const WARNINGS = 57487
const SEQUENCE = 57488
const BEGIN = 57489
const START = 57490
const TRANSACTION = 57491
const COMMIT = 57492
const ROLLBACK = 57493
const BIT = 57494
const TINYINT = 57495
const SMALLINT = 57496
const MEDIUMINT = 57497
const INT = 57498
const INTEGER = 57499
const BIGINT = 57500
const INTNUM = 57501
const REAL = 57502
const DOUBLE = 57503
const FLOAT_TYPE = 57504
const DECIMAL = 57505
const NUMERIC = 57506
const TIME = 57507
const TIMESTAMP = 57508
const DATETIME = 57509
const YEAR = 57510
const CHAR = 57511
const VARCHAR = 57512
const BOOL = 57513
const CHARACTER = 57514
const VARBINARY = 57515
const NCHAR = 57516
const TEXT = 57517
const TINYTEXT = 57518
const MEDIUMTEXT = 57519
const LONGTEXT = 57520
const BLOB = 57521
const TINYBLOB = 57522
const MEDIUMBLOB = 57523
const LONGBLOB = 57524
const JSON = 57525
const ENUM = 57526
const GEOMETRY = 57527
const POINT = 57528
const LINESTRING = 57529
const POLYGON = 57530
const GEOMETRYCOLLECTION = 57531
const MULTIPOINT = 57532
const MULTILINESTRING = 57533
const MULTIPOLYGON = 57534
const NULLX = 57535
const AUTO_INCREMENT = 57536
const APPROXNUM = 57537
const SIGNED = 57538
const UNSIGNED = 57539
const ZEROFILL = 57540
const COLLATION = 57541
const DATABASES = 57542
const TABLES = 57543
const VITESS_METADATA = 57544
const VSCHEMA = 57545
const FULL = 57546
const PROCESSLIST = 57547
const COLUMNS = 57548
const FIELDS = 57549
const ENGINES = 57550
const PLUGINS = 57551
const NAMES = 57552
const CHARSET = 57553
const GLOBAL = 57554
const SESSION = 57555
const ISOLATION = 57556
const LEVEL = 57557
const READ = 57558
const WRITE = 57559
const ONLY = 57560
const REPEATABLE = 57561
const COMMITTED = 57562
const UNCOMMITTED = 57563
const SERIALIZABLE = 57564
const CURRENT_TIMESTAMP = 57565
const DATABASE = 57566
const CURRENT_DATE = 57567
const CURRENT_TIME = 57568
const LOCALTIME = 57569
const LOCALTIMESTAMP = 57570
const UTC_DATE = 57571
const UTC_TIME = 57572
const UTC_TIMESTAMP = 57573
const REPLACE = 57574
const CONVERT = 57575
const CAST = 57576
const SUBSTR = 57577
const SUBSTRING = 57578
const GROUP_CONCAT = 57579
const SEPARATOR = 57580
const TIMESTAMPADD = 57581
const TIMESTAMPDIFF = 57582
const MATCH = 57583
const AGAINST = 57584
const BOOLEAN = 57585
const LANGUAGE = 57586
const WITH = 57587
const QUERY = 57588
const EXPANSION = 57589
const UNUSED = 57590

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"EXPLAIN",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"FORMAT",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 33,
	-2, 4,
	-1, 38,
	160, 303,
	161, 303,
	-2, 291,
	-1, 265,
	114, 642,
	-2, 638,
	-1, 266,
	114, 643,
	-2, 639,
	-1, 334,
	84, 817,
	-2, 67,
	-1, 335,
	84, 773,
	-2, 68,
	-1, 340,
	84, 752,
	-2, 604,
	-1, 342,
	84, 794,
	-2, 606,
	-1, 614,
	1, 354,
	5, 354,
	13, 354,
	14, 354,
	15, 354,
	16, 354,
	18, 354,
	20, 354,
	31, 354,
	32, 354,
	43, 354,
	44, 354,
	45, 354,
	46, 354,
	47, 354,
	49, 354,
	50, 354,
	53, 354,
	54, 354,
	56, 354,
	57, 354,
	266, 354,
	-2, 372,
	-1, 617,
	54, 48,
	56, 48,
	-2, 52,
	-1, 765,
	114, 645,
	-2, 641,
	-1, 994,
	5, 34,
	-2, 439,
	-1, 1024,
	5, 33,
	-2, 578,
	-1, 1268,
	5, 34,
	-2, 579,
	-1, 1321,
	5, 33,
	-2, 581,
	-1, 1399,
	5, 34,
	-2, 582,
}

const yyPrivate = 57344

const yyLast = 12953

var yyAct = [...]int{

	266, 1433, 1423, 823, 1387, 1230, 1118, 270, 1027, 570,
	1045, 878, 1204, 1301, 1288, 1170, 283, 851, 296, 1028,
	1333, 1171, 1167, 874, 58, 921, 849, 958, 887, 877,
	1051, 244, 1183, 82, 986, 800, 1177, 207, 1142, 339,
	207, 790, 1098, 907, 1072, 1089, 728, 797, 714, 630,
	891, 853, 818, 767, 502, 838, 3, 508, 629, 333,
	917, 297, 52, 328, 831, 440, 514, 253, 207, 82,
	330, 611, 268, 207, 610, 207, 522, 619, 325, 584,
	308, 57, 314, 315, 312, 313, 311, 310, 309, 1426,
	1410, 1421, 233, 1397, 1418, 585, 316, 317, 1231, 1409,
	257, 1159, 62, 1396, 1260, 445, 2, 1199, 1200, 243,
	869, 870, 1198, 52, 52, 202, 198, 199, 200, 631,
	1060, 632, 249, 1059, 868, 473, 1061, 494, 238, 64,
	65, 66, 67, 68, 194, 237, 196, 1080, 234, 235,
	236, 900, 1291, 239, 1362, 535, 534, 544, 545, 537,
	538, 539, 540, 541, 542, 543, 536, 1308, 240, 546,
	489, 908, 1251, 940, 490, 487, 488, 1249, 1120, 232,
	703, 482, 483, 492, 702, 1122, 700, 939, 1420, 1417,
	1388, 1117, 832, 1143, 1380, 458, 493, 892, 1334, 1441,
	799, 459, 475, 1342, 477, 207, 447, 272, 207, 1046,
	1048, 1336, 693, 196, 207, 944, 1123, 701, 704, 707,
	207, 1193, 894, 82, 938, 82, 1192, 82, 82, 1145,
	82, 1121, 82, 474, 476, 471, 1191, 195, 82, 443,
	1437, 894, 201, 450, 209, 197, 1114, 952, 558, 559,
	951, 1073, 1116, 1003, 1369, 1271, 1129, 500, 1000, 1056,
	1013, 455, 980, 1147, 739, 1151, 625, 1146, 526, 1144,
	82, 875, 1216, 465, 1149, 935, 932, 933, 546, 931,
	1335, 901, 510, 1148, 470, 864, 470, 1047, 470, 470,
	736, 470, 536, 470, 441, 546, 1150, 1152, 908, 470,
	520, 519, 733, 1378, 336, 1343, 1341, 1163, 521, 942,
	945, 1351, 729, 52, 52, 1181, 511, 521, 472, 893,
	1161, 52, 1363, 1395, 1217, 452, 1105, 453, 439, 774,
	454, 960, 633, 207, 207, 207, 555, 894, 893, 557,
	496, 497, 82, 772, 773, 771, 937, 1435, 82, 1115,
	1436, 1113, 1434, 819, 695, 1103, 558, 559, 498, 499,
	609, 558, 559, 512, 569, 1078, 441, 568, 936, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 1383, 583,
	586, 586, 586, 592, 586, 586, 592, 586, 600, 601,
	602, 603, 604, 605, 730, 615, 461, 462, 463, 587,
	589, 591, 593, 595, 597, 598, 998, 941, 997, 738,
	959, 516, 627, 618, 623, 588, 590, 71, 594, 596,
	1401, 599, 943, 1104, 742, 743, 520, 519, 1109, 1106,
	1099, 1107, 1102, 819, 893, 1010, 1100, 1101, 1442, 890,
	888, 519, 889, 521, 193, 999, 737, 886, 892, 1108,
	207, 520, 519, 1297, 72, 82, 897, 521, 446, 1296,
	207, 207, 82, 898, 520, 519, 207, 1093, 521, 207,
	55, 1092, 207, 520, 519, 556, 207, 1443, 82, 82,
	770, 521, 1081, 82, 82, 82, 207, 82, 82, 791,
	521, 792, 23, 82, 82, 1403, 520, 519, 535, 534,
	544, 545, 537, 538, 539, 540, 541, 542, 543, 536,
	322, 323, 546, 521, 259, 716, 470, 1379, 1315, 757,
	759, 760, 1294, 470, 82, 745, 758, 1062, 207, 1063,
	1126, 614, 1376, 1090, 82, 295, 448, 449, 963, 470,
	470, 977, 978, 979, 470, 470, 470, 708, 470, 470,
	987, 1233, 744, 248, 470, 470, 1339, 1419, 768, 537,
	538, 539, 540, 541, 542, 543, 536, 336, 80, 546,
	286, 285, 288, 289, 290, 291, 765, 1073, 82, 287,
	292, 1405, 501, 801, 803, 763, 1339, 1391, 1339, 501,
	746, 1339, 1370, 1339, 1338, 809, 812, 1286, 1285, 1273,
	501, 820, 1270, 501, 338, 1223, 1222, 1219, 1220, 621,
	761, 82, 82, 1219, 1218, 992, 501, 501, 207, 1068,
	835, 501, 802, 501, 569, 501, 207, 207, 793, 52,
	207, 207, 713, 712, 207, 207, 207, 82, 696, 804,
	694, 794, 795, 691, 572, 640, 639, 1052, 467, 460,
	82, 622, 25, 624, 59, 1348, 859, 816, 1347, 621,
	861, 828, 1213, 535, 534, 544, 545, 537, 538, 539,
	540, 541, 542, 543, 536, 716, 1022, 546, 1168, 1132,
	1023, 1180, 569, 895, 1180, 802, 858, 850, 620, 1266,
	835, 615, 857, 1350, 992, 615, 865, 866, 862, 1052,
	55, 622, 835, 620, 207, 82, 25, 82, 909, 910,
	911, 207, 207, 207, 207, 207, 882, 207, 207, 25,
	1221, 207, 82, 992, 834, 1064, 923, 544, 545, 537,
	538, 539, 540, 541, 542, 543, 536, 769, 207, 546,
	207, 207, 1180, 867, 1016, 207, 1015, 1320, 338, 835,
	338, 992, 338, 338, 55, 338, 620, 338, 919, 920,
	505, 509, 764, 338, 626, 740, 470, 55, 470, 706,
	55, 1411, 1303, 902, 805, 806, 250, 527, 811, 814,
	815, 1278, 922, 470, 840, 843, 844, 845, 841, 765,
	842, 846, 1209, 1184, 1185, 524, 1428, 1067, 968, 918,
	768, 913, 912, 827, 1119, 829, 830, 989, 969, 970,
	1304, 990, 571, 925, 1424, 1211, 1187, 1168, 994, 995,
	996, 582, 752, 614, 55, 1002, 1094, 614, 1005, 1006,
	734, 614, 710, 1190, 1012, 982, 981, 1189, 1014, 1036,
	1039, 1017, 1018, 1019, 1020, 1040, 207, 207, 207, 207,
	207, 1037, 1029, 1035, 254, 255, 1038, 1041, 207, 844,
	845, 207, 336, 1044, 1415, 207, 1408, 338, 1128, 207,
	965, 1413, 515, 635, 975, 879, 974, 1085, 503, 638,
	1009, 539, 540, 541, 542, 543, 536, 513, 82, 546,
	504, 468, 1077, 1385, 1384, 1053, 1318, 1075, 1024, 1065,
	1054, 1069, 1055, 1025, 1026, 1264, 1299, 615, 615, 615,
	615, 615, 1042, 928, 709, 848, 1050, 804, 1031, 1032,
	1030, 1034, 850, 1033, 1049, 251, 252, 1057, 515, 245,
	615, 903, 904, 905, 906, 59, 82, 82, 1356, 246,
	1355, 1084, 1306, 1086, 1087, 1088, 1074, 914, 915, 916,
	1070, 1071, 976, 1052, 491, 1430, 1429, 1082, 1083, 1004,
	1001, 840, 843, 844, 845, 841, 82, 842, 846, 1091,
	973, 1184, 1185, 727, 517, 764, 1430, 1366, 972, 769,
	338, 1292, 207, 735, 61, 1110, 63, 338, 56, 1,
	1422, 82, 1232, 1300, 934, 1386, 1332, 1203, 470, 991,
	885, 876, 70, 338, 338, 1140, 731, 438, 338, 338,
	338, 69, 338, 338, 1125, 1377, 884, 1007, 338, 338,
	883, 1340, 1290, 896, 1079, 899, 1210, 470, 1136, 1076,
	1382, 646, 644, 1097, 754, 755, 82, 82, 1141, 1135,
	1029, 1169, 1160, 614, 614, 614, 614, 614, 1154, 748,
	1153, 645, 1172, 643, 648, 647, 642, 220, 614, 524,
	82, 331, 338, 765, 847, 634, 614, 924, 1179, 518,
	73, 1112, 968, 1111, 930, 82, 1188, 82, 82, 263,
	732, 485, 486, 222, 554, 971, 1195, 571, 1202, 1058,
	807, 808, 1174, 337, 1197, 1173, 1194, 52, 1175, 741,
	507, 1354, 1305, 796, 1201, 207, 1008, 1206, 581, 817,
	271, 756, 284, 879, 281, 282, 1214, 1215, 747, 821,
	1021, 528, 207, 269, 261, 1207, 1208, 613, 82, 606,
	839, 82, 82, 82, 207, 837, 825, 826, 836, 326,
	82, 1186, 1182, 207, 612, 1131, 1259, 1361, 873, 1241,
	751, 27, 60, 256, 19, 18, 1243, 17, 20, 16,
	15, 14, 338, 1238, 456, 31, 21, 1252, 1253, 1240,
	13, 12, 1239, 11, 10, 338, 9, 22, 8, 7,
	6, 5, 4, 1247, 247, 24, 0, 1267, 1268, 1269,
	0, 1272, 0, 0, 0, 0, 0, 0, 1029, 0,
	0, 1225, 1265, 0, 615, 0, 0, 0, 1283, 0,
	1275, 0, 82, 1226, 1274, 1228, 1134, 0, 0, 0,
	82, 0, 0, 1065, 0, 0, 0, 0, 0, 0,
	338, 1258, 338, 0, 0, 82, 0, 1284, 0, 0,
	0, 0, 82, 0, 0, 0, 0, 338, 0, 1164,
	0, 0, 966, 967, 0, 509, 0, 0, 0, 0,
	0, 0, 0, 1280, 1281, 1282, 0, 0, 0, 0,
	0, 0, 1293, 1314, 1295, 338, 0, 0, 0, 0,
	0, 82, 82, 0, 82, 0, 0, 0, 0, 82,
	0, 82, 82, 82, 207, 1172, 470, 82, 1319, 1307,
	879, 0, 879, 1327, 0, 1328, 1329, 1330, 0, 1337,
	0, 1331, 0, 0, 82, 207, 1326, 993, 469, 1344,
	0, 0, 0, 1357, 1358, 1359, 1360, 1345, 1352, 1346,
	1364, 1365, 0, 0, 1011, 0, 1321, 0, 1173, 0,
	614, 1322, 1371, 1372, 1373, 0, 1367, 0, 0, 1172,
	82, 0, 1374, 560, 561, 562, 563, 564, 565, 566,
	567, 82, 82, 1375, 0, 1134, 0, 0, 0, 0,
	821, 1349, 0, 1390, 1389, 1394, 1393, 0, 0, 0,
	82, 0, 1399, 0, 1029, 1398, 0, 0, 0, 1368,
	0, 207, 1173, 0, 52, 0, 0, 0, 0, 82,
	1404, 0, 0, 0, 0, 0, 0, 0, 1407, 0,
	1263, 0, 0, 338, 0, 0, 0, 0, 0, 0,
	1412, 0, 82, 1414, 0, 1244, 1245, 0, 1246, 0,
	0, 1248, 506, 1250, 0, 1427, 1416, 879, 0, 0,
	0, 0, 1438, 0, 0, 1439, 1440, 0, 0, 535,
	534, 544, 545, 537, 538, 539, 540, 541, 542, 543,
	536, 1095, 338, 546, 0, 0, 0, 1302, 0, 205,
	0, 0, 231, 0, 0, 1127, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1287, 0, 0,
	0, 338, 1425, 0, 0, 0, 0, 260, 0, 0,
	329, 227, 616, 0, 0, 205, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 1162, 0, 0, 0, 0,
	0, 0, 0, 478, 0, 479, 480, 0, 481, 204,
	484, 0, 0, 0, 0, 0, 495, 0, 0, 338,
	0, 0, 0, 210, 0, 0, 0, 0, 821, 0,
	213, 1176, 1178, 0, 0, 0, 0, 1196, 221, 216,
	327, 0, 0, 0, 0, 442, 0, 444, 0, 0,
	0, 0, 0, 0, 0, 1178, 1302, 879, 534, 544,
	545, 537, 538, 539, 540, 541, 542, 543, 536, 219,
	338, 546, 338, 1205, 0, 226, 0, 0, 766, 0,
	0, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 0, 205, 0, 0,
	205, 0, 211, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 0, 1234, 1235, 1236, 223,
	214, 0, 224, 225, 230, 338, 824, 0, 215, 218,
	0, 212, 229, 228, 0, 0, 0, 0, 1261, 1262,
	0, 0, 0, 0, 0, 0, 0, 0, 571, 0,
	0, 0, 0, 0, 0, 0, 1276, 451, 0, 1277,
	457, 0, 1279, 0, 0, 0, 464, 0, 0, 0,
	0, 0, 466, 0, 0, 0, 821, 0, 535, 534,
	544, 545, 537, 538, 539, 540, 541, 542, 543, 536,
	0, 0, 546, 0, 0, 0, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 1289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 205, 205, 205, 0, 0,
	338, 0, 0, 692, 0, 0, 0, 338, 0, 0,
	699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1257, 0, 0, 0, 0, 0, 717, 718, 0, 0,
	0, 719, 720, 721, 0, 723, 724, 0, 0, 0,
	0, 725, 726, 0, 0, 0, 1323, 1324, 0, 1325,
	0, 0, 0, 0, 1289, 0, 1289, 1289, 1289, 0,
	0, 0, 1205, 0, 0, 608, 0, 617, 0, 0,
	0, 0, 0, 0, 1256, 0, 0, 0, 0, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1255, 0, 983, 984, 985, 535, 534, 544, 545, 537,
	538, 539, 540, 541, 542, 543, 536, 0, 0, 546,
	1392, 571, 205, 0, 0, 1381, 0, 0, 0, 0,
	0, 0, 205, 205, 0, 0, 338, 338, 205, 0,
	0, 205, 0, 0, 205, 0, 0, 0, 715, 0,
	0, 0, 821, 0, 0, 1400, 0, 0, 205, 535,
	534, 544, 545, 537, 538, 539, 540, 541, 542, 543,
	536, 0, 0, 546, 1406, 535, 534, 544, 545, 537,
	538, 539, 540, 541, 542, 543, 536, 0, 0, 546,
	0, 0, 641, 0, 0, 0, 0, 1289, 0, 0,
	205, 0, 697, 698, 0, 0, 0, 0, 705, 715,
	0, 327, 0, 530, 711, 533, 0, 0, 0, 0,
	0, 547, 548, 549, 550, 551, 552, 553, 722, 531,
	532, 529, 535, 534, 544, 545, 537, 538, 539, 540,
	541, 542, 543, 536, 0, 0, 546, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 260, 260, 0, 0,
	260, 260, 260, 927, 0, 929, 822, 0, 0, 0,
	753, 0, 1254, 0, 0, 0, 0, 0, 0, 0,
	956, 0, 0, 0, 0, 260, 260, 260, 260, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 205, 855,
	0, 0, 205, 205, 0, 0, 205, 863, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 1138, 1139, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1155, 1156, 0, 1157, 1158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1165, 1166, 535, 534, 544,
	545, 537, 538, 539, 540, 541, 542, 543, 536, 0,
	833, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 860, 1137, 0, 205, 0, 0, 0,
	0, 0, 0, 205, 205, 205, 205, 205, 0, 205,
	205, 0, 0, 205, 535, 534, 544, 545, 537, 538,
	539, 540, 541, 542, 543, 536, 0, 1212, 546, 0,
	205, 0, 961, 962, 0, 0, 0, 205, 0, 0,
	0, 0, 715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 926, 0, 988, 0,
	0, 0, 0, 946, 947, 948, 949, 950, 0, 953,
	954, 663, 0, 955, 0, 0, 0, 1242, 535, 534,
	544, 545, 537, 538, 539, 540, 541, 542, 543, 536,
	957, 260, 546, 0, 0, 0, 0, 964, 0, 0,
	0, 0, 0, 0, 0, 1096, 0, 0, 0, 260,
	535, 534, 544, 545, 537, 538, 539, 540, 541, 542,
	543, 536, 0, 0, 546, 0, 0, 822, 205, 205,
	205, 205, 205, 0, 1124, 0, 0, 0, 0, 0,
	1043, 0, 0, 205, 0, 0, 0, 855, 0, 0,
	651, 205, 0, 0, 0, 51, 25, 26, 53, 28,
	29, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 44, 0, 0, 0, 0,
	30, 48, 49, 0, 0, 0, 664, 0, 0, 0,
	0, 0, 0, 0, 1309, 1310, 1311, 1312, 1313, 0,
	39, 0, 1316, 1317, 55, 0, 0, 0, 0, 677,
	680, 681, 682, 683, 684, 685, 0, 686, 687, 688,
	689, 690, 665, 666, 667, 668, 649, 650, 678, 0,
	652, 0, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 669, 670, 671, 672, 673, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 32, 33, 35, 34,
	37, 0, 50, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 38, 45, 0, 0, 46, 47, 36,
	679, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	0, 0, 0, 40, 41, 822, 42, 43, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1130, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1431, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 0, 0, 523, 0,
	0, 0, 0, 104, 0, 0, 0, 205, 0, 121,
	0, 123, 0, 0, 161, 132, 0, 0, 54, 0,
	0, 0, 0, 1298, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 525, 205, 0, 0, 0,
	0, 0, 97, 0, 0, 205, 0, 0, 0, 520,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 822, 1227, 0, 0, 0, 110, 0,
	0, 0, 208, 0, 0, 0, 1237, 147, 0, 164,
	112, 120, 84, 91, 0, 111, 138, 152, 156, 0,
	0, 100, 0, 154, 142, 177, 0, 143, 153, 124,
	169, 148, 176, 184, 185, 166, 183, 188, 158, 85,
	165, 175, 98, 157, 87, 173, 163, 130, 116, 117,
	86, 0, 151, 103, 108, 102, 139, 170, 171, 101,
	191, 92, 182, 89, 93, 181, 137, 168, 174, 131,
	128, 88, 172, 129, 127, 119, 106, 113, 145, 126,
	146, 114, 134, 133, 135, 0, 0, 0, 162, 179,
	192, 95, 0, 167, 186, 187, 855, 0, 96, 109,
	105, 144, 136, 94, 115, 159, 118, 125, 150, 190,
	141, 155, 99, 178, 160, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 83, 90, 122, 189, 149, 107,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 822,
	0, 0, 0, 0, 0, 0, 0, 1353, 0, 0,
	0, 0, 0, 205, 0, 426, 374, 415, 0, 386,
	429, 364, 378, 437, 379, 380, 408, 350, 394, 140,
	376, 0, 367, 345, 373, 346, 365, 388, 104, 391,
	363, 417, 397, 428, 121, 435, 123, 402, 0, 161,
	132, 0, 0, 390, 419, 392, 413, 385, 409, 355,
	401, 430, 377, 406, 431, 0, 0, 0, 81, 0,
	880, 881, 0, 0, 0, 0, 0, 97, 0, 404,
	425, 375, 405, 1402, 407, 344, 403, 0, 348, 351,
	436, 421, 370, 371, 1066, 0, 0, 0, 0, 0,
	0, 389, 393, 410, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 400, 0, 0, 0, 352,
	349, 0, 0, 387, 0, 0, 0, 354, 0, 369,
	411, 0, 343, 110, 414, 420, 384, 208, 424, 382,
	381, 427, 147, 0, 164, 112, 120, 84, 91, 0,
	111, 138, 152, 156, 418, 366, 100, 372, 154, 142,
	177, 399, 143, 153, 124, 169, 148, 176, 184, 185,
	166, 183, 188, 158, 85, 165, 175, 98, 157, 87,
	173, 163, 130, 116, 117, 86, 0, 151, 103, 108,
	102, 139, 170, 171, 101, 191, 92, 182, 89, 93,
	181, 137, 168, 174, 131, 128, 88, 172, 129, 127,
	119, 106, 113, 145, 126, 146, 114, 134, 133, 135,
	0, 347, 0, 162, 179, 192, 95, 362, 167, 186,
	187, 0, 0, 96, 109, 105, 144, 136, 94, 115,
	159, 118, 125, 150, 190, 141, 155, 99, 178, 160,
	358, 361, 356, 357, 395, 396, 432, 433, 434, 412,
	353, 0, 359, 360, 0, 416, 422, 423, 398, 83,
	90, 122, 189, 149, 107, 180, 426, 374, 415, 0,
	386, 429, 364, 378, 437, 379, 380, 408, 350, 394,
	140, 376, 0, 367, 345, 373, 346, 365, 388, 104,
	391, 363, 417, 397, 428, 121, 435, 123, 402, 0,
	161, 132, 0, 0, 390, 419, 392, 413, 385, 409,
	355, 401, 430, 377, 406, 431, 0, 0, 0, 81,
	0, 880, 881, 0, 0, 0, 0, 0, 97, 0,
	404, 425, 375, 405, 0, 407, 344, 403, 0, 348,
	351, 436, 421, 370, 371, 0, 0, 0, 0, 0,
	0, 0, 389, 393, 410, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 400, 0, 0, 0,
	352, 349, 0, 0, 387, 0, 0, 0, 354, 0,
	369, 411, 0, 343, 110, 414, 420, 384, 208, 424,
	382, 381, 427, 147, 0, 164, 112, 120, 84, 91,
	0, 111, 138, 152, 156, 418, 366, 100, 372, 154,
	142, 177, 399, 143, 153, 124, 169, 148, 176, 184,
	185, 166, 183, 188, 158, 85, 165, 175, 98, 157,
	87, 173, 163, 130, 116, 117, 86, 0, 151, 103,
	108, 102, 139, 170, 171, 101, 191, 92, 182, 89,
	93, 181, 137, 168, 174, 131, 128, 88, 172, 129,
	127, 119, 106, 113, 145, 126, 146, 114, 134, 133,
	135, 0, 347, 0, 162, 179, 192, 95, 362, 167,
	186, 187, 0, 0, 96, 109, 105, 144, 136, 94,
	115, 159, 118, 125, 150, 190, 141, 155, 99, 178,
	160, 358, 361, 356, 357, 395, 396, 432, 433, 434,
	412, 353, 0, 359, 360, 0, 416, 422, 423, 398,
	83, 90, 122, 189, 149, 107, 180, 426, 374, 415,
	0, 386, 429, 364, 378, 437, 379, 380, 408, 350,
	394, 140, 376, 0, 367, 345, 373, 346, 365, 388,
	104, 391, 363, 417, 397, 428, 121, 435, 123, 402,
	0, 161, 132, 0, 0, 390, 419, 392, 413, 385,
	409, 355, 401, 430, 377, 406, 431, 55, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 404, 425, 375, 405, 0, 407, 344, 403, 0,
	348, 351, 436, 421, 370, 371, 0, 0, 0, 0,
	0, 0, 0, 389, 393, 410, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 0, 400, 0, 0,
	0, 352, 349, 0, 0, 387, 0, 0, 0, 354,
	0, 369, 411, 0, 343, 110, 414, 420, 384, 208,
	424, 382, 381, 427, 147, 0, 164, 112, 120, 84,
	91, 0, 111, 138, 152, 156, 418, 366, 100, 372,
	154, 142, 177, 399, 143, 153, 124, 169, 148, 176,
	184, 185, 166, 183, 188, 158, 85, 165, 175, 98,
	157, 87, 173, 163, 130, 116, 117, 86, 0, 151,
	103, 108, 102, 139, 170, 171, 101, 191, 92, 182,
	89, 93, 181, 137, 168, 174, 131, 128, 88, 172,
	129, 127, 119, 106, 113, 145, 126, 146, 114, 134,
	133, 135, 0, 347, 0, 162, 179, 192, 95, 362,
	167, 186, 187, 0, 0, 96, 109, 105, 144, 136,
	94, 115, 159, 118, 125, 150, 190, 141, 155, 99,
	178, 160, 358, 361, 356, 357, 395, 396, 432, 433,
	434, 412, 353, 0, 359, 360, 0, 416, 422, 423,
	398, 83, 90, 122, 189, 149, 107, 180, 426, 374,
	415, 0, 386, 429, 364, 378, 437, 379, 380, 408,
	350, 394, 140, 376, 0, 367, 345, 373, 346, 365,
	388, 104, 391, 363, 417, 397, 428, 121, 435, 123,
	402, 0, 161, 132, 0, 0, 390, 419, 392, 413,
	385, 409, 355, 401, 430, 377, 406, 431, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 0, 404, 425, 375, 405, 0, 407, 344, 403,
	0, 348, 351, 436, 421, 370, 371, 0, 0, 0,
	0, 0, 0, 0, 389, 393, 410, 383, 0, 0,
	0, 0, 0, 0, 1133, 0, 368, 0, 400, 0,
	0, 0, 352, 349, 0, 0, 387, 0, 0, 0,
	354, 0, 369, 411, 0, 343, 110, 414, 420, 384,
	208, 424, 382, 381, 427, 147, 0, 164, 112, 120,
	84, 91, 0, 111, 138, 152, 156, 418, 366, 100,
	372, 154, 142, 177, 399, 143, 153, 124, 169, 148,
	176, 184, 185, 166, 183, 188, 158, 85, 165, 175,
	98, 157, 87, 173, 163, 130, 116, 117, 86, 0,
	151, 103, 108, 102, 139, 170, 171, 101, 191, 92,
	182, 89, 93, 181, 137, 168, 174, 131, 128, 88,
	172, 129, 127, 119, 106, 113, 145, 126, 146, 114,
	134, 133, 135, 0, 347, 0, 162, 179, 192, 95,
	362, 167, 186, 187, 0, 0, 96, 109, 105, 144,
	136, 94, 115, 159, 118, 125, 150, 190, 141, 155,
	99, 178, 160, 358, 361, 356, 357, 395, 396, 432,
	433, 434, 412, 353, 0, 359, 360, 0, 416, 422,
	423, 398, 83, 90, 122, 189, 149, 107, 180, 426,
	374, 415, 0, 386, 429, 364, 378, 437, 379, 380,
	408, 350, 394, 140, 376, 0, 367, 345, 373, 346,
	365, 388, 104, 391, 363, 417, 397, 428, 121, 435,
	123, 402, 0, 161, 132, 0, 0, 390, 419, 392,
	413, 385, 409, 355, 401, 430, 377, 406, 431, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 404, 425, 375, 405, 0, 407, 344,
	403, 0, 348, 351, 436, 421, 370, 371, 0, 0,
	0, 0, 0, 0, 0, 389, 393, 410, 383, 0,
	0, 0, 0, 0, 0, 864, 0, 368, 0, 400,
	0, 0, 0, 352, 349, 0, 0, 387, 0, 0,
	0, 354, 0, 369, 411, 0, 343, 110, 414, 420,
	384, 208, 424, 382, 381, 427, 147, 0, 164, 112,
	120, 84, 91, 0, 111, 138, 152, 156, 418, 366,
	100, 372, 154, 142, 177, 399, 143, 153, 124, 169,
	148, 176, 184, 185, 166, 183, 188, 158, 85, 165,
	175, 98, 157, 87, 173, 163, 130, 116, 117, 86,
	0, 151, 103, 108, 102, 139, 170, 171, 101, 191,
	92, 182, 89, 93, 181, 137, 168, 174, 131, 128,
	88, 172, 129, 127, 119, 106, 113, 145, 126, 146,
	114, 134, 133, 135, 0, 347, 0, 162, 179, 192,
	95, 362, 167, 186, 187, 0, 0, 96, 109, 105,
	144, 136, 94, 115, 159, 118, 125, 150, 190, 141,
	155, 99, 178, 160, 358, 361, 356, 357, 395, 396,
	432, 433, 434, 412, 353, 0, 359, 360, 0, 416,
	422, 423, 398, 83, 90, 122, 189, 149, 107, 180,
	426, 374, 415, 0, 386, 429, 364, 378, 437, 379,
	380, 408, 350, 394, 140, 376, 0, 367, 345, 373,
	346, 365, 388, 104, 391, 363, 417, 397, 428, 121,
	435, 123, 402, 0, 161, 132, 0, 0, 390, 419,
	392, 413, 385, 409, 355, 401, 430, 377, 406, 431,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 0, 404, 425, 375, 405, 0, 407,
	344, 403, 0, 348, 351, 436, 421, 370, 371, 0,
	0, 0, 0, 0, 0, 0, 389, 393, 410, 383,
	0, 0, 0, 0, 0, 0, 762, 0, 368, 0,
	400, 0, 0, 0, 352, 349, 0, 0, 387, 0,
	0, 0, 354, 0, 369, 411, 0, 343, 110, 414,
	420, 384, 208, 424, 382, 381, 427, 147, 0, 164,
	112, 120, 84, 91, 0, 111, 138, 152, 156, 418,
	366, 100, 372, 154, 142, 177, 399, 143, 153, 124,
	169, 148, 176, 184, 185, 166, 183, 188, 158, 85,
	165, 175, 98, 157, 87, 173, 163, 130, 116, 117,
	86, 0, 151, 103, 108, 102, 139, 170, 171, 101,
	191, 92, 182, 89, 93, 181, 137, 168, 174, 131,
	128, 88, 172, 129, 127, 119, 106, 113, 145, 126,
	146, 114, 134, 133, 135, 0, 347, 0, 162, 179,
	192, 95, 362, 167, 186, 187, 0, 0, 96, 109,
	105, 144, 136, 94, 115, 159, 118, 125, 150, 190,
	141, 155, 99, 178, 160, 358, 361, 356, 357, 395,
	396, 432, 433, 434, 412, 353, 0, 359, 360, 0,
	416, 422, 423, 398, 83, 90, 122, 189, 149, 107,
	180, 426, 374, 415, 0, 386, 429, 364, 378, 437,
	379, 380, 408, 350, 394, 140, 376, 0, 367, 345,
	373, 346, 365, 388, 104, 391, 363, 417, 397, 428,
	121, 435, 123, 402, 0, 161, 132, 0, 0, 390,
	419, 392, 413, 385, 409, 355, 401, 430, 377, 406,
	431, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 404, 425, 375, 405, 0,
	407, 344, 403, 0, 348, 351, 436, 421, 370, 371,
	0, 0, 0, 0, 0, 0, 0, 389, 393, 410,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 400, 0, 0, 0, 352, 349, 0, 0, 387,
	0, 0, 0, 354, 0, 369, 411, 0, 343, 110,
	414, 420, 384, 208, 424, 382, 381, 427, 147, 0,
	164, 112, 120, 84, 91, 0, 111, 138, 152, 156,
	418, 366, 100, 372, 154, 142, 177, 399, 143, 153,
	124, 169, 148, 176, 184, 185, 166, 183, 188, 158,
	85, 165, 175, 98, 157, 87, 173, 163, 130, 116,
	117, 86, 0, 151, 103, 108, 102, 139, 170, 171,
	101, 191, 92, 182, 89, 93, 181, 137, 168, 174,
	131, 128, 88, 172, 129, 127, 119, 106, 113, 145,
	126, 146, 114, 134, 133, 135, 0, 347, 0, 162,
	179, 192, 95, 362, 167, 186, 187, 0, 0, 96,
	109, 105, 144, 136, 94, 115, 159, 118, 125, 150,
	190, 141, 155, 99, 178, 160, 358, 361, 356, 357,
	395, 396, 432, 433, 434, 412, 353, 0, 359, 360,
	0, 416, 422, 423, 398, 83, 90, 122, 189, 149,
	107, 180, 426, 374, 415, 0, 386, 429, 364, 378,
	437, 379, 380, 408, 350, 394, 140, 376, 0, 367,
	345, 373, 346, 365, 388, 104, 391, 363, 417, 397,
	428, 121, 435, 123, 402, 0, 161, 132, 0, 0,
	390, 419, 392, 413, 385, 409, 355, 401, 430, 377,
	406, 431, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 404, 425, 375, 405,
	0, 407, 344, 403, 0, 348, 351, 436, 421, 370,
	371, 0, 0, 0, 0, 0, 0, 0, 389, 393,
	410, 383, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 400, 0, 0, 0, 352, 349, 0, 0,
	387, 0, 0, 0, 354, 0, 369, 411, 0, 343,
	110, 414, 420, 384, 208, 424, 382, 381, 427, 147,
	0, 164, 112, 120, 84, 91, 0, 111, 138, 152,
	156, 418, 366, 100, 372, 154, 142, 177, 399, 143,
	153, 124, 169, 148, 176, 184, 185, 166, 183, 188,
	158, 85, 165, 175, 98, 157, 87, 173, 163, 130,
	116, 117, 86, 0, 151, 103, 108, 102, 139, 170,
	171, 101, 191, 92, 182, 89, 93, 181, 137, 168,
	174, 131, 128, 88, 172, 129, 127, 119, 106, 113,
	145, 126, 146, 114, 134, 133, 135, 0, 347, 0,
	162, 179, 192, 95, 362, 167, 186, 187, 0, 0,
	96, 109, 105, 144, 136, 94, 115, 159, 118, 125,
	150, 190, 141, 155, 99, 178, 160, 358, 361, 356,
	357, 395, 396, 432, 433, 434, 412, 353, 0, 359,
	360, 0, 416, 422, 423, 398, 83, 90, 122, 189,
	149, 107, 180, 426, 374, 415, 0, 386, 429, 364,
	378, 437, 379, 380, 408, 350, 394, 140, 376, 0,
	367, 345, 373, 346, 365, 388, 104, 391, 363, 417,
	397, 428, 121, 435, 123, 402, 0, 161, 132, 0,
	0, 390, 419, 392, 413, 385, 409, 355, 401, 430,
	377, 406, 431, 0, 0, 0, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 404, 425, 375,
	405, 0, 407, 344, 403, 0, 348, 351, 436, 421,
	370, 371, 0, 0, 0, 0, 0, 0, 0, 389,
	393, 410, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 400, 0, 0, 0, 352, 349, 0,
	0, 387, 0, 0, 0, 354, 0, 369, 411, 0,
	343, 110, 414, 420, 384, 208, 424, 382, 381, 427,
	147, 0, 164, 112, 120, 84, 91, 0, 111, 138,
	152, 156, 418, 366, 100, 372, 154, 142, 177, 399,
	143, 153, 124, 169, 148, 176, 184, 185, 166, 183,
	188, 158, 85, 165, 175, 98, 157, 87, 173, 163,
	130, 116, 117, 86, 0, 151, 103, 108, 102, 139,
	170, 171, 101, 191, 92, 182, 89, 341, 181, 137,
	168, 174, 131, 128, 88, 172, 129, 127, 119, 106,
	113, 145, 126, 146, 114, 134, 133, 135, 0, 347,
	0, 162, 179, 192, 95, 362, 167, 186, 187, 0,
	0, 96, 109, 105, 144, 342, 340, 115, 159, 118,
	125, 150, 190, 141, 155, 99, 178, 160, 358, 361,
	356, 357, 395, 396, 432, 433, 434, 412, 353, 0,
	359, 360, 0, 416, 422, 423, 398, 83, 90, 122,
	189, 149, 107, 180, 426, 374, 415, 0, 386, 429,
	364, 378, 437, 379, 380, 408, 350, 394, 140, 376,
	0, 367, 345, 373, 346, 365, 388, 104, 391, 363,
	417, 397, 428, 121, 435, 123, 402, 0, 161, 132,
	0, 0, 390, 419, 392, 413, 385, 409, 355, 401,
	430, 377, 406, 431, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 404, 425,
	375, 405, 0, 407, 344, 403, 0, 348, 351, 436,
	421, 370, 371, 0, 0, 0, 0, 0, 0, 0,
	389, 393, 410, 383, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 400, 0, 0, 0, 352, 349,
	0, 0, 387, 0, 0, 0, 354, 0, 369, 411,
	0, 343, 110, 414, 420, 384, 208, 424, 382, 381,
	427, 147, 0, 164, 112, 120, 84, 91, 0, 111,
	138, 152, 156, 418, 366, 100, 372, 154, 142, 177,
	399, 143, 153, 124, 169, 148, 176, 184, 185, 166,
	183, 188, 158, 85, 165, 175, 98, 157, 87, 173,
	163, 130, 116, 117, 86, 0, 151, 103, 108, 102,
	139, 170, 171, 101, 191, 92, 182, 89, 93, 181,
	137, 168, 174, 131, 128, 88, 172, 129, 127, 119,
	106, 113, 145, 126, 146, 114, 134, 133, 135, 0,
	347, 0, 162, 179, 192, 95, 362, 167, 186, 187,
	0, 0, 96, 109, 105, 144, 136, 94, 115, 159,
	118, 125, 150, 190, 141, 155, 99, 178, 160, 358,
	361, 356, 357, 395, 396, 432, 433, 434, 412, 353,
	0, 359, 360, 0, 416, 422, 423, 398, 83, 90,
	122, 189, 149, 107, 180, 426, 374, 415, 0, 386,
	429, 364, 378, 437, 379, 380, 408, 350, 394, 140,
	376, 0, 367, 345, 373, 346, 365, 388, 104, 391,
	363, 417, 397, 428, 121, 435, 123, 402, 0, 161,
	132, 0, 0, 390, 419, 392, 413, 385, 409, 355,
	401, 430, 377, 406, 431, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 404,
	425, 375, 405, 0, 407, 344, 403, 0, 348, 351,
	436, 421, 370, 371, 0, 0, 0, 0, 0, 0,
	0, 389, 393, 410, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 400, 0, 0, 0, 352,
	349, 0, 0, 387, 0, 0, 0, 354, 0, 369,
	411, 0, 343, 110, 414, 420, 384, 208, 424, 382,
	381, 427, 147, 0, 164, 112, 120, 84, 91, 0,
	111, 138, 152, 156, 418, 366, 100, 372, 154, 142,
	177, 399, 143, 153, 124, 169, 148, 176, 184, 185,
	166, 183, 188, 158, 85, 165, 628, 98, 157, 87,
	173, 163, 130, 116, 117, 86, 0, 151, 103, 108,
	102, 139, 170, 171, 101, 191, 92, 182, 89, 341,
	181, 137, 168, 174, 131, 128, 88, 172, 129, 127,
	119, 106, 113, 145, 126, 146, 114, 134, 133, 135,
	0, 347, 0, 162, 179, 192, 95, 362, 167, 186,
	187, 0, 0, 96, 109, 105, 144, 342, 340, 115,
	159, 118, 125, 150, 190, 141, 155, 99, 178, 160,
	358, 361, 356, 357, 395, 396, 432, 433, 434, 412,
	353, 0, 359, 360, 0, 416, 422, 423, 398, 83,
	90, 122, 189, 149, 107, 180, 426, 374, 415, 0,
	386, 429, 364, 378, 437, 379, 380, 408, 350, 394,
	140, 376, 0, 367, 345, 373, 346, 365, 388, 104,
	391, 363, 417, 397, 428, 121, 435, 123, 402, 0,
	161, 132, 0, 0, 390, 419, 392, 413, 385, 409,
	355, 401, 430, 377, 406, 431, 0, 0, 0, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	404, 425, 375, 405, 0, 407, 344, 403, 0, 348,
	351, 436, 421, 370, 371, 0, 0, 0, 0, 0,
	0, 0, 389, 393, 410, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 400, 0, 0, 0,
	352, 349, 0, 0, 387, 0, 0, 0, 354, 0,
	369, 411, 0, 343, 110, 414, 420, 384, 208, 424,
	382, 381, 427, 147, 0, 164, 112, 120, 84, 91,
	0, 111, 138, 152, 156, 418, 366, 100, 372, 154,
	142, 177, 399, 143, 153, 124, 169, 148, 176, 184,
	185, 166, 183, 188, 158, 85, 165, 332, 98, 157,
	87, 173, 163, 130, 116, 117, 86, 0, 151, 103,
	108, 102, 139, 170, 171, 101, 191, 92, 182, 89,
	341, 181, 137, 168, 174, 131, 128, 88, 172, 129,
	127, 119, 106, 113, 145, 126, 146, 114, 134, 133,
	135, 0, 347, 0, 162, 179, 192, 95, 362, 167,
	186, 187, 0, 0, 96, 109, 105, 144, 342, 340,
	335, 334, 118, 125, 150, 190, 141, 155, 99, 178,
	160, 358, 361, 356, 357, 395, 396, 432, 433, 434,
	412, 353, 0, 359, 360, 0, 416, 422, 423, 398,
	83, 90, 122, 189, 149, 107, 180, 140, 0, 0,
	0, 0, 267, 0, 0, 0, 104, 0, 264, 0,
	0, 0, 121, 307, 123, 0, 0, 161, 132, 0,
	0, 0, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 871, 0, 55, 0, 0, 265, 286, 285, 288,
	289, 290, 291, 0, 0, 97, 287, 292, 293, 294,
	872, 0, 0, 0, 262, 279, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 277, 0,
	0, 0, 0, 320, 0, 278, 0, 0, 273, 274,
	275, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 0, 0, 0, 208, 0, 0, 318, 0,
	147, 0, 164, 112, 120, 84, 91, 0, 111, 138,
	152, 156, 0, 0, 100, 0, 154, 142, 177, 0,
	143, 153, 124, 169, 148, 176, 184, 185, 166, 183,
	188, 158, 85, 165, 175, 98, 157, 87, 173, 163,
	130, 116, 117, 86, 0, 151, 103, 108, 102, 139,
	170, 171, 101, 191, 92, 182, 89, 93, 181, 137,
	168, 174, 131, 128, 88, 172, 129, 127, 119, 106,
	113, 145, 126, 146, 114, 134, 133, 135, 0, 0,
	0, 162, 179, 192, 95, 0, 167, 186, 187, 0,
	0, 96, 109, 105, 144, 136, 94, 115, 159, 118,
	125, 150, 190, 141, 155, 99, 178, 160, 308, 319,
	314, 315, 312, 313, 311, 310, 309, 321, 300, 301,
	302, 303, 305, 0, 316, 317, 304, 83, 90, 122,
	189, 149, 107, 180, 140, 0, 0, 798, 0, 267,
	0, 0, 0, 104, 0, 264, 0, 0, 0, 121,
	307, 123, 0, 0, 161, 132, 0, 0, 0, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 0, 0, 265, 286, 285, 288, 289, 290, 291,
	0, 0, 97, 287, 292, 293, 294, 0, 0, 0,
	0, 262, 279, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 277, 258, 0, 0, 0,
	320, 0, 278, 0, 0, 273, 274, 275, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 0,
	0, 0, 208, 0, 0, 318, 0, 147, 0, 164,
	112, 120, 84, 91, 0, 111, 138, 152, 156, 0,
	0, 100, 0, 154, 142, 177, 0, 143, 153, 124,
	169, 148, 176, 184, 185, 166, 183, 188, 158, 85,
	165, 175, 98, 157, 87, 173, 163, 130, 116, 117,
	86, 0, 151, 103, 108, 102, 139, 170, 171, 101,
	191, 92, 182, 89, 93, 181, 137, 168, 174, 131,
	128, 88, 172, 129, 127, 119, 106, 113, 145, 126,
	146, 114, 134, 133, 135, 0, 0, 0, 162, 179,
	192, 95, 0, 167, 186, 187, 0, 0, 96, 109,
	105, 144, 136, 94, 115, 159, 118, 125, 150, 190,
	141, 155, 99, 178, 160, 308, 319, 314, 315, 312,
	313, 311, 310, 309, 321, 300, 301, 302, 303, 305,
	0, 316, 317, 304, 83, 90, 122, 189, 149, 107,
	180, 140, 0, 0, 0, 0, 267, 0, 0, 0,
	104, 0, 264, 0, 0, 0, 121, 307, 123, 0,
	0, 161, 132, 0, 0, 0, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 0, 501,
	265, 286, 285, 288, 289, 290, 291, 0, 0, 97,
	287, 292, 293, 294, 0, 0, 0, 0, 262, 279,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 277, 0, 0, 0, 0, 320, 0, 278,
	0, 0, 273, 274, 275, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 208,
	0, 0, 318, 0, 147, 0, 164, 112, 120, 84,
	91, 0, 111, 138, 152, 156, 0, 0, 100, 0,
	154, 142, 177, 0, 143, 153, 124, 169, 148, 176,
	184, 185, 166, 183, 188, 158, 85, 165, 175, 98,
	157, 87, 173, 163, 130, 116, 117, 86, 0, 151,
	103, 108, 102, 139, 170, 171, 101, 191, 92, 182,
	89, 93, 181, 137, 168, 174, 131, 128, 88, 172,
	129, 127, 119, 106, 113, 145, 126, 146, 114, 134,
	133, 135, 0, 0, 0, 162, 179, 192, 95, 0,
	167, 186, 187, 0, 0, 96, 109, 105, 144, 136,
	94, 115, 159, 118, 125, 150, 190, 141, 155, 99,
	178, 160, 308, 319, 314, 315, 312, 313, 311, 310,
	309, 321, 300, 301, 302, 303, 305, 0, 316, 317,
	304, 83, 90, 122, 189, 149, 107, 180, 140, 0,
	0, 0, 0, 267, 0, 0, 0, 104, 0, 264,
	0, 0, 0, 121, 307, 123, 0, 0, 161, 132,
	0, 0, 0, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 0, 0, 265, 286, 285,
	288, 289, 290, 291, 0, 0, 97, 287, 292, 293,
	294, 0, 0, 0, 0, 262, 279, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 277,
	258, 0, 0, 0, 320, 0, 278, 0, 0, 273,
	274, 275, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 110, 0, 0, 0, 208, 0, 0, 318,
	0, 147, 0, 164, 112, 120, 84, 91, 0, 111,
	138, 152, 156, 0, 0, 100, 0, 154, 142, 177,
	0, 143, 153, 124, 169, 148, 176, 184, 185, 166,
	183, 188, 158, 85, 165, 175, 98, 157, 87, 173,
	163, 130, 116, 117, 86, 0, 151, 103, 108, 102,
	139, 170, 171, 101, 191, 92, 182, 89, 93, 181,
	137, 168, 174, 131, 128, 88, 172, 129, 127, 119,
	106, 113, 145, 126, 146, 114, 134, 133, 135, 0,
	0, 0, 162, 179, 192, 95, 0, 167, 186, 187,
	0, 0, 96, 109, 105, 144, 136, 94, 115, 159,
	118, 125, 150, 190, 141, 155, 99, 178, 160, 308,
	319, 314, 315, 312, 313, 311, 310, 309, 321, 300,
	301, 302, 303, 305, 0, 316, 317, 304, 83, 90,
	122, 189, 149, 107, 180, 140, 0, 0, 0, 0,
	267, 0, 0, 0, 104, 0, 264, 0, 0, 0,
	121, 307, 123, 0, 0, 161, 132, 0, 0, 0,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 0, 0, 265, 286, 813, 288, 289, 290,
	291, 0, 0, 97, 287, 292, 293, 294, 0, 0,
	0, 0, 262, 279, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 277, 258, 0, 0,
	0, 320, 0, 278, 0, 0, 273, 274, 275, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 0, 0, 208, 0, 0, 318, 0, 147, 0,
	164, 112, 120, 84, 91, 0, 111, 138, 152, 156,
	0, 0, 100, 0, 154, 142, 177, 0, 143, 153,
	124, 169, 148, 176, 184, 185, 166, 183, 188, 158,
	85, 165, 175, 98, 157, 87, 173, 163, 130, 116,
	117, 86, 0, 151, 103, 108, 102, 139, 170, 171,
	101, 191, 92, 182, 89, 93, 181, 137, 168, 174,
	131, 128, 88, 172, 129, 127, 119, 106, 113, 145,
	126, 146, 114, 134, 133, 135, 0, 0, 0, 162,
	179, 192, 95, 0, 167, 186, 187, 0, 0, 96,
	109, 105, 144, 136, 94, 115, 159, 118, 125, 150,
	190, 141, 155, 99, 178, 160, 308, 319, 314, 315,
	312, 313, 311, 310, 309, 321, 300, 301, 302, 303,
	305, 0, 316, 317, 304, 83, 90, 122, 189, 149,
	107, 180, 140, 0, 0, 0, 0, 267, 0, 0,
	0, 104, 0, 264, 0, 0, 0, 121, 307, 123,
	0, 0, 161, 132, 0, 0, 0, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 0,
	0, 265, 286, 810, 288, 289, 290, 291, 0, 0,
	97, 287, 292, 293, 294, 0, 0, 0, 0, 262,
	279, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 277, 258, 0, 0, 0, 320, 0,
	278, 0, 0, 273, 274, 275, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	208, 0, 0, 318, 0, 147, 0, 164, 112, 120,
	84, 91, 0, 111, 138, 152, 156, 0, 0, 100,
	0, 154, 142, 177, 0, 143, 153, 124, 169, 148,
	176, 184, 185, 166, 183, 188, 158, 85, 165, 175,
	98, 157, 87, 173, 163, 130, 116, 117, 86, 0,
	151, 103, 108, 102, 139, 170, 171, 101, 191, 92,
	182, 89, 93, 181, 137, 168, 174, 131, 128, 88,
	172, 129, 127, 119, 106, 113, 145, 126, 146, 114,
	134, 133, 135, 0, 0, 0, 162, 179, 192, 95,
	0, 167, 186, 187, 0, 0, 96, 109, 105, 144,
	136, 94, 115, 159, 118, 125, 150, 190, 141, 155,
	99, 178, 160, 308, 319, 314, 315, 312, 313, 311,
	310, 309, 321, 300, 301, 302, 303, 305, 25, 316,
	317, 304, 83, 90, 122, 189, 149, 107, 180, 0,
	140, 0, 0, 0, 0, 267, 0, 0, 0, 104,
	0, 264, 0, 0, 0, 121, 307, 123, 0, 0,
	161, 132, 0, 0, 0, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 0, 0, 265,
	286, 285, 288, 289, 290, 291, 0, 0, 97, 287,
	292, 293, 294, 0, 0, 0, 0, 262, 279, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 277, 0, 0, 0, 0, 320, 0, 278, 0,
	0, 273, 274, 275, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 0, 0, 0, 208, 0,
	0, 318, 0, 147, 0, 164, 112, 120, 84, 91,
	0, 111, 138, 152, 156, 0, 0, 100, 0, 154,
	142, 177, 0, 143, 153, 124, 169, 148, 176, 184,
	185, 166, 183, 188, 158, 85, 165, 175, 98, 157,
	87, 173, 163, 130, 116, 117, 86, 0, 151, 103,
	108, 102, 139, 170, 171, 101, 191, 92, 182, 89,
	93, 181, 137, 168, 174, 131, 128, 88, 172, 129,
	127, 119, 106, 113, 145, 126, 146, 114, 134, 133,
	135, 0, 0, 0, 162, 179, 192, 95, 0, 167,
	186, 187, 0, 0, 96, 109, 105, 144, 136, 94,
	115, 159, 118, 125, 150, 190, 141, 155, 99, 178,
	160, 308, 319, 314, 315, 312, 313, 311, 310, 309,
	321, 300, 301, 302, 303, 305, 0, 316, 317, 304,
	83, 90, 122, 189, 149, 107, 180, 140, 0, 0,
	0, 0, 267, 0, 0, 0, 104, 0, 264, 0,
	0, 0, 121, 307, 123, 0, 0, 161, 132, 0,
	0, 0, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 55, 0, 0, 265, 286, 285, 288,
	289, 290, 291, 0, 0, 97, 287, 292, 293, 294,
	0, 0, 0, 0, 262, 279, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 277, 0,
	0, 0, 0, 320, 0, 278, 0, 0, 273, 274,
	275, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 0, 0, 0, 208, 0, 0, 318, 0,
	147, 0, 164, 112, 120, 84, 91, 0, 111, 138,
	152, 156, 0, 0, 100, 0, 154, 142, 177, 0,
	143, 153, 124, 169, 148, 176, 184, 185, 166, 183,
	188, 158, 85, 165, 175, 98, 157, 87, 173, 163,
	130, 116, 117, 86, 0, 151, 103, 108, 102, 139,
	170, 171, 101, 191, 92, 182, 89, 93, 181, 137,
	168, 174, 131, 128, 88, 172, 129, 127, 119, 106,
	113, 145, 126, 146, 114, 134, 133, 135, 0, 0,
	0, 162, 179, 192, 95, 0, 167, 186, 187, 0,
	0, 96, 109, 105, 144, 136, 94, 115, 159, 118,
	125, 150, 190, 141, 155, 99, 178, 160, 308, 319,
	314, 315, 312, 313, 311, 310, 309, 321, 300, 301,
	302, 303, 305, 0, 316, 317, 304, 83, 90, 122,
	189, 149, 107, 180, 140, 0, 0, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 0, 121,
	307, 123, 0, 0, 161, 132, 0, 0, 0, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 0, 0, 265, 286, 285, 288, 289, 290, 291,
	0, 0, 97, 287, 292, 293, 294, 0, 0, 0,
	0, 0, 279, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 277, 0, 0, 0, 0,
	320, 0, 278, 0, 0, 273, 274, 275, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 0,
	0, 0, 208, 0, 0, 318, 0, 147, 0, 164,
	112, 120, 84, 91, 0, 111, 138, 152, 156, 0,
	0, 100, 0, 154, 142, 177, 1432, 143, 153, 124,
	169, 148, 176, 184, 185, 166, 183, 188, 158, 85,
	165, 175, 98, 157, 87, 173, 163, 130, 116, 117,
	86, 0, 151, 103, 108, 102, 139, 170, 171, 101,
	191, 92, 182, 89, 93, 181, 137, 168, 174, 131,
	128, 88, 172, 129, 127, 119, 106, 113, 145, 126,
	146, 114, 134, 133, 135, 0, 0, 0, 162, 179,
	192, 95, 0, 167, 186, 187, 0, 0, 96, 109,
	105, 144, 136, 94, 115, 159, 118, 125, 150, 190,
	141, 155, 99, 178, 160, 308, 319, 314, 315, 312,
	313, 311, 310, 309, 321, 300, 301, 302, 303, 305,
	0, 316, 317, 304, 83, 90, 122, 189, 149, 107,
	180, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 0, 0, 121, 307, 123, 0,
	0, 161, 132, 0, 0, 0, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 0, 501,
	265, 286, 285, 288, 289, 290, 291, 0, 0, 97,
	287, 292, 293, 294, 0, 0, 0, 0, 0, 279,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 277, 0, 0, 0, 0, 320, 0, 278,
	0, 0, 273, 274, 275, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 208,
	0, 0, 318, 0, 147, 0, 164, 112, 120, 84,
	91, 0, 111, 138, 152, 156, 0, 0, 100, 0,
	154, 142, 177, 0, 143, 153, 124, 169, 148, 176,
	184, 185, 166, 183, 188, 158, 85, 165, 175, 98,
	157, 87, 173, 163, 130, 116, 117, 86, 0, 151,
	103, 108, 102, 139, 170, 171, 101, 191, 92, 182,
	89, 93, 181, 137, 168, 174, 131, 128, 88, 172,
	129, 127, 119, 106, 113, 145, 126, 146, 114, 134,
	133, 135, 0, 0, 0, 162, 179, 192, 95, 0,
	167, 186, 187, 0, 0, 96, 109, 105, 144, 136,
	94, 115, 159, 118, 125, 150, 190, 141, 155, 99,
	178, 160, 308, 319, 314, 315, 312, 313, 311, 310,
	309, 321, 300, 301, 302, 303, 305, 0, 316, 317,
	304, 83, 90, 122, 189, 149, 107, 180, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 121, 307, 123, 0, 0, 161, 132,
	0, 0, 0, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 0, 0, 265, 286, 285,
	288, 289, 290, 291, 0, 0, 97, 287, 292, 293,
	294, 0, 0, 0, 0, 0, 279, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 277,
	0, 0, 0, 0, 320, 0, 278, 0, 0, 273,
	274, 275, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 110, 0, 0, 0, 208, 0, 0, 318,
	0, 147, 0, 164, 112, 120, 84, 91, 0, 111,
	138, 152, 156, 0, 0, 100, 0, 154, 142, 177,
	0, 143, 153, 124, 169, 148, 176, 184, 185, 166,
	183, 188, 158, 85, 165, 175, 98, 157, 87, 173,
	163, 130, 116, 117, 86, 0, 151, 103, 108, 102,
	139, 170, 171, 101, 191, 92, 182, 89, 93, 181,
	137, 168, 174, 131, 128, 88, 172, 129, 127, 119,
	106, 113, 145, 126, 146, 114, 134, 133, 135, 0,
	0, 0, 162, 179, 192, 95, 0, 167, 186, 187,
	0, 0, 96, 109, 105, 144, 136, 94, 115, 159,
	118, 125, 150, 190, 141, 155, 99, 178, 160, 308,
	319, 314, 315, 312, 313, 311, 310, 309, 321, 300,
	301, 302, 303, 305, 0, 316, 317, 304, 83, 90,
	122, 189, 149, 107, 180, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 0,
	121, 0, 123, 0, 0, 161, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 534, 544, 545, 537, 538, 539, 540, 541,
	542, 543, 536, 0, 0, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 0, 0, 208, 0, 0, 0, 0, 147, 0,
	164, 112, 120, 84, 91, 0, 111, 138, 152, 156,
	0, 0, 100, 0, 154, 142, 177, 0, 143, 153,
	124, 169, 148, 176, 184, 185, 166, 183, 188, 158,
	85, 165, 175, 98, 157, 87, 173, 163, 130, 116,
	117, 86, 0, 151, 103, 108, 102, 139, 170, 171,
	101, 191, 92, 182, 89, 93, 181, 137, 168, 174,
	131, 128, 88, 172, 129, 127, 119, 106, 113, 145,
	126, 146, 114, 134, 133, 135, 0, 0, 0, 162,
	179, 192, 95, 0, 167, 186, 187, 0, 0, 96,
	109, 105, 144, 136, 94, 115, 159, 118, 125, 150,
	190, 141, 155, 99, 178, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 140, 0, 83, 90, 122, 189, 149,
	107, 180, 104, 0, 0, 0, 0, 0, 121, 0,
	123, 0, 0, 161, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 0, 75, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 110, 77, 78,
	0, 74, 0, 0, 0, 79, 147, 0, 164, 112,
	120, 84, 91, 0, 111, 138, 152, 156, 0, 0,
	100, 0, 154, 142, 177, 0, 143, 153, 124, 169,
	148, 176, 184, 185, 166, 183, 188, 158, 85, 165,
	175, 98, 157, 87, 173, 163, 130, 116, 117, 86,
	0, 151, 103, 108, 102, 139, 170, 171, 101, 191,
	92, 182, 89, 93, 181, 137, 168, 174, 131, 128,
	88, 172, 129, 127, 119, 106, 113, 145, 126, 146,
	114, 134, 133, 135, 0, 0, 0, 162, 179, 192,
	95, 0, 167, 186, 187, 0, 0, 96, 109, 105,
	144, 136, 94, 115, 159, 118, 125, 150, 190, 141,
	155, 99, 178, 160, 0, 76, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 83, 90, 122, 189, 149, 107, 180,
	140, 0, 0, 0, 854, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 0, 121, 0, 123, 0, 0,
	161, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	0, 856, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 0, 0, 0, 208, 0,
	0, 0, 0, 147, 0, 164, 112, 120, 84, 91,
	0, 111, 138, 152, 156, 0, 0, 100, 0, 154,
	142, 177, 0, 143, 153, 124, 169, 148, 176, 184,
	185, 166, 183, 188, 158, 85, 165, 175, 98, 157,
	87, 173, 163, 130, 116, 117, 86, 0, 151, 103,
	108, 102, 139, 170, 171, 101, 191, 92, 182, 89,
	93, 181, 137, 168, 174, 131, 128, 88, 172, 129,
	127, 119, 106, 113, 145, 126, 146, 114, 134, 133,
	135, 0, 0, 0, 162, 179, 192, 95, 0, 167,
	186, 187, 0, 0, 96, 109, 105, 144, 136, 94,
	115, 159, 118, 125, 150, 190, 141, 155, 99, 178,
	160, 0, 0, 0, 0, 0, 25, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	83, 90, 122, 189, 149, 107, 180, 104, 0, 0,
	0, 0, 0, 121, 0, 123, 0, 0, 161, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 0, 0, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 110, 0, 0, 0, 208, 0, 0, 0,
	0, 147, 0, 164, 112, 120, 84, 91, 0, 111,
	138, 152, 156, 0, 0, 100, 0, 154, 142, 177,
	0, 143, 153, 124, 169, 148, 176, 184, 185, 166,
	183, 188, 158, 85, 165, 175, 98, 157, 87, 173,
	163, 130, 116, 117, 86, 0, 151, 103, 108, 102,
	139, 170, 171, 101, 191, 92, 182, 89, 93, 181,
	137, 168, 174, 131, 128, 88, 172, 129, 127, 119,
	106, 113, 145, 126, 146, 114, 134, 133, 135, 0,
	0, 0, 162, 179, 192, 95, 0, 167, 186, 187,
	0, 0, 96, 109, 105, 144, 136, 94, 115, 159,
	118, 125, 150, 190, 141, 155, 99, 178, 160, 0,
	0, 0, 0, 0, 25, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 0, 83, 90,
	122, 189, 149, 107, 180, 104, 0, 0, 0, 0,
	0, 121, 0, 123, 0, 0, 161, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 0, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 0, 0, 0, 208, 0, 0, 0, 0, 147,
	0, 164, 112, 120, 84, 91, 0, 111, 138, 152,
	156, 0, 0, 100, 0, 154, 142, 177, 0, 143,
	153, 124, 169, 148, 176, 184, 185, 166, 183, 188,
	158, 85, 165, 175, 98, 157, 87, 173, 163, 130,
	116, 117, 86, 0, 151, 103, 108, 102, 139, 170,
	171, 101, 191, 92, 182, 89, 93, 181, 137, 168,
	174, 131, 128, 88, 172, 129, 127, 119, 106, 113,
	145, 126, 146, 114, 134, 133, 135, 0, 0, 0,
	162, 179, 192, 95, 0, 167, 186, 187, 0, 0,
	96, 109, 105, 144, 136, 94, 115, 159, 118, 125,
	150, 190, 141, 155, 99, 178, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 83, 90, 122, 189,
	149, 107, 180, 140, 0, 0, 0, 854, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 0, 121, 0,
	123, 0, 0, 161, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 856, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 110, 0, 0,
	0, 208, 0, 0, 0, 0, 147, 0, 164, 112,
	120, 84, 91, 0, 111, 138, 152, 156, 0, 0,
	100, 0, 154, 142, 177, 0, 852, 153, 124, 169,
	148, 176, 184, 185, 166, 183, 188, 158, 85, 165,
	175, 98, 157, 87, 173, 163, 130, 116, 117, 86,
	0, 151, 103, 108, 102, 139, 170, 171, 101, 191,
	92, 182, 89, 93, 181, 137, 168, 174, 131, 128,
	88, 172, 129, 127, 119, 106, 113, 145, 126, 146,
	114, 134, 133, 135, 0, 0, 0, 162, 179, 192,
	95, 0, 167, 186, 187, 0, 0, 96, 109, 105,
	144, 136, 94, 115, 159, 118, 125, 150, 190, 141,
	155, 99, 178, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 0, 83, 90, 122, 189, 149, 107, 180,
	104, 0, 0, 0, 0, 0, 121, 0, 123, 0,
	0, 161, 132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 749, 0, 0, 750, 0, 0, 97,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 208,
	0, 0, 0, 0, 147, 0, 164, 112, 120, 84,
	91, 0, 111, 138, 152, 156, 0, 0, 100, 0,
	154, 142, 177, 0, 143, 153, 124, 169, 148, 176,
	184, 185, 166, 183, 188, 158, 85, 165, 175, 98,
	157, 87, 173, 163, 130, 116, 117, 86, 0, 151,
	103, 108, 102, 139, 170, 171, 101, 191, 92, 182,
	89, 93, 181, 137, 168, 174, 131, 128, 88, 172,
	129, 127, 119, 106, 113, 145, 126, 146, 114, 134,
	133, 135, 0, 0, 0, 162, 179, 192, 95, 0,
	167, 186, 187, 0, 0, 96, 109, 105, 144, 136,
	94, 115, 159, 118, 125, 150, 190, 141, 155, 99,
	178, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 140,
	0, 83, 90, 122, 189, 149, 107, 180, 104, 0,
	637, 0, 0, 0, 121, 0, 123, 0, 0, 161,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	636, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 0, 0, 0, 208, 0, 0,
	0, 0, 147, 0, 164, 112, 120, 84, 91, 0,
	111, 138, 152, 156, 0, 0, 100, 0, 154, 142,
	177, 0, 143, 153, 124, 169, 148, 176, 184, 185,
	166, 183, 188, 158, 85, 165, 175, 98, 157, 87,
	173, 163, 130, 116, 117, 86, 0, 151, 103, 108,
	102, 139, 170, 171, 101, 191, 92, 182, 89, 93,
	181, 137, 168, 174, 131, 128, 88, 172, 129, 127,
	119, 106, 113, 145, 126, 146, 114, 134, 133, 135,
	0, 0, 0, 162, 179, 192, 95, 0, 167, 186,
	187, 0, 0, 96, 109, 105, 144, 136, 94, 115,
	159, 118, 125, 150, 190, 141, 155, 99, 178, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 140, 0, 83,
	90, 122, 189, 149, 107, 180, 104, 0, 0, 0,
	0, 0, 121, 0, 123, 0, 0, 161, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 55, 0, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 0, 0, 0, 208, 0, 0, 0, 0,
	147, 0, 164, 112, 120, 84, 91, 0, 111, 138,
	152, 156, 0, 0, 100, 0, 154, 142, 177, 0,
	143, 153, 124, 169, 148, 176, 184, 185, 166, 183,
	188, 158, 85, 165, 175, 98, 157, 87, 173, 163,
	130, 116, 117, 86, 0, 151, 103, 108, 102, 139,
	170, 171, 101, 191, 92, 182, 89, 93, 181, 137,
	168, 174, 131, 128, 88, 172, 129, 127, 119, 106,
	113, 145, 126, 146, 114, 134, 133, 135, 0, 0,
	0, 162, 179, 192, 95, 0, 167, 186, 187, 0,
	0, 96, 109, 105, 144, 136, 94, 115, 159, 118,
	125, 150, 190, 141, 155, 99, 178, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 0, 83, 90, 122,
	189, 149, 107, 180, 104, 0, 0, 0, 0, 0,
	121, 0, 123, 0, 0, 161, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 856, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 0, 0, 208, 0, 0, 0, 0, 147, 0,
	164, 112, 120, 84, 91, 0, 111, 138, 152, 156,
	0, 0, 100, 0, 154, 142, 177, 0, 143, 153,
	124, 169, 148, 176, 184, 185, 166, 183, 188, 158,
	85, 165, 175, 98, 157, 87, 173, 163, 130, 116,
	117, 86, 0, 151, 103, 108, 102, 139, 170, 171,
	101, 191, 92, 182, 89, 93, 181, 137, 168, 174,
	131, 128, 88, 172, 129, 127, 119, 106, 113, 145,
	126, 146, 114, 134, 133, 135, 0, 0, 0, 162,
	179, 192, 95, 0, 167, 186, 187, 0, 0, 96,
	109, 105, 144, 136, 94, 115, 159, 118, 125, 150,
	190, 141, 155, 99, 178, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 140, 0, 83, 90, 122, 189, 149,
	107, 180, 104, 0, 0, 0, 0, 0, 121, 0,
	123, 0, 0, 161, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 525, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 110, 0, 0,
	0, 208, 0, 0, 0, 0, 147, 0, 164, 112,
	120, 84, 91, 0, 111, 138, 152, 156, 0, 0,
	100, 0, 154, 142, 177, 0, 143, 153, 124, 169,
	148, 176, 184, 185, 166, 183, 188, 158, 85, 165,
	175, 98, 157, 87, 173, 163, 130, 116, 117, 86,
	0, 151, 103, 108, 102, 139, 170, 171, 101, 191,
	92, 182, 89, 93, 181, 137, 168, 174, 131, 128,
	88, 172, 129, 127, 119, 106, 113, 145, 126, 146,
	114, 134, 133, 135, 0, 0, 0, 162, 179, 192,
	95, 0, 167, 186, 187, 0, 0, 96, 109, 105,
	144, 136, 94, 115, 159, 118, 125, 150, 190, 141,
	155, 99, 178, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 83, 90, 122, 189, 149, 107, 180,
	607, 104, 0, 0, 0, 0, 0, 121, 0, 123,
	0, 0, 161, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	208, 0, 0, 0, 0, 147, 0, 164, 112, 120,
	84, 91, 0, 111, 138, 152, 156, 0, 0, 100,
	0, 154, 142, 177, 0, 143, 153, 124, 169, 148,
	176, 184, 185, 166, 183, 188, 158, 85, 165, 175,
	98, 157, 87, 173, 163, 130, 116, 117, 86, 0,
	151, 103, 108, 102, 139, 170, 171, 101, 191, 92,
	182, 89, 93, 181, 137, 168, 174, 131, 128, 88,
	172, 129, 127, 119, 106, 113, 145, 126, 146, 114,
	134, 133, 135, 0, 0, 0, 162, 179, 192, 95,
	0, 167, 186, 187, 0, 0, 96, 109, 105, 144,
	136, 94, 115, 159, 118, 125, 150, 190, 141, 155,
	99, 178, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	140, 0, 83, 90, 122, 189, 149, 107, 180, 104,
	0, 0, 0, 0, 0, 121, 0, 123, 0, 0,
	161, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 0, 0, 0, 208, 0,
	0, 0, 0, 147, 0, 164, 112, 120, 84, 91,
	0, 111, 138, 152, 156, 0, 0, 100, 0, 154,
	142, 177, 0, 143, 153, 124, 169, 148, 176, 184,
	185, 166, 183, 188, 158, 85, 165, 175, 98, 157,
	87, 173, 163, 130, 116, 117, 86, 0, 151, 103,
	108, 102, 139, 170, 171, 101, 191, 92, 182, 89,
	93, 181, 137, 168, 174, 131, 128, 88, 172, 129,
	127, 119, 106, 113, 145, 126, 146, 114, 134, 133,
	135, 0, 0, 0, 162, 179, 192, 95, 0, 167,
	186, 187, 0, 0, 96, 109, 105, 144, 136, 94,
	115, 159, 118, 125, 150, 190, 141, 155, 99, 178,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	83, 90, 122, 189, 149, 107, 180, 104, 0, 0,
	0, 0, 0, 121, 0, 123, 0, 0, 161, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 110, 0, 203, 0, 208, 0, 0, 0,
	0, 147, 0, 164, 112, 120, 84, 91, 0, 111,
	138, 152, 156, 0, 0, 100, 0, 154, 142, 177,
	0, 143, 153, 124, 169, 148, 176, 184, 185, 166,
	183, 188, 158, 85, 165, 175, 98, 157, 87, 173,
	163, 130, 116, 117, 86, 0, 151, 103, 108, 102,
	139, 170, 171, 101, 191, 92, 182, 89, 93, 181,
	137, 168, 174, 131, 128, 88, 172, 129, 127, 119,
	106, 113, 145, 126, 146, 114, 134, 133, 135, 0,
	0, 0, 162, 179, 192, 95, 0, 167, 186, 187,
	0, 0, 96, 109, 105, 144, 136, 94, 115, 159,
	118, 125, 150, 190, 141, 155, 99, 178, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 0, 83, 90,
	122, 189, 149, 107, 180, 104, 0, 0, 0, 0,
	0, 121, 0, 123, 0, 0, 161, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 0, 0, 0, 208, 0, 0, 0, 0, 147,
	0, 164, 112, 120, 84, 91, 0, 111, 138, 152,
	156, 0, 0, 100, 0, 154, 142, 177, 0, 143,
	153, 124, 169, 148, 176, 184, 185, 166, 183, 188,
	158, 85, 165, 175, 98, 157, 87, 173, 163, 130,
	116, 117, 86, 0, 151, 103, 108, 102, 139, 170,
	171, 101, 191, 92, 182, 89, 93, 181, 137, 168,
	174, 131, 128, 88, 172, 129, 127, 119, 106, 113,
	145, 126, 146, 114, 134, 133, 135, 0, 0, 0,
	162, 179, 192, 95, 0, 167, 186, 187, 0, 0,
	96, 109, 105, 144, 136, 94, 115, 159, 118, 125,
	150, 190, 141, 155, 99, 178, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 83, 90, 122, 189,
	149, 107, 180, 104, 0, 0, 0, 0, 0, 121,
	0, 123, 0, 0, 161, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 0,
	0, 0, 208, 0, 0, 0, 0, 147, 0, 164,
	112, 120, 84, 91, 0, 111, 138, 152, 156, 0,
	0, 100, 0, 154, 142, 177, 0, 143, 153, 124,
	169, 148, 176, 184, 185, 166, 183, 188, 158, 85,
	165, 175, 98, 157, 87, 173, 163, 130, 116, 117,
	86, 0, 151, 103, 108, 102, 139, 170, 171, 101,
	191, 92, 182, 89, 93, 181, 137, 168, 174, 131,
	128, 88, 172, 129, 127, 119, 106, 113, 145, 126,
	146, 114, 134, 133, 135, 0, 0, 0, 162, 179,
	192, 95, 0, 167, 186, 187, 0, 0, 96, 109,
	105, 144, 136, 94, 115, 159, 118, 125, 150, 190,
	141, 155, 99, 178, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 0, 83, 90, 122, 189, 149, 107,
	180, 104, 0, 0, 0, 0, 0, 121, 0, 123,
	0, 0, 161, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	208, 0, 0, 0, 0, 147, 0, 164, 112, 120,
	84, 91, 0, 111, 138, 152, 156, 0, 0, 100,
	0, 154, 142, 177, 0, 143, 153, 124, 169, 148,
	176, 184, 185, 166, 183, 188, 158, 85, 165, 175,
	98, 157, 87, 173, 163, 130, 116, 117, 86, 0,
	151, 103, 108, 102, 139, 170, 171, 101, 191, 92,
	182, 89, 93, 181, 137, 168, 174, 131, 128, 88,
	172, 129, 127, 119, 106, 113, 145, 126, 146, 114,
	134, 133, 135, 0, 0, 0, 162, 179, 192, 95,
	0, 167, 186, 187, 0, 0, 96, 109, 105, 144,
	136, 94, 115, 159, 118, 125, 150, 190, 141, 155,
	99, 178, 160, 0, 0, 0, 0, 0, 0, 51,
	25, 26, 53, 28, 29, 0, 0, 0, 0, 0,
	0, 0, 83, 90, 122, 189, 149, 107, 180, 44,
	0, 0, 0, 0, 30, 48, 49, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 39, 0, 0, 0, 55, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	32, 33, 35, 34, 37, 0, 50, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 38, 45, 0,
	0, 46, 47, 36, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 40, 41, 0,
	42, 43, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 54,
}
var yyPact = [...]int{

	2279, -1000, -185, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 909, 969, -1000, -1000, -1000, -1000, -1000,
	-1000, 352, 8874, 7, 110, -9, 11749, 109, 1433, 12225,
	-1000, 3, -1000, -1000, -1000, -1000, -1000, -1000, -83, -90,
	-1000, 12703, 689, -1000, -1000, -1000, -1000, -1000, 901, 912,
	759, 894, 803, -1000, 6659, 74, 74, 11511, 5671, -1000,
	-1000, 226, 12225, 103, 12225, -144, 66, 66, 66, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 108, 12225, 198, -1000, 12225, 61, 581,
	61, 61, 61, 12225, -1000, 149, -1000, -1000, -1000, 12225,
	580, 850, 3322, 67, 3322, -1000, 3322, 3322, -1000, 3322,
	11, 3322, -58, 931, 12, -32, -1000, 3322, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2279, 2279, 550, 848, 7648, 7648, 909, -1000, 689,
	-1000, -1000, -1000, 840, -1000, -1000, 335, 952, -1000, 2485,
	144, -1000, 7648, 1877, 705, -1000, -1000, 705, -1000, -1000,
	123, -1000, -1000, 8389, 8389, 8389, 8389, 8389, 8389, 8389,
	8389, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 705, -1000, 7401, 705, 705,
	705, 705, 705, 705, 705, 705, 7648, 705, 705, 705,
	705, 705, 705, 705, 705, 705, 705, 705, 705, 705,
	705, 705, 11273, 10558, 12225, 637, 587, -1000, -1000, 142,
	698, 5410, -112, -1000, -1000, -1000, 238, 10320, -1000, -1000,
	-1000, 838, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 579, 12225,
	-1000, 2170, -1000, 575, 3322, 75, 572, 268, 570, 12225,
	12225, 3322, 18, 49, 45, 12225, 703, 81, 12225, 880,
	769, 12225, 565, 564, -1000, 5149, -1000, 3322, 3322, -1000,
	-1000, -1000, 3322, 3322, 3322, 12225, 3322, 3322, -1000, -1000,
	-1000, -1000, 3322, 3322, -1000, 951, 290, -1000, -1000, -1000,
	-1000, 7648, 200, -1000, 767, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 963, 186, 380, 140, 699, -1000, 389,
	901, 550, 803, 10082, 768, -1000, -1000, 12225, -1000, 7648,
	7648, 440, -1000, 11034, -1000, -1000, 4105, 207, 8389, 405,
	241, 8389, 8389, 8389, 8389, 8389, 8389, 8389, 8389, 8389,
	8389, 8389, 8389, 8389, 8389, 8389, 421, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 560, -1000, 689, 501, 501,
	159, 159, 159, 159, 159, 159, 159, 8636, 6165, 550,
	556, 367, 7401, 6659, 6659, 7648, 7648, 7153, 6906, 6659,
	896, 263, 367, 12463, -1000, -1000, 8142, -1000, -1000, -1000,
	-1000, -1000, 550, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	11987, 11987, 6659, 6659, 6659, 6659, 30, 12225, -1000, 683,
	731, -1000, -1000, -1000, 882, 9597, 9844, 30, 622, 10558,
	12225, -1000, -1000, 10558, 12225, 3844, 4888, 698, -112, 677,
	-1000, -108, -124, 5918, 152, -1000, -1000, -1000, -1000, 3061,
	298, 616, 377, -73, -1000, -1000, -1000, 708, -1000, 708,
	708, 708, 708, -28, -28, -28, -28, -1000, -1000, -1000,
	-1000, -1000, 737, 736, -1000, 708, 708, 708, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 734, 734, 734, 717,
	717, 749, -1000, 12225, 3322, 879, 3322, -1000, 147, -1000,
	12225, 12225, 12225, 12225, 12225, 118, 12225, 12225, 690, -1000,
	12225, 3322, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12225, 308, 12225,
	12225, 367, -1000, 468, 12225, -1000, 821, 7648, 7648, 4627,
	7648, -1000, -1000, -1000, 848, -1000, 896, 948, -1000, 831,
	829, 6659, -1000, -1000, 207, 356, -1000, -1000, 462, -1000,
	-1000, -1000, -1000, 138, 705, -1000, 2145, -1000, -1000, -1000,
	-1000, 405, 8389, 8389, 8389, 393, 2145, 2113, 620, 1482,
	159, 770, 770, 176, 176, 176, 176, 176, 450, 450,
	-1000, -1000, -1000, 550, -1000, -1000, -1000, 550, 6659, 685,
	-1000, -1000, 7648, -1000, 550, 549, 549, 342, 412, 236,
	938, 549, 231, 937, 549, 549, 6659, 343, -1000, 7648,
	550, -1000, 136, -1000, 558, 680, 678, 549, 550, 549,
	549, 635, 705, -1000, 12463, 10558, 10558, 10558, 10558, 10558,
	-1000, 800, 786, -1000, 798, 787, 804, 12225, -1000, 554,
	9597, 148, 705, -1000, 10796, -1000, -1000, 930, 10558, 624,
	-1000, 624, -1000, 135, -1000, -1000, 677, -112, -113, -1000,
	-1000, -1000, -1000, 367, -1000, 459, 659, 2800, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 732, 551, -1000, 862, 202,
	183, 509, 858, -1000, -1000, -1000, 852, -1000, 286, -78,
	-1000, -1000, 411, -28, -28, -1000, -1000, 152, 836, 152,
	152, 152, 463, 463, -1000, -1000, -1000, -1000, 400, -1000,
	-1000, -1000, 396, -1000, 763, 11987, 3322, -1000, -1000, -1000,
	-1000, 287, 287, 213, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 29, 740, -1000, -1000, -1000,
	-1000, 10, 17, 78, -1000, 3322, -1000, 290, -1000, 460,
	7648, -1000, -1000, -1000, -1000, 818, 367, 367, 132, -1000,
	-1000, 12225, -1000, -1000, -1000, -1000, 657, -1000, -1000, -1000,
	3583, 6659, -1000, 393, 2145, 2039, -1000, 8389, 8389, -1000,
	-1000, 549, 6659, 367, -1000, -1000, -1000, 73, 421, 73,
	8389, 8389, -1000, 8389, 8389, -1000, -158, 628, 227, -1000,
	7648, 216, -1000, 4627, -1000, 8389, 8389, -1000, -1000, -1000,
	-1000, 754, 12463, 705, -1000, 9359, 11987, 676, -1000, 221,
	731, 730, 753, 908, -1000, -1000, -1000, -1000, 784, -1000,
	780, -1000, -1000, -1000, -1000, -1000, 100, 90, 85, 11987,
	-1000, 909, 7648, 624, -1000, -1000, 174, -1000, -1000, -121,
	-130, -1000, -1000, -1000, 3061, -1000, 3061, 11987, 47, -1000,
	509, 509, -1000, -1000, -1000, 727, 752, 8389, -1000, -1000,
	-1000, 595, 152, 152, -1000, 204, -1000, -1000, -1000, 547,
	-1000, 541, 654, 539, 12225, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 12225, -1000, -1000, -1000, -1000, -1000, 11987, -164, 483,
	11987, 11987, 11987, 12225, -1000, 308, -1000, 367, -1000, 4366,
	-1000, 930, 10558, -1000, -1000, 550, -1000, 8389, 2145, 2145,
	-1000, -1000, 550, 708, 708, -1000, 708, 717, -1000, 708,
	-7, 708, -12, 550, 550, 1992, 1820, 1804, 1750, 705,
	-151, -1000, 367, 7648, -1000, 1613, 1344, -1000, 867, 615,
	623, -1000, -1000, 6412, 550, 536, 131, 533, -1000, 909,
	12463, 7648, -1000, -1000, 7648, 716, -1000, 7648, -1000, -1000,
	-1000, 705, 705, 705, 533, 901, 367, -1000, -1000, -1000,
	-1000, 2800, -1000, 531, -1000, 708, -1000, -1000, -1000, 11987,
	-69, 961, 2145, -1000, -1000, -1000, -1000, -1000, -28, 452,
	-28, 388, -1000, 382, 3322, -1000, -1000, -1000, -1000, 869,
	-1000, 4366, -1000, -1000, 707, 746, -1000, -1000, -1000, 918,
	636, -1000, 2145, -1000, -1000, 99, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 8389, 8389, 8389, 8389, 8389, 550,
	448, 367, 8389, 8389, 857, -1000, 705, -1000, -1000, 702,
	11987, 11987, -1000, 11987, 901, -1000, 367, 367, 11987, 367,
	11987, 11987, 11987, 9121, -1000, 134, 11987, -1000, 527, -1000,
	164, -1000, -160, 152, -1000, 152, 591, 588, -1000, 705,
	627, -1000, 217, 11987, 12225, 915, 911, -1000, -1000, 558,
	558, 558, 558, 50, -1000, -1000, 558, 558, 957, -1000,
	705, -1000, 689, 130, -1000, -1000, -1000, 525, 522, 522,
	522, 148, 134, -1000, 464, 209, 447, -1000, 42, 11987,
	301, 855, -1000, 854, -1000, -1000, -1000, -1000, -1000, 28,
	4366, 3061, 520, -1000, -1000, 7648, 7648, -1000, -1000, -1000,
	-1000, 550, 53, -170, -1000, -1000, 12463, 623, 550, 11987,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 349, -1000, -1000,
	12225, -1000, -1000, 425, -1000, -1000, 515, -1000, 11987, -1000,
	-1000, 740, 367, 619, -1000, 816, -162, -174, 618, -1000,
	-1000, -1000, 706, -1000, -1000, 28, 826, -164, -1000, 814,
	-1000, 11987, -1000, 25, -1000, -168, 490, 23, -172, 751,
	705, -175, 733, -1000, 935, 7895, -1000, -1000, 956, 199,
	199, 558, 550, -1000, -1000, -1000, 52, 398, -1000, -1000,
	-1000, -1000, -1000, -1000,
}
var yyPgo = [...]int{

	0, 106, 56, 482, 1175, 1174, 1172, 1171, 1170, 1169,
	1168, 1167, 1166, 1164, 1163, 1161, 1160, 1156, 1155, 1154,
	1151, 1150, 1149, 1148, 1147, 1145, 1144, 102, 1143, 1142,
	1141, 66, 1140, 67, 1137, 1136, 34, 190, 47, 35,
	504, 1135, 26, 74, 71, 1134, 32, 1132, 1131, 78,
	1129, 1128, 55, 1125, 1120, 1492, 1119, 63, 1117, 10,
	30, 1114, 1113, 1111, 1110, 72, 1069, 1108, 1105, 16,
	1104, 1102, 95, 1101, 53, 9, 15, 18, 21, 1100,
	197, 7, 1099, 52, 1098, 1096, 1092, 1091, 24, 1090,
	57, 1089, 31, 54, 1088, 14, 64, 36, 22, 8,
	70, 58, 1083, 19, 59, 49, 1079, 1075, 434, 1074,
	1073, 46, 1072, 1071, 27, 1070, 185, 448, 1064, 1063,
	1061, 1060, 39, 0, 525, 225, 76, 1059, 1057, 1055,
	1422, 48, 51, 17, 1054, 92, 1308, 41, 1051, 1047,
	38, 1046, 1045, 1044, 1043, 1041, 1022, 1021, 271, 1020,
	1019, 1016, 43, 23, 1015, 1014, 60, 25, 1013, 1012,
	1011, 45, 65, 1010, 1006, 50, 44, 1005, 1001, 997,
	992, 991, 29, 11, 990, 12, 987, 20, 986, 28,
	985, 4, 984, 13, 983, 5, 982, 6, 42, 1,
	980, 2, 979, 978, 61, 3, 77, 976, 79,
}
var yyR1 = [...]int{

	0, 192, 193, 193, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 11, 11, 11, 2, 2,
	2, 6, 3, 4, 4, 5, 5, 7, 7, 30,
	30, 8, 9, 9, 9, 9, 196, 196, 49, 49,
	50, 50, 96, 96, 10, 10, 10, 10, 101, 101,
	105, 105, 105, 106, 106, 106, 106, 138, 138, 12,
	12, 12, 12, 12, 12, 12, 187, 187, 186, 185,
	185, 184, 184, 183, 18, 168, 170, 170, 169, 169,
	169, 169, 162, 141, 141, 141, 141, 144, 144, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 143, 143,
	143, 143, 143, 145, 145, 145, 145, 145, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 147, 147, 147, 147, 147, 147, 147,
	147, 161, 161, 148, 148, 156, 156, 157, 157, 157,
	154, 154, 155, 155, 158, 158, 158, 150, 150, 151,
	151, 159, 159, 152, 152, 152, 153, 153, 153, 160,
	160, 160, 160, 160, 149, 149, 163, 163, 178, 178,
	177, 177, 177, 167, 167, 174, 174, 174, 174, 174,
	165, 165, 166, 166, 176, 176, 175, 164, 164, 179,
	179, 179, 179, 190, 191, 189, 189, 189, 189, 189,
	171, 171, 171, 172, 172, 172, 173, 173, 173, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 182, 180, 180, 181, 181,
	14, 19, 19, 15, 15, 15, 15, 15, 16, 16,
	20, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 112,
	112, 110, 110, 113, 113, 111, 111, 111, 114, 114,
	114, 115, 115, 139, 139, 139, 22, 22, 24, 24,
	25, 26, 23, 23, 23, 23, 23, 23, 17, 197,
	27, 28, 28, 29, 29, 29, 33, 33, 33, 31,
	31, 32, 32, 38, 38, 37, 37, 39, 39, 39,
	39, 127, 127, 127, 126, 126, 41, 41, 42, 42,
	43, 43, 44, 44, 44, 44, 58, 58, 95, 95,
	97, 97, 45, 45, 45, 45, 46, 46, 47, 47,
	48, 48, 134, 134, 133, 133, 133, 132, 132, 51,
	51, 51, 53, 52, 52, 52, 52, 54, 54, 56,
	56, 55, 55, 57, 59, 59, 59, 59, 60, 60,
	40, 40, 40, 40, 40, 40, 40, 109, 109, 62,
	62, 61, 61, 61, 61, 61, 61, 61, 61, 61,
	61, 73, 73, 73, 73, 73, 73, 63, 63, 63,
	63, 63, 63, 63, 36, 36, 74, 74, 74, 80,
	75, 75, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 70, 70, 70, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 198, 198, 72, 71,
	71, 71, 71, 71, 71, 34, 34, 34, 34, 34,
	137, 137, 140, 140, 140, 140, 140, 140, 140, 140,
	140, 140, 140, 140, 140, 84, 84, 35, 35, 82,
	82, 83, 85, 85, 81, 81, 81, 65, 65, 65,
	65, 65, 65, 65, 65, 67, 67, 67, 86, 86,
	87, 87, 88, 88, 89, 89, 90, 91, 91, 91,
	92, 92, 92, 92, 93, 93, 93, 64, 64, 64,
	64, 64, 64, 94, 94, 94, 94, 98, 98, 76,
	76, 78, 78, 77, 79, 99, 99, 103, 100, 100,
	104, 104, 104, 104, 102, 102, 102, 129, 129, 129,
	107, 107, 116, 116, 117, 117, 108, 108, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 119, 119,
	119, 120, 120, 121, 121, 121, 128, 128, 124, 124,
	125, 125, 130, 130, 131, 131, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 194, 195, 135, 136, 136, 136,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 3, 3, 4, 6,
	7, 5, 10, 1, 3, 1, 3, 7, 8, 1,
	1, 9, 8, 7, 6, 6, 1, 1, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 4, 1, 3,
	3, 2, 2, 2, 2, 2, 1, 1, 1, 2,
	2, 8, 4, 6, 5, 5, 0, 2, 1, 0,
	2, 1, 3, 3, 4, 4, 2, 4, 1, 3,
	3, 3, 8, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 4, 4,
	2, 2, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 0, 1, 0, 1, 2, 0, 2, 0,
	3, 0, 1, 0, 3, 3, 0, 2, 2, 0,
	2, 1, 2, 1, 0, 2, 5, 4, 1, 2,
	2, 3, 2, 0, 1, 2, 3, 3, 2, 2,
	1, 1, 0, 1, 1, 3, 2, 3, 1, 10,
	11, 11, 12, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 3, 1, 2, 3, 1, 1, 1, 6,
	7, 7, 7, 7, 4, 5, 7, 5, 5, 5,
	12, 7, 5, 9, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 7, 1, 3, 8, 8,
	3, 3, 5, 4, 6, 5, 4, 4, 3, 2,
	3, 4, 4, 3, 4, 4, 4, 4, 4, 4,
	3, 2, 3, 3, 2, 3, 4, 3, 7, 5,
	4, 2, 4, 4, 3, 3, 5, 2, 3, 1,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 1, 2,
	1, 1, 2, 2, 2, 2, 3, 3, 2, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 0, 1, 0, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 2, 1, 3,
	1, 1, 1, 3, 1, 3, 3, 7, 1, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 5, 5, 5, 0, 2,
	1, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 4, 5, 6, 4, 4, 6,
	6, 6, 8, 8, 8, 8, 9, 7, 5, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 2, 3, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	0, 2, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 0, 2, 4, 2, 1, 3,
	5, 4, 6, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 0, 1, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -192, -1, -2, -6, -7, -8, -9, -10, -12,
	-13, -14, -15, -16, -20, -21, -22, -24, -25, -26,
	-23, -17, -11, -3, -4, 7, 8, -30, 10, 11,
	31, -18, 117, 118, 120, 119, 150, 121, 144, 51,
	164, 165, 167, 168, 26, 145, 148, 149, 32, 33,
	123, 6, -194, 9, 249, 55, -193, 266, -88, 16,
	-29, 5, -27, -197, -27, -27, -27, -27, -27, -168,
	-170, 55, 92, -121, 127, 74, 241, 124, 125, 131,
	-124, 58, -123, 259, 137, 164, 175, 169, 196, 188,
	260, 138, 186, 189, 228, 216, 223, 67, 167, 237,
	146, 184, 180, 178, 28, 225, 201, 264, 179, 224,
	123, 140, 135, 202, 206, 229, 173, 174, 231, 200,
	136, 34, 261, 36, 154, 232, 204, 199, 195, 198,
	172, 194, 40, 208, 207, 209, 227, 191, 141, 181,
	19, 235, 149, 152, 226, 203, 205, 132, 156, 263,
	233, 177, 142, 153, 148, 236, 143, 168, 163, 230,
	239, 39, 213, 171, 134, 165, 160, 218, 192, 155,
	182, 183, 197, 170, 193, 166, 157, 150, 238, 214,
	265, 190, 187, 161, 158, 159, 219, 220, 162, 262,
	234, 185, 215, -108, 127, 220, 129, 125, 125, 126,
	127, 241, 124, 125, -55, -130, 58, -123, 127, 125,
	110, 189, 228, 117, 217, 225, 126, 34, 226, 156,
	-139, 125, -110, 216, 219, 220, 162, 58, 230, 229,
	221, -130, 166, -135, -135, -135, -135, 218, 218, -135,
	-1, 200, 125, -2, -92, 18, 17, -5, -3, -194,
	7, 21, 22, -33, 41, 42, -28, -39, 101, -40,
	-130, -61, 76, -66, 30, 58, -123, 24, -65, -62,
	-81, -79, -80, 110, 111, 112, 99, 100, 107, 77,
	113, -70, -68, -69, -71, 60, 59, 68, 61, 62,
	63, 64, 69, 70, 71, -124, -77, -194, 45, 46,
	250, 251, 252, 253, 258, 254, 79, 35, 240, 248,
	247, 246, 244, 245, 242, 243, 256, 257, 130, 241,
	105, 249, -108, -108, 12, -49, -50, -55, -57, -130,
	-100, -138, 166, -104, 230, 229, -125, -102, -124, -122,
	228, 189, 227, 122, 75, 23, 25, 211, 78, 110,
	17, 79, 109, 250, 117, 49, 242, 243, 240, 252,
	253, 241, 217, 30, 11, 26, 145, 22, 103, 119,
	82, 83, 147, 24, 6, 71, 20, 52, 12, 14,
	15, 130, 129, 94, 126, 47, 9, 113, 27, 91,
	43, 29, 45, 92, 18, 244, 245, 32, 258, 151,
	105, 50, 37, 76, 69, 72, 53, 74, 16, 48,
	93, 120, 249, 46, 124, 7, 255, 31, 144, 44,
	125, 81, 256, 257, 128, 70, 5, 131, 33, 10,
	51, 54, 246, 247, 248, 35, 80, 13, -169, 92,
	-162, 58, -55, 126, -55, 249, -117, 130, -117, -117,
	125, -55, 117, 119, 122, 53, -19, -55, -116, 130,
	58, -116, -116, -116, -55, 114, -55, 58, 31, -136,
	-194, -125, 241, 58, 156, 125, 157, 127, -136, -136,
	-136, -136, 160, 161, -136, -113, -112, 223, 224, 218,
	222, 13, 161, 218, 159, -136, -135, -135, -1, -1,
	-195, 57, -93, 20, 32, -40, -130, -89, -90, -40,
	-88, -2, -27, 37, -31, 22, 66, 12, -127, 75,
	74, 91, -126, 23, -124, 60, 114, -40, -63, 94,
	76, 92, 93, 78, 96, 95, 106, 99, 100, 101,
	102, 103, 104, 105, 97, 98, 109, 84, 85, 86,
	87, 88, 89, 90, -109, -194, -80, -194, 115, 116,
	-66, -66, -66, -66, -66, -66, -66, -66, -194, -2,
	-75, -40, -194, -194, -194, -194, -194, -194, -194, -194,
	-194, -84, -40, -194, -198, -72, -194, -198, -72, -198,
	-72, -198, -194, -198, -72, -198, -72, -198, -198, -72,
	-194, -194, -194, -194, -194, -194, -56, 27, -55, -42,
	-43, -44, -45, -58, -80, -194, -55, -55, -49, -196,
	56, 12, 54, -196, 56, 114, 56, -100, 166, -101,
	-105, 231, 233, 84, -129, -124, 60, 30, 31, 57,
	56, -55, -141, -144, -146, -145, -147, -142, -143, 186,
	187, 110, 190, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 31, 146, 182, 183, 184, 185, 202,
	203, 204, 205, 206, 207, 208, 209, 169, 188, 260,
	170, 171, 172, 173, 174, 175, 177, 178, 179, 180,
	181, 58, -136, 127, 58, 76, 58, -55, -55, -136,
	158, 158, 125, 125, 163, -55, 56, 128, -49, 24,
	53, -55, 58, 58, -131, -130, -122, -136, -136, -136,
	-136, -136, -55, -136, -136, -136, -136, 12, -111, 12,
	94, -40, -115, 92, 53, 10, 94, 56, 19, 114,
	56, -91, 25, 26, -92, -195, -33, -67, -124, 61,
	64, -32, 44, -55, -40, -40, -73, 69, 76, 70,
	71, -126, 101, -131, -125, -122, -66, -74, -77, -80,
	65, 94, 92, 93, 78, -66, -66, -66, -66, -66,
	-66, -66, -66, -66, -66, -66, -66, -66, -66, -66,
	-137, 58, 60, 58, -65, -65, -124, -38, 22, -37,
	-39, -195, 56, -195, -2, -37, -37, -40, -40, -81,
	60, -37, -81, 60, -37, -37, -31, -82, -83, 80,
	-81, -124, -130, -195, -66, -124, -124, -37, -38, -37,
	-37, -96, 152, -55, 31, 56, -51, -53, -52, -54,
	43, 47, 49, 44, 45, 46, 50, -134, 23, -42,
	-194, -133, 152, -132, 23, -130, 60, -96, 54, -42,
	-55, -42, -57, -130, 101, -104, -101, 56, 232, 234,
	235, 53, 72, -40, -153, 109, -171, -172, -173, -125,
	60, 61, -162, -163, -164, -174, 139, -179, 132, 134,
	131, -165, 140, 126, 29, 57, -158, 69, 76, -154,
	214, -148, 55, -148, -148, -148, -148, -152, 189, -152,
	-152, -152, 55, 55, -148, -148, -148, -156, 55, -156,
	-156, -157, 55, -157, -128, 54, -55, -136, 24, -136,
	-118, 122, 119, 120, -182, 118, 211, 189, 67, 30,
	16, 250, 152, 265, 58, 153, -55, -55, -55, -55,
	-55, 122, 119, -55, -55, -55, -136, -55, -114, 92,
	13, -130, -130, 60, -55, 39, -40, -40, -131, -90,
	-93, -107, 20, 12, 35, 35, -37, 69, 70, 71,
	114, -194, -74, -66, -66, -66, -36, 147, 75, -195,
	-195, -37, 56, -40, -195, -195, -195, 56, 54, 23,
	12, 12, -195, 12, 12, -195, -195, -37, -85, -83,
	82, -40, -195, 114, -195, 56, 56, -195, -195, -195,
	-195, -64, 31, 35, -2, -194, -194, -99, -103, -81,
	-43, -44, -44, -43, -44, 43, 43, 43, 48, 43,
	48, 43, -52, -130, -195, -59, 51, 129, 52, -194,
	-132, -60, 13, -42, -60, -60, 114, -105, -106, 236,
	233, 239, 58, 60, 56, -173, 84, 55, 58, 29,
	-165, -165, -166, 58, -166, 29, -150, 30, 69, -155,
	215, 61, -152, -152, -153, 31, -153, -153, -153, -161,
	60, -161, 61, 61, 53, -124, -136, -135, -188, 133,
	139, 140, 135, 58, 126, 29, 132, 134, 152, 131,
	-188, -119, -120, 128, 23, 126, 29, 152, -187, 54,
	158, 211, 158, 128, -136, -111, 60, -40, 40, 114,
	-55, -41, 12, 101, -125, -38, -36, 75, -66, -66,
	-195, -39, -140, 110, 186, 146, 184, 180, 200, 191,
	213, 182, 214, -137, -140, -66, -66, -66, -66, 259,
	-88, 83, -40, 81, -125, -66, -66, -98, 53, -99,
	-76, -78, -77, -194, -2, -94, -124, -97, -124, -60,
	56, 84, -47, -46, 53, 54, -48, 53, -46, 43,
	43, 126, 126, 126, -97, -88, -40, -60, 233, 237,
	238, -172, -173, -176, -175, -124, -179, -166, -166, 55,
	-151, 53, -66, 57, -153, -153, 58, 110, 57, 56,
	57, 56, 57, 56, -55, -135, -135, -55, -135, -124,
	-185, 262, -186, 58, -124, -124, -124, -55, -114, -60,
	-42, -195, -66, -195, -148, -148, -148, -157, -148, 174,
	-148, 174, -195, -195, 20, 20, 20, 20, -194, -35,
	255, -40, 56, 56, 28, -98, 56, -195, -195, -195,
	56, 114, -195, 56, -88, -103, -40, -40, 55, -40,
	-194, -194, -194, -195, -92, 57, 56, -148, -95, -124,
	-159, 211, 10, -152, 60, -152, 61, 61, -136, 27,
	-184, -183, -125, 55, 54, -86, 14, -152, 58, -66,
	-66, -66, -66, -66, -195, 60, -66, -66, 29, -78,
	35, -2, -194, -124, -124, -124, -92, -95, -95, -95,
	-95, -133, -178, -177, 54, 136, 67, -175, 57, 56,
	-160, 132, 29, 131, -69, -153, -153, 57, 57, -194,
	56, 84, -95, -55, -87, 15, 17, -195, -195, -195,
	-195, -34, 94, 262, -195, -195, 10, -76, -2, 114,
	57, -195, -195, -195, -59, -177, 58, -167, 84, 60,
	142, -124, -149, 67, 29, 29, -180, -181, 152, -183,
	-173, 57, -40, -75, -195, 260, 50, 263, -99, -195,
	-124, 61, -55, 60, -195, 56, -124, -187, 40, 261,
	264, 55, -181, 35, -185, 40, -95, 154, 262, 57,
	155, 263, -190, -191, 53, -194, 264, -191, 53, 11,
	10, -66, 151, -189, 143, 138, 141, 31, -189, -195,
	-195, 137, 30, 69,
}
var yyDef = [...]int{

	24, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 562, 0, 319, 319, 319, 319, 319,
	319, 0, 633, 616, 0, 0, 0, 0, -2, 307,
	308, 0, 310, 311, 854, 854, 854, 854, 0, 0,
	854, 24, 0, 39, 40, 852, 1, 3, 570, 0,
	0, 323, 326, 321, 0, 616, 616, 0, 0, 69,
	70, 0, 0, 0, 842, 0, 614, 614, 614, 634,
	635, 638, 639, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
	798, 799, 800, 801, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 0, 0, 0, 617, 0, 612, 0,
	612, 612, 612, 0, 259, 391, 642, 643, 842, 0,
	0, 0, 855, 0, 855, 271, 855, 855, 274, 855,
	0, 855, 0, 281, 0, 0, 287, 855, 304, 305,
	292, 306, 309, 312, 313, 314, 315, 854, 854, 318,
	25, 24, 24, 33, 574, 0, 0, 562, 35, 0,
	319, 324, 325, 329, 327, 328, 320, 0, 337, 341,
	0, 400, 0, 405, 407, -2, -2, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 471, 472, 473, 547, 548, 549, 550, 551,
	552, 553, 554, 409, 410, 544, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 0, 506, 506,
	506, 506, 506, 506, 506, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 48, 50, 391,
	54, 0, 833, 598, -2, -2, 0, 0, 640, 641,
	-2, 751, -2, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 0, 0,
	88, 0, 86, 0, 855, 0, 0, 0, 0, 0,
	0, 855, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 260, 855, 855, 263,
	856, 857, 855, 855, 855, 0, 855, 855, 270, 272,
	273, 275, 855, 855, 277, 0, 295, 293, 294, 289,
	290, 0, 301, 284, 285, 288, 316, 317, 26, 27,
	34, 853, 28, 0, 0, 571, 0, 563, 564, 567,
	570, 33, 326, 0, 331, 330, 322, 0, 338, 0,
	0, 0, 342, 0, 344, 345, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 428, 429,
	430, 431, 432, 433, 406, 0, 420, 0, 0, 0,
	462, 463, 464, 465, 466, 467, 468, 0, 333, 33,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 536, 0, 490, 498, 0, 491, 499, 492,
	500, 493, 0, 494, 501, 495, 502, 496, 497, 503,
	0, 0, 0, 333, 0, 0, 52, 0, 390, 0,
	348, 350, 351, 352, -2, 0, 374, -2, 0, 0,
	0, 46, 47, 0, 0, 0, 0, 55, 833, 57,
	58, 0, 0, 0, 166, 607, 608, 609, 605, 210,
	0, 0, 154, 150, 94, 95, 96, 143, 98, 143,
	143, 143, 143, 163, 163, 163, 163, 126, 127, 128,
	129, 130, 0, 0, 113, 143, 143, 143, 117, 133,
	134, 135, 136, 137, 138, 139, 140, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 145, 145, 145, 147,
	147, 636, 72, 0, 855, 0, 855, 84, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 613,
	0, 855, 256, 257, 392, 644, 645, 261, 262, 264,
	265, 266, 267, 268, 269, 276, 280, 0, 298, 0,
	0, 282, 283, 0, 0, 575, 0, 0, 0, 0,
	0, 566, 568, 569, 574, 36, 329, 0, 555, 0,
	0, 0, 332, 31, 401, 402, 404, 421, 0, 423,
	425, 343, 339, 0, 545, -2, 411, 412, 436, 437,
	438, 0, 0, 0, 0, 434, 416, 0, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 520, 521, 0, 459, 460, 469, 0, 0, 334,
	335, 439, 0, 593, 33, 0, 0, 0, 0, 444,
	547, 0, 444, 547, 0, 0, 0, 542, 539, 0,
	0, 544, 0, 507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 382, 0, 0, 0, 0, 373, 0,
	0, 394, 801, 375, 0, 377, 378, 398, 0, 398,
	49, 398, 51, 0, 393, 599, 56, 0, 0, 61,
	62, 600, 601, 602, 603, 0, 85, 211, 213, 216,
	217, 218, 89, 90, 91, 0, 0, 198, 0, 0,
	192, 192, 0, 190, 191, 87, 157, 155, 0, 152,
	151, 97, 0, 163, 163, 120, 121, 166, 0, 166,
	166, 166, 0, 0, 114, 115, 116, 108, 0, 109,
	110, 111, 0, 112, 0, 0, 855, 74, 615, 75,
	854, 0, 0, 628, 225, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 0, 76, 227, 229, 228,
	232, 0, 0, 0, 251, 855, 255, 295, 279, 0,
	0, 296, 297, 302, 286, 0, 572, 573, 0, 565,
	29, 0, 610, 611, 556, 557, 346, 422, 424, 426,
	0, 333, 413, 434, 417, 0, 414, 0, 0, 408,
	474, 0, 0, 441, -2, 477, 478, 0, 0, 0,
	0, 0, 513, 0, 0, 514, 0, 562, 0, 540,
	0, 0, 489, 0, 508, 0, 0, 509, 510, 511,
	512, 587, 0, 0, -2, 0, 0, 398, 595, 0,
	349, 368, 370, 0, 365, 380, 381, 383, 0, 385,
	0, 387, 388, 353, 355, 356, 0, 0, 0, 0,
	376, 562, 0, 398, 44, 45, 0, 59, 60, 0,
	0, 66, 167, 168, 0, 214, 0, 0, 0, 185,
	192, 192, 188, 193, 189, 0, 159, 0, 156, 93,
	153, 0, 166, 166, 122, 0, 123, 124, 125, 0,
	141, 0, 0, 0, 0, 637, 73, 219, 854, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	854, 0, 854, 629, 630, 631, 632, 0, 79, 0,
	0, 0, 0, 0, 254, 298, 299, 300, 576, 0,
	30, 398, 0, 340, 546, 0, 415, 0, 435, 418,
	475, 336, 0, 143, 143, 525, 143, 147, 528, 143,
	530, 143, 533, 0, 0, 0, 0, 0, 0, 0,
	537, 488, 543, 0, 545, 0, 0, 37, 0, 587,
	577, 589, 591, 0, 33, 0, 583, 0, 360, 562,
	0, 0, 362, 369, 0, 0, 363, 0, 364, 384,
	386, 0, 0, 0, 0, 570, 399, 43, 63, 64,
	65, 212, 215, 0, 194, 143, 197, 186, 187, 0,
	161, 0, 158, 144, 118, 119, 164, 165, 163, 0,
	163, 0, 148, 0, 855, 220, 221, 222, 223, 0,
	226, 0, 77, 78, 0, 0, 231, 252, 278, 558,
	347, 476, 419, 479, 522, 163, 526, 527, 529, 531,
	532, 534, 481, 480, 0, 0, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 38, 0, 592, -2, 0,
	0, 0, 53, 0, 570, 596, 597, 366, 0, 371,
	0, 0, 0, 374, 42, 177, 0, 196, 0, 358,
	169, 162, 0, 166, 142, 166, 0, 0, 71, 0,
	80, 81, 0, 0, 0, 560, 0, 523, 524, 0,
	0, 0, 0, 515, 487, 538, 0, 0, 0, 590,
	0, -2, 0, 585, 584, 361, 41, 0, 0, 0,
	0, 394, 176, 178, 0, 183, 0, 195, 0, 0,
	174, 0, 171, 173, 160, 131, 132, 146, 149, 0,
	0, 0, 0, 233, 32, 0, 0, 482, 484, 483,
	485, 0, 0, 0, 504, 505, 0, 580, 33, 0,
	367, 395, 396, 397, 357, 179, 180, 0, 184, 182,
	0, 359, 92, 0, 170, 172, 0, 246, 0, 82,
	83, 76, 561, 559, 486, 0, 0, 0, 588, -2,
	586, 181, 0, 175, 245, 0, 0, 79, 516, 0,
	519, 0, 247, 0, 230, 517, 0, 0, 0, 199,
	0, 0, 200, 201, 0, 0, 518, 202, 0, 0,
	0, 0, 0, 203, 205, 206, 0, 0, 204, 248,
	249, 207, 208, 209,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 77, 3, 3, 3, 104, 96, 3,
	55, 57, 101, 99, 56, 100, 114, 102, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 266,
	85, 84, 86, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 106, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 95, 3, 107,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 78, 79, 80, 81, 82, 83, 87, 88,
	89, 90, 91, 92, 93, 94, 97, 98, 103, 105,
	108, 109, 110, 111, 112, 113, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:317
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:322
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:323
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:327
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 24:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:350
		{
			setParseTree(yylex, nil)
		}
	case 25:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:356
		{
			yyVAL.statement = NewExplain(yyDollar[2].statement, false)
		}
	case 26:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:360
		{
			yyVAL.statement = NewExplain(yyDollar[3].statement, false)
		}
	case 27:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:364
		{
			yyVAL.statement = NewExplain(yyDollar[3].statement, true)
		}
	case 28:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:370
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 29:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:378
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 30:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:382
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 31:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:388
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 32:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:395
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:401
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:405
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:411
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:415
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:422
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 38:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:434
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:446
		{
			yyVAL.str = InsertStr
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:450
		{
			yyVAL.str = ReplaceStr
		}
	case 41:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:456
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 42:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:462
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:466
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:470
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:474
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:479
		{
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:480
		{
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:484
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:488
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:494
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:498
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:503
		{
			yyVAL.partitions = nil
		}
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:507
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:513
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:517
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 56:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:521
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:525
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:531
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:535
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:541
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:545
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:549
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:555
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:559
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:563
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
			yyVAL.str = SessionStr
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
			yyVAL.str = GlobalStr
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:583
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:588
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:594
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:599
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:603
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:607
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:611
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:616
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:620
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:626
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:631
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:636
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:642
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:647
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:653
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:659
		{
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:666
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:673
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 87:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:677
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:683
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:688
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:692
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:696
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:702
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].sqlVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:713
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:724
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:729
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:735
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:763
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:785
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:817
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:879
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:924
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:929
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:934
		{
			yyVAL.sqlVal = nil
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:938
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:943
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:947
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:955
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:959
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:965
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:973
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:977
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:982
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:986
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:992
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1000
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1005
		{
			yyVAL.optVal = nil
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1009
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1014
		{
			yyVAL.optVal = nil
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1018
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1023
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1027
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1032
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1036
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1040
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1045
		{
			yyVAL.str = ""
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1049
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1053
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1058
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1062
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1066
		{
			yyVAL.colKeyOpt = colKey
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1074
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1079
		{
			yyVAL.sqlVal = nil
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1083
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1089
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1093
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1099
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1113
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1118
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1124
		{
			yyVAL.str = ""
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1134
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1138
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1142
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1146
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1150
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1165
		{
			yyVAL.str = ""
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1169
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1175
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1179
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1185
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal}
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1191
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1195
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 199:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1202
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 200:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1206
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 201:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1210
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 202:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1214
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1220
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1226
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1232
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1236
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1240
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1244
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1248
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1253
		{
			yyVAL.str = ""
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1261
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.str = yyDollar[1].str
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1273
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1283
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1287
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1291
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1297
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 220:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1301
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 221:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1305
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 222:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1309
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 223:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1314
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1319
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 225:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1323
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 226:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1327
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1339
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1349
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 229:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1353
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 230:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1357
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 231:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1370
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 232:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1380
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 233:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1384
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 245:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1410
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1416
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 248:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1426
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 249:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1430
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1436
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1442
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1446
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1454
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1462
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1467
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1475
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1479
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1485
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1489
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1494
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1500
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1505
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1513
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1518
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1522
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1526
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1530
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1534
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1538
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1542
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1546
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1550
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1554
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1558
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1562
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1566
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1570
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1575
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1585
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1589
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1593
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1599
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1604
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1608
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1612
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1616
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1630
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = ""
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = "full "
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 295:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = ""
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1680
		{
			yyVAL.showFilter = nil
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1684
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1688
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1694
		{
			yyVAL.showFilter = nil
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1698
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1704
		{
			yyVAL.str = ""
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.str = SessionStr
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.str = GlobalStr
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1718
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.statement = &Begin{}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1732
		{
			yyVAL.statement = &Begin{}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.statement = &Commit{}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.statement = &Rollback{}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1750
		{
			yyVAL.statement = &OtherRead{}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1754
		{
			yyVAL.statement = &OtherRead{}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1758
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1762
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1766
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1770
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1776
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1780
		{
			setAllowComments(yylex, true)
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1784
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1790
		{
			yyVAL.bytes2 = nil
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1794
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = UnionStr
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = UnionAllStr
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = UnionDistinctStr
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = ""
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = SQLCacheStr
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = ""
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = DistinctStr
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = ""
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = StraightJoinHint
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1844
		{
			yyVAL.selectExprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1858
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1872
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1876
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1881
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1901
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1915
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1929
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1939
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 357:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1949
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1955
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1959
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1965
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1982
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1986
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1990
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2000
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2002
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2006
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2012
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2014
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2017
		{
			yyVAL.empty = struct{}{}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.empty = struct{}{}
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2022
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2043
		{
			yyVAL.str = JoinStr
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2047
		{
			yyVAL.str = JoinStr
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.str = JoinStr
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.str = StraightJoinStr
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2063
		{
			yyVAL.str = LeftJoinStr
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2067
		{
			yyVAL.str = LeftJoinStr
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yyVAL.str = RightJoinStr
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2075
		{
			yyVAL.str = RightJoinStr
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2081
		{
			yyVAL.str = NaturalJoinStr
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2085
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2095
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2109
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2115
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2120
		{
			yyVAL.indexHints = nil
		}
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2124
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2128
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2132
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2137
		{
			yyVAL.expr = nil
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2141
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2151
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2155
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2163
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2171
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2177
		{
			yyVAL.str = ""
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2181
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2197
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2201
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2205
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2209
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2213
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2217
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2221
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2225
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 419:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2229
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.str = IsNullStr
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2243
		{
			yyVAL.str = IsNotNullStr
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2247
		{
			yyVAL.str = IsTrueStr
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2251
		{
			yyVAL.str = IsNotTrueStr
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.str = IsFalseStr
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2259
		{
			yyVAL.str = IsNotFalseStr
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2265
		{
			yyVAL.str = EqualStr
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2269
		{
			yyVAL.str = LessThanStr
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2273
		{
			yyVAL.str = GreaterThanStr
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = LessEqualStr
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.str = GreaterEqualStr
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2285
		{
			yyVAL.str = NotEqualStr
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2294
		{
			yyVAL.expr = nil
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2304
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2308
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2312
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2318
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2324
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2328
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2334
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2338
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2342
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2346
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2350
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2354
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2366
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2370
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2374
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2378
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2382
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2386
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2390
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2394
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2398
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2402
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2406
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2410
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2414
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2418
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2422
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2426
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2434
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2448
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2452
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2456
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2474
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2478
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 476:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2482
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2492
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2496
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 479:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2500
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 480:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2504
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 481:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2508
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 482:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2512
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 483:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2516
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 484:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2520
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 485:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2524
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 486:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2528
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 487:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2532
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2536
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2540
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2550
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2554
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2558
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2563
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2568
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2573
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2579
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2584
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2589
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2593
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2597
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2602
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2607
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2612
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2616
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 505:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2620
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2630
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2640
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2644
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2648
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2652
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2656
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2660
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2670
		{
			yyVAL.str = BooleanModeStr
		}
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2674
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 518:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2678
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2682
		{
			yyVAL.str = QueryExpansionStr
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2698
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2702
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2706
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2710
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2714
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2718
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2724
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2736
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2740
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2748
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2753
		{
			yyVAL.expr = nil
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2762
		{
			yyVAL.str = string("")
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2766
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2776
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2782
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2787
		{
			yyVAL.expr = nil
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2791
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2797
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2801
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2805
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2811
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2815
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2819
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2831
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.expr = &NullVal{}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2845
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2854
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2858
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2863
		{
			yyVAL.exprs = nil
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2867
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2872
		{
			yyVAL.expr = nil
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2876
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2881
		{
			yyVAL.orderBy = nil
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2885
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2895
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2901
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2906
		{
			yyVAL.str = AscScr
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2910
		{
			yyVAL.str = AscScr
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2914
		{
			yyVAL.str = DescScr
		}
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2919
		{
			yyVAL.limit = nil
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2923
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2927
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2931
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2936
		{
			yyVAL.str = ""
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2940
		{
			yyVAL.str = ForUpdateStr
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2944
		{
			yyVAL.str = ShareModeStr
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2957
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2961
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2965
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2970
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2974
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2978
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2985
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2989
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2993
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2997
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3002
		{
			yyVAL.updateExprs = nil
		}
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3006
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3012
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3016
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3022
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3026
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3032
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3038
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3048
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3052
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3058
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3064
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3068
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3074
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3078
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3082
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3086
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3093
		{
			yyVAL.bytes = []byte("charset")
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3104
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3108
		{
			yyVAL.expr = &Default{}
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3117
		{
			yyVAL.byt = 0
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3119
		{
			yyVAL.byt = 1
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3122
		{
			yyVAL.empty = struct{}{}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3124
		{
			yyVAL.empty = struct{}{}
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = ""
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3129
		{
			yyVAL.str = IgnoreStr
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3133
		{
			yyVAL.empty = struct{}{}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3135
		{
			yyVAL.empty = struct{}{}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3137
		{
			yyVAL.empty = struct{}{}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3139
		{
			yyVAL.empty = struct{}{}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3141
		{
			yyVAL.empty = struct{}{}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.empty = struct{}{}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3145
		{
			yyVAL.empty = struct{}{}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3147
		{
			yyVAL.empty = struct{}{}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.empty = struct{}{}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.empty = struct{}{}
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3154
		{
			yyVAL.empty = struct{}{}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3156
		{
			yyVAL.empty = struct{}{}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3158
		{
			yyVAL.empty = struct{}{}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3162
		{
			yyVAL.empty = struct{}{}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3164
		{
			yyVAL.empty = struct{}{}
		}
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3167
		{
			yyVAL.empty = struct{}{}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3169
		{
			yyVAL.empty = struct{}{}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
			yyVAL.empty = struct{}{}
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3174
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3176
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3180
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3184
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3191
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3197
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3201
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3208
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3440
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3449
		{
			decNesting(yylex)
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3454
		{
			skipToEnd(yylex)
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3459
		{
			skipToEnd(yylex)
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3463
		{
			skipToEnd(yylex)
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3467
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
