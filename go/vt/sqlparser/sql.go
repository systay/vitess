// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const HEXNUM = 57433
const VALUE_ARG = 57434
const LIST_ARG = 57435
const COMMENT = 57436
const COMMENT_KEYWORD = 57437
const BIT_LITERAL = 57438
const COMPRESSION = 57439
const NULL = 57440
const TRUE = 57441
const FALSE = 57442
const OFF = 57443
const DISCARD = 57444
const IMPORT = 57445
const ENABLE = 57446
const DISABLE = 57447
const TABLESPACE = 57448
const VIRTUAL = 57449
const STORED = 57450
const EMPTY_FROM_CLAUSE = 57451
const LOWER_THAN_CHARSET = 57452
const CHARSET = 57453
const UNIQUE = 57454
const KEY = 57455
const EXPRESSION_PREC_SETTER = 57456
const OR = 57457
const XOR = 57458
const AND = 57459
const NOT = 57460
const BETWEEN = 57461
const CASE = 57462
const WHEN = 57463
const THEN = 57464
const ELSE = 57465
const END = 57466
const LE = 57467
const GE = 57468
const NE = 57469
const NULL_SAFE_EQUAL = 57470
const IS = 57471
const LIKE = 57472
const REGEXP = 57473
const IN = 57474
const SHIFT_LEFT = 57475
const SHIFT_RIGHT = 57476
const DIV = 57477
const MOD = 57478
const UNARY = 57479
const COLLATE = 57480
const BINARY = 57481
const UNDERSCORE_BINARY = 57482
const UNDERSCORE_UTF8MB4 = 57483
const UNDERSCORE_UTF8 = 57484
const UNDERSCORE_LATIN1 = 57485
const INTERVAL = 57486
const JSON_EXTRACT_OP = 57487
const JSON_UNQUOTE_EXTRACT_OP = 57488
const CREATE = 57489
const ALTER = 57490
const DROP = 57491
const RENAME = 57492
const ANALYZE = 57493
const ADD = 57494
const FLUSH = 57495
const CHANGE = 57496
const MODIFY = 57497
const REVERT = 57498
const SCHEMA = 57499
const TABLE = 57500
const INDEX = 57501
const VIEW = 57502
const TO = 57503
const IGNORE = 57504
const IF = 57505
const PRIMARY = 57506
const COLUMN = 57507
const SPATIAL = 57508
const FULLTEXT = 57509
const KEY_BLOCK_SIZE = 57510
const CHECK = 57511
const INDEXES = 57512
const ACTION = 57513
const CASCADE = 57514
const CONSTRAINT = 57515
const FOREIGN = 57516
const NO = 57517
const REFERENCES = 57518
const RESTRICT = 57519
const SHOW = 57520
const DESCRIBE = 57521
const EXPLAIN = 57522
const DATE = 57523
const ESCAPE = 57524
const REPAIR = 57525
const OPTIMIZE = 57526
const TRUNCATE = 57527
const COALESCE = 57528
const EXCHANGE = 57529
const REBUILD = 57530
const PARTITIONING = 57531
const REMOVE = 57532
const MAXVALUE = 57533
const PARTITION = 57534
const REORGANIZE = 57535
const LESS = 57536
const THAN = 57537
const PROCEDURE = 57538
const TRIGGER = 57539
const VINDEX = 57540
const VINDEXES = 57541
const DIRECTORY = 57542
const NAME = 57543
const UPGRADE = 57544
const STATUS = 57545
const VARIABLES = 57546
const WARNINGS = 57547
const CASCADED = 57548
const DEFINER = 57549
const OPTION = 57550
const SQL = 57551
const UNDEFINED = 57552
const SEQUENCE = 57553
const MERGE = 57554
const TEMPORARY = 57555
const TEMPTABLE = 57556
const INVOKER = 57557
const SECURITY = 57558
const FIRST = 57559
const AFTER = 57560
const LAST = 57561
const VITESS_MIGRATION = 57562
const CANCEL = 57563
const RETRY = 57564
const COMPLETE = 57565
const BEGIN = 57566
const START = 57567
const TRANSACTION = 57568
const COMMIT = 57569
const ROLLBACK = 57570
const SAVEPOINT = 57571
const RELEASE = 57572
const WORK = 57573
const BIT = 57574
const TINYINT = 57575
const SMALLINT = 57576
const MEDIUMINT = 57577
const INT = 57578
const INTEGER = 57579
const BIGINT = 57580
const INTNUM = 57581
const REAL = 57582
const DOUBLE = 57583
const FLOAT_TYPE = 57584
const DECIMAL = 57585
const NUMERIC = 57586
const TIME = 57587
const TIMESTAMP = 57588
const DATETIME = 57589
const YEAR = 57590
const CHAR = 57591
const VARCHAR = 57592
const BOOL = 57593
const CHARACTER = 57594
const VARBINARY = 57595
const NCHAR = 57596
const TEXT = 57597
const TINYTEXT = 57598
const MEDIUMTEXT = 57599
const LONGTEXT = 57600
const BLOB = 57601
const TINYBLOB = 57602
const MEDIUMBLOB = 57603
const LONGBLOB = 57604
const JSON = 57605
const ENUM = 57606
const GEOMETRY = 57607
const POINT = 57608
const LINESTRING = 57609
const POLYGON = 57610
const GEOMETRYCOLLECTION = 57611
const MULTIPOINT = 57612
const MULTILINESTRING = 57613
const MULTIPOLYGON = 57614
const NULLX = 57615
const AUTO_INCREMENT = 57616
const APPROXNUM = 57617
const SIGNED = 57618
const UNSIGNED = 57619
const ZEROFILL = 57620
const CODE = 57621
const COLLATION = 57622
const COLUMNS = 57623
const DATABASES = 57624
const ENGINES = 57625
const EVENT = 57626
const EXTENDED = 57627
const FIELDS = 57628
const FULL = 57629
const FUNCTION = 57630
const GTID_EXECUTED = 57631
const KEYSPACES = 57632
const OPEN = 57633
const PLUGINS = 57634
const PRIVILEGES = 57635
const PROCESSLIST = 57636
const SCHEMAS = 57637
const TABLES = 57638
const TRIGGERS = 57639
const USER = 57640
const VGTID_EXECUTED = 57641
const VITESS_KEYSPACES = 57642
const VITESS_METADATA = 57643
const VITESS_MIGRATIONS = 57644
const VITESS_REPLICATION_STATUS = 57645
const VITESS_SHARDS = 57646
const VITESS_TABLETS = 57647
const VSCHEMA = 57648
const NAMES = 57649
const GLOBAL = 57650
const SESSION = 57651
const ISOLATION = 57652
const LEVEL = 57653
const READ = 57654
const WRITE = 57655
const ONLY = 57656
const REPEATABLE = 57657
const COMMITTED = 57658
const UNCOMMITTED = 57659
const SERIALIZABLE = 57660
const CURRENT_TIMESTAMP = 57661
const DATABASE = 57662
const CURRENT_DATE = 57663
const CURRENT_TIME = 57664
const LOCALTIME = 57665
const LOCALTIMESTAMP = 57666
const CURRENT_USER = 57667
const UTC_DATE = 57668
const UTC_TIME = 57669
const UTC_TIMESTAMP = 57670
const REPLACE = 57671
const CONVERT = 57672
const CAST = 57673
const SUBSTR = 57674
const SUBSTRING = 57675
const GROUP_CONCAT = 57676
const SEPARATOR = 57677
const TIMESTAMPADD = 57678
const TIMESTAMPDIFF = 57679
const MATCH = 57680
const AGAINST = 57681
const BOOLEAN = 57682
const LANGUAGE = 57683
const WITH = 57684
const QUERY = 57685
const EXPANSION = 57686
const WITHOUT = 57687
const VALIDATION = 57688
const UNUSED = 57689
const ARRAY = 57690
const CUME_DIST = 57691
const DESCRIPTION = 57692
const DENSE_RANK = 57693
const EMPTY = 57694
const EXCEPT = 57695
const FIRST_VALUE = 57696
const GROUPING = 57697
const GROUPS = 57698
const JSON_TABLE = 57699
const LAG = 57700
const LAST_VALUE = 57701
const LATERAL = 57702
const LEAD = 57703
const MEMBER = 57704
const NTH_VALUE = 57705
const NTILE = 57706
const OF = 57707
const OVER = 57708
const PERCENT_RANK = 57709
const RANK = 57710
const RECURSIVE = 57711
const ROW_NUMBER = 57712
const SYSTEM = 57713
const WINDOW = 57714
const ACTIVE = 57715
const ADMIN = 57716
const BUCKETS = 57717
const CLONE = 57718
const COMPONENT = 57719
const DEFINITION = 57720
const ENFORCED = 57721
const EXCLUDE = 57722
const FOLLOWING = 57723
const GEOMCOLLECTION = 57724
const GET_MASTER_PUBLIC_KEY = 57725
const HISTOGRAM = 57726
const HISTORY = 57727
const INACTIVE = 57728
const INVISIBLE = 57729
const LOCKED = 57730
const MASTER_COMPRESSION_ALGORITHMS = 57731
const MASTER_PUBLIC_KEY_PATH = 57732
const MASTER_TLS_CIPHERSUITES = 57733
const MASTER_ZSTD_COMPRESSION_LEVEL = 57734
const NESTED = 57735
const NETWORK_NAMESPACE = 57736
const NOWAIT = 57737
const NULLS = 57738
const OJ = 57739
const OLD = 57740
const OPTIONAL = 57741
const ORDINALITY = 57742
const ORGANIZATION = 57743
const OTHERS = 57744
const PATH = 57745
const PERSIST = 57746
const PERSIST_ONLY = 57747
const PRECEDING = 57748
const PRIVILEGE_CHECKS_USER = 57749
const PROCESS = 57750
const RANDOM = 57751
const REFERENCE = 57752
const REQUIRE_ROW_FORMAT = 57753
const RESOURCE = 57754
const RESPECT = 57755
const RESTART = 57756
const RETAIN = 57757
const REUSE = 57758
const ROLE = 57759
const SECONDARY = 57760
const SECONDARY_ENGINE = 57761
const SECONDARY_LOAD = 57762
const SECONDARY_UNLOAD = 57763
const SKIP = 57764
const SRID = 57765
const THREAD_PRIORITY = 57766
const TIES = 57767
const UNBOUNDED = 57768
const VCPU = 57769
const VISIBLE = 57770
const SOUNDS = 57771
const FORMAT = 57772
const TREE = 57773
const VITESS = 57774
const TRADITIONAL = 57775
const LOCAL = 57776
const LOW_PRIORITY = 57777
const NO_WRITE_TO_BINLOG = 57778
const LOGS = 57779
const ERROR = 57780
const GENERAL = 57781
const HOSTS = 57782
const OPTIMIZER_COSTS = 57783
const USER_RESOURCES = 57784
const SLOW = 57785
const CHANNEL = 57786
const RELAY = 57787
const EXPORT = 57788
const AVG_ROW_LENGTH = 57789
const CONNECTION = 57790
const CHECKSUM = 57791
const DELAY_KEY_WRITE = 57792
const ENCRYPTION = 57793
const ENGINE = 57794
const INSERT_METHOD = 57795
const MAX_ROWS = 57796
const MIN_ROWS = 57797
const PACK_KEYS = 57798
const PASSWORD = 57799
const FIXED = 57800
const DYNAMIC = 57801
const COMPRESSED = 57802
const REDUNDANT = 57803
const COMPACT = 57804
const ROW_FORMAT = 57805
const STATS_AUTO_RECALC = 57806
const STATS_PERSISTENT = 57807
const STATS_SAMPLE_PAGES = 57808
const STORAGE = 57809
const MEMORY = 57810
const DISK = 57811

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SOUNDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	487, 137,
	-2, 143,
	-1, 45,
	114, 143,
	154, 143,
	269, 143,
	-2, 408,
	-1, 52,
	33, 559,
	176, 559,
	187, 559,
	220, 573,
	221, 573,
	-2, 561,
	-1, 57,
	178, 583,
	-2, 581,
	-1, 108,
	175, 1006,
	-2, 116,
	-1, 110,
	1, 138,
	487, 138,
	-2, 143,
	-1, 120,
	115, 311,
	181, 311,
	-2, 402,
	-1, 139,
	114, 143,
	154, 143,
	269, 143,
	-2, 417,
	-1, 572,
	161, 1027,
	-2, 1023,
	-1, 573,
	161, 1028,
	-2, 1024,
	-1, 605,
	57, 651,
	-2, 659,
	-1, 642,
	130, 1378,
	-2, 109,
	-1, 643,
	130, 1259,
	-2, 110,
	-1, 649,
	130, 1310,
	-2, 1000,
	-1, 789,
	130, 1193,
	-2, 997,
	-1, 825,
	186, 38,
	191, 38,
	-2, 322,
	-1, 902,
	1, 456,
	487, 456,
	-2, 143,
	-1, 1105,
	57, 652,
	-2, 664,
	-1, 1106,
	57, 653,
	-2, 665,
	-1, 1158,
	1, 352,
	487, 352,
	-2, 143,
	-1, 1161,
	23, 162,
	-2, 164,
	-1, 1234,
	115, 311,
	181, 311,
	-2, 402,
	-1, 1243,
	186, 39,
	191, 39,
	-2, 323,
	-1, 1473,
	161, 1032,
	-2, 1026,
	-1, 1547,
	1, 353,
	487, 353,
	-2, 143,
	-1, 1781,
	75, 91,
	84, 91,
	-2, 95,
	-1, 1949,
	47, 968,
	-2, 962,
	-1, 2135,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 692,
}

const yyPrivate = 57344

const yyLast = 29249

var yyAct = [...]int{
	572, 2175, 2336, 2057, 2311, 2298, 3, 2244, 1799, 965,
	1806, 567, 1503, 1087, 1963, 2199, 1960, 566, 34, 529,
	1726, 1614, 1807, 90, 1964, 1961, 2204, 598, 2106, 1486,
	1754, 525, 1120, 1746, 575, 620, 1950, 1507, 2100, 1958,
	1579, 523, 1777, 2191, 521, 2126, 1828, 1215, 176, 1890,
	1829, 176, 1851, 489, 176, 913, 564, 565, 2004, 505,
	647, 176, 1830, 551, 1533, 148, 33, 1766, 1525, 176,
	35, 1584, 1599, 1520, 1524, 1738, 1467, 1906, 517, 1107,
	1612, 176, 134, 1645, 1399, 1447, 1440, 1586, 1822, 602,
	1350, 606, 1241, 1598, 600, 820, 1783, 792, 1527, 1150,
	855, 1459, 1544, 505, 621, 1129, 505, 176, 505, 623,
	1417, 1488, 644, 85, 983, 1347, 799, 796, 1596, 826,
	1090, 1512, 1333, 1248, 821, 822, 833, 1149, 1133, 1147,
	942, 800, 1508, 612, 958, 823, 1355, 534, 1210, 89,
	607, 963, 634, 1233, 608, 1575, 117, 118, 92, 610,
	70, 79, 91, 512, 898, 1053, 1479, 8, 522, 609,
	71, 1049, 7, 1259, 151, 6, 1870, 1869, 1643, 83,
	111, 112, 1748, 1898, 1899, 1483, 1484, 1406, 808, 1405,
	803, 1404, 628, 1403, 633, 462, 1402, 1401, 1388, 119,
	84, 178, 179, 180, 515, 1319, 516, 1393, 614, 2332,
	1724, 793, 1946, 2026, 2152, 860, 2240, 2239, 2170, 113,
	568, 2171, 552, 554, 569, 570, 513, 550, 553, 571,
	859, 858, 601, 599, 2350, 2321, 72, 555, 556, 74,
	72, 1682, 641, 2349, 2344, 648, 2289, 857, 2176, 2312,
	1631, 2320, 615, 622, 2288, 1905, 815, 2089, 837, 72,
	871, 872, 1224, 875, 876, 877, 878, 836, 1725, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 868, 113, 861, 862, 863, 2217,
	96, 814, 813, 1996, 873, 1792, 984, 1591, 1791, 1877,
	1470, 1793, 1151, 1876, 1152, 1680, 1997, 1998, 1485, 1539,
	1540, 1897, 1679, 81, 961, 1538, 812, 81, 907, 908,
	1589, 932, 72, 595, 594, 178, 179, 180, 98, 99,
	920, 102, 172, 933, 108, 921, 81, 173, 1815, 926,
	457, 1559, 1558, 1847, 2103, 949, 1757, 951, 2059, 113,
	2081, 807, 920, 492, 809, 492, 114, 921, 136, 2079,
	597, 994, 897, 605, 503, 919, 901, 918, 1392, 156,
	507, 1758, 810, 492, 501, 1394, 1395, 1396, 937, 938,
	178, 179, 180, 948, 950, 1656, 1654, 1655, 1094, 1852,
	492, 636, 637, 1613, 479, 984, 1873, 1646, 2053, 81,
	146, 955, 2348, 478, 1339, 135, 2054, 1588, 492, 934,
	812, 960, 804, 874, 476, 927, 1334, 1015, 941, 806,
	805, 935, 936, 903, 2060, 153, 1885, 154, 1661, 1651,
	816, 880, 1235, 1236, 145, 144, 171, 2333, 2249, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1024, 1023, 1025, 1026,
	879, 990, 473, 1309, 982, 1658, 2236, 1659, 2061, 1660,
	994, 487, 812, 896, 939, 1650, 810, 176, 2165, 176,
	1648, 946, 176, 1615, 940, 947, 484, 844, 842, 811,
	1521, 853, 1652, 852, 851, 952, 850, 2025, 849, 848,
	953, 847, 140, 1237, 147, 1310, 1234, 1311, 141, 142,
	505, 505, 505, 157, 1811, 1649, 846, 945, 493, 841,
	493, 817, 162, 1227, 854, 797, 1680, 930, 505, 505,
	829, 1027, 2345, 1889, 2342, 900, 976, 1027, 493, 916,
	797, 922, 923, 924, 925, 828, 463, 34, 465, 480,
	2287, 495, 2340, 494, 469, 493, 467, 471, 481, 472,
	990, 466, 1340, 477, 962, 1875, 468, 482, 483, 485,
	499, 498, 486, 493, 475, 496, 1901, 2104, 1247, 954,
	797, 1348, 1693, 811, 795, 1597, 75, 845, 843, 635,
	1681, 1590, 1030, 1031, 1032, 1033, 1727, 1729, 1886, 80,
	1637, 1344, 1038, 80, 1041, 989, 986, 987, 988, 993,
	995, 992, 970, 991, 864, 176, 2033, 1872, 835, 1933,
	985, 899, 80, 1932, 1085, 1338, 1931, 1222, 149, 1221,
	1220, 1892, 176, 1862, 956, 811, 1891, 1097, 1892, 1345,
	1218, 1101, 461, 1891, 1246, 600, 1100, 602, 1907, 1098,
	456, 505, 967, 968, 1095, 176, 909, 917, 906, 110,
	505, 1321, 1320, 1322, 1323, 1324, 505, 2250, 2273, 644,
	929, 1884, 2140, 1086, 1883, 2122, 835, 1788, 834, 1028,
	1029, 931, 1753, 1545, 143, 80, 1633, 979, 1717, 71,
	1086, 1909, 977, 1623, 1034, 978, 137, 1137, 1059, 138,
	497, 911, 835, 1728, 989, 986, 987, 988, 993, 995,
	992, 2338, 991, 1091, 2339, 1335, 2337, 1336, 490, 985,
	1337, 1027, 870, 835, 1026, 1995, 2283, 1099, 617, 943,
	1055, 89, 1051, 491, 1052, 1356, 834, 959, 2116, 856,
	92, 838, 828, 1647, 1065, 1066, 1067, 1068, 1341, 1153,
	980, 839, 1922, 1911, 1460, 1915, 915, 1910, 105, 1908,
	1841, 999, 834, 835, 1913, 998, 999, 1088, 828, 831,
	832, 1096, 797, 1912, 599, 2213, 825, 829, 2013, 2012,
	601, 1119, 1619, 834, 1116, 1258, 1914, 1916, 1257, 828,
	831, 832, 648, 797, 1460, 824, 1707, 825, 829, 1143,
	1144, 150, 155, 152, 158, 159, 160, 161, 163, 164,
	165, 166, 176, 106, 1245, 835, 1211, 167, 168, 169,
	170, 2326, 1632, 834, 2304, 1219, 1148, 2302, 838, 828,
	997, 1630, 998, 999, 902, 1625, 2306, 2307, 839, 1924,
	1625, 1809, 1810, 1628, 505, 844, 1243, 842, 2303, 178,
	179, 180, 1138, 1442, 1252, 2000, 840, 944, 1256, 2151,
	1629, 505, 505, 1357, 505, 1627, 505, 505, 1015, 505,
	505, 505, 505, 505, 505, 834, 1253, 869, 178, 179,
	180, 914, 1750, 2150, 505, 1412, 1414, 1415, 176, 1292,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1023, 1025,
	1026, 1287, 1288, 2031, 176, 1102, 1413, 1808, 1021, 1022,
	1024, 1023, 1025, 1026, 1826, 505, 1114, 176, 1443, 1811,
	2292, 2346, 1232, 2327, 1422, 1328, 1513, 1514, 1346, 639,
	81, 997, 176, 998, 999, 1114, 1225, 1226, 1423, 1424,
	1421, 1239, 1464, 1420, 1698, 1326, 1251, 1751, 176, 997,
	2293, 998, 999, 1697, 1802, 176, 1019, 1020, 1021, 1022,
	1024, 1023, 1025, 1026, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 505, 505, 505, 1250, 1217, 1249, 1249,
	2266, 1289, 1229, 1316, 1242, 1230, 1228, 997, 1327, 998,
	999, 1825, 1352, 2347, 1295, 1296, 1685, 1686, 1687, 1803,
	1301, 1302, 1360, 176, 589, 590, 1594, 2086, 1325, 1364,
	2267, 1366, 1367, 1368, 1369, 1305, 1329, 1290, 1373, 997,
	1314, 998, 999, 1805, 1313, 1261, 1800, 1262, 1312, 1264,
	1266, 1303, 1387, 1270, 1272, 1274, 1276, 1278, 1297, 1294,
	1809, 1810, 1418, 1293, 1268, 1349, 1315, 1801, 1441, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1024, 1023, 1025, 1026,
	2270, 1450, 505, 1081, 1084, 1703, 2269, 1416, 1082, 1358,
	1359, 2268, 1114, 1083, 2212, 1426, 2210, 505, 505, 1123,
	2188, 2148, 573, 1363, 2011, 1362, 1835, 113, 1461, 1471,
	1370, 1371, 1372, 814, 813, 1017, 1018, 1019, 1020, 1021,
	1022, 1024, 1023, 1025, 1026, 997, 1808, 998, 999, 1223,
	1386, 2084, 1114, 176, 1383, 1384, 1385, 2056, 1811, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1001, 1491, 1124, 1823,
	177, 1641, 1640, 177, 1506, 1492, 177, 1702, 1445, 176,
	1473, 506, 505, 177, 1444, 997, 2230, 998, 999, 1389,
	1353, 177, 176, 1317, 1493, 505, 1494, 1304, 1475, 1476,
	176, 1300, 176, 177, 176, 176, 505, 1471, 1419, 505,
	1472, 997, 1299, 998, 999, 644, 1298, 2092, 644, 997,
	505, 998, 999, 2091, 1125, 506, 1127, 957, 506, 177,
	506, 1425, 1827, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1523, 1499, 1744, 2318,
	89, 997, 1114, 998, 999, 1696, 1804, 997, 1473, 998,
	999, 178, 179, 180, 2234, 997, 89, 998, 999, 2233,
	1565, 1566, 1567, 1568, 1560, 505, 1561, 1562, 1563, 1564,
	2174, 1600, 1601, 1602, 1548, 88, 1604, 1606, 1518, 1531,
	614, 1126, 1571, 1572, 1573, 1574, 1853, 1077, 1080, 505,
	1744, 2296, 1078, 1073, 1076, 505, 1252, 1079, 1074, 1252,
	1581, 1252, 1501, 1075, 1838, 1552, 1755, 1549, 1755, 1624,
	178, 179, 180, 1516, 1795, 997, 1959, 998, 999, 1744,
	2277, 1553, 1069, 1072, 1536, 1535, 2115, 1070, 648, 2256,
	1114, 648, 1071, 1114, 1551, 1550, 1587, 2168, 1114, 505,
	997, 1441, 998, 999, 1744, 2166, 1441, 1441, 178, 179,
	180, 2115, 1607, 1625, 1114, 81, 178, 179, 180, 95,
	1605, 577, 587, 588, 589, 590, 578, 584, 1762, 86,
	94, 579, 93, 585, 591, 592, 1446, 1763, 1582, 2115,
	87, 88, 176, 1452, 1453, 2117, 1611, 1593, 1618, 176,
	1595, 1621, 1603, 1622, 176, 176, 1592, 996, 176, 2282,
	176, 1474, 1577, 1578, 1477, 1478, 176, 1744, 86, 1990,
	1582, 1617, 1616, 176, 837, 88, 2008, 2009, 1680, 87,
	1635, 1620, 1763, 836, 1249, 2120, 1114, 1636, 580, 582,
	581, 583, 1638, 1639, 1114, 1763, 1634, 2023, 2022, 1114,
	1784, 176, 505, 81, 81, 1498, 94, 95, 2021, 577,
	587, 588, 589, 590, 578, 584, 2019, 2020, 94, 579,
	93, 585, 591, 592, 1671, 1672, 1644, 1015, 1626, 1674,
	1011, 1784, 1012, 1114, 2019, 2018, 1763, 1114, 1675, 1694,
	1114, 1680, 1871, 1418, 1214, 1855, 1013, 1014, 1010, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1024, 1023, 1025, 1026,
	1849, 1850, 2153, 1785, 2008, 2009, 1744, 1743, 996, 1114,
	1537, 1664, 1787, 1740, 1694, 1690, 580, 582, 581, 583,
	1214, 1213, 1159, 1158, 1694, 1625, 2246, 1114, 88, 1712,
	1711, 1625, 176, 1608, 1785, 1511, 1118, 1481, 1397, 1343,
	176, 1283, 1145, 1680, 819, 604, 818, 1121, 505, 2224,
	2145, 1216, 2154, 2155, 2156, 1580, 2133, 2055, 2015, 1749,
	1856, 1576, 1678, 1570, 1569, 1331, 1244, 1240, 1212, 177,
	107, 177, 1831, 1832, 177, 901, 2157, 1759, 1280, 2058,
	176, 176, 1688, 2127, 2128, 1694, 2247, 558, 34, 1591,
	2323, 1284, 1285, 1286, 1745, 2299, 1794, 1779, 2130, 2038,
	2037, 2036, 506, 506, 506, 1959, 1842, 1665, 568, 1419,
	1706, 1390, 569, 570, 2132, 1978, 1977, 571, 2335, 1832,
	506, 506, 81, 2158, 2159, 1281, 1282, 1981, 2319, 1741,
	1091, 1689, 1982, 1691, 1979, 175, 1505, 1122, 460, 1980,
	1497, 500, 505, 2121, 1951, 1953, 1778, 176, 460, 1816,
	1817, 1731, 1723, 1954, 176, 1983, 460, 1772, 1773, 2042,
	505, 1939, 1737, 1797, 1938, 1782, 505, 1752, 613, 2108,
	1252, 1252, 1848, 2265, 2203, 2205, 505, 2107, 2111, 1786,
	1948, 618, 1342, 1859, 631, 593, 631, 1789, 1868, 619,
	1742, 1813, 1556, 1836, 460, 1798, 1456, 866, 865, 176,
	176, 176, 176, 176, 2068, 969, 86, 177, 1587, 1824,
	1457, 86, 1831, 88, 1895, 176, 176, 87, 1818, 1819,
	1820, 1821, 87, 1833, 177, 1864, 1863, 114, 2113, 1839,
	88, 176, 1513, 1514, 1473, 2034, 1668, 2279, 1866, 1834,
	2242, 1232, 1812, 506, 1843, 1844, 1845, 177, 1776, 1441,
	1502, 1657, 506, 1768, 1771, 1772, 1773, 1769, 506, 1770,
	1774, 1684, 1857, 1858, 1472, 1865, 626, 627, 505, 1768,
	1771, 1772, 1773, 1769, 93, 1770, 1774, 1930, 600, 2127,
	2128, 505, 1921, 2211, 1937, 1903, 2209, 1902, 2208, 1867,
	95, 176, 1936, 2201, 1113, 505, 1704, 2112, 2110, 1887,
	2039, 94, 94, 93, 505, 1609, 625, 2200, 2101, 1714,
	1715, 505, 505, 1930, 176, 176, 176, 176, 176, 1941,
	1965, 1755, 2325, 2324, 2325, 1917, 176, 1962, 606, 1971,
	1904, 176, 1962, 1942, 176, 1918, 95, 176, 176, 176,
	1956, 95, 1740, 1929, 1139, 1131, 97, 94, 1101, 93,
	2271, 1893, 94, 2010, 1894, 100, 101, 616, 88, 82,
	1, 2301, 176, 1940, 474, 1482, 1089, 488, 2297, 1318,
	1308, 1943, 2177, 2243, 2045, 1585, 1991, 607, 827, 1992,
	139, 608, 1546, 1973, 1974, 1547, 1976, 2032, 1972, 2314,
	104, 1975, 1984, 176, 790, 103, 830, 1988, 928, 1352,
	505, 1610, 1993, 2169, 177, 1989, 1814, 505, 1557, 2007,
	2006, 1165, 1999, 176, 1163, 1164, 2003, 1162, 1167, 2044,
	1166, 1161, 2041, 176, 1391, 502, 1775, 174, 1154, 1132,
	867, 2028, 464, 2046, 89, 2024, 506, 176, 1642, 470,
	176, 1039, 2027, 1935, 1934, 1790, 645, 638, 1967, 2105,
	2069, 1947, 1949, 506, 506, 1747, 506, 1952, 506, 506,
	1945, 506, 506, 506, 506, 506, 506, 2264, 2050, 2016,
	2017, 2007, 2006, 2048, 557, 1970, 506, 2043, 1587, 2202,
	177, 2278, 2029, 2030, 1554, 2064, 176, 2063, 1128, 1705,
	1046, 1458, 1528, 2071, 1490, 2070, 177, 2040, 1411, 2066,
	2067, 527, 2077, 526, 524, 2074, 2075, 506, 2076, 177,
	1733, 2078, 1756, 2080, 1002, 576, 1140, 1767, 1765, 1764,
	1666, 2099, 1532, 2129, 177, 2125, 1526, 1739, 535, 2102,
	528, 520, 574, 504, 2002, 2005, 2109, 1555, 1874, 2052,
	177, 176, 981, 1104, 460, 514, 460, 177, 802, 460,
	2114, 1455, 2124, 2248, 1683, 2088, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 506, 506, 506, 2134, 1103,
	2136, 2131, 2138, 2139, 60, 38, 509, 646, 2331, 972,
	794, 632, 801, 2137, 176, 32, 31, 176, 176, 176,
	505, 30, 2144, 2142, 2143, 177, 29, 28, 1112, 1108,
	23, 22, 2164, 21, 20, 19, 2147, 25, 2149, 2178,
	505, 505, 505, 1109, 18, 1112, 1108, 17, 16, 109,
	47, 44, 42, 116, 115, 45, 2184, 41, 904, 39,
	1109, 27, 26, 15, 2173, 14, 13, 12, 1495, 1496,
	1111, 11, 1110, 10, 9, 505, 505, 505, 176, 5,
	4, 975, 24, 2, 506, 1105, 1106, 1111, 0, 1110,
	0, 0, 0, 2183, 0, 0, 0, 0, 0, 506,
	506, 505, 0, 505, 2187, 0, 2218, 2197, 0, 1965,
	0, 2206, 460, 1965, 2207, 1962, 2220, 34, 2198, 2195,
	2196, 2214, 2216, 0, 0, 0, 505, 0, 600, 613,
	172, 0, 2222, 0, 0, 177, 0, 0, 2229, 0,
	600, 0, 0, 0, 2226, 0, 0, 0, 2227, 0,
	0, 0, 460, 0, 114, 0, 0, 505, 0, 0,
	0, 177, 0, 0, 506, 0, 2245, 156, 0, 2237,
	2238, 0, 0, 2235, 177, 0, 0, 506, 0, 0,
	0, 0, 177, 0, 177, 0, 177, 177, 506, 0,
	0, 506, 0, 0, 2261, 2263, 0, 0, 2260, 0,
	0, 0, 506, 0, 0, 505, 0, 0, 0, 1965,
	0, 2182, 2272, 0, 0, 0, 0, 2275, 0, 0,
	0, 0, 0, 153, 0, 154, 0, 505, 176, 2281,
	2231, 0, 2232, 0, 171, 0, 0, 505, 2274, 2284,
	34, 0, 2276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 505, 0, 0, 506, 0, 1182,
	0, 0, 0, 505, 505, 0, 2308, 2300, 2294, 2305,
	2313, 1962, 2245, 2315, 0, 0, 0, 34, 0, 0,
	0, 506, 0, 2322, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 2328, 0, 1015, 0, 1900, 0, 0,
	0, 157, 2334, 0, 0, 0, 0, 0, 2341, 460,
	162, 0, 1015, 0, 1692, 0, 2343, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1024, 1023, 1025, 1026, 0, 0,
	0, 506, 1115, 1117, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1024, 1023, 1025, 1026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 1255,
	1255, 177, 0, 0, 1170, 460, 177, 177, 0, 0,
	177, 0, 177, 0, 646, 646, 646, 0, 177, 0,
	0, 1306, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 971, 973, 460, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1183, 0, 1351,
	0, 0, 0, 177, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 0, 0, 0, 0,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 1374, 1375, 460, 460, 460, 460, 460, 460, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 1196, 1199,
	1200, 1201, 1202, 1203, 1204, 0, 1205, 1206, 1207, 1208,
	1209, 1184, 1185, 1186, 1187, 1168, 1169, 1197, 0, 1171,
	460, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 1135, 630, 0, 0, 0,
	506, 0, 0, 0, 646, 0, 0, 0, 0, 0,
	1155, 0, 0, 631, 0, 0, 0, 0, 0, 0,
	631, 631, 0, 0, 0, 0, 1255, 0, 0, 0,
	0, 0, 177, 177, 0, 0, 631, 1351, 631, 631,
	631, 631, 631, 0, 0, 0, 1198, 0, 0, 150,
	155, 152, 158, 159, 160, 161, 163, 164, 165, 166,
	0, 518, 0, 0, 0, 167, 168, 169, 170, 0,
	1306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 506, 0, 613, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 460,
	0, 0, 506, 0, 0, 1351, 0, 460, 506, 460,
	0, 460, 1534, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 177, 177, 177, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 794, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1254, 0, 0, 0, 1260, 1260, 0, 1260, 0,
	1260, 1260, 0, 1269, 1260, 1260, 1260, 1260, 1260, 0,
	506, 0, 0, 0, 0, 0, 1254, 1254, 794, 0,
	0, 0, 0, 506, 0, 1462, 0, 0, 0, 1463,
	0, 0, 0, 177, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 0, 0, 1330,
	0, 0, 0, 506, 506, 0, 177, 177, 177, 177,
	177, 1115, 1480, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 177, 0, 0, 177, 0, 0, 177,
	177, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1500, 0, 0, 0, 0, 0, 0, 0, 460,
	0, 0, 0, 0, 177, 0, 460, 646, 646, 646,
	0, 460, 460, 0, 0, 460, 0, 1669, 0, 0,
	0, 0, 172, 460, 0, 0, 0, 0, 0, 0,
	460, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 114, 0, 0, 506,
	0, 0, 0, 0, 0, 177, 0, 0, 460, 156,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 586,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1451, 0, 0, 0,
	0, 1796, 0, 1254, 0, 0, 0, 0, 0, 0,
	0, 1465, 1466, 0, 646, 153, 0, 154, 0, 0,
	0, 0, 0, 631, 0, 0, 171, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 631, 631, 0, 0,
	0, 603, 0, 73, 0, 0, 0, 0, 0, 460,
	0, 0, 0, 0, 0, 0, 0, 1306, 0, 0,
	0, 603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 1135,
	0, 0, 646, 157, 0, 0, 0, 460, 460, 0,
	646, 0, 162, 646, 0, 0, 1000, 0, 0, 0,
	0, 0, 0, 0, 794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 177,
	177, 177, 506, 0, 1047, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 506, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 0, 0, 0, 0, 801,
	0, 1846, 0, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 506, 506,
	177, 1351, 0, 794, 0, 1092, 0, 0, 0, 801,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 1130, 506, 0, 506, 460, 460, 460, 460,
	460, 1695, 0, 0, 0, 1699, 0, 1700, 1701, 0,
	0, 0, 460, 460, 0, 0, 1709, 0, 506, 1710,
	0, 0, 1713, 794, 0, 0, 459, 0, 460, 1718,
	1719, 1720, 1721, 1722, 1500, 0, 508, 0, 0, 0,
	0, 0, 631, 0, 596, 1732, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 798, 0, 0, 0, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 1255, 0, 0, 0, 0,
	1255, 460, 460, 460, 460, 460, 0, 0, 0, 506,
	177, 0, 0, 1985, 0, 0, 1677, 0, 460, 506,
	0, 460, 0, 0, 460, 1994, 1351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 506, 506, 0, 0, 460,
	0, 150, 155, 152, 158, 159, 160, 161, 163, 164,
	165, 166, 0, 0, 0, 0, 0, 167, 168, 169,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1734, 0, 460, 0, 0, 460, 0, 964,
	964, 964, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1927,
	1928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1354, 460, 0, 0, 603, 1035, 1036, 1037,
	0, 1040, 0, 1042, 1043, 1044, 1045, 0, 1048, 1050,
	1050, 0, 1050, 1054, 1054, 1056, 1057, 1058, 0, 1060,
	1061, 1062, 1063, 1064, 0, 1968, 0, 0, 1054, 1054,
	1054, 1054, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 1986, 1987, 0, 0, 0, 0, 460, 0,
	0, 0, 0, 0, 1504, 0, 1093, 0, 0, 603,
	1854, 0, 0, 603, 0, 0, 0, 0, 646, 603,
	1860, 0, 0, 1407, 1408, 1409, 1410, 0, 0, 0,
	0, 0, 0, 72, 36, 37, 74, 0, 0, 0,
	0, 460, 0, 0, 460, 460, 460, 0, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 40, 66, 67,
	0, 64, 68, 1448, 1449, 0, 0, 0, 0, 0,
	65, 1454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 905, 0, 910, 0, 0, 912, 0, 53,
	0, 0, 0, 0, 0, 1306, 0, 0, 0, 0,
	81, 0, 646, 0, 0, 0, 0, 0, 0, 0,
	518, 2073, 0, 1255, 0, 1260, 0, 0, 0, 0,
	0, 0, 2082, 2083, 2085, 2087, 0, 0, 0, 1944,
	0, 0, 0, 0, 2093, 0, 0, 0, 646, 2097,
	0, 0, 1254, 1509, 1510, 1969, 1260, 1254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1543, 2118, 2119, 0, 0, 2123, 0, 0, 0, 0,
	0, 43, 46, 49, 48, 51, 0, 63, 0, 0,
	69, 0, 0, 2135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 77, 76, 0, 0, 61, 62, 50,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1583,
	0, 0, 0, 0, 794, 0, 0, 1254, 0, 0,
	0, 1504, 0, 0, 0, 460, 0, 0, 0, 0,
	2167, 0, 0, 0, 0, 0, 0, 0, 54, 55,
	1142, 56, 57, 58, 59, 0, 0, 0, 0, 1255,
	0, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 136, 0, 2192,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 135, 0, 2228, 0, 0, 0,
	0, 0, 964, 964, 964, 0, 0, 0, 0, 0,
	0, 0, 0, 75, 153, 0, 154, 0, 0, 0,
	0, 123, 124, 145, 144, 171, 80, 2241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2251, 2252, 2253, 0, 2254, 2255, 2257, 0, 0, 0,
	2258, 2259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1160, 0, 0,
	0, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 140, 121, 147, 128, 120, 0, 141, 142, 0,
	0, 0, 157, 0, 2179, 2180, 2181, 0, 0, 0,
	0, 162, 129, 2286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 130, 125, 126,
	127, 131, 0, 0, 0, 0, 122, 1708, 0, 2193,
	2193, 2193, 0, 0, 0, 133, 0, 0, 0, 0,
	0, 0, 0, 1291, 0, 0, 0, 0, 0, 0,
	1254, 0, 0, 0, 0, 2219, 0, 2221, 0, 0,
	0, 0, 0, 0, 2329, 2330, 0, 0, 0, 0,
	0, 0, 1332, 0, 0, 0, 0, 0, 1130, 0,
	1504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1361, 0, 0, 0, 149, 0, 0,
	1365, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1400, 1504,
	0, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 138, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1254, 0, 2295, 0,
	0, 0, 0, 0, 0, 0, 0, 646, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1919,
	1920, 0, 0, 0, 1923, 0, 0, 0, 1925, 1926,
	150, 155, 152, 158, 159, 160, 161, 163, 164, 165,
	166, 0, 0, 0, 0, 0, 167, 168, 169, 170,
	0, 0, 0, 0, 0, 0, 0, 1515, 0, 0,
	0, 0, 0, 0, 172, 1519, 0, 1522, 0, 0,
	1400, 0, 1957, 0, 0, 1231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 154,
	0, 0, 0, 0, 1235, 1236, 145, 144, 171, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 1761, 0, 0, 140, 1237, 147, 0, 1234, 1780,
	141, 142, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 2090, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1400, 0, 0,
	0, 0, 0, 0, 1653, 0, 0, 0, 0, 1662,
	1663, 0, 0, 1667, 0, 0, 0, 0, 0, 0,
	0, 1670, 0, 518, 0, 0, 0, 0, 1673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1676, 0, 2141, 0,
	0, 0, 0, 0, 0, 0, 1861, 0, 0, 0,
	0, 0, 2146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2185, 0, 2186, 0, 0, 143, 0, 2189, 2190,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2215, 0, 0, 0, 0, 0, 0,
	1529, 0, 0, 0, 2223, 0, 0, 2225, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 0, 1966, 0,
	73, 0, 0, 1529, 1529, 1529, 1529, 1529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 1529, 0, 0, 1529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2001, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2262, 518, 0,
	0, 0, 1840, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 0, 0, 0, 0, 0, 167,
	168, 169, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 1879, 1880, 1881, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1400, 1888, 0, 0, 0, 0, 0, 2309, 0, 0,
	0, 0, 0, 0, 0, 2072, 1896, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 2095, 2096, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2047, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2051, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 0, 0, 2065, 0, 1966, 0, 73,
	0, 1966, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2280, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2160,
	0, 0, 2161, 2162, 2163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 758,
	404, 0, 707, 775, 678, 695, 785, 698, 701, 741,
	657, 720, 328, 692, 0, 682, 653, 688, 654, 680,
	709, 235, 677, 760, 723, 774, 286, 232, 659, 683,
	342, 697, 187, 743, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 781, 290,
	730, 0, 389, 313, 0, 0, 0, 711, 764, 718,
	754, 706, 742, 667, 729, 776, 693, 738, 777, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 2316, 0, 2317, 0, 0, 0, 0,
	0, 209, 0, 216, 735, 771, 690, 737, 230, 274,
	237, 229, 406, 782, 763, 0, 0, 202, 773, 713,
	0, 740, 0, 788, 652, 732, 0, 655, 658, 784,
	767, 686, 240, 0, 0, 0, 0, 0, 0, 0,
	710, 719, 751, 704, 0, 0, 0, 0, 0, 0,
	0, 684, 0, 728, 0, 0, 0, 663, 656, 0,
	0, 0, 0, 708, 0, 0, 0, 666, 0, 685,
	752, 0, 650, 258, 660, 314, 0, 756, 766, 705,
	438, 770, 703, 702, 747, 664, 762, 696, 285, 662,
	282, 182, 198, 2285, 694, 324, 363, 369, 761, 681,
	689, 221, 687, 367, 338, 423, 205, 248, 360, 343,
	365, 727, 745, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 966, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 676, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 757, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 749, 787, 337, 368, 211, 425, 388, 671,
	675, 669, 670, 721, 722, 672, 778, 779, 780, 753,
	665, 0, 673, 674, 0, 759, 768, 769, 726, 181,
	195, 288, 783, 357, 251, 452, 432, 428, 651, 668,
	227, 679, 0, 0, 691, 699, 700, 712, 714, 715,
	716, 717, 725, 733, 734, 736, 744, 746, 748, 750,
	755, 765, 786, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 0,
	260, 420, 442, 0, 296, 724, 731, 298, 245, 263,
	273, 739, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	772, 758, 404, 0, 707, 775, 678, 695, 785, 698,
	701, 741, 657, 720, 328, 692, 0, 682, 653, 688,
	654, 680, 709, 235, 677, 760, 723, 774, 286, 232,
	659, 683, 342, 697, 187, 743, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	781, 290, 730, 0, 389, 313, 0, 0, 0, 711,
	764, 718, 754, 706, 742, 667, 729, 776, 693, 738,
	777, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 735, 771, 690, 737,
	230, 274, 237, 229, 406, 782, 763, 0, 0, 202,
	773, 713, 0, 740, 0, 788, 652, 732, 0, 655,
	658, 784, 767, 686, 240, 0, 0, 0, 0, 0,
	0, 0, 710, 719, 751, 704, 0, 0, 0, 0,
	0, 1995, 0, 684, 0, 728, 0, 0, 0, 663,
	656, 0, 0, 0, 0, 708, 0, 0, 0, 666,
	0, 685, 752, 0, 650, 258, 660, 314, 0, 756,
	766, 705, 438, 770, 703, 702, 747, 664, 762, 696,
	285, 662, 282, 182, 198, 0, 694, 324, 363, 369,
	761, 681, 689, 221, 687, 367, 338, 423, 205, 248,
	360, 343, 365, 727, 745, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 966, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 676, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 757, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 749, 787, 337, 368, 211, 425,
	388, 671, 675, 669, 670, 721, 722, 672, 778, 779,
	780, 753, 665, 0, 673, 674, 0, 759, 768, 769,
	726, 181, 195, 288, 783, 357, 251, 452, 432, 428,
	651, 668, 227, 679, 0, 0, 691, 699, 700, 712,
	714, 715, 716, 717, 725, 733, 734, 736, 744, 746,
	748, 750, 755, 765, 786, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 0, 260, 420, 442, 0, 296, 724, 731, 298,
	245, 263, 273, 739, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 772, 758, 404, 0, 707, 775, 678, 695,
	785, 698, 701, 741, 657, 720, 328, 692, 0, 682,
	653, 688, 654, 680, 709, 235, 677, 760, 723, 774,
	286, 232, 659, 683, 342, 697, 187, 743, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 781, 290, 730, 0, 389, 313, 0, 0,
	0, 711, 764, 718, 754, 706, 742, 667, 729, 776,
	693, 738, 777, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 735, 771,
	690, 737, 230, 274, 237, 229, 406, 782, 763, 0,
	0, 202, 773, 713, 0, 740, 0, 788, 652, 732,
	0, 655, 658, 784, 767, 686, 240, 0, 0, 0,
	0, 0, 0, 0, 710, 719, 751, 704, 0, 0,
	0, 0, 0, 1955, 0, 684, 0, 728, 0, 0,
	0, 663, 656, 0, 0, 0, 0, 708, 0, 0,
	0, 666, 0, 685, 752, 0, 650, 258, 660, 314,
	0, 756, 766, 705, 438, 770, 703, 702, 747, 664,
	762, 696, 285, 662, 282, 182, 198, 0, 694, 324,
	363, 369, 761, 681, 689, 221, 687, 367, 338, 423,
	205, 248, 360, 343, 365, 727, 745, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 966, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 676, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 757,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 319, 268, 387, 283, 292, 749, 787, 337, 368,
	211, 425, 388, 671, 675, 669, 670, 721, 722, 672,
	778, 779, 780, 753, 665, 0, 673, 674, 0, 759,
	768, 769, 726, 181, 195, 288, 783, 357, 251, 452,
	432, 428, 651, 668, 227, 679, 0, 0, 691, 699,
	700, 712, 714, 715, 716, 717, 725, 733, 734, 736,
	744, 746, 748, 750, 755, 765, 786, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 0, 260, 420, 442, 0, 296, 724,
	731, 298, 245, 263, 273, 739, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 772, 758, 404, 0, 707, 775,
	678, 695, 785, 698, 701, 741, 657, 720, 328, 692,
	0, 682, 653, 688, 654, 680, 709, 235, 677, 760,
	723, 774, 286, 232, 659, 683, 342, 697, 187, 743,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 781, 290, 730, 0, 389, 313,
	0, 0, 0, 711, 764, 718, 754, 706, 742, 667,
	729, 776, 693, 738, 777, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	735, 771, 690, 737, 230, 274, 237, 229, 406, 782,
	763, 0, 0, 202, 773, 713, 0, 740, 0, 788,
	652, 732, 0, 655, 658, 784, 767, 686, 240, 0,
	0, 0, 0, 0, 0, 0, 710, 719, 751, 704,
	0, 0, 0, 0, 0, 1517, 0, 684, 0, 728,
	0, 0, 0, 663, 656, 0, 0, 0, 0, 708,
	0, 0, 0, 666, 0, 685, 752, 0, 650, 258,
	660, 314, 0, 756, 766, 705, 438, 770, 703, 702,
	747, 664, 762, 696, 285, 662, 282, 182, 198, 0,
	694, 324, 363, 369, 761, 681, 689, 221, 687, 367,
	338, 423, 205, 248, 360, 343, 365, 727, 745, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 966, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 676, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 757, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 319, 268, 387, 283, 292, 749, 787,
	337, 368, 211, 425, 388, 671, 675, 669, 670, 721,
	722, 672, 778, 779, 780, 753, 665, 0, 673, 674,
	0, 759, 768, 769, 726, 181, 195, 288, 783, 357,
	251, 452, 432, 428, 651, 668, 227, 679, 0, 0,
	691, 699, 700, 712, 714, 715, 716, 717, 725, 733,
	734, 736, 744, 746, 748, 750, 755, 765, 786, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 0, 260, 420, 442, 0,
	296, 724, 731, 298, 245, 263, 273, 739, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 772, 758, 404, 0,
	707, 775, 678, 695, 785, 698, 701, 741, 657, 720,
	328, 692, 0, 682, 653, 688, 654, 680, 709, 235,
	677, 760, 723, 774, 286, 232, 659, 683, 342, 697,
	187, 743, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 781, 290, 730, 0,
	389, 313, 0, 0, 0, 711, 764, 718, 754, 706,
	742, 667, 729, 776, 693, 738, 777, 276, 218, 186,
	325, 390, 250, 0, 81, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 735, 771, 690, 737, 230, 274, 237, 229,
	406, 782, 763, 0, 0, 202, 773, 713, 0, 740,
	0, 788, 652, 732, 0, 655, 658, 784, 767, 686,
	240, 0, 0, 0, 0, 0, 0, 0, 710, 719,
	751, 704, 0, 0, 0, 0, 0, 0, 0, 684,
	0, 728, 0, 0, 0, 663, 656, 0, 0, 0,
	0, 708, 0, 0, 0, 666, 0, 685, 752, 0,
	650, 258, 660, 314, 0, 756, 766, 705, 438, 770,
	703, 702, 747, 664, 762, 696, 285, 662, 282, 182,
	198, 0, 694, 324, 363, 369, 761, 681, 689, 221,
	687, 367, 338, 423, 205, 248, 360, 343, 365, 727,
	745, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	966, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	676, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 757, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	749, 787, 337, 368, 211, 425, 388, 671, 675, 669,
	670, 721, 722, 672, 778, 779, 780, 753, 665, 0,
	673, 674, 0, 759, 768, 769, 726, 181, 195, 288,
	783, 357, 251, 452, 432, 428, 651, 668, 227, 679,
	0, 0, 691, 699, 700, 712, 714, 715, 716, 717,
	725, 733, 734, 736, 744, 746, 748, 750, 755, 765,
	786, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 0, 260, 420,
	442, 0, 296, 724, 731, 298, 245, 263, 273, 739,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 772, 758,
	404, 0, 707, 775, 678, 695, 785, 698, 701, 741,
	657, 720, 328, 692, 0, 682, 653, 688, 654, 680,
	709, 235, 677, 760, 723, 774, 286, 232, 659, 683,
	342, 697, 187, 743, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 781, 290,
	730, 0, 389, 313, 0, 0, 0, 711, 764, 718,
	754, 706, 742, 667, 729, 776, 693, 738, 777, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 735, 771, 690, 737, 230, 274,
	237, 229, 406, 782, 763, 0, 0, 202, 773, 713,
	0, 740, 0, 788, 652, 732, 0, 655, 658, 784,
	767, 686, 240, 0, 0, 0, 0, 0, 0, 0,
	710, 719, 751, 704, 0, 0, 0, 0, 0, 0,
	0, 684, 0, 728, 0, 0, 0, 663, 656, 0,
	0, 0, 0, 708, 0, 0, 0, 666, 0, 685,
	752, 0, 650, 258, 660, 314, 0, 756, 766, 705,
	438, 770, 703, 702, 747, 664, 762, 696, 285, 662,
	282, 182, 198, 0, 694, 324, 363, 369, 761, 681,
	689, 221, 687, 367, 338, 423, 205, 248, 360, 343,
	365, 727, 745, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 966, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 676, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 757, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 749, 787, 337, 368, 211, 425, 388, 671,
	675, 669, 670, 721, 722, 672, 778, 779, 780, 753,
	665, 0, 673, 674, 0, 759, 768, 769, 726, 181,
	195, 288, 783, 357, 251, 452, 432, 428, 651, 668,
	227, 679, 0, 0, 691, 699, 700, 712, 714, 715,
	716, 717, 725, 733, 734, 736, 744, 746, 748, 750,
	755, 765, 786, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 0,
	260, 420, 442, 0, 296, 724, 731, 298, 245, 263,
	273, 739, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	772, 758, 404, 0, 707, 775, 678, 695, 785, 698,
	701, 741, 657, 720, 328, 692, 0, 682, 653, 688,
	654, 680, 709, 235, 677, 760, 723, 774, 286, 232,
	659, 683, 342, 697, 187, 743, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	781, 290, 730, 0, 389, 313, 0, 0, 0, 711,
	764, 718, 754, 706, 742, 667, 729, 776, 693, 738,
	777, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 735, 771, 690, 737,
	230, 274, 237, 229, 406, 782, 763, 0, 0, 789,
	773, 713, 0, 740, 0, 788, 652, 732, 0, 655,
	658, 784, 767, 686, 240, 0, 0, 0, 0, 0,
	0, 0, 710, 719, 751, 704, 0, 0, 0, 0,
	0, 0, 0, 684, 0, 728, 0, 0, 0, 663,
	656, 0, 0, 0, 0, 708, 0, 0, 0, 666,
	0, 685, 752, 0, 650, 258, 660, 314, 0, 756,
	766, 705, 438, 770, 703, 702, 747, 664, 762, 696,
	285, 662, 282, 182, 198, 0, 694, 324, 363, 369,
	761, 681, 689, 221, 687, 367, 338, 423, 205, 248,
	360, 343, 365, 727, 745, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 661, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 676, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 757, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 649,
	643, 642, 283, 292, 749, 787, 337, 368, 211, 425,
	388, 671, 675, 669, 670, 721, 722, 672, 778, 779,
	780, 753, 665, 0, 673, 674, 0, 759, 768, 769,
	726, 181, 195, 288, 783, 357, 251, 452, 432, 428,
	651, 668, 227, 679, 0, 0, 691, 699, 700, 712,
	714, 715, 716, 717, 725, 733, 734, 736, 744, 746,
	748, 750, 755, 765, 786, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 0, 260, 420, 442, 0, 296, 724, 731, 298,
	245, 263, 273, 739, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 772, 758, 404, 0, 707, 775, 678, 695,
	785, 698, 701, 741, 657, 720, 328, 692, 0, 682,
	653, 688, 654, 680, 709, 235, 677, 760, 723, 774,
	286, 232, 659, 683, 342, 697, 187, 743, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 781, 290, 730, 0, 389, 313, 0, 0,
	0, 711, 764, 718, 754, 706, 742, 667, 729, 776,
	693, 738, 777, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 735, 771,
	690, 737, 230, 274, 237, 229, 406, 782, 763, 0,
	0, 789, 773, 713, 0, 740, 0, 788, 652, 732,
	0, 655, 658, 784, 767, 686, 240, 0, 0, 0,
	0, 0, 0, 0, 710, 719, 751, 704, 0, 0,
	0, 0, 0, 0, 0, 684, 0, 728, 0, 0,
	0, 663, 656, 0, 0, 0, 0, 708, 0, 0,
	0, 666, 0, 685, 752, 0, 650, 258, 660, 314,
	0, 756, 766, 705, 438, 770, 703, 702, 747, 664,
	762, 696, 285, 662, 282, 182, 198, 0, 694, 324,
	363, 369, 761, 681, 689, 221, 687, 367, 338, 423,
	205, 248, 360, 343, 365, 727, 745, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	1146, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 661, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 676, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 757,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 649, 643, 642, 283, 292, 749, 787, 337, 368,
	211, 425, 388, 671, 675, 669, 670, 721, 722, 672,
	778, 779, 780, 753, 665, 0, 673, 674, 0, 759,
	768, 769, 726, 181, 195, 288, 783, 357, 251, 452,
	432, 428, 651, 668, 227, 679, 0, 0, 691, 699,
	700, 712, 714, 715, 716, 717, 725, 733, 734, 736,
	744, 746, 748, 750, 755, 765, 786, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 0, 260, 420, 442, 0, 296, 724,
	731, 298, 245, 263, 273, 739, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 772, 758, 404, 0, 707, 775,
	678, 695, 785, 698, 701, 741, 657, 720, 328, 692,
	0, 682, 653, 688, 654, 680, 709, 235, 677, 760,
	723, 774, 286, 232, 659, 683, 342, 697, 187, 743,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 781, 290, 730, 0, 389, 313,
	0, 0, 0, 711, 764, 718, 754, 706, 742, 667,
	729, 776, 693, 738, 777, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	735, 771, 690, 737, 230, 274, 237, 229, 406, 782,
	763, 0, 0, 789, 773, 713, 0, 740, 0, 788,
	652, 732, 0, 655, 658, 784, 767, 686, 240, 0,
	0, 0, 0, 0, 0, 0, 710, 719, 751, 704,
	0, 0, 0, 0, 0, 0, 0, 684, 0, 728,
	0, 0, 0, 663, 656, 0, 0, 0, 0, 708,
	0, 0, 0, 666, 0, 685, 752, 0, 650, 258,
	660, 314, 0, 756, 766, 705, 438, 770, 703, 702,
	747, 664, 762, 696, 285, 662, 282, 182, 198, 0,
	694, 324, 363, 369, 761, 681, 689, 221, 687, 367,
	338, 423, 205, 248, 360, 343, 365, 727, 745, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 640, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 661, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 676, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 757, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 649, 643, 642, 283, 292, 749, 787,
	337, 368, 211, 425, 388, 671, 675, 669, 670, 721,
	722, 672, 778, 779, 780, 753, 665, 0, 673, 674,
	0, 759, 768, 769, 726, 181, 195, 288, 783, 357,
	251, 452, 432, 428, 651, 668, 227, 679, 0, 0,
	691, 699, 700, 712, 714, 715, 716, 717, 725, 733,
	734, 736, 744, 746, 748, 750, 755, 765, 786, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 0, 260, 420, 442, 0,
	296, 724, 731, 298, 245, 263, 273, 739, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 1468, 0, 536, 0, 0, 0, 235, 541, 0,
	0, 0, 286, 232, 0, 1469, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 548, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 81, 0, 0, 178, 179, 180, 577, 587,
	588, 589, 590, 578, 584, 0, 0, 209, 579, 216,
	585, 591, 592, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 519, 533, 0, 547, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 531, 629, 0, 0, 0, 562,
	0, 532, 0, 0, 540, 580, 582, 581, 583, 542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 314, 0, 561, 0, 0, 438, 0, 0, 559,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 324, 363, 369, 0, 0, 0, 221, 0, 367,
	338, 423, 205, 248, 360, 343, 365, 0, 0, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 0, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 0, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 568, 560, 552, 554, 569,
	570, 549, 550, 553, 571, 563, 539, 538, 0, 545,
	546, 0, 555, 556, 537, 181, 195, 288, 0, 357,
	251, 452, 432, 428, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 0, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 536, 0, 0, 0, 235, 541, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 548, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 543, 544, 0, 0, 0,
	0, 0, 0, 1541, 0, 276, 218, 186, 325, 390,
	250, 0, 81, 0, 0, 178, 179, 180, 577, 587,
	588, 589, 590, 578, 584, 0, 0, 209, 579, 216,
	585, 591, 592, 1542, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 519, 533, 0, 547, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 531, 0, 0, 0, 0, 562,
	0, 532, 0, 0, 540, 580, 582, 581, 583, 542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 314, 0, 561, 0, 0, 438, 0, 0, 559,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 324, 363, 369, 0, 0, 0, 221, 0, 367,
	338, 423, 205, 248, 360, 343, 365, 0, 0, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 0, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 0, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 568, 560, 552, 554, 569,
	570, 549, 550, 553, 571, 563, 539, 538, 0, 545,
	546, 0, 555, 556, 537, 181, 195, 288, 0, 357,
	251, 452, 432, 428, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 0, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 72, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 536, 0, 0, 0, 235, 541,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 548, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 81, 0, 0, 178, 179, 180, 577,
	587, 588, 589, 590, 578, 584, 0, 0, 209, 579,
	216, 585, 591, 592, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 519, 533, 0, 547, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 531, 0, 0, 0, 0,
	562, 0, 532, 0, 0, 540, 580, 582, 581, 583,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 561, 0, 0, 438, 0, 0,
	559, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 568, 560, 552, 554,
	569, 570, 549, 550, 553, 571, 563, 539, 538, 0,
	545, 546, 0, 555, 556, 537, 181, 195, 288, 80,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 0, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 536, 0, 0, 0, 235, 541,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 548, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 81, 0, 0, 178, 179, 180, 577,
	587, 588, 589, 590, 578, 584, 0, 0, 209, 579,
	216, 585, 591, 592, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 519, 533, 0, 547, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 531, 0, 0, 0, 0,
	562, 0, 532, 0, 0, 540, 580, 582, 581, 583,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 561, 0, 0, 438, 0, 0,
	559, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 2310, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 568, 560, 552, 554,
	569, 570, 549, 550, 553, 571, 563, 539, 538, 0,
	545, 546, 0, 555, 556, 537, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 0, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 536, 0, 0, 0, 235, 541,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 548, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 81, 0, 1114, 178, 179, 180, 577,
	587, 588, 589, 590, 578, 584, 0, 0, 209, 579,
	216, 585, 591, 592, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 519, 533, 0, 547, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 531, 0, 0, 0, 0,
	562, 0, 532, 0, 0, 540, 580, 582, 581, 583,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 561, 0, 0, 438, 0, 0,
	559, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 568, 560, 552, 554,
	569, 570, 549, 550, 553, 571, 563, 539, 538, 0,
	545, 546, 0, 555, 556, 537, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 0, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 536, 0, 0, 0, 235, 541,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 548, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 81, 0, 0, 178, 179, 180, 577,
	587, 588, 589, 590, 578, 584, 0, 0, 209, 579,
	216, 585, 591, 592, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 519, 533, 0, 547, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 531, 629, 0, 0, 0,
	562, 0, 532, 0, 0, 540, 580, 582, 581, 583,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 561, 0, 0, 438, 0, 0,
	559, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 568, 560, 552, 554,
	569, 570, 549, 550, 553, 571, 563, 539, 538, 0,
	545, 546, 0, 555, 556, 537, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 0, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 536, 0, 0, 0, 235, 541,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 548, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 81, 0, 0, 178, 179, 180, 577,
	587, 588, 589, 590, 578, 584, 0, 0, 209, 579,
	216, 585, 591, 592, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 519, 533, 0, 547, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 531, 0, 0, 0, 0,
	562, 0, 532, 0, 0, 540, 580, 582, 581, 583,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 561, 0, 0, 438, 0, 0,
	559, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 568, 560, 552, 554,
	569, 570, 549, 550, 553, 571, 563, 539, 538, 0,
	545, 546, 0, 555, 556, 537, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 0, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 536, 0, 0, 0, 235, 541,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 548, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 81, 0, 0, 178, 179, 180, 577,
	587, 588, 589, 590, 578, 584, 0, 0, 209, 579,
	216, 585, 591, 592, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 533, 0, 547, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 531, 0, 0, 0, 0,
	562, 0, 532, 0, 0, 540, 580, 582, 581, 583,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 561, 0, 0, 438, 0, 0,
	559, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 568, 560, 552, 554,
	569, 570, 549, 550, 553, 571, 563, 539, 538, 0,
	545, 546, 0, 555, 556, 537, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 0, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 0, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 834, 438, 0, 0,
	0, 0, 0, 831, 832, 285, 797, 282, 182, 198,
	825, 829, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 0, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 1134, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 0, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	1136, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 997, 0,
	998, 999, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 0, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 72, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 81, 0, 1114, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	80, 357, 251, 452, 432, 428, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 0, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 72, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 81, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 80, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 1489, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 1307, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 1487, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 797, 282,
	182, 198, 795, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 1489, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 1307, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 1114, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 2194, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 1735, 0, 0, 1736, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 1157, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 1156, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 2291, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 2194, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 81, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 1307, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 1530, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 1136, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 1398, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 1279, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 1277, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 1275, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 1273, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 1271, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 1267, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 1265, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 1263, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 1238, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 1141,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 974, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 611, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 510,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 458, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231,
}

var yyPact = [...]int{
	3557, -1000, -318, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1636, 1781, -1000, -1000, -1000, -1000, 1795,
	-1000, 655, 1437, -1000, 1648, 3806, -1000, 28762, 455, -1000,
	28282, 447, 229, 28762, -1000, 121, -1000, 106, 28762, 114,
	27802, -1000, -1000, -257, 12440, 1593, 1, 0, 28762, -1000,
	1786, 1489, -1000, 243, -1000, -1000, -1000, -1000, -1000, -1000,
	27322, -1000, -1000, -1000, 1653, 1641, 1797, 568, 1591, -1000,
	1706, 1489, -1000, 12440, 1739, 1695, 11960, -1000, 11960, 390,
	-1000, -1000, 9079, -1000, -1000, 15802, 28762, 28762, 226, -1000,
	1648, -1000, -1000, 266, -1000, 294, 1412, -1000, 1410, -1000,
	566, 627, 290, 359, 358, 287, 272, 270, 269, 267,
	265, 264, 262, 298, -1000, 589, 589, -142, -143, 2145,
	343, 343, 343, 416, 1615, 1614, -1000, 679, -1000, 589,
	589, 249, 589, 589, 589, 589, 223, 204, 589, 589,
	589, 589, 589, 589, 589, 589, 589, 589, 589, 589,
	589, 589, 589, 278, 1648, 194, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 28762, 132, 28762, -1000,
	520, 28762, 723, 723, 44, 723, 723, 723, 723, 109,
	474, -2, -1000, 103, 191, 148, 188, 697, 160, 105,
	-1000, -1000, 170, 697, 1077, 579, 88, -1000, 723, 7151,
	7151, 7151, -1000, 1625, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 414, -1000, -1000, -1000, -1000, 28762, 26842, 220,
	600, -1000, -1000, -1000, 131, -1000, -1000, 1263, 793, 12440,
	969, -1000, 1298, 547, -1000, -1000, -1000, -1000, -1000, 497,
	12920, 12920, 12920, 12920, -1000, -1000, 1311, 1311, 1311, 1311,
	12920, 1311, 12920, 1311, 1311, 1311, 1311, 12440, 1311, 1311,
	1311, -1000, 1311, 1311, 1311, 1311, 1311, 1311, 517, 1311,
	1311, 1311, 1311, 1311, -1000, -1000, -1000, -1000, 1311, 1311,
	1311, 1311, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1183, 1154, 1148, 954, -1000, -1000, 10520, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 28762, -1000, 1311, 141, 1706, 1489,
	-1000, 1786, 1735, 243, -1000, 2044, 1304, 1338, 1107, 1489,
	1402, 28762, -1000, 1414, -1000, -1000, -1000, 1528, 1018, 1074,
	-1000, -1000, -1000, -1000, 1147, 12440, -1000, -1000, 1783, -1000,
	13880, 516, 735, 1782, 26362, -1000, 390, 390, 1408, 8597,
	-35, -1000, -1000, -1000, 599, 17722, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1625, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1388, 28762, -1000, -1000, 2249, 1115, -1000, 1435, -1000, 1386,
	-1000, 1418, 1447, 445, 1115, 434, 433, 431, -1000, -94,
	-1000, -1000, -1000, -1000, -1000, 589, 589, 297, 3806, 4299,
	-1000, -1000, -1000, 25882, 1434, 1115, -1000, 1433, -1000, 678,
	443, 482, 482, 1115, -1000, -1000, 28762, 1115, 652, 649,
	28762, 28762, -1000, 25402, -1000, 24922, 24442, 932, 28762, 23962,
	23482, 23002, 22522, 22042, -1000, 1499, -1000, 1462, -1000, -1000,
	-1000, 28762, 28762, 28762, 231, -1000, -1000, 28762, 1115, -1000,
	-1000, 931, 927, 589, 589, 926, 1066, 1062, 1051, 589,
	589, 919, 1047, 19642, 251, 916, 912, 908, 934, 1043,
	166, 896, 876, 904, 28762, 1432, 28762, -1000, 182, 531,
	304, 598, 1648, 1590, 1405, 403, 444, 1115, 381, 381,
	-1000, 7633, -1000, -1000, 1040, 12440, -1000, 703, 697, 697,
	-1000, -1000, -1000, -1000, -1000, -1000, 723, 28762, 703, -1000,
	-1000, -1000, 697, 723, 28762, 723, 723, 723, 723, 697,
	697, 697, 723, 28762, 28762, 28762, 28762, 28762, 28762, 28762,
	28762, 28762, 7151, 7151, 7151, 579, 723, -266, -1000, 1039,
	-1000, 1487, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	112, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-83, 1404, 21562, -1000, -267, -268, -271, -273, -1000, -1000,
	-1000, -275, -277, -1000, -1000, -1000, 12440, 12440, 12440, 12440,
	-1000, 764, 12920, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	827, 780, 12920, 12920, 12920, 12920, 12920, 12920, 12920, 12920,
	12920, 12920, 12920, 12920, 12920, 12920, 12920, 743, 1034, 1028,
	547, 547, 547, 547, -1000, 11960, 12440, 12440, 547, -1000,
	1115, 21082, 11960, 11960, 12440, 1624, 608, 793, 28762, -1000,
	1107, -1000, -1000, -1000, 830, -1000, 28762, 28762, 9559, 7633,
	11960, 11960, 11960, 11960, 11960, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1392, 1299, 1374, -1000, 1403,
	-1000, -154, 15322, 12440, 1025, -1000, -1000, -1000, 1706, -1000,
	1706, 1392, 2027, 1533, 11960, -1000, -1000, 2027, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1198, -1000, 28762, 1402,
	1677, 28762, 1526, 1024, 231, -1000, 12440, 12440, 1401, -1000,
	881, 28762, -1000, -1000, 20602, -1000, -1000, 6669, -1000, 28762,
	261, 28762, -1000, 19162, 20122, 8115, -35, -1000, 8115, 1376,
	-1000, -23, -31, 10039, 509, -1000, -1000, -1000, 2145, 13400,
	1186, 1604, 38, -1000, -1000, -1000, 1418, -1000, 1418, 1418,
	1418, 1418, 231, 231, 231, 231, -1000, -1000, -1000, -1000,
	-1000, 1431, 1430, -1000, 1418, 1418, 1418, 1418, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1428, 1428, 1428, 1422, 1422,
	334, -1000, 12440, 212, 28762, 1657, 894, 182, 385, 1464,
	1115, 1115, 1115, 385, -1000, 1220, 1212, -1000, 1399, -1000,
	-1000, 1738, -1000, -1000, 587, 718, 716, 540, 28762, 149,
	254, -1000, 319, -1000, 28762, 1115, 646, 482, 1115, -1000,
	1115, -1000, -1000, -1000, -1000, 512, -1000, -1000, 1115, 1397,
	-1000, 1391, 736, 714, 731, 702, 1397, -1000, -1000, -119,
	1397, -1000, 1397, -1000, 1397, -1000, 1397, -1000, 1397, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 636, 28762, 149,
	743, -1000, 402, -1000, -1000, 743, 743, -1000, -1000, -1000,
	-1000, 1022, 1021, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-316, 28762, -1000, 161, 593, 245, 280, 244, 28762, 137,
	1680, 218, 201, 28762, 28762, 381, 1483, 28762, 1662, 28762,
	-1000, -1000, -1000, -1000, 793, 28762, -1000, -1000, 723, 723,
	-1000, -1000, 28762, 723, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 723, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	28762, 28762, -1000, -1000, -1000, -1000, -1000, 230, -27, 211,
	-1000, -1000, -1000, -1000, -1000, 1691, -1000, 793, 625, 620,
	-1000, -1000, -1000, 875, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 827, 12920, 12920, 12920, 2213, 363, 729, 888, 933,
	792, 792, 742, 742, 553, 553, 553, 553, 553, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1345, -1000, 1172, 849,
	1107, -1000, 1345, 1345, 1033, 11960, -1000, -1000, 648, -1000,
	12440, 1107, -1000, -1000, 1107, 1396, 1395, 1107, 11960, 11960,
	1390, 1311, 507, -1000, 1345, 1107, 1107, 1345, 1345, 1107,
	-1000, 28762, -1000, -251, -1000, -72, 504, 1311, -1000, 19642,
	1107, 1263, -1000, -1000, -1000, -1000, -1000, 17242, 1451, 2027,
	-1000, -1000, 1311, 1372, -1000, -1000, 231, 22, 772, 793,
	793, 12440, -1000, -1000, -1000, -1000, -1000, -1000, 501, 1758,
	306, 1311, -1000, 1288, 1639, -1000, -1000, -1000, 1675, 14842,
	28762, 1409, 1378, -1000, 496, -1000, 1376, -35, -44, -1000,
	-1000, -1000, -1000, 793, -1000, 1174, -1000, 2887, -1000, 374,
	-1000, -1000, -1000, -1000, 905, 1669, 1602, 33, -1000, -1000,
	-1000, 231, 231, -1000, -1000, 509, 509, 509, 509, 1019,
	1019, -1000, -1000, -1000, -1000, -1000, 879, -1000, -1000, -1000,
	802, -1000, -1000, 1087, 1491, 212, -1000, -1000, 589, 976,
	1606, 28762, -1000, -1000, 1169, 161, 28762, 618, 1482, -1000,
	1464, 1464, 1464, 28762, -1000, -1000, -1000, -1000, 317, 28762,
	1366, -1000, 144, -1000, 1151, 28762, -1000, 1350, 1427, 1115,
	1115, -1000, -1000, 7633, -1000, 28762, 1311, -1000, -1000, -1000,
	-1000, 438, 1647, 1646, 149, 144, 509, 1115, -1000, -1000,
	-1000, -1000, -1000, -319, 1347, 420, 153, 203, 28762, 28762,
	28762, 28762, 28762, 485, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 198, 400, -1000, 28762, 28762, 429, -1000, -1000, -1000,
	697, -1000, -1000, 697, -1000, -1000, -1000, -1000, -1000, 1633,
	28762, -28, -290, -1000, -287, -1000, -1000, -1000, -1000, 2196,
	357, 729, 12920, 12920, 11960, -111, 473, 473, 743, -1000,
	-1000, -1000, 12440, 12440, 1380, 603, -1000, 12440, 692, -1000,
	-1000, 12440, 12440, -1000, 1345, 1345, 11960, 7633, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 430, 427, 423,
	28762, -1000, -1000, 1722, -1000, 1559, 1556, 1780, 1758, -1000,
	19162, 2027, -1000, -1000, 28762, -245, -1000, 1586, 1549, -1000,
	-1000, -1000, -1000, 6187, 1706, 12440, 1481, 28762, 1311, -1000,
	14361, 28762, 28762, 19162, 19162, 19162, 19162, 19162, -1000, 1502,
	1501, -1000, 1520, 1513, 1541, 28762, -1000, 1342, 1107, 1735,
	14842, 261, 1284, 19162, -1000, -1000, 19162, 28762, 5705, -1000,
	-1000, -46, -37, -1000, -1000, -1000, 2145, -1000, -1000, -1000,
	-1000, 734, 1222, 1793, -1000, 974, -1000, -1000, 643, 642,
	-1000, 28762, 1425, -1000, -1000, -1000, 509, 509, -1000, -1000,
	-1000, -1000, 1340, -1000, 1322, 1314, 1303, 81, -1000, 1445,
	1631, 589, 589, -1000, 791, -1000, 1115, -1000, -1000, 419,
	-1000, 1661, 28762, 1477, 1476, 1475, -1000, 1733, 1273, 28762,
	-1000, -1000, 28762, -1000, 1554, 212, 28762, -1000, -1000, -1000,
	-1000, 254, 28762, -1000, 1310, 144, -1000, -1000, -1000, -1000,
	-1000, -1000, 28762, 164, -1000, 1424, 1010, -1000, 1454, -1000,
	-1000, -1000, -1000, 123, 233, -1000, 28762, 422, 1491, 28762,
	-1000, -1000, -1000, 723, 723, -1000, -1000, 1623, -1000, 1115,
	12920, 12920, -1000, 547, -1000, 1311, 1107, 1418, 1418, -1000,
	1418, 1422, -1000, 1418, 95, 1418, 86, 1107, 1107, 1007,
	967, -105, -1000, 793, 12440, 1079, 1073, -1000, -1000, 1107,
	-1000, 1311, 1311, 1311, 1219, 28762, -1000, -1000, -1000, -1000,
	1758, 1744, 1301, -1000, -1000, 22, 285, -1000, 1574, 1549,
	-1000, 1731, 1581, 1730, -1000, -1000, -1000, 793, -1000, 1650,
	1192, -1000, 588, 1251, -1000, -1000, 11480, 1291, 1538, 494,
	1219, 1245, 1639, 1459, 1474, 1655, -1000, -1000, -1000, -1000,
	1500, -1000, 1442, -1000, -1000, 1414, -1000, -1000, 1299, 1758,
	19162, 1243, 1243, -1000, 491, -1000, -1000, -1000, -1000, -1000,
	-1000, 12440, -1000, -1000, -1000, -1000, -1000, -1000, 892, 892,
	-126, -1000, -1000, -1000, 1417, 12440, -1000, -1000, 231, 971,
	231, 771, -1000, 747, -1000, -1000, -192, -1000, -1000, 1423,
	1497, -1000, -1000, 28762, -1000, -1000, 28762, 28762, 28762, 28762,
	-1000, -1000, 247, -1000, 1210, 1203, -1000, -151, -1000, 12440,
	-1000, 1414, -1000, -1000, -1000, 1135, -1000, -121, 1115, 28762,
	28762, 28762, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 547, 12920, -1000, -1000, 284, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 12440, -1000, 12440, -1000, 1706, 970,
	793, 12440, 12440, -1000, 16762, 18682, 18682, 16282, -1000, 1744,
	1742, 1726, 1573, 1575, 1575, 1574, -1000, 1721, 1719, -1000,
	966, 1716, 964, 639, -1000, 28762, 12440, 1311, -1000, 224,
	28762, 1311, 28762, -1000, 1736, -1000, -1000, 12440, 1416, -1000,
	12440, -1000, -1000, -1000, -1000, -1000, 1736, 1243, -1000, -1000,
	559, 811, -1000, -1000, -1000, 28762, 1041, 509, -1000, 509,
	1124, 1119, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1414, -1000, -1000, -1000, 1273, 234, 301, -1000, 254, -1000,
	-156, -157, 811, 1667, -1000, -1000, 7633, -1000, -1000, 1393,
	1461, -1000, 288, -1000, -1000, 811, 811, 1107, -1000, 811,
	811, 1195, -1000, -1000, -1000, 1195, 1195, 504, 1742, -1000,
	12440, 12440, 1571, 886, -1000, -1000, -1000, -1000, 961, 956,
	-1000, 950, -1000, 1790, -1000, 793, -1000, 1311, -1000, 487,
	1251, -1000, 1706, 793, 28762, 793, 1706, -1000, -1000, 1185,
	-1000, -1000, -1000, -1000, -1000, 1664, 1311, -1000, -1000, -1000,
	-1000, -1000, 243, 1265, -1000, 576, 28762, 28762, 1107, 173,
	-124, -1000, -1000, -1000, -1000, -1000, 18202, -1000, -1000, -1000,
	-1000, -1000, 793, 1263, -1000, 826, -1000, -1000, -1000, -1000,
	-1000, 28762, 1251, 28762, -1000, 1156, -1000, 1471, 706, 243,
	11000, -120, 7633, 5223, 1104, -1000, -1000, 1518, -117, -136,
	-1000, -1000, -1000, -1000, 1217, -1000, -1000, 1466, -1000, 1762,
	-1000, -1000, -1000, 700, 813, -1000, -1000, -1000, -120, 811,
	1107, -1000, -24, -1000, -1000, -1000, -1000, -1000, 1454, -1000,
	1508, -1000, -1000, 1764, 502, 502, -1000, -1000, -1000, -1000,
	-1000, 328, -1000, -1000, -121, -125, -1000, -1000, -1000, 324,
	872, -1000, 167, -1000, -127, -1000, -1000, -1000, -1000, -137,
	-1000,
}

var yyPgo = [...]int{
	0, 2103, 17, 66, 150, 6, 151, 70, 2102, 2101,
	2100, 2099, 165, 162, 157, 2094, 2093, 2091, 2087, 2086,
	2085, 2083, 2082, 2081, 2079, 159, 133, 149, 2078, 2077,
	2075, 82, 143, 50, 62, 147, 2074, 2073, 46, 2072,
	2071, 2070, 171, 170, 639, 2069, 164, 80, 2068, 2067,
	2064, 2057, 2055, 2054, 2053, 2051, 2050, 2047, 2046, 2041,
	2036, 2035, 280, 2031, 2029, 4, 2028, 49, 2026, 2025,
	2024, 2019, 2005, 114, 2004, 2003, 2001, 152, 1998, 1995,
	290, 76, 85, 1993, 1992, 79, 154, 1989, 83, 122,
	1988, 1987, 2556, 1985, 58, 57, 1984, 158, 41, 56,
	34, 1982, 1981, 1980, 63, 44, 1978, 75, 42, 1977,
	74, 68, 1976, 45, 1975, 1973, 84, 1972, 1970, 1969,
	67, 1968, 1967, 3165, 1966, 64, 98, 20, 30, 1965,
	1964, 1962, 1960, 1954, 31, 1953, 1951, 1948, 110, 13,
	1944, 14, 11, 24, 137, 1942, 19, 52, 1941, 101,
	1940, 1939, 38, 15, 27, 1938, 23, 105, 121, 35,
	104, 113, 1934, 1931, 26, 33, 1929, 1917, 1910, 1907,
	1905, 1902, 36, 1901, 28, 1899, 156, 1898, 12, 32,
	43, 73, 163, 39, 16, 1897, 132, 1896, 25, 129,
	99, 127, 1895, 1893, 1891, 142, 172, 1889, 1888, 55,
	134, 115, 118, 1885, 180, 1882, 1880, 60, 1062, 1924,
	9, 128, 1879, 1878, 1537, 90, 111, 29, 1877, 130,
	1876, 1875, 1874, 153, 141, 86, 806, 77, 1871, 1870,
	1868, 1867, 1865, 1864, 1861, 47, 155, 37, 102, 145,
	40, 1858, 1856, 1853, 88, 97, 1851, 125, 124, 95,
	126, 1848, 136, 123, 92, 1846, 100, 1845, 1844, 1840,
	1839, 65, 1835, 1832, 1830, 1828, 131, 116, 87, 72,
	1825, 71, 93, 119, 117, 1824, 21, 146, 7, 1823,
	1, 0, 1822, 3, 138, 178, 135, 1820, 1819, 2,
	1818, 5, 1817, 1816, 120, 1815, 1814, 1811, 10, 22,
	8, 1810, 1809, 2939, 1744, 96, 1796, 161,
}

//line sql.y:5616
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 301, 302, 302, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 281, 281, 281, 284, 284,
	23, 57, 25, 25, 24, 24, 27, 27, 26, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 5, 5, 5, 5, 7,
	7, 7, 7, 7, 10, 11, 6, 6, 12, 12,
	69, 69, 13, 14, 14, 14, 14, 305, 305, 118,
	118, 116, 116, 117, 117, 181, 181, 15, 16, 16,
	191, 191, 190, 190, 190, 192, 192, 192, 192, 226,
	226, 17, 17, 17, 17, 17, 78, 78, 283, 283,
	282, 280, 280, 279, 279, 278, 29, 30, 39, 39,
	39, 39, 40, 41, 285, 285, 257, 45, 45, 44,
	44, 44, 44, 46, 46, 43, 43, 42, 42, 259,
	259, 246, 246, 258, 258, 258, 258, 258, 258, 258,
	245, 245, 91, 91, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 297, 297, 163, 163, 163, 163, 163,
	163, 96, 96, 104, 104, 104, 104, 94, 94, 95,
	93, 93, 93, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 103, 103, 100, 100, 101, 101, 101, 101,
	101, 101, 298, 298, 298, 298, 228, 228, 228, 228,
	231, 231, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 230, 230, 230, 230, 230, 232, 232, 232, 232,
	232, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 234, 234, 234, 234,
	234, 234, 234, 234, 244, 244, 235, 235, 239, 239,
	240, 240, 240, 241, 241, 241, 242, 242, 237, 237,
	237, 237, 238, 238, 238, 247, 271, 271, 270, 270,
	268, 268, 268, 268, 256, 256, 265, 265, 265, 265,
	265, 255, 255, 251, 251, 251, 252, 252, 253, 253,
	250, 250, 254, 254, 267, 267, 266, 248, 248, 249,
	249, 273, 299, 299, 299, 299, 300, 300, 274, 290,
	291, 289, 289, 289, 289, 289, 67, 67, 67, 203,
	203, 203, 263, 263, 262, 262, 262, 264, 264, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 198, 198, 198,
	288, 288, 288, 288, 288, 288, 287, 287, 287, 260,
	260, 260, 286, 286, 47, 47, 147, 147, 36, 36,
	36, 36, 36, 36, 35, 35, 35, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	37, 37, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 243, 243, 243, 275, 275, 276, 276, 19,
	28, 28, 20, 20, 20, 20, 21, 21, 48, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 292, 292, 197,
	197, 205, 205, 196, 196, 219, 219, 219, 199, 199,
	199, 200, 200, 296, 296, 296, 50, 50, 52, 52,
	53, 54, 54, 221, 221, 222, 222, 55, 56, 68,
	68, 68, 68, 68, 68, 70, 70, 70, 9, 9,
	9, 9, 64, 64, 64, 8, 8, 51, 51, 58,
	293, 293, 294, 295, 295, 295, 295, 59, 61, 22,
	22, 22, 22, 22, 22, 84, 84, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 79,
	79, 79, 74, 74, 306, 62, 63, 63, 77, 77,
	77, 71, 71, 71, 76, 76, 76, 81, 81, 83,
	83, 83, 83, 83, 85, 85, 85, 85, 85, 85,
	85, 80, 80, 82, 82, 82, 82, 212, 212, 212,
	211, 211, 107, 107, 109, 108, 108, 110, 110, 111,
	111, 111, 145, 126, 126, 179, 179, 178, 178, 180,
	180, 180, 180, 182, 182, 112, 112, 112, 112, 113,
	113, 114, 114, 115, 115, 220, 220, 217, 217, 217,
	216, 216, 119, 119, 119, 121, 120, 120, 120, 120,
	122, 122, 124, 124, 123, 123, 125, 127, 127, 127,
	127, 127, 128, 128, 92, 92, 92, 92, 92, 92,
	102, 102, 102, 102, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 97, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 194, 194, 129, 129, 137, 137, 137, 137, 130,
	130, 130, 130, 130, 130, 130, 138, 138, 138, 144,
	139, 139, 135, 135, 135, 135, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 134, 134, 134, 134,
	134, 134, 134, 307, 307, 236, 236, 236, 136, 136,
	136, 136, 136, 75, 75, 75, 75, 75, 225, 225,
	225, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 150, 150, 72, 72, 148, 148,
	149, 151, 151, 146, 146, 146, 132, 132, 132, 152,
	152, 153, 153, 154, 154, 156, 155, 155, 157, 158,
	158, 158, 159, 159, 160, 160, 160, 38, 38, 38,
	38, 38, 33, 33, 33, 33, 34, 34, 34, 86,
	86, 86, 86, 88, 88, 87, 87, 65, 65, 66,
	66, 66, 89, 89, 90, 90, 90, 90, 176, 176,
	161, 161, 161, 168, 168, 168, 164, 164, 166, 166,
	166, 167, 167, 167, 165, 173, 173, 175, 175, 174,
	174, 170, 170, 171, 171, 172, 172, 172, 169, 169,
	131, 131, 131, 131, 131, 177, 177, 177, 177, 183,
	183, 141, 141, 143, 143, 142, 106, 184, 184, 188,
	185, 185, 189, 189, 189, 189, 189, 186, 186, 187,
	187, 213, 213, 213, 193, 193, 204, 204, 201, 201,
	202, 202, 195, 195, 206, 206, 206, 60, 140, 140,
	272, 272, 269, 209, 209, 210, 210, 214, 214, 218,
	218, 215, 215, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 303, 304, 223,
	224, 224, 224,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 10, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 4, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	4, 9, 0, 2, 0, 2, 3, 5, 3, 4,
	2, 3, 2, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 4, 4, 2, 2, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 0, 2,
	2, 2, 0, 2, 2, 5, 0, 1, 1, 2,
	1, 3, 2, 3, 0, 1, 4, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 1, 3,
	1, 7, 5, 6, 6, 7, 0, 1, 5, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 0,
	1, 2, 0, 1, 1, 3, 2, 1, 2, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 6, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 4, 4, 2, 11, 3, 6, 8, 6,
	6, 6, 13, 8, 6, 10, 5, 5, 5, 5,
	5, 3, 7, 4, 4, 4, 4, 3, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 2, 2, 1, 3, 8, 8, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 4,
	2, 4, 5, 4, 4, 4, 4, 4, 3, 3,
	3, 5, 2, 3, 3, 3, 3, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 3, 3, 7, 0, 3, 1, 3, 1,
	1, 3, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 5, 4,
	5, 5, 0, 2, 3, 3, 3, 2, 3, 1,
	3, 4, 3, 1, 3, 4, 5, 6, 3, 4,
	5, 6, 3, 4, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 3, 1, 1, 2, 2, 2, 2, 1,
	1, 2, 9, 6, 6, 6, 2, 2, 3, 3,
	3, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 5, 5, 6, 4, 4, 8, 6,
	8, 6, 8, 5, 4, 2, 2, 1, 2, 2,
	2, 8, 8, 0, 2, 0, 2, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 2, 2, 0,
	3, 0, 2, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 2, 4,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -301, -1, -5, -10, -11, -12, -13, -14, -15,
	-16, -17, -18, -19, -20, -21, -48, -49, -50, -52,
	-53, -54, -55, -56, -8, -51, -22, -23, -57, -58,
	-59, -60, -61, -3, -2, -7, 7, 8, -69, -24,
	30, -29, -39, 164, -40, -30, 165, -41, 167, 166,
	202, 168, 195, 72, 241, 242, 244, 245, 246, 247,
	-70, 200, 201, 170, 34, 43, 31, 32, 35, 173,
	-4, -25, 6, -303, 9, 346, 197, 196, 26, -6,
	359, 83, -302, 487, -176, -161, 20, 31, 27, -160,
	-156, -77, -161, 18, 16, 5, -62, -306, -62, -62,
	10, 11, -62, -257, -259, 83, 138, 83, -62, -45,
	-44, -43, -42, -46, 29, -36, -37, -277, -35, -32,
	169, 166, 210, 105, 106, 202, 203, 204, 168, 186,
	201, 205, 200, 219, -31, 78, 31, 359, 362, -264,
	165, 171, 172, 347, 108, 107, 73, 167, -261, 291,
	464, -46, 466, 98, 100, 465, 42, 176, 467, 468,
	469, 470, 185, 471, 472, 473, 474, 480, 481, 482,
	483, 109, 5, -62, -218, -214, -281, -208, 86, 87,
	88, 356, 188, 390, 391, 235, 78, 39, 291, 464,
	241, 255, 249, 276, 268, 357, 392, 238, 189, 223,
	461, 266, 114, 466, 393, 203, 296, 297, 298, 98,
	244, 333, 479, 240, 394, 477, 100, 465, 77, 49,
	42, 198, 264, 260, 467, 224, 395, 367, 217, 108,
	105, 486, 34, 258, 48, 28, 476, 107, 47, 468,
	129, 396, 469, 300, 281, 455, 46, 301, 204, 397,
	81, 361, 463, 302, 259, 303, 234, 475, 170, 398,
	447, 304, 305, 456, 399, 282, 286, 400, 325, 306,
	50, 401, 402, 457, 106, 403, 76, 470, 253, 254,
	404, 232, 187, 327, 280, 185, 33, 307, 358, 236,
	56, 211, 328, 44, 284, 43, 451, 405, 454, 279,
	275, 51, 406, 407, 408, 409, 471, 278, 252, 274,
	485, 229, 472, 60, 172, 288, 287, 289, 218, 324,
	271, 410, 411, 412, 192, 79, 413, 261, 19, 414,
	415, 308, 225, 416, 54, 417, 418, 331, 201, 419,
	52, 473, 37, 206, 474, 420, 421, 422, 423, 424,
	310, 425, 309, 283, 285, 213, 311, 360, 426, 257,
	205, 478, 427, 193, 462, 207, 210, 200, 332, 194,
	428, 429, 430, 431, 432, 239, 433, 434, 245, 480,
	41, 435, 436, 437, 438, 233, 228, 326, 335, 59,
	80, 293, 439, 460, 251, 226, 440, 242, 53, 481,
	482, 483, 220, 484, 7, 313, 109, 230, 231, 45,
	272, 212, 441, 442, 262, 263, 277, 250, 273, 243,
	448, 214, 314, 202, 443, 334, 227, 294, 364, 219,
	315, 459, 363, 270, 267, 221, 444, 316, 177, 215,
	216, 445, 449, 317, 318, 237, 319, 320, 321, 322,
	323, 222, 362, 248, 265, 295, 175, -62, 175, -123,
	-214, 175, -186, 297, -205, 299, 312, 307, 317, 305,
	-197, 308, 310, 213, -296, 325, 175, 314, 164, 155,
	300, 309, 318, 319, 237, 320, 323, 222, -292, -281,
	469, 484, 114, 269, 304, 302, 326, 451, 322, 321,
	-214, 243, -221, 248, -209, -281, -208, 246, -123, -68,
	447, 168, -223, -223, -79, 451, 453, -139, -92, 122,
	-102, -105, -97, -98, -133, -134, -135, -136, -103, -146,
	144, 145, 152, 123, -144, -106, 24, 355, 348, 347,
	155, 29, 160, 66, 67, 350, 351, 125, 55, 342,
	343, -104, 338, 344, 339, 353, 354, -209, -214, 180,
	337, 174, 150, 346, -99, -95, -2, -142, 336, 340,
	341, 345, -281, -208, -101, -100, -129, 89, 94, 99,
	156, 158, 157, 159, 95, 101, -303, 90, 91, 92,
	93, 102, 103, 42, 313, 313, -123, -62, -154, -77,
	-156, -4, -2, -303, 6, -62, -2, -3, -7, -25,
	-27, 386, -26, -214, -161, -176, 10, 140, 40, 48,
	-159, -160, -6, -2, -92, 17, 21, 22, -82, 146,
	-92, -214, -63, -82, -195, 179, -62, -62, -185, -226,
	243, -189, 326, 325, -210, -187, -209, -207, -186, 324,
	169, 365, 121, 23, 25, 124, 155, 17, 125, 35,
	171, 269, 186, 154, 182, 347, 164, 70, 366, 338,
	339, 336, 342, 349, 350, 337, 299, 29, 11, 368,
	26, 196, 22, 36, 148, 166, 128, 199, 24, 197,
	103, 371, 20, 73, 191, 12, 184, 38, 14, 372,
	373, 15, 180, 179, 140, 176, 68, 9, 160, 27,
	137, 64, 374, 116, 375, 376, 377, 378, 66, 138,
	18, 340, 341, 31, 452, 379, 355, 208, 150, 71,
	57, 453, 122, 380, 381, 101, 382, 104, 74, 458,
	118, 16, 69, 40, 383, 209, 384, 181, 385, 329,
	386, 139, 167, 346, 67, 387, 174, 312, 6, 352,
	30, 195, 183, 111, 65, 388, 175, 127, 353, 354,
	178, 102, 5, 115, 32, 10, 72, 75, 343, 344,
	345, 55, 110, 359, 126, 13, 389, 330, 120, 114,
	-258, 138, -245, -249, -209, 190, -274, 186, -123, -267,
	-266, -209, -78, -204, 176, 184, 183, 115, -285, 118,
	230, 337, 174, -42, -43, -186, 154, 207, 84, 84,
	-249, -248, -247, -286, 209, 190, -273, -265, 182, 191,
	-255, 183, 184, -250, 176, 116, -286, -250, 181, 191,
	209, 209, 109, 209, 109, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 206, -256, 130, -256, 363, 363,
	-261, -286, -286, -286, 178, 33, 33, -206, -250, 178,
	23, -256, -256, -186, 154, -256, -256, -256, -256, 217,
	217, -256, -256, -256, -256, -256, -256, -256, -256, -256,
	-256, -256, -256, -256, -256, -256, 175, -285, -86, 323,
	237, 78, -44, 219, -28, -123, -204, 176, 177, -285,
	-123, 161, -123, -199, 138, 13, -199, -196, 313, 311,
	298, 303, -199, -199, -199, -199, 220, 296, -251, 176,
	33, 187, 313, 220, 296, 220, 221, 220, 221, 306,
	316, 220, -219, 12, 140, 337, 301, 305, 213, 175,
	214, 177, 315, -281, 454, 221, -219, 90, -200, 138,
	313, 216, -199, -224, -303, -210, 269, -224, -224, 30,
	178, -209, -64, -209, 90, -9, -5, -13, -12, -14,
	130, -84, 313, -73, 155, 469, 455, 456, 457, 454,
	310, 462, 460, 458, 220, 459, 84, 118, 120, 121,
	-92, 137, -130, 130, 131, 132, 133, 134, 135, 136,
	140, 122, 124, 138, 139, 119, 141, 142, 143, 144,
	145, 146, 147, 149, 148, 150, 151, 154, 162, 163,
	-98, -98, -98, -98, -144, -303, -303, -303, -98, -194,
	-303, -98, -303, -303, -303, -303, -150, -92, -303, -307,
	-303, -307, -307, -236, -303, -236, -303, -303, -303, 161,
	-303, -303, -303, -303, -303, -236, -236, -236, -236, 89,
	94, 99, 90, 89, 94, 99, 90, 89, 94, 99,
	90, 89, 94, 99, 90, -2, -3, -139, -223, -293,
	-294, -126, -123, -303, 237, -159, -6, -2, -154, -160,
	-156, -2, -62, -71, -83, 61, 62, -85, 22, 36,
	65, 63, 21, -304, 85, -304, -176, -304, 84, -27,
	-179, 83, 59, 41, 90, 90, 84, 19, -155, -157,
	-92, 12, -212, -211, 23, -209, 90, 161, 97, 12,
	-124, 27, -123, -195, -195, 84, 243, -189, -226, -191,
	-190, 327, 329, 130, -213, -209, 90, 29, 85, 84,
	-123, -228, -231, -233, -232, -234, -229, -230, 266, 267,
	155, 270, 272, 273, 274, 275, 276, 277, 278, 279,
	280, 281, 30, 198, 262, 263, 264, 265, 282, 283,
	284, 285, 286, 287, 288, 289, 249, 268, 357, 250,
	251, 252, 253, 254, 255, 257, 258, 259, 260, 261,
	-284, -281, 83, 85, 84, -235, 83, -86, 175, -281,
	176, 176, 176, -62, 346, -256, -256, 206, -35, -32,
	-277, 16, -31, -32, 169, 105, 106, 166, 83, -245,
	83, -254, -284, -281, 83, 116, 181, 115, -253, -250,
	-253, -254, -281, -146, -209, -214, -281, 116, 116, -182,
	-209, -182, -182, 21, -182, 21, -182, 21, 92, -209,
	-182, 21, -182, 21, -182, 21, -182, 21, -182, 21,
	29, 76, 77, 29, 79, 80, 81, -146, -146, -245,
	-186, -123, -281, 92, 92, -256, -256, 92, 90, 90,
	90, -256, -256, 92, 90, -216, -214, 90, -287, 192,
	234, 236, 92, 92, 92, 92, 29, 90, -288, 29,
	476, 475, 477, 478, 479, 92, 29, 92, 29, 92,
	-209, 83, -123, -89, 224, 164, 166, 169, 74, 90,
	238, 130, 42, 84, 178, 175, -281, -201, 180, -201,
	-215, -214, -207, 90, -92, -252, 12, 140, -219, -219,
	-199, -123, -252, -219, -199, -123, -199, -199, -199, -199,
	-219, -219, -219, -199, -214, -214, -123, -123, -123, -123,
	-123, -123, -123, -224, -224, -224, -200, -199, 454, 90,
	74, -222, 246, 280, 448, 449, 450, 84, 359, -116,
	-123, 454, 454, 454, 454, 454, 454, -92, -92, -92,
	-92, -137, 101, 122, 102, 103, -105, -138, -142, -144,
	96, 140, 124, 138, 139, -97, -98, -97, -97, -97,
	-97, -97, -97, -97, -97, -97, -97, -97, -97, -97,
	-225, -281, 90, 155, 90, 90, -80, -82, -92, -92,
	-281, -209, -80, -80, -92, -76, 22, 36, -148, -149,
	126, -146, -304, -304, 92, -209, -209, -81, 22, 36,
	-80, -210, -215, -207, -80, -81, -81, -80, -80, -176,
	-304, 84, -295, 329, 330, 452, -217, 209, -216, 23,
	-140, -139, 90, -159, -159, 61, 62, 57, -80, -85,
	-304, -26, 23, -178, -209, 60, 90, -237, -186, -92,
	-92, 84, -158, 25, 26, -123, -211, 146, -215, -123,
	-181, 209, -123, -108, -110, -111, -112, -126, -145, -303,
	12, -116, -117, -125, -214, -189, -191, 84, 328, 330,
	331, 74, 104, -92, -238, 154, -263, -262, -261, -245,
	-247, -248, -249, 85, -162, -91, 38, -241, 294, 293,
	-235, -235, -235, -235, -235, -237, -237, -237, -237, 83,
	83, -235, -235, -235, -235, -239, 83, -239, -239, -240,
	83, -240, -274, -92, -271, -270, -268, -269, 185, 98,
	359, 75, -266, -158, 92, -89, -202, 180, -272, -269,
	-281, -281, -281, -202, -281, 90, -281, 90, 84, 17,
	-246, -245, -47, 234, -276, 209, -273, -267, -254, 116,
	-253, -254, -254, 161, -281, 84, 27, 109, 109, 109,
	109, 359, 166, 30, -245, -47, -225, 178, -225, -225,
	90, 90, -198, 484, -116, -88, 226, 130, 215, 215,
	175, 175, 228, -123, 239, 240, 238, 21, 227, 229,
	231, 217, -123, -123, -201, 74, -118, -123, 24, -214,
	-123, -199, -199, -123, -199, -199, -123, -209, -73, 329,
	84, 359, 20, -74, 20, 101, 102, 103, -138, -97,
	-98, -97, 121, 199, 84, -304, 23, 84, 75, -304,
	-304, -304, 84, 12, -80, -151, -149, 128, -92, -304,
	-304, 84, 84, -304, -80, -80, -303, 161, -304, -304,
	-304, -304, -304, -294, 451, 330, -127, 72, 179, 73,
	-303, -216, -304, -132, -209, 92, 95, -161, -107, -109,
	12, -85, -144, 85, 84, -237, -165, -170, -196, -281,
	90, 155, -157, 161, -128, 13, -131, 30, 55, -5,
	-303, -303, 30, 84, -119, -121, -120, -122, 64, 68,
	70, 65, 66, 67, 71, -220, 23, -108, -3, -2,
	-303, -123, -116, -305, 12, 75, -305, 84, 161, -190,
	-192, 332, 329, 335, -281, 90, 84, -261, -249, -300,
	101, 122, 29, 74, 291, 98, -298, -299, 181, 115,
	116, 193, 23, 39, -242, 295, -237, -237, -238, -238,
	-238, -238, -244, 90, -244, 92, 92, 85, -38, -33,
	-34, 31, 78, -268, -256, 90, 37, -209, 85, -88,
	-123, 122, 74, -272, -272, -272, -214, 16, -178, 84,
	85, -147, 235, 85, -209, 85, 83, -254, -254, -210,
	-209, -303, 175, 29, 29, -47, -147, -238, -281, 486,
	485, 85, 177, 233, -90, 342, 90, 86, -123, -123,
	-123, -123, -123, 169, 166, 218, 178, -116, -123, 84,
	-67, 194, 189, -219, -219, 31, -123, 329, 463, 461,
	121, 199, -105, -98, -82, 356, -227, 155, 266, 198,
	264, 260, 280, 271, 293, 262, 294, -227, -225, -92,
	-92, -154, 129, -92, 127, -92, -92, -304, -304, -81,
	-210, 176, 176, 176, -182, -193, 20, 12, 55, 55,
	-107, -128, -108, -85, -209, -168, 447, -173, 44, -171,
	-172, 45, -169, 46, 54, 146, -159, -92, -183, 74,
	-184, -188, -146, -141, -143, -142, -303, -177, -304, -209,
	-182, -184, -110, -111, -111, -110, -111, 64, 64, 64,
	69, 64, 69, 64, -120, -214, -304, -304, -3, -181,
	75, -108, -108, -125, -214, 146, 329, 333, 334, -261,
	101, -303, -96, -104, -94, -93, -95, -99, 144, 145,
	10, 90, 116, 116, -123, 83, -238, -238, 85, 84,
	85, 84, 85, 84, -203, 396, 122, -34, -33, -256,
	-256, 92, -281, 177, 24, -123, 74, 74, 74, 17,
	-245, -146, 55, -271, -178, -275, -276, -123, -94, -303,
	-147, -123, -87, 224, 232, 83, 87, -283, 75, 215,
	291, 215, -123, -67, -38, -123, -199, -199, 31, -281,
	-105, -98, -303, -304, -235, -235, -235, -240, -235, 254,
	-235, 254, -304, -304, 84, -304, 20, -304, -72, 352,
	-92, 84, 84, -304, -303, -303, -303, -304, -123, -128,
	-152, 14, -165, 49, 272, -175, -174, 53, 45, -172,
	17, 47, 17, 28, -183, 84, 130, 84, -304, -304,
	84, 55, 161, -304, -128, -114, -113, 74, 75, -115,
	74, -113, 64, 64, -179, -304, -128, -108, -128, -128,
	161, -92, -100, -100, -134, 83, -92, -237, 90, -237,
	92, 92, 396, 29, 79, 80, 81, 29, 76, 77,
	-123, -123, -123, -123, -178, 211, 85, -304, 84, -243,
	359, 362, -92, -179, 85, -280, 359, -282, -281, -209,
	-209, -209, -97, -237, -281, -92, -92, -159, 90, -92,
	-92, -180, -304, -209, 181, -180, -180, -217, -152, -153,
	15, 17, -166, 51, -164, 50, -164, -174, 17, 17,
	90, 17, 90, 116, -188, -92, -143, 55, -5, -209,
	-141, -209, -154, -92, 83, -92, -154, -128, -304, -178,
	85, -238, -238, 85, 85, -179, 212, -299, -276, 363,
	363, -304, 23, -279, -278, -210, 83, 75, -75, 140,
	359, -304, -304, -304, -304, -304, 84, -304, -304, -304,
	-127, -153, -92, -139, -167, 52, 74, 104, 90, 90,
	90, 10, -141, 161, -159, -178, -159, 85, -163, 23,
	-303, -5, 84, 130, -178, -123, -304, 357, 71, 360,
	-209, 181, 74, 104, -184, -209, 85, -290, -291, 74,
	-300, -297, 101, 122, 98, -298, 110, 111, -5, -92,
	208, -65, 359, -278, -260, -210, 90, 92, 85, 60,
	358, 361, -291, 74, 11, 10, 101, 90, -65, -304,
	-304, -66, 223, 451, -283, 60, -289, 194, 189, 192,
	30, -289, 186, -280, 359, 188, 29, 101, 225, 360,
	361,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 644, 644, 644, 0,
	644, 0, 0, 644, -2, -2, 644, 1029, 0, 644,
	0, 0, -2, 577, 578, 0, 580, -2, 0, 0,
	589, 1449, 1449, 639, 0, 0, 0, 0, 0, 644,
	893, 45, 644, 0, 80, 81, 595, 596, 597, 60,
	0, 1447, 1, 3, 66, 70, 0, 0, 0, 53,
	902, 0, 73, 0, 0, 648, 0, 646, 0, 1012,
	644, 644, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 451, 411, 454, 409, 440,
	-2, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 304, 304, 0, 0, -2,
	402, 402, 402, 0, 0, 0, 437, 1014, 357, 304,
	304, 0, 304, 304, 304, 304, 0, 0, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 919, 143, 1030, 1027, 1028, 35, 36,
	37, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 0, 1006, 0, 507,
	734, 0, 568, 568, 0, 568, 568, 568, 568, 0,
	0, 0, 519, 0, 0, 0, 0, 565, 0, 0,
	538, 540, 0, 565, 0, 571, 0, 552, 568, 1450,
	1450, 1450, 997, 0, 562, 560, 574, 575, 557, 558,
	576, 579, 0, 584, 587, 1023, 1024, 0, 602, 44,
	1251, 594, 607, 608, 0, 640, 641, 40, 820, 0,
	749, 753, 764, 777, 778, 779, 780, 781, 783, 784,
	0, 0, 0, 0, 789, 790, 0, 0, 0, 0,
	0, 801, 0, 0, 0, 0, 0, 874, 0, 843,
	843, 837, 843, 845, 845, 0, 0, 883, 0, 0,
	0, 0, 0, 0, 212, 213, 819, 986, 845, 845,
	845, 845, -2, -2, 193, 194, 195, 196, 197, 198,
	0, 0, 0, 0, 211, 189, 0, 216, 217, 214,
	215, 803, 804, 1449, 0, 617, 0, 0, 902, 0,
	894, 893, 58, 0, 644, -2, 0, 0, 0, 0,
	42, 0, 47, 695, 72, 71, 938, 0, 0, 0,
	54, 903, 62, 64, 904, 0, 649, 650, 0, 673,
	677, 0, 645, 0, 0, 1013, 1012, 1012, 97, 0,
	1410, 990, -2, -2, 0, 0, 1025, 1026, 999, -2,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092,
	1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, -2,
	0, 0, 153, 154, 0, 38, 330, 0, 149, 0,
	324, 276, 919, 0, 0, 0, 0, 0, 644, 0,
	1007, 134, 135, 141, 142, 304, 304, 0, 143, 143,
	418, 419, 420, 0, 0, -2, 328, 0, 403, 0,
	0, 318, 318, 322, 320, 321, 0, 0, 0, 0,
	0, 0, 431, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 0, 305, 0, 449, 450,
	358, 0, 0, 0, 0, 429, 430, 0, 0, 1015,
	1016, 0, 0, 304, 304, 0, 0, 0, 0, 304,
	304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 932, 0,
	0, 0, -2, 0, 499, 0, 0, 0, 1008, 1008,
	506, 0, 508, 509, 0, 0, 510, 0, 565, 565,
	563, 564, 512, 513, 514, 515, 568, 0, 0, 313,
	314, 315, 565, 568, 0, 568, 568, 568, 568, 565,
	565, 565, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1450, 1450, 1450, 571, 568, 0, 548, 0,
	549, 550, 553, 554, 1451, 1452, 1044, 555, 556, 998,
	585, 588, 605, 603, 604, 606, 598, 599, 600, 601,
	0, 619, 620, 625, 0, 0, 0, 0, 631, 632,
	633, 0, 0, 636, 637, 638, 0, 0, 0, 0,
	747, 0, 0, 809, 810, 811, 812, 813, 814, 815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	785, 786, 787, 788, 791, 0, 0, 0, 796, 797,
	0, 0, 0, 0, 0, 654, 0, 875, 0, 835,
	0, 836, 838, 839, 0, 840, 0, 0, 657, 0,
	0, 657, 657, 0, 0, 183, 184, 185, 186, 199,
	203, 207, 218, 200, 204, 208, 219, 201, 205, 209,
	220, 202, 206, 210, 221, 819, 0, 0, 41, 609,
	610, 0, 717, 1018, 0, 52, 61, 63, 902, 56,
	902, 0, 659, 0, 0, -2, -2, 660, 666, 667,
	668, 669, 670, 49, 1448, 50, 0, 69, 0, 43,
	0, 0, 0, 0, 288, 941, 0, 0, 895, 896,
	899, 0, 674, 678, 0, 680, 681, 0, 647, 0,
	95, 0, 733, 0, 0, 0, 1410, 996, 0, 99,
	100, 0, 0, 0, 292, 1001, 1002, 1003, -2, 311,
	0, -2, 283, 227, 228, 229, 276, 231, 276, 276,
	276, 276, 288, 288, 288, 288, 259, 260, 261, 262,
	263, 0, 0, 246, 276, 276, 276, 276, 266, 267,
	268, 269, 270, 271, 272, 273, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 278, 278, 278, 280, 280,
	0, 39, 0, 296, 0, 899, 0, 932, 1010, 1020,
	0, 0, 0, 1010, 117, 0, 0, 452, 412, 441,
	453, 0, 415, 416, -2, 0, 0, 402, 0, 404,
	0, 312, 0, -2, 0, 322, 0, 318, 322, 319,
	322, 310, 323, 433, 883, 0, 434, 435, 0, 471,
	703, 0, 0, 0, 0, 0, 477, 478, 479, 0,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	442, 443, 444, 445, 446, 447, 448, 0, 0, 404,
	0, 438, 0, 359, 360, 0, 0, 363, 364, 365,
	366, 0, 0, 369, 370, 371, 720, 721, 372, 396,
	397, 398, 373, 374, 375, 376, 377, 378, 379, 390,
	391, 392, 393, 394, 395, 380, 381, 382, 383, 384,
	387, 0, 127, 923, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1008, 0, 0, 0, 0,
	735, 1031, 1032, 569, 570, 0, 316, 317, 568, 568,
	516, 539, 0, 568, 520, 541, 521, 523, 522, 524,
	543, 544, 568, 527, 566, 567, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 545, 546, 547, 572,
	0, 0, 586, 590, 591, 592, 593, 0, 0, 622,
	91, 627, 628, 629, 630, 642, 635, 821, 744, 745,
	746, 748, 750, 0, 805, 807, 752, 754, 816, 817,
	818, 0, 0, 0, 0, 0, 758, 762, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	782, 858, 859, 860, 799, 800, 0, 671, 0, 0,
	0, 798, 0, 0, 0, 0, 655, 656, 881, 878,
	0, 0, 844, 846, 0, 0, 0, 0, 0, 0,
	658, 884, 0, -2, 0, 0, 0, 0, 0, 0,
	985, 0, 612, 613, 615, 0, 737, 0, 718, 0,
	0, 1019, 618, 55, 57, 664, 665, 0, 682, 661,
	51, 46, 0, 0, 697, 939, 288, 961, 0, 905,
	906, 0, 898, 900, 901, 74, 679, 675, 0, 742,
	0, 0, 732, 0, 685, 687, 688, 689, 715, 0,
	0, 0, 0, 93, 734, 991, 98, 0, 0, 103,
	104, 992, 993, 994, 995, 0, 136, -2, 354, 155,
	157, 158, 159, 150, 336, 0, 0, 286, 284, 285,
	230, 288, 288, 253, 254, 292, 292, 292, 292, 0,
	0, 247, 248, 249, 250, 241, 0, 242, 243, 244,
	0, 245, 329, 0, 907, 297, 298, 300, 304, 0,
	0, 0, 325, 326, 0, 923, 0, 0, 0, 1021,
	1020, 1020, 1020, 0, 145, 146, 147, 148, 143, 0,
	0, 151, 406, 405, 0, 0, 327, 0, 0, 322,
	322, 307, 308, 0, 436, 0, 0, 473, 474, 475,
	476, 0, 0, 0, 404, 406, 292, 0, 361, 362,
	367, 368, 385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 466, 467, 468, 469, 920, 921,
	922, 0, 0, 500, 0, 0, 346, 89, 1009, 505,
	565, 526, 542, 565, 518, 525, 551, 582, 626, 0,
	0, 0, 0, 634, 0, 751, 806, 808, 755, 0,
	759, 763, 0, 0, 0, 0, 0, 0, 0, 802,
	826, 827, 0, 0, 893, 0, 879, 0, 0, 834,
	847, 0, 0, 822, 0, 0, 657, 0, 848, 849,
	850, 851, 852, 611, 614, 616, 693, 0, 0, 0,
	0, 719, 1017, 0, 886, 0, 0, 682, 742, 683,
	0, 662, 48, 696, 0, 943, 942, 955, 968, 289,
	290, 291, 897, 0, 902, 0, 979, 0, 0, 971,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	0, 725, 0, 0, 0, 0, 716, 0, 0, 0,
	0, -2, 0, 0, 87, 88, 0, 0, 0, 101,
	102, 0, 0, 108, 293, 294, 143, 356, 156, 160,
	165, 0, 0, 0, 170, 0, 172, 337, 0, 223,
	225, 0, 0, 163, 226, 287, 292, 292, 255, 256,
	257, 258, 0, 274, 0, 0, 0, 349, 113, 911,
	910, 304, 304, 299, 0, 302, 0, 1022, 277, 0,
	126, 0, 0, 0, 0, 0, 132, 0, 410, 0,
	421, 422, 0, 470, 0, 296, 0, 306, 309, 884,
	704, 0, 0, 423, 0, 406, 427, 428, 439, 388,
	389, 386, 0, 0, 933, 934, 0, 937, 118, 459,
	461, 460, 464, 0, 0, 457, 0, 346, 907, 0,
	504, 347, 348, 568, 568, 621, 92, 0, 624, 0,
	0, 0, 756, 760, 672, 0, 0, 276, 276, 864,
	276, 280, 867, 276, 869, 276, 872, 0, 0, 0,
	0, 876, 833, 882, 0, 0, 0, 823, 824, 0,
	885, 0, 0, 0, 0, 0, 1004, 1005, 887, 888,
	742, 889, 684, 663, 698, 961, 0, 954, 0, -2,
	963, 0, 0, 0, 969, 676, 75, 743, 78, 0,
	979, 987, 0, 970, 981, 983, 0, 0, 0, 975,
	0, 742, 686, 711, 713, 0, 708, 723, 724, 726,
	0, 728, 0, 730, 731, 695, 691, 692, 0, 742,
	0, 742, 742, 94, 0, 736, 105, 106, 107, 355,
	166, 0, 168, 181, 182, 187, 188, 190, 0, 0,
	0, 171, 222, 224, 0, 0, 251, 252, 288, 0,
	288, 0, 281, 0, 338, 350, 0, 908, 909, 0,
	0, 301, 303, 0, 1011, 128, 0, 0, 0, 0,
	152, 407, 0, 295, 0, 0, 495, 492, 424, 0,
	426, 695, 924, 925, 926, 0, 936, 121, 0, 0,
	0, 0, 501, 502, 503, 90, 511, 517, 623, 643,
	757, 761, 0, 793, 861, 288, 865, 866, 868, 870,
	871, 873, 794, 795, 0, 829, 0, 831, 902, 0,
	880, 0, 0, 825, 0, 0, 0, 717, 59, 889,
	891, 0, 948, 946, 946, 956, 957, 0, 0, 964,
	0, 0, 0, 0, 79, 0, 0, 0, 984, 0,
	0, 0, 0, 96, 893, 705, 712, 0, 0, 706,
	0, 707, 727, 729, 690, -2, 893, 742, 85, 86,
	0, 0, 191, 192, 169, 0, 0, 292, 275, 292,
	0, 0, 351, 912, 913, 914, 915, 916, 917, 918,
	695, 129, 130, 131, 413, 0, 0, 472, 0, 480,
	0, 0, 0, 0, 935, 458, 0, 119, 120, 0,
	0, 463, 853, 862, 863, 0, 0, 0, 877, 0,
	0, 0, 739, 699, 700, 0, 0, 737, 891, 77,
	0, 0, 951, 0, 944, 947, 945, 958, 0, 0,
	965, 0, 967, 0, 988, 989, 982, 0, 974, 977,
	973, 976, 902, 709, 0, 714, 902, 84, 167, 0,
	175, 264, 265, 279, 282, 0, 0, 331, 496, 493,
	494, 425, 0, 122, 123, 0, 0, 0, 0, 0,
	0, 828, 830, 832, 841, 842, 0, 738, 740, 741,
	694, 76, 892, 890, 940, 0, 949, 950, 959, 960,
	966, 0, 972, 0, 82, 0, 83, 332, 336, 0,
	0, 927, 0, 0, 0, 465, 792, 0, 0, 0,
	701, 702, 952, 953, 980, 978, 710, 333, 334, 0,
	161, 176, 177, 0, 0, 180, 173, 174, 927, 0,
	0, 455, 929, 124, 125, 399, 400, 401, 118, 854,
	0, 857, 335, 0, 0, 0, 178, 179, 114, 497,
	498, 0, 930, 931, 121, 855, 339, 341, 342, 0,
	0, 340, 0, 462, 0, 343, 344, 345, 928, 0,
	856,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 123, 3, 3, 3, 149, 141, 3,
	83, 85, 146, 144, 84, 145, 161, 147, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 487,
	131, 130, 132, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 151, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 152,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 120, 121, 122, 124, 125, 126,
	127, 128, 129, 133, 134, 135, 136, 137, 138, 139,
	140, 142, 143, 148, 150, 153, 154, 155, 156, 157,
	158, 159, 160, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:443
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:448
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:449
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:453
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:486
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:492
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:496
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:500
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:505
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:509
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:515
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:521
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:527
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:531
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:536
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:540
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:546
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:550
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:556
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:562
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:566
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:570
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:593
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:599
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:604
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:610
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:617
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:623
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:630
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:634
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:640
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:644
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:648
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:652
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:656
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:662
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:666
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:671
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:675
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:685
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:690
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:709
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:715
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:735
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:747
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:759
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:763
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:769
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:775
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName}}, Partitions: yyDollar[7].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:779
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:783
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:787
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:792
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:793
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:797
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:801
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:807
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:811
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:817
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:821
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:830
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:836
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:842
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:846
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:852
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:856
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:862
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:866
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:870
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:876
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:880
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:884
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:888
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:894
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:898
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:904
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:910
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:917
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:926
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:930
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:937
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:941
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:946
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:950
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:956
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:961
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:966
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:972
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:977
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:983
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:989
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:996
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1003
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1008
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1013
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1018
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1025
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1032
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1043
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1053
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1059
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1063
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1067
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1077
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1081
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1087
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1091
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1097
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1101
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1108
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1112
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1118
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1122
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1128
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1133
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1138
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1142
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1147
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1161
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1167
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1175
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1188
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1192
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1198
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1204
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1209
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1214
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1219
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1224
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1229
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1236
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1240
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1245
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1249
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1254
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1260
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1266
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1271
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1278
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1285
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1289
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1293
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1297
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1308
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1315
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1319
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1325
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1329
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1333
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1337
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1341
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1345
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1349
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1353
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1357
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1361
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1365
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1369
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1373
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1377
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1381
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1385
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1389
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1393
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1397
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1408
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1412
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1419
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1423
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1427
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1431
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1435
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1439
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1445
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1449
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1453
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1457
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1463
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1474
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1497
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1501
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1505
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1509
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1513
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1517
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1523
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1529
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1535
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1541
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1547
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1559
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1563
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1567
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1571
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1577
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1581
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1585
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1589
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1593
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1597
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1601
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1605
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1609
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 264:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1629
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 265:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1634
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1679
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1688
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1693
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1697
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1705
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1709
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1715
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1723
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1727
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1731
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1736
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1740
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = ""
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = ""
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1777
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1782
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1786
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1792
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1796
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1802
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1806
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1811
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1815
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = ""
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1831
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1835
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1839
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1843
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1847
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = ""
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = yyDollar[2].str
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = "key"
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = yyDollar[1].str
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = ""
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1915
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1919
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1925
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1931
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1935
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1941
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1945
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1951
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1957
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1961
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1965
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1969
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1974
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1978
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1984
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1990
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1996
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2002
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2006
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2010
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2014
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2018
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2023
		{
			yyVAL.str = ""
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2036
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2040
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2044
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2053
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2059
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2063
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2073
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2077
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2083
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2087
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2091
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2095
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2099
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2103
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2107
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2111
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2115
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2119
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2123
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2127
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2131
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2135
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2139
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2143
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2147
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2151
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2155
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2159
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2163
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2167
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2171
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2175
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2179
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2183
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2187
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2191
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2196
		{
			yyVAL.str = ""
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2200
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2204
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2227
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2236
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2242
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2246
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2251
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2255
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2264
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2268
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2272
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2276
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2280
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2286
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2290
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2294
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2300
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2304
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2308
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2312
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2316
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2320
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2324
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2328
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2332
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2336
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2340
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2344
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2348
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2352
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2356
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2360
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2364
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2368
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2372
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2376
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2380
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2384
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2388
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2394
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2398
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2404
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2408
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2412
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2416
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2420
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2424
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2428
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2432
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2436
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2442
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2448
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2455
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2462
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2468
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2472
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2479
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2486
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2498
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2508
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2512
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2516
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2529
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2539
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2543
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2554
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2561
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2568
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2575
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2583
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2587
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2591
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2595
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2599
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2603
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2607
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2611
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2615
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2619
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2623
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2627
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2631
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2635
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2639
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2643
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2647
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2651
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2655
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2659
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2663
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2667
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2672
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2676
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2687
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2691
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 497:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2697
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2701
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2713
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2717
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 502:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2723
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2727
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2736
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2740
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2746
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2750
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2755
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2765
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2769
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2773
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2777
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2781
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2785
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2789
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2793
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2797
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2801
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2805
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2809
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2813
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2817
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2821
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2825
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2829
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2833
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2837
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2841
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2845
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2849
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2853
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2857
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2861
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2865
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2869
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2873
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2877
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2881
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2885
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2889
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2893
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2897
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2901
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2905
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2910
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2914
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2918
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2923
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2927
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2931
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2935
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2940
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2954
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2958
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2962
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2968
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2972
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2978
		{
			yyVAL.str = ""
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2982
		{
			yyVAL.str = "extended "
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2988
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2992
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2998
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3002
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3008
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3012
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3016
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3026
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3030
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3040
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3046
		{
			yyVAL.empty = struct{}{}
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3050
		{
			yyVAL.empty = struct{}{}
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3054
		{
			yyVAL.empty = struct{}{}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3060
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3064
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3070
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3074
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3080
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3086
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3090
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3095
		{
			yyVAL.empty = struct{}{}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3097
		{
			yyVAL.empty = struct{}{}
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3100
		{
			yyVAL.empty = struct{}{}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3102
		{
			yyVAL.empty = struct{}{}
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3113
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3118
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3122
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3126
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3130
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3134
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3138
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3144
		{
			yyVAL.str = yyDollar[1].str
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3148
		{
			yyVAL.str = yyDollar[1].str
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3152
		{
			yyVAL.str = yyDollar[1].str
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3158
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3166
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3170
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3175
		{
			yyVAL.str = ""
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3179
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3183
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3209
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3215
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3219
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3225
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3231
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3235
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3239
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3243
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3261
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3265
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3269
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3273
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3277
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3281
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3287
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3291
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3297
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3301
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3305
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3309
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3313
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3317
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3321
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3325
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3329
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3333
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3337
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3341
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3346
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3350
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3354
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3359
		{
			yyVAL.str = ""
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3363
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3368
		{
			setAllowComments(yylex, true)
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3372
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3378
		{
			yyVAL.strs = nil
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3382
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3392
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3396
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3401
		{
			yyVAL.str = ""
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3405
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3409
		{
			yyVAL.str = SQLCacheStr
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3414
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3418
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3422
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3431
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3436
		{
			yyVAL.strs = nil
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3440
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3444
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3448
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3452
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3458
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3462
		{
			yyVAL.str = SQLCacheStr
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3466
		{
			yyVAL.str = DistinctStr
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3470
		{
			yyVAL.str = DistinctStr
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3474
		{
			yyVAL.str = StraightJoinHint
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3478
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3482
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3488
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3492
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3498
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3502
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3506
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3510
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3515
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3519
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3523
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3535
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3539
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3545
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3551
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3565
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3569
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3573
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3579
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3585
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3589
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3598
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3604
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3608
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3614
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3618
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3622
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3626
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3632
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3636
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3649
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3653
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3657
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3661
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3667
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3669
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3673
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3675
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3679
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3681
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3684
		{
			yyVAL.empty = struct{}{}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.empty = struct{}{}
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3689
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3693
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3697
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3704
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3710
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3714
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3718
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3724
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3730
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3734
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3738
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3742
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3748
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3752
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3762
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3766
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3772
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3776
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3782
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3791
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3795
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3799
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3803
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3808
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3812
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3819
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3823
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3827
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3831
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3835
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3839
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3846
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3850
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3854
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3858
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3864
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3868
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3872
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3876
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3880
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3884
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3888
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3892
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3896
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3900
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3904
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3910
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3914
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3918
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3922
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3926
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3930
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3934
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3938
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3942
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3946
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3950
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3954
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3958
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3964
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3968
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3972
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3976
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3980
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3984
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3988
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3992
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3996
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4000
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4004
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4008
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4012
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4016
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4020
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4024
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4028
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4032
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4036
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4040
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4044
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4052
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4056
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4063
		{
			yyVAL.str = ""
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4067
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4073
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4077
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4084
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4088
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4092
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4096
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4102
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4106
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4110
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4114
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4118
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4122
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4126
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4132
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4136
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4140
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4147
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4153
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4157
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4167
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4171
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4175
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4179
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4189
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4193
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4197
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4201
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4205
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4209
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4213
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4217
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4221
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4225
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4236
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4240
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4246
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4250
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4255
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4259
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4263
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4273
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4277
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4281
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4291
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4295
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4299
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4303
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4307
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4345
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4349
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4353
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4357
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4361
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4367
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4381
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4385
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4389
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4393
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4397
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4401
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4407
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4411
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4415
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4419
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4423
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4427
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4431
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4436
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4440
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = string("")
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4455
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4459
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4465
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4470
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4474
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4480
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4484
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4488
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4494
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4503
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4507
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4513
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4517
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4522
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4526
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4531
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4535
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4541
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4547
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4551
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4557
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4562
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4566
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4570
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4575
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4579
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4585
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4589
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4593
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4602
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4606
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4610
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4614
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4621
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4625
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4629
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4633
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4639
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4643
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4647
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4652
		{
			yyVAL.str = ""
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4656
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4660
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4664
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4669
		{
			yyVAL.str = ""
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4673
		{
			yyVAL.str = yyDollar[3].str
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4679
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4683
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4688
		{
			yyVAL.str = ""
		}
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4692
		{
			yyVAL.str = yyDollar[2].str
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4697
		{
			yyVAL.str = "cascaded"
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4701
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4705
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4710
		{
			yyVAL.str = ""
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4714
		{
			yyVAL.str = yyDollar[3].str
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4720
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4724
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4728
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4732
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4738
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4742
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4748
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4752
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4756
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4761
		{
			yyVAL.str = ""
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4765
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4769
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4774
		{
			yyVAL.str = ""
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4778
		{
			yyVAL.str = " header"
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4783
		{
			yyVAL.str = ""
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4787
		{
			yyVAL.str = " manifest on"
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4791
		{
			yyVAL.str = " manifest off"
		}
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4796
		{
			yyVAL.str = ""
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4800
		{
			yyVAL.str = " overwrite on"
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4804
		{
			yyVAL.str = " overwrite off"
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4810
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4815
		{
			yyVAL.str = ""
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4819
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4825
		{
			yyVAL.str = yyDollar[1].str
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4829
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4835
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4839
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4844
		{
			yyVAL.str = ""
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4848
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4854
		{
			yyVAL.str = yyDollar[1].str
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4858
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4864
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4868
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4872
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4877
		{
			yyVAL.str = ""
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4881
		{
			yyVAL.str = " optionally"
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4894
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4898
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4902
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4906
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4910
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4916
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4920
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4924
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4928
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4933
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4937
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4943
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4947
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4953
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4957
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4963
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4968
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4978
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4982
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4988
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4994
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4998
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5004
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5008
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5012
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5016
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5020
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5028
		{
			yyVAL.str = "charset"
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5055
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5057
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5060
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5062
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5065
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5067
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5070
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5072
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5075
		{
			yyVAL.empty = struct{}{}
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5077
		{
			yyVAL.empty = struct{}{}
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5079
		{
			yyVAL.empty = struct{}{}
		}
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5083
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5092
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5097
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5099
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5103
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5109
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5113
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5120
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5126
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5130
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5136
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5140
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5147
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5586
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5595
		{
			decNesting(yylex)
		}
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5600
		{
			skipToEnd(yylex)
		}
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5605
		{
			skipToEnd(yylex)
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5609
		{
			skipToEnd(yylex)
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5613
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
