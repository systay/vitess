// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const EXPRESSION_PREC_SETTER = 57416
const ON = 57417
const USING = 57418
const INPLACE = 57419
const COPY = 57420
const ALGORITHM = 57421
const NONE = 57422
const SHARED = 57423
const EXCLUSIVE = 57424
const SUBQUERY_AS_EXPR = 57425
const ID = 57426
const AT_ID = 57427
const AT_AT_ID = 57428
const HEX = 57429
const STRING = 57430
const NCHAR_STRING = 57431
const INTEGRAL = 57432
const FLOAT = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const OFF = 57444
const DISCARD = 57445
const IMPORT = 57446
const ENABLE = 57447
const DISABLE = 57448
const TABLESPACE = 57449
const VIRTUAL = 57450
const STORED = 57451
const EMPTY_FROM_CLAUSE = 57452
const LOWER_THAN_CHARSET = 57453
const CHARSET = 57454
const UNIQUE = 57455
const KEY = 57456
const OR = 57457
const XOR = 57458
const AND = 57459
const NOT = 57460
const BETWEEN = 57461
const CASE = 57462
const WHEN = 57463
const THEN = 57464
const ELSE = 57465
const END = 57466
const LE = 57467
const GE = 57468
const NE = 57469
const NULL_SAFE_EQUAL = 57470
const IS = 57471
const LIKE = 57472
const REGEXP = 57473
const IN = 57474
const SHIFT_LEFT = 57475
const SHIFT_RIGHT = 57476
const DIV = 57477
const MOD = 57478
const OR_OR = 57479
const UNARY = 57480
const COLLATE = 57481
const BINARY = 57482
const UNDERSCORE_BINARY = 57483
const UNDERSCORE_UTF8MB4 = 57484
const UNDERSCORE_UTF8 = 57485
const UNDERSCORE_LATIN1 = 57486
const INTERVAL = 57487
const JSON_EXTRACT_OP = 57488
const JSON_UNQUOTE_EXTRACT_OP = 57489
const CREATE = 57490
const ALTER = 57491
const DROP = 57492
const RENAME = 57493
const ANALYZE = 57494
const ADD = 57495
const FLUSH = 57496
const CHANGE = 57497
const MODIFY = 57498
const REVERT = 57499
const SCHEMA = 57500
const TABLE = 57501
const INDEX = 57502
const VIEW = 57503
const TO = 57504
const IGNORE = 57505
const IF = 57506
const PRIMARY = 57507
const COLUMN = 57508
const SPATIAL = 57509
const FULLTEXT = 57510
const KEY_BLOCK_SIZE = 57511
const CHECK = 57512
const INDEXES = 57513
const ACTION = 57514
const CASCADE = 57515
const CONSTRAINT = 57516
const FOREIGN = 57517
const NO = 57518
const REFERENCES = 57519
const RESTRICT = 57520
const SHOW = 57521
const DESCRIBE = 57522
const EXPLAIN = 57523
const DATE = 57524
const ESCAPE = 57525
const REPAIR = 57526
const OPTIMIZE = 57527
const TRUNCATE = 57528
const COALESCE = 57529
const EXCHANGE = 57530
const REBUILD = 57531
const PARTITIONING = 57532
const REMOVE = 57533
const MAXVALUE = 57534
const PARTITION = 57535
const REORGANIZE = 57536
const LESS = 57537
const THAN = 57538
const PROCEDURE = 57539
const TRIGGER = 57540
const VINDEX = 57541
const VINDEXES = 57542
const DIRECTORY = 57543
const NAME = 57544
const UPGRADE = 57545
const STATUS = 57546
const VARIABLES = 57547
const WARNINGS = 57548
const CASCADED = 57549
const DEFINER = 57550
const OPTION = 57551
const SQL = 57552
const UNDEFINED = 57553
const SEQUENCE = 57554
const MERGE = 57555
const TEMPORARY = 57556
const TEMPTABLE = 57557
const INVOKER = 57558
const SECURITY = 57559
const FIRST = 57560
const AFTER = 57561
const LAST = 57562
const VITESS_MIGRATION = 57563
const CANCEL = 57564
const RETRY = 57565
const COMPLETE = 57566
const BEGIN = 57567
const START = 57568
const TRANSACTION = 57569
const COMMIT = 57570
const ROLLBACK = 57571
const SAVEPOINT = 57572
const RELEASE = 57573
const WORK = 57574
const BIT = 57575
const TINYINT = 57576
const SMALLINT = 57577
const MEDIUMINT = 57578
const INT = 57579
const INTEGER = 57580
const BIGINT = 57581
const INTNUM = 57582
const REAL = 57583
const DOUBLE = 57584
const FLOAT_TYPE = 57585
const DECIMAL = 57586
const NUMERIC = 57587
const TIME = 57588
const TIMESTAMP = 57589
const DATETIME = 57590
const YEAR = 57591
const CHAR = 57592
const VARCHAR = 57593
const BOOL = 57594
const CHARACTER = 57595
const VARBINARY = 57596
const NCHAR = 57597
const TEXT = 57598
const TINYTEXT = 57599
const MEDIUMTEXT = 57600
const LONGTEXT = 57601
const BLOB = 57602
const TINYBLOB = 57603
const MEDIUMBLOB = 57604
const LONGBLOB = 57605
const JSON = 57606
const ENUM = 57607
const GEOMETRY = 57608
const POINT = 57609
const LINESTRING = 57610
const POLYGON = 57611
const GEOMETRYCOLLECTION = 57612
const MULTIPOINT = 57613
const MULTILINESTRING = 57614
const MULTIPOLYGON = 57615
const NULLX = 57616
const AUTO_INCREMENT = 57617
const APPROXNUM = 57618
const SIGNED = 57619
const UNSIGNED = 57620
const ZEROFILL = 57621
const CODE = 57622
const COLLATION = 57623
const COLUMNS = 57624
const DATABASES = 57625
const ENGINES = 57626
const EVENT = 57627
const EXTENDED = 57628
const FIELDS = 57629
const FULL = 57630
const FUNCTION = 57631
const GTID_EXECUTED = 57632
const KEYSPACES = 57633
const OPEN = 57634
const PLUGINS = 57635
const PRIVILEGES = 57636
const PROCESSLIST = 57637
const SCHEMAS = 57638
const TABLES = 57639
const TRIGGERS = 57640
const USER = 57641
const VGTID_EXECUTED = 57642
const VITESS_KEYSPACES = 57643
const VITESS_METADATA = 57644
const VITESS_MIGRATIONS = 57645
const VITESS_REPLICATION_STATUS = 57646
const VITESS_SHARDS = 57647
const VITESS_TABLETS = 57648
const VSCHEMA = 57649
const NAMES = 57650
const GLOBAL = 57651
const SESSION = 57652
const ISOLATION = 57653
const LEVEL = 57654
const READ = 57655
const WRITE = 57656
const ONLY = 57657
const REPEATABLE = 57658
const COMMITTED = 57659
const UNCOMMITTED = 57660
const SERIALIZABLE = 57661
const CURRENT_TIMESTAMP = 57662
const DATABASE = 57663
const CURRENT_DATE = 57664
const CURRENT_TIME = 57665
const LOCALTIME = 57666
const LOCALTIMESTAMP = 57667
const CURRENT_USER = 57668
const UTC_DATE = 57669
const UTC_TIME = 57670
const UTC_TIMESTAMP = 57671
const REPLACE = 57672
const CONVERT = 57673
const CAST = 57674
const SUBSTR = 57675
const SUBSTRING = 57676
const GROUP_CONCAT = 57677
const SEPARATOR = 57678
const TIMESTAMPADD = 57679
const TIMESTAMPDIFF = 57680
const MATCH = 57681
const AGAINST = 57682
const BOOLEAN = 57683
const LANGUAGE = 57684
const WITH = 57685
const QUERY = 57686
const EXPANSION = 57687
const WITHOUT = 57688
const VALIDATION = 57689
const UNUSED = 57690
const ARRAY = 57691
const CUME_DIST = 57692
const DESCRIPTION = 57693
const DENSE_RANK = 57694
const EMPTY = 57695
const EXCEPT = 57696
const FIRST_VALUE = 57697
const GROUPING = 57698
const GROUPS = 57699
const JSON_TABLE = 57700
const LAG = 57701
const LAST_VALUE = 57702
const LATERAL = 57703
const LEAD = 57704
const MEMBER = 57705
const NTH_VALUE = 57706
const NTILE = 57707
const OF = 57708
const OVER = 57709
const PERCENT_RANK = 57710
const RANK = 57711
const RECURSIVE = 57712
const ROW_NUMBER = 57713
const SYSTEM = 57714
const WINDOW = 57715
const ACTIVE = 57716
const ADMIN = 57717
const BUCKETS = 57718
const CLONE = 57719
const COMPONENT = 57720
const DEFINITION = 57721
const ENFORCED = 57722
const EXCLUDE = 57723
const FOLLOWING = 57724
const GEOMCOLLECTION = 57725
const GET_MASTER_PUBLIC_KEY = 57726
const HISTOGRAM = 57727
const HISTORY = 57728
const INACTIVE = 57729
const INVISIBLE = 57730
const LOCKED = 57731
const MASTER_COMPRESSION_ALGORITHMS = 57732
const MASTER_PUBLIC_KEY_PATH = 57733
const MASTER_TLS_CIPHERSUITES = 57734
const MASTER_ZSTD_COMPRESSION_LEVEL = 57735
const NESTED = 57736
const NETWORK_NAMESPACE = 57737
const NOWAIT = 57738
const NULLS = 57739
const OJ = 57740
const OLD = 57741
const OPTIONAL = 57742
const ORDINALITY = 57743
const ORGANIZATION = 57744
const OTHERS = 57745
const PATH = 57746
const PERSIST = 57747
const PERSIST_ONLY = 57748
const PRECEDING = 57749
const PRIVILEGE_CHECKS_USER = 57750
const PROCESS = 57751
const RANDOM = 57752
const REFERENCE = 57753
const REQUIRE_ROW_FORMAT = 57754
const RESOURCE = 57755
const RESPECT = 57756
const RESTART = 57757
const RETAIN = 57758
const REUSE = 57759
const ROLE = 57760
const SECONDARY = 57761
const SECONDARY_ENGINE = 57762
const SECONDARY_LOAD = 57763
const SECONDARY_UNLOAD = 57764
const SKIP = 57765
const SRID = 57766
const THREAD_PRIORITY = 57767
const TIES = 57768
const UNBOUNDED = 57769
const VCPU = 57770
const VISIBLE = 57771
const SOUNDS = 57772
const FORMAT = 57773
const TREE = 57774
const VITESS = 57775
const TRADITIONAL = 57776
const LOCAL = 57777
const LOW_PRIORITY = 57778
const NO_WRITE_TO_BINLOG = 57779
const LOGS = 57780
const ERROR = 57781
const GENERAL = 57782
const HOSTS = 57783
const OPTIMIZER_COSTS = 57784
const USER_RESOURCES = 57785
const SLOW = 57786
const CHANNEL = 57787
const RELAY = 57788
const EXPORT = 57789
const AVG_ROW_LENGTH = 57790
const CONNECTION = 57791
const CHECKSUM = 57792
const DELAY_KEY_WRITE = 57793
const ENCRYPTION = 57794
const ENGINE = 57795
const INSERT_METHOD = 57796
const MAX_ROWS = 57797
const MIN_ROWS = 57798
const PACK_KEYS = 57799
const PASSWORD = 57800
const FIXED = 57801
const DYNAMIC = 57802
const COMPRESSED = 57803
const REDUNDANT = 57804
const COMPACT = 57805
const ROW_FORMAT = 57806
const STATS_AUTO_RECALC = 57807
const STATS_PERSISTENT = 57808
const STATS_SAMPLE_PAGES = 57809
const STORAGE = 57810
const MEMORY = 57811
const DISK = 57812

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"EXPRESSION_PREC_SETTER",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"OR_OR",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SOUNDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	488, 137,
	-2, 143,
	-1, 45,
	115, 143,
	155, 143,
	270, 143,
	-2, 407,
	-1, 52,
	33, 558,
	177, 558,
	188, 558,
	221, 572,
	222, 572,
	-2, 560,
	-1, 57,
	179, 582,
	-2, 580,
	-1, 108,
	176, 1010,
	-2, 116,
	-1, 110,
	1, 138,
	488, 138,
	-2, 143,
	-1, 120,
	116, 310,
	182, 310,
	-2, 401,
	-1, 139,
	115, 143,
	155, 143,
	270, 143,
	-2, 416,
	-1, 572,
	162, 1031,
	-2, 1027,
	-1, 573,
	162, 1032,
	-2, 1028,
	-1, 604,
	57, 650,
	-2, 658,
	-1, 641,
	129, 1382,
	-2, 109,
	-1, 642,
	129, 1263,
	-2, 110,
	-1, 648,
	129, 1314,
	-2, 1004,
	-1, 788,
	129, 1197,
	-2, 1001,
	-1, 824,
	187, 38,
	192, 38,
	-2, 321,
	-1, 901,
	1, 455,
	488, 455,
	-2, 143,
	-1, 1105,
	57, 651,
	-2, 663,
	-1, 1106,
	57, 652,
	-2, 664,
	-1, 1158,
	1, 351,
	488, 351,
	-2, 143,
	-1, 1161,
	23, 162,
	-2, 164,
	-1, 1234,
	116, 310,
	182, 310,
	-2, 401,
	-1, 1243,
	187, 39,
	192, 39,
	-2, 322,
	-1, 1475,
	162, 1036,
	-2, 1030,
	-1, 1549,
	1, 352,
	488, 352,
	-2, 143,
	-1, 1785,
	76, 91,
	85, 91,
	-2, 95,
	-1, 1955,
	47, 973,
	-2, 967,
	-1, 2145,
	5, 50,
	16, 50,
	18, 50,
	86, 50,
	-2, 691,
}

const yyPrivate = 57344

const yyLast = 29887

var yyAct = [...]int{
	572, 2185, 2350, 2312, 2063, 2256, 2325, 3, 1966, 964,
	1803, 1810, 1068, 535, 619, 1505, 1616, 1969, 567, 34,
	2211, 1811, 1730, 90, 1970, 597, 2116, 1967, 2216, 2110,
	1488, 1758, 1120, 1509, 1546, 525, 1956, 1964, 575, 529,
	2203, 521, 1750, 2136, 1581, 1894, 1855, 1586, 176, 1833,
	523, 176, 1781, 489, 176, 912, 565, 566, 1832, 505,
	2010, 176, 551, 1834, 646, 148, 1535, 620, 33, 176,
	1601, 1770, 35, 1522, 1526, 1742, 1614, 517, 1910, 1647,
	1259, 176, 1448, 1440, 1241, 1107, 134, 854, 1469, 1600,
	601, 1588, 605, 1399, 599, 1350, 1826, 819, 1150, 1787,
	1129, 791, 89, 505, 1490, 1461, 505, 176, 505, 1527,
	622, 1529, 643, 941, 534, 1417, 982, 1090, 1598, 85,
	1347, 825, 1514, 1248, 611, 1333, 820, 798, 821, 1577,
	795, 799, 1149, 1133, 1355, 897, 1147, 962, 1210, 822,
	832, 957, 606, 633, 1233, 609, 607, 117, 70, 512,
	118, 91, 79, 151, 92, 111, 1053, 1049, 112, 1481,
	1510, 83, 608, 71, 8, 7, 522, 6, 1874, 1873,
	1645, 983, 1902, 1752, 1903, 1472, 1406, 807, 802, 627,
	1405, 632, 1215, 178, 179, 180, 1485, 1486, 1404, 1403,
	119, 1402, 1401, 84, 1388, 515, 1393, 516, 113, 1728,
	983, 1952, 2162, 792, 613, 859, 178, 179, 180, 1319,
	2032, 2252, 513, 462, 2251, 2180, 2346, 858, 2181, 72,
	600, 857, 598, 72, 856, 2364, 74, 2335, 1684, 2363,
	2303, 2358, 72, 629, 492, 2186, 993, 870, 871, 640,
	874, 875, 876, 877, 621, 614, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 835, 836, 647, 113, 993, 813, 96, 2229, 812,
	2326, 1633, 2334, 1909, 814, 479, 1593, 2099, 2302, 1224,
	860, 861, 862, 1881, 478, 2003, 2004, 1880, 867, 72,
	1541, 1542, 1151, 1682, 1152, 476, 1729, 81, 518, 1591,
	2002, 81, 900, 1901, 1681, 98, 99, 1540, 102, 1487,
	81, 108, 872, 1761, 173, 1796, 960, 457, 1795, 936,
	937, 1797, 931, 594, 593, 919, 989, 623, 113, 981,
	920, 932, 806, 473, 808, 925, 1819, 596, 1762, 2113,
	604, 569, 487, 552, 555, 570, 571, 919, 550, 554,
	553, 896, 920, 1561, 1560, 989, 2087, 484, 556, 557,
	918, 492, 917, 492, 1394, 1395, 1396, 81, 635, 636,
	2085, 2261, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1023, 1022, 1024, 1025, 2065, 503, 1590, 1392, 507, 493,
	501, 811, 1094, 803, 811, 1339, 906, 907, 811, 895,
	805, 804, 1856, 873, 1615, 938, 1877, 933, 2059, 1648,
	948, 926, 950, 959, 492, 939, 2060, 463, 2362, 465,
	480, 1309, 495, 1806, 494, 469, 1653, 467, 471, 481,
	472, 1660, 466, 1661, 477, 1662, 1334, 468, 482, 483,
	485, 499, 498, 486, 2347, 475, 496, 809, 947, 949,
	809, 1658, 1656, 1657, 815, 954, 940, 176, 902, 176,
	2066, 899, 176, 1310, 2248, 1311, 934, 935, 1889, 1807,
	988, 985, 986, 987, 992, 994, 991, 1663, 990, 1654,
	952, 879, 878, 2067, 1650, 984, 2031, 1652, 2175, 1617,
	505, 505, 505, 1809, 1911, 843, 1804, 1523, 841, 988,
	985, 986, 987, 992, 994, 991, 852, 990, 505, 505,
	1813, 1814, 851, 850, 984, 1805, 493, 975, 493, 915,
	849, 921, 922, 923, 924, 848, 847, 1651, 34, 846,
	178, 179, 180, 845, 840, 816, 945, 1913, 1227, 1879,
	946, 853, 1027, 1340, 961, 1026, 1815, 898, 834, 796,
	951, 953, 1027, 794, 810, 1026, 2354, 810, 492, 2359,
	1592, 810, 796, 2114, 75, 2301, 2356, 828, 1683, 493,
	796, 497, 944, 80, 1247, 827, 1812, 80, 1682, 1731,
	1733, 1030, 1031, 1032, 1033, 1893, 80, 1066, 1815, 490,
	1905, 1038, 2262, 1041, 176, 844, 1348, 955, 842, 1915,
	1695, 1919, 1599, 1914, 491, 1912, 634, 869, 833, 1890,
	1917, 176, 1095, 1639, 827, 830, 831, 1097, 796, 1916,
	929, 1101, 824, 828, 599, 1100, 1098, 601, 966, 967,
	505, 834, 1918, 1920, 176, 908, 905, 1067, 916, 505,
	1246, 823, 1344, 80, 969, 505, 863, 2039, 643, 1876,
	1939, 1034, 1938, 1937, 834, 1222, 1321, 1320, 1322, 1323,
	1324, 1221, 1220, 834, 1866, 1345, 1218, 2318, 461, 1099,
	2316, 1067, 71, 89, 978, 976, 1635, 977, 456, 2320,
	2321, 110, 1338, 1896, 1813, 1814, 1808, 1732, 1895, 2317,
	1896, 833, 1028, 1029, 834, 1895, 837, 827, 2287, 1888,
	2150, 834, 1887, 2132, 1792, 1091, 838, 1757, 1051, 1721,
	1052, 1055, 1056, 493, 833, 1625, 2352, 1137, 1060, 2353,
	910, 2351, 1547, 833, 839, 92, 1069, 1070, 1071, 827,
	830, 831, 1027, 796, 1026, 1026, 1025, 824, 828, 178,
	179, 180, 1088, 1442, 2001, 178, 179, 180, 616, 1754,
	1812, 1096, 598, 999, 833, 942, 1119, 600, 105, 837,
	827, 833, 1815, 868, 928, 958, 1116, 1928, 1356, 838,
	2297, 2126, 1335, 914, 1336, 930, 855, 1337, 1422, 1143,
	1144, 1047, 1018, 1019, 1020, 1021, 1023, 1022, 1024, 1025,
	1649, 176, 1423, 1424, 1421, 1211, 1341, 1153, 1462, 647,
	979, 1462, 518, 1711, 1219, 1412, 1414, 1415, 1443, 1845,
	2096, 106, 998, 1634, 1755, 1020, 1021, 1023, 1022, 1024,
	1025, 997, 998, 505, 1413, 1243, 996, 997, 998, 2225,
	1700, 2094, 1114, 1252, 1930, 2019, 2018, 1256, 1621, 1699,
	505, 505, 1258, 505, 1257, 505, 505, 1245, 505, 505,
	505, 505, 505, 505, 1632, 1630, 901, 843, 1130, 841,
	2340, 1698, 2360, 505, 996, 997, 998, 176, 1292, 2006,
	1138, 1102, 996, 997, 998, 1253, 1114, 1148, 1328, 2090,
	1114, 2161, 943, 176, 1016, 1017, 1018, 1019, 1020, 1021,
	1023, 1022, 1024, 1025, 505, 1357, 176, 913, 2306, 2160,
	1287, 1288, 1225, 1226, 2037, 1232, 1114, 1346, 996, 997,
	998, 176, 996, 997, 998, 1114, 1627, 1251, 996, 997,
	998, 1261, 1466, 1262, 1239, 1264, 1266, 176, 2307, 1270,
	1272, 1274, 1276, 1278, 176, 2361, 1830, 1217, 996, 997,
	998, 1631, 1327, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 505, 505, 505, 1250, 996, 997, 998, 1627,
	1295, 1296, 1229, 1242, 1289, 1230, 1301, 1302, 1228, 588,
	589, 1249, 1249, 1515, 1516, 1352, 81, 1829, 1904, 1596,
	638, 1360, 176, 2092, 1629, 2341, 1326, 1305, 1364, 1420,
	1366, 1367, 1368, 1369, 1329, 2280, 1314, 1373, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1023, 1022, 1024, 1025,
	1127, 1387, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023,
	1022, 1024, 1025, 1418, 1290, 2281, 1313, 1441, 1316, 1349,
	1312, 1358, 1359, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1000, 1451, 505, 1416, 1303, 1363, 1687, 1688, 1689, 1114,
	1325, 1297, 1370, 1371, 1372, 113, 2284, 813, 505, 505,
	812, 1294, 1362, 1426, 1293, 2242, 996, 997, 998, 573,
	1473, 1831, 2283, 1268, 2282, 1223, 1126, 2224, 1444, 2222,
	2200, 996, 997, 998, 1455, 2158, 2017, 1123, 1463, 1383,
	1384, 1385, 1315, 176, 1839, 1827, 1386, 996, 997, 998,
	178, 179, 180, 996, 997, 998, 1493, 1643, 1642, 996,
	997, 998, 1508, 1495, 1494, 1496, 1446, 177, 1445, 176,
	177, 1389, 505, 177, 1419, 1475, 1084, 1087, 506, 2102,
	177, 1085, 176, 2101, 89, 505, 1086, 1124, 177, 2062,
	176, 1353, 176, 1317, 176, 176, 505, 1473, 1354, 505,
	177, 1477, 1478, 1304, 1300, 643, 1474, 1299, 643, 1298,
	505, 1125, 996, 997, 998, 956, 996, 997, 998, 89,
	1748, 2332, 506, 1748, 2310, 506, 177, 506, 1425, 1114,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1501, 1080, 1083, 1525, 1748, 2291, 1081,
	1076, 1079, 1475, 2246, 1082, 1077, 1567, 1568, 1569, 1570,
	1078, 1447, 178, 179, 180, 505, 1799, 86, 1453, 1454,
	2245, 1602, 1603, 1604, 1550, 2184, 1606, 1608, 87, 1407,
	1408, 1409, 1410, 1520, 2270, 1114, 613, 1476, 1533, 505,
	1479, 1480, 1857, 1503, 1842, 505, 1252, 2178, 1114, 1252,
	1766, 1252, 1748, 2176, 1583, 1072, 1075, 1554, 1707, 1626,
	1073, 1551, 178, 179, 180, 1074, 1609, 88, 1518, 1555,
	1449, 1450, 178, 179, 180, 1965, 1607, 1627, 1114, 1538,
	1500, 95, 1537, 1114, 1589, 2125, 1553, 2125, 1552, 505,
	1694, 1441, 94, 86, 93, 2127, 1441, 1441, 2130, 1114,
	88, 2029, 2028, 88, 87, 1767, 647, 2025, 2026, 647,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1022,
	1024, 1025, 2025, 2024, 1767, 1114, 1114, 518, 1696, 1114,
	1620, 1706, 176, 1623, 1759, 1624, 1579, 1580, 1595, 176,
	1613, 1584, 1605, 1597, 176, 176, 1594, 1788, 176, 1562,
	176, 1563, 1564, 1565, 1566, 1759, 176, 1682, 1875, 1114,
	1511, 1512, 1114, 176, 1618, 1788, 1637, 1573, 1574, 1575,
	1576, 1622, 1619, 1584, 1638, 1214, 1859, 835, 836, 1640,
	1641, 1853, 1854, 1748, 1747, 995, 1114, 1545, 1249, 81,
	1636, 176, 505, 1214, 1213, 577, 586, 587, 588, 589,
	578, 584, 1744, 1159, 1158, 579, 1767, 585, 590, 591,
	95, 1789, 94, 1996, 1673, 1674, 1705, 88, 1628, 1676,
	1791, 94, 1682, 93, 995, 1646, 2296, 2125, 1677, 1789,
	1748, 1767, 2027, 1539, 1696, 1418, 1716, 1715, 1682, 1627,
	1610, 1513, 1118, 2163, 1483, 1397, 1585, 1343, 1145, 2014,
	2015, 603, 818, 817, 81, 2258, 1121, 2236, 2155, 1216,
	1582, 2061, 580, 582, 581, 583, 1666, 1283, 2021, 1860,
	1578, 1572, 1571, 1331, 1692, 1696, 1627, 1244, 1240, 1212,
	1836, 1696, 107, 2064, 176, 900, 2167, 2137, 2138, 1704,
	1835, 1114, 176, 2259, 2164, 2165, 2166, 81, 1280, 1593,
	505, 2337, 2313, 577, 586, 587, 588, 589, 578, 584,
	2140, 1753, 2044, 579, 1680, 585, 590, 591, 1284, 1285,
	1286, 2043, 2042, 1965, 1846, 1667, 177, 1390, 177, 81,
	1763, 177, 176, 176, 2168, 2169, 1419, 1690, 1836, 1987,
	1985, 34, 1749, 2143, 1988, 1986, 1281, 1282, 1798, 1989,
	1783, 1776, 1777, 2142, 1984, 1983, 2349, 2014, 2015, 506,
	506, 506, 2333, 1507, 1122, 1499, 1710, 1957, 1959, 2131,
	580, 582, 581, 583, 2048, 1945, 1960, 506, 506, 1772,
	1775, 1776, 1777, 1773, 1944, 1774, 1778, 1745, 2279, 1691,
	2215, 1693, 2217, 2121, 505, 1091, 1735, 1820, 1821, 176,
	1782, 1727, 1822, 1823, 1824, 1825, 176, 1342, 2118, 617,
	1954, 1817, 505, 592, 1756, 1801, 2117, 618, 505, 1746,
	1741, 1558, 1252, 1252, 1840, 1458, 1786, 1852, 505, 865,
	1112, 1108, 864, 1708, 1790, 1863, 2074, 86, 1793, 1459,
	1872, 1835, 1899, 968, 88, 1109, 1718, 1719, 87, 1802,
	86, 176, 176, 176, 176, 176, 1868, 1867, 1589, 88,
	114, 87, 2123, 177, 1515, 1516, 2040, 176, 176, 1828,
	1497, 1498, 1111, 1871, 1110, 1670, 95, 1843, 1838, 1837,
	177, 2293, 2254, 176, 1870, 1112, 1108, 94, 1816, 93,
	1475, 1780, 1847, 1848, 1849, 1504, 1712, 1232, 88, 506,
	1109, 1441, 1943, 177, 625, 626, 1861, 1862, 506, 1659,
	1942, 1686, 93, 1869, 506, 2223, 2221, 95, 2220, 2213,
	2122, 1474, 505, 2120, 2045, 1105, 1106, 1111, 94, 1110,
	93, 1936, 599, 1611, 1927, 505, 1906, 95, 624, 94,
	2212, 2111, 1759, 2339, 2338, 176, 1907, 1130, 94, 505,
	569, 1744, 1139, 1131, 570, 571, 100, 101, 505, 2339,
	1891, 2285, 2016, 615, 97, 505, 505, 1936, 176, 176,
	176, 176, 176, 1962, 1947, 1977, 1971, 82, 1921, 1908,
	176, 1, 2315, 605, 1922, 176, 1897, 474, 176, 1898,
	1484, 176, 176, 176, 1089, 488, 2311, 1948, 1318, 1308,
	2187, 1968, 2255, 1101, 2051, 1587, 1968, 826, 139, 1935,
	1548, 1549, 2328, 104, 789, 1940, 176, 1946, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1023, 1022, 1024, 1025,
	103, 1949, 829, 606, 927, 1612, 2179, 607, 1818, 1559,
	1997, 2038, 1978, 1998, 1165, 1981, 1976, 176, 1163, 1164,
	1990, 89, 1162, 1994, 505, 2022, 2023, 1352, 1999, 1995,
	177, 505, 1167, 2013, 2012, 1166, 2005, 176, 1161, 2009,
	1391, 502, 1779, 174, 1154, 1132, 2050, 176, 1979, 1980,
	866, 1982, 2052, 464, 2034, 2030, 1644, 470, 1039, 1941,
	1794, 176, 506, 644, 176, 637, 2047, 2033, 1973, 2115,
	1953, 1955, 1751, 1958, 2075, 1951, 2278, 2049, 2214, 506,
	506, 2292, 506, 1556, 506, 506, 2056, 506, 506, 506,
	506, 506, 506, 2035, 2036, 2013, 2012, 1128, 1113, 2054,
	1589, 1709, 506, 1046, 1460, 1530, 177, 2069, 1923, 1924,
	1925, 1926, 176, 1492, 1411, 1929, 2076, 527, 526, 1931,
	1932, 2070, 177, 2072, 2073, 2046, 2077, 524, 1737, 1760,
	2083, 1001, 576, 506, 1140, 177, 1771, 1769, 1768, 1668,
	1772, 1775, 1776, 1777, 1773, 1534, 1774, 1778, 2109, 2139,
	177, 2137, 2138, 2135, 1528, 1743, 528, 520, 574, 2008,
	2011, 1557, 2119, 1963, 2112, 1878, 177, 176, 2058, 980,
	1104, 514, 801, 177, 2124, 1457, 2260, 1685, 2098, 2134,
	1103, 60, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 506, 506, 506, 2144, 2141, 38, 2146, 509, 2148,
	2149, 2345, 971, 631, 32, 31, 30, 29, 28, 23,
	176, 22, 21, 176, 176, 176, 505, 20, 19, 2147,
	25, 177, 2154, 2152, 2153, 18, 17, 16, 2157, 109,
	2159, 2174, 47, 44, 42, 2188, 505, 505, 505, 116,
	115, 45, 41, 903, 39, 27, 26, 15, 14, 13,
	12, 11, 2194, 10, 9, 5, 4, 974, 24, 2,
	2183, 0, 0, 0, 2080, 2081, 0, 2082, 0, 0,
	2084, 0, 2086, 0, 0, 505, 505, 505, 176, 0,
	0, 506, 0, 2199, 0, 2193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 506, 0,
	0, 505, 0, 505, 0, 0, 0, 2230, 2209, 2210,
	0, 1971, 2219, 2218, 0, 1971, 2207, 2208, 34, 2232,
	0, 0, 2228, 2226, 0, 0, 505, 0, 599, 0,
	2234, 0, 177, 0, 2100, 1968, 0, 0, 0, 0,
	599, 2241, 2238, 559, 0, 0, 0, 0, 0, 2239,
	0, 0, 0, 0, 0, 0, 0, 505, 177, 0,
	0, 506, 2243, 0, 2244, 2250, 2257, 0, 2249, 0,
	0, 177, 0, 2247, 506, 0, 518, 0, 0, 177,
	0, 177, 0, 177, 177, 506, 0, 0, 506, 0,
	0, 175, 0, 0, 460, 0, 2277, 500, 0, 506,
	0, 2275, 2274, 0, 460, 0, 0, 505, 0, 0,
	0, 2151, 460, 1971, 0, 2192, 0, 2286, 0, 2288,
	0, 0, 2289, 2290, 612, 2156, 0, 0, 0, 505,
	176, 0, 2295, 0, 0, 0, 0, 0, 0, 0,
	630, 505, 630, 34, 2298, 0, 0, 0, 0, 0,
	460, 172, 0, 0, 506, 0, 0, 0, 505, 2182,
	0, 0, 0, 0, 2308, 0, 0, 505, 505, 0,
	0, 2322, 2327, 2314, 2319, 114, 2257, 2329, 506, 0,
	172, 0, 34, 0, 506, 2336, 0, 0, 156, 0,
	558, 0, 0, 0, 2195, 1968, 2196, 0, 2197, 2342,
	2198, 0, 0, 0, 114, 2201, 2202, 2348, 0, 0,
	0, 0, 2355, 0, 0, 0, 0, 156, 0, 0,
	2357, 0, 0, 0, 0, 0, 0, 0, 506, 0,
	2227, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2235, 0, 0, 2237, 153, 0, 154, 0, 504,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 153, 0, 154, 0, 177, 0,
	0, 172, 0, 177, 177, 171, 0, 177, 0, 177,
	0, 0, 0, 645, 0, 177, 793, 0, 800, 0,
	0, 0, 177, 0, 0, 114, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 2276, 518, 156, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	177, 506, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 157, 0, 0, 135, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 154, 0, 0,
	0, 0, 123, 124, 145, 144, 171, 0, 0, 0,
	0, 1010, 0, 1011, 0, 0, 0, 0, 2323, 0,
	0, 0, 0, 0, 0, 1115, 1117, 1012, 1013, 1009,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1022,
	1024, 1025, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 149, 506,
	0, 0, 140, 121, 147, 128, 120, 0, 141, 142,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 129, 0, 0, 0, 149, 0, 0,
	0, 177, 177, 0, 0, 0, 0, 132, 130, 125,
	126, 127, 131, 0, 0, 0, 0, 122, 0, 0,
	0, 0, 0, 1092, 0, 0, 133, 0, 0, 0,
	460, 0, 460, 0, 0, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 459, 177, 0, 0, 0, 0,
	0, 506, 0, 0, 508, 0, 0, 506, 0, 0,
	0, 0, 595, 0, 0, 0, 0, 506, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 177, 177, 177, 177, 0, 0, 0, 0, 0,
	797, 0, 0, 0, 0, 0, 177, 177, 0, 0,
	0, 150, 155, 152, 158, 159, 160, 161, 163, 164,
	165, 166, 177, 0, 143, 0, 0, 167, 168, 169,
	170, 0, 0, 0, 0, 0, 137, 460, 0, 138,
	150, 155, 152, 158, 159, 160, 161, 163, 164, 165,
	166, 0, 0, 0, 612, 0, 167, 168, 169, 170,
	0, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 0, 0, 460, 0, 0,
	645, 645, 645, 0, 177, 0, 0, 0, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 970, 972,
	0, 0, 0, 0, 506, 506, 0, 177, 177, 177,
	177, 177, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 177, 0, 0, 177, 0, 0,
	177, 177, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 155, 152, 158, 159, 160, 161, 163, 164,
	165, 166, 0, 0, 0, 177, 0, 167, 168, 169,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	1135, 0, 0, 0, 0, 0, 0, 0, 0, 645,
	177, 0, 0, 177, 460, 1155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1464,
	0, 0, 0, 1465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1115, 1482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1255,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1255, 1255, 0, 0, 0, 0,
	460, 0, 0, 0, 0, 1502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1306, 568, 73, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	904, 0, 909, 0, 1351, 911, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 460, 0, 177,
	0, 0, 177, 177, 177, 506, 1374, 1375, 460, 460,
	460, 460, 460, 460, 460, 0, 0, 0, 0, 602,
	0, 73, 0, 0, 0, 506, 506, 506, 0, 0,
	0, 0, 0, 793, 0, 0, 0, 0, 0, 602,
	0, 0, 0, 0, 0, 460, 1254, 0, 0, 0,
	1260, 1260, 0, 1260, 0, 1260, 1260, 0, 1269, 1260,
	1260, 1260, 1260, 1260, 506, 506, 506, 177, 0, 0,
	0, 1254, 1254, 793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 0, 506, 0, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 1330, 0, 630, 630, 1255, 0,
	0, 0, 1255, 0, 0, 506, 0, 0, 0, 0,
	0, 0, 0, 630, 1351, 630, 630, 630, 630, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 1142, 0, 0,
	0, 0, 0, 0, 0, 0, 1306, 0, 0, 0,
	0, 0, 645, 645, 645, 0, 0, 0, 630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 506, 0, 0, 0,
	0, 1351, 0, 460, 0, 460, 0, 460, 1536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 1452, 0, 0, 1254, 506, 506, 0, 1254,
	0, 0, 0, 0, 0, 0, 1697, 0, 1467, 1468,
	1701, 645, 1702, 1703, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 0, 0, 1714, 0, 0, 1717, 0,
	0, 0, 0, 0, 0, 1722, 1723, 1724, 1725, 1726,
	1502, 0, 0, 0, 1160, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1135, 0, 0, 645, 0,
	0, 0, 0, 0, 0, 0, 645, 0, 0, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 0, 0, 0, 0,
	0, 0, 460, 0, 0, 0, 0, 460, 460, 1332,
	0, 460, 0, 1671, 0, 0, 0, 0, 0, 460,
	0, 0, 0, 0, 0, 800, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 963, 963, 963,
	1361, 0, 0, 0, 0, 0, 0, 1365, 0, 793,
	0, 0, 0, 0, 460, 800, 0, 73, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 602, 1035, 1036, 1037, 0, 1040,
	0, 1042, 1043, 1044, 1045, 1400, 1048, 1050, 1050, 793,
	1050, 1054, 1054, 1054, 1057, 1058, 1059, 0, 1061, 1062,
	1063, 1064, 1065, 0, 0, 0, 0, 1054, 1054, 1054,
	0, 630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 630, 0, 1933, 1934, 0,
	0, 0, 0, 1093, 0, 0, 602, 460, 0, 0,
	602, 0, 0, 0, 0, 1306, 602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 460, 0, 0, 0,
	1992, 1993, 1679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1517, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 1524, 0, 0, 1400, 0,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 0, 0, 0, 460, 460, 460, 460, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2079,
	460, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	2088, 2089, 2091, 2093, 2095, 2097, 460, 0, 0, 0,
	0, 0, 0, 0, 2103, 0, 0, 0, 0, 2107,
	630, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 0, 0, 0, 0, 0,
	0, 2128, 2129, 0, 0, 2133, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 0, 0, 0, 460, 0,
	0, 0, 0, 2145, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 1255, 0, 0, 1858, 0,
	1255, 460, 460, 460, 460, 460, 645, 0, 1864, 0,
	0, 0, 0, 1991, 0, 1400, 0, 0, 460, 0,
	0, 460, 1655, 0, 460, 2000, 1351, 1664, 1665, 0,
	0, 1669, 0, 0, 0, 0, 0, 0, 0, 1672,
	2177, 0, 0, 0, 0, 0, 1675, 0, 0, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 963,
	963, 963, 0, 0, 1678, 0, 0, 0, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1255, 0, 0, 2204, 0, 0, 0, 0, 0, 0,
	460, 0, 645, 0, 0, 0, 0, 0, 0, 0,
	460, 0, 0, 0, 0, 1260, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 0, 0, 460, 0, 1950,
	0, 0, 0, 0, 0, 0, 0, 0, 645, 0,
	2240, 0, 1254, 0, 0, 1975, 1260, 1254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2253, 0, 0, 0, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 2263, 2264, 2265, 2266, 2267, 0,
	2268, 2269, 2271, 0, 0, 0, 2272, 2273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 1851, 0, 0, 793, 0, 0, 1254, 0, 0,
	0, 1506, 0, 0, 114, 0, 136, 0, 0, 2300,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 1531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 0, 0, 460, 460, 460, 0,
	0, 0, 1844, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2343, 2344, 153, 0, 154, 0, 0, 0,
	0, 1235, 1236, 145, 144, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 1883, 1884, 1885, 1886, 0,
	0, 1306, 0, 0, 0, 0, 0, 0, 0, 0,
	1400, 1892, 0, 0, 0, 0, 0, 0, 0, 1255,
	172, 0, 0, 0, 0, 0, 1900, 0, 0, 0,
	0, 1231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 1237, 147, 114, 1234, 136, 141, 142, 0,
	0, 0, 157, 72, 36, 37, 74, 156, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 40, 66, 67,
	0, 64, 68, 0, 0, 0, 1506, 0, 146, 0,
	65, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2189, 2190, 2191, 0,
	0, 0, 0, 0, 153, 0, 154, 0, 0, 53,
	0, 1235, 1236, 145, 144, 171, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2205, 2205, 2205, 0, 0,
	0, 0, 0, 460, 0, 0, 0, 0, 0, 2020,
	0, 0, 0, 0, 0, 0, 1254, 149, 0, 0,
	0, 2231, 0, 2233, 0, 0, 0, 0, 0, 1255,
	0, 140, 1237, 147, 0, 1234, 0, 141, 142, 0,
	2041, 1182, 157, 0, 0, 0, 1506, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	2053, 0, 43, 46, 49, 48, 51, 0, 63, 0,
	2057, 69, 0, 143, 0, 0, 0, 645, 0, 0,
	0, 0, 0, 0, 2068, 137, 0, 2071, 138, 0,
	0, 0, 0, 52, 77, 76, 0, 0, 61, 62,
	50, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 602, 0, 0, 2108, 0, 0, 0, 54,
	55, 0, 56, 57, 58, 59, 0, 0, 0, 1506,
	1764, 1765, 0, 0, 0, 0, 0, 149, 0, 1784,
	0, 2304, 0, 0, 0, 0, 0, 1170, 0, 0,
	0, 0, 0, 0, 0, 0, 1254, 0, 2309, 0,
	0, 0, 0, 0, 0, 0, 0, 645, 645, 0,
	150, 155, 152, 158, 159, 160, 161, 163, 164, 165,
	166, 0, 0, 0, 0, 0, 167, 168, 169, 170,
	1183, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 138, 0,
	0, 0, 0, 2170, 0, 0, 2171, 2172, 2173, 0,
	0, 0, 0, 0, 75, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 80, 0, 0,
	0, 1196, 1199, 1200, 1201, 1202, 1203, 1204, 0, 1205,
	1206, 1207, 1208, 1209, 1184, 1185, 1186, 1187, 1168, 1169,
	1197, 0, 1171, 0, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1188, 1189, 1190, 1191, 1192, 1193,
	1194, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 155, 152, 158, 159, 160, 161, 163, 164, 165,
	166, 0, 0, 0, 0, 0, 167, 168, 169, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1198,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 73, 0, 0, 1531, 1531, 1531, 1531, 1531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 1531, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2078, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2104, 2105, 2106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 73, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2294, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 757, 404, 0, 706,
	774, 677, 694, 784, 697, 700, 740, 656, 719, 328,
	691, 73, 681, 652, 687, 653, 679, 708, 235, 676,
	759, 722, 773, 286, 232, 658, 682, 342, 696, 187,
	742, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 780, 290, 729, 0, 389,
	313, 0, 0, 0, 710, 763, 717, 753, 705, 741,
	666, 728, 775, 692, 0, 737, 776, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 2330, 0, 2331, 0, 0, 0, 0, 0, 209,
	0, 216, 734, 770, 689, 736, 230, 274, 237, 229,
	406, 781, 762, 0, 0, 202, 772, 712, 739, 787,
	651, 731, 0, 654, 657, 783, 766, 685, 240, 0,
	0, 0, 0, 0, 0, 0, 709, 718, 750, 703,
	0, 0, 0, 0, 0, 0, 0, 0, 683, 0,
	727, 0, 0, 0, 0, 662, 655, 0, 0, 0,
	0, 707, 0, 0, 0, 665, 0, 684, 751, 0,
	649, 258, 659, 314, 0, 755, 765, 704, 438, 769,
	702, 701, 746, 663, 761, 695, 285, 661, 282, 182,
	198, 0, 693, 324, 363, 369, 760, 680, 688, 221,
	686, 367, 338, 423, 205, 248, 360, 343, 365, 726,
	744, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	965, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	675, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 756, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	748, 786, 337, 368, 211, 425, 388, 670, 674, 668,
	669, 720, 721, 671, 777, 778, 779, 752, 664, 0,
	672, 673, 0, 758, 767, 768, 725, 181, 195, 288,
	782, 357, 251, 452, 432, 428, 650, 667, 227, 678,
	0, 0, 690, 698, 699, 711, 713, 714, 715, 716,
	724, 732, 733, 735, 743, 745, 747, 749, 754, 764,
	785, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 0, 260, 420,
	442, 0, 296, 723, 730, 298, 245, 263, 273, 738,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 771, 757,
	404, 0, 706, 774, 677, 694, 784, 697, 700, 740,
	656, 719, 328, 691, 0, 681, 652, 687, 653, 679,
	708, 235, 676, 759, 722, 773, 286, 232, 658, 682,
	342, 696, 187, 742, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 780, 290,
	729, 0, 389, 313, 0, 0, 0, 710, 763, 717,
	753, 705, 741, 666, 728, 775, 692, 0, 737, 776,
	276, 218, 186, 325, 390, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 734, 770, 689, 736, 230,
	274, 237, 229, 406, 781, 762, 0, 0, 202, 772,
	712, 739, 787, 651, 731, 0, 654, 657, 783, 766,
	685, 240, 0, 0, 0, 0, 0, 0, 0, 709,
	718, 750, 703, 0, 0, 0, 0, 0, 0, 2001,
	0, 683, 0, 727, 0, 0, 0, 0, 662, 655,
	0, 0, 0, 0, 707, 0, 0, 0, 665, 0,
	684, 751, 0, 649, 258, 659, 314, 0, 755, 765,
	704, 438, 769, 702, 701, 746, 663, 761, 695, 285,
	661, 282, 182, 198, 0, 693, 324, 363, 369, 760,
	680, 688, 221, 686, 367, 338, 423, 205, 248, 360,
	343, 365, 726, 744, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 451, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 445, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 453, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 454,
	201, 434, 194, 965, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 455,
	206, 207, 208, 675, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 756, 405, 422, 430,
	437, 443, 444, 446, 447, 448, 449, 450, 319, 268,
	387, 283, 292, 748, 786, 337, 368, 211, 425, 388,
	670, 674, 668, 669, 720, 721, 671, 777, 778, 779,
	752, 664, 0, 672, 673, 0, 758, 767, 768, 725,
	181, 195, 288, 782, 357, 251, 452, 432, 428, 650,
	667, 227, 678, 0, 0, 690, 698, 699, 711, 713,
	714, 715, 716, 724, 732, 733, 735, 743, 745, 747,
	749, 754, 764, 785, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	0, 260, 420, 442, 0, 296, 723, 730, 298, 245,
	263, 273, 738, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 771, 757, 404, 0, 706, 774, 677, 694, 784,
	697, 700, 740, 656, 719, 328, 691, 0, 681, 652,
	687, 653, 679, 708, 235, 676, 759, 722, 773, 286,
	232, 658, 682, 342, 696, 187, 742, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 780, 290, 729, 0, 389, 313, 0, 0, 0,
	710, 763, 717, 753, 705, 741, 666, 728, 775, 692,
	0, 737, 776, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 734, 770,
	689, 736, 230, 274, 237, 229, 406, 781, 762, 0,
	0, 202, 772, 712, 739, 787, 651, 731, 0, 654,
	657, 783, 766, 685, 240, 0, 0, 0, 0, 0,
	0, 0, 709, 718, 750, 703, 0, 0, 0, 0,
	0, 0, 1961, 0, 683, 0, 727, 0, 0, 0,
	0, 662, 655, 0, 0, 0, 0, 707, 0, 0,
	0, 665, 0, 684, 751, 0, 649, 258, 659, 314,
	0, 755, 765, 704, 438, 769, 702, 701, 746, 663,
	761, 695, 285, 661, 282, 182, 198, 0, 693, 324,
	363, 369, 760, 680, 688, 221, 686, 367, 338, 423,
	205, 248, 360, 343, 365, 726, 744, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 965, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 675, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 756,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 319, 268, 387, 283, 292, 748, 786, 337, 368,
	211, 425, 388, 670, 674, 668, 669, 720, 721, 671,
	777, 778, 779, 752, 664, 0, 672, 673, 0, 758,
	767, 768, 725, 181, 195, 288, 782, 357, 251, 452,
	432, 428, 650, 667, 227, 678, 0, 0, 690, 698,
	699, 711, 713, 714, 715, 716, 724, 732, 733, 735,
	743, 745, 747, 749, 754, 764, 785, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 0, 260, 420, 442, 0, 296, 723,
	730, 298, 245, 263, 273, 738, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 771, 757, 404, 0, 706, 774,
	677, 694, 784, 697, 700, 740, 656, 719, 328, 691,
	0, 681, 652, 687, 653, 679, 708, 235, 676, 759,
	722, 773, 286, 232, 658, 682, 342, 696, 187, 742,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 780, 290, 729, 0, 389, 313,
	0, 0, 0, 710, 763, 717, 753, 705, 741, 666,
	728, 775, 692, 0, 737, 776, 276, 218, 186, 325,
	390, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 734, 770, 689, 736, 230, 274, 237, 229, 406,
	781, 762, 0, 0, 202, 772, 712, 739, 787, 651,
	731, 0, 654, 657, 783, 766, 685, 240, 0, 0,
	0, 0, 0, 0, 0, 709, 718, 750, 703, 0,
	0, 0, 0, 0, 0, 1519, 0, 683, 0, 727,
	0, 0, 0, 0, 662, 655, 0, 0, 0, 0,
	707, 0, 0, 0, 665, 0, 684, 751, 0, 649,
	258, 659, 314, 0, 755, 765, 704, 438, 769, 702,
	701, 746, 663, 761, 695, 285, 661, 282, 182, 198,
	0, 693, 324, 363, 369, 760, 680, 688, 221, 686,
	367, 338, 423, 205, 248, 360, 343, 365, 726, 744,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 965,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 675,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 756, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 748,
	786, 337, 368, 211, 425, 388, 670, 674, 668, 669,
	720, 721, 671, 777, 778, 779, 752, 664, 0, 672,
	673, 0, 758, 767, 768, 725, 181, 195, 288, 782,
	357, 251, 452, 432, 428, 650, 667, 227, 678, 0,
	0, 690, 698, 699, 711, 713, 714, 715, 716, 724,
	732, 733, 735, 743, 745, 747, 749, 754, 764, 785,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 0, 260, 420, 442,
	0, 296, 723, 730, 298, 245, 263, 273, 738, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 771, 757, 404,
	0, 706, 774, 677, 694, 784, 697, 700, 740, 656,
	719, 328, 691, 0, 681, 652, 687, 653, 679, 708,
	235, 676, 759, 722, 773, 286, 232, 658, 682, 342,
	696, 187, 742, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 780, 290, 729,
	0, 389, 313, 0, 0, 0, 710, 763, 717, 753,
	705, 741, 666, 728, 775, 692, 0, 737, 776, 276,
	218, 186, 325, 390, 250, 0, 81, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 734, 770, 689, 736, 230, 274,
	237, 229, 406, 781, 762, 0, 0, 202, 772, 712,
	739, 787, 651, 731, 0, 654, 657, 783, 766, 685,
	240, 0, 0, 0, 0, 0, 0, 0, 709, 718,
	750, 703, 0, 0, 0, 0, 0, 0, 0, 0,
	683, 0, 727, 0, 0, 0, 0, 662, 655, 0,
	0, 0, 0, 707, 0, 0, 0, 665, 0, 684,
	751, 0, 649, 258, 659, 314, 0, 755, 765, 704,
	438, 769, 702, 701, 746, 663, 761, 695, 285, 661,
	282, 182, 198, 0, 693, 324, 363, 369, 760, 680,
	688, 221, 686, 367, 338, 423, 205, 248, 360, 343,
	365, 726, 744, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 965, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 675, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 756, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 748, 786, 337, 368, 211, 425, 388, 670,
	674, 668, 669, 720, 721, 671, 777, 778, 779, 752,
	664, 0, 672, 673, 0, 758, 767, 768, 725, 181,
	195, 288, 782, 357, 251, 452, 432, 428, 650, 667,
	227, 678, 0, 0, 690, 698, 699, 711, 713, 714,
	715, 716, 724, 732, 733, 735, 743, 745, 747, 749,
	754, 764, 785, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 0,
	260, 420, 442, 0, 296, 723, 730, 298, 245, 263,
	273, 738, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	771, 757, 404, 0, 706, 774, 677, 694, 784, 697,
	700, 740, 656, 719, 328, 691, 0, 681, 652, 687,
	653, 679, 708, 235, 676, 759, 722, 773, 286, 232,
	658, 682, 342, 696, 187, 742, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	780, 290, 729, 0, 389, 313, 0, 0, 0, 710,
	763, 717, 753, 705, 741, 666, 728, 775, 692, 0,
	737, 776, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 734, 770, 689,
	736, 230, 274, 237, 229, 406, 781, 762, 0, 0,
	202, 772, 712, 739, 787, 651, 731, 0, 654, 657,
	783, 766, 685, 240, 0, 0, 0, 0, 0, 0,
	0, 709, 718, 750, 703, 0, 0, 0, 0, 0,
	0, 0, 0, 683, 0, 727, 0, 0, 0, 0,
	662, 655, 0, 0, 0, 0, 707, 0, 0, 0,
	665, 0, 684, 751, 0, 649, 258, 659, 314, 0,
	755, 765, 704, 438, 769, 702, 701, 746, 663, 761,
	695, 285, 661, 282, 182, 198, 0, 693, 324, 363,
	369, 760, 680, 688, 221, 686, 367, 338, 423, 205,
	248, 360, 343, 365, 726, 744, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 965, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 675, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 756, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 748, 786, 337, 368, 211,
	425, 388, 670, 674, 668, 669, 720, 721, 671, 777,
	778, 779, 752, 664, 0, 672, 673, 0, 758, 767,
	768, 725, 181, 195, 288, 782, 357, 251, 452, 432,
	428, 650, 667, 227, 678, 0, 0, 690, 698, 699,
	711, 713, 714, 715, 716, 724, 732, 733, 735, 743,
	745, 747, 749, 754, 764, 785, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 0, 260, 420, 442, 0, 296, 723, 730,
	298, 245, 263, 273, 738, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 771, 757, 404, 0, 706, 774, 677,
	694, 784, 697, 700, 740, 656, 719, 328, 691, 0,
	681, 652, 687, 653, 679, 708, 235, 676, 759, 722,
	773, 286, 232, 658, 682, 342, 696, 187, 742, 380,
	220, 295, 293, 409, 246, 238, 234, 219, 270, 301,
	340, 398, 334, 780, 290, 729, 0, 389, 313, 0,
	0, 0, 710, 763, 717, 753, 705, 741, 666, 728,
	775, 692, 0, 737, 776, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	734, 770, 689, 736, 230, 274, 237, 229, 406, 781,
	762, 0, 0, 788, 772, 712, 739, 787, 651, 731,
	0, 654, 657, 783, 766, 685, 240, 0, 0, 0,
	0, 0, 0, 0, 709, 718, 750, 703, 0, 0,
	0, 0, 0, 0, 0, 0, 683, 0, 727, 0,
	0, 0, 0, 662, 655, 0, 0, 0, 0, 707,
	0, 0, 0, 665, 0, 684, 751, 0, 649, 258,
	659, 314, 0, 755, 765, 704, 438, 769, 702, 701,
	746, 663, 761, 695, 285, 661, 282, 182, 198, 0,
	693, 324, 363, 369, 760, 680, 688, 221, 686, 367,
	338, 423, 205, 248, 360, 343, 365, 726, 744, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 660, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 675, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 756, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 648, 642, 641, 283, 292, 748, 786,
	337, 368, 211, 425, 388, 670, 674, 668, 669, 720,
	721, 671, 777, 778, 779, 752, 664, 0, 672, 673,
	0, 758, 767, 768, 725, 181, 195, 288, 782, 357,
	251, 452, 432, 428, 650, 667, 227, 678, 0, 0,
	690, 698, 699, 711, 713, 714, 715, 716, 724, 732,
	733, 735, 743, 745, 747, 749, 754, 764, 785, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 0, 260, 420, 442, 0,
	296, 723, 730, 298, 245, 263, 273, 738, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 771, 757, 404, 0,
	706, 774, 677, 694, 784, 697, 700, 740, 656, 719,
	328, 691, 0, 681, 652, 687, 653, 679, 708, 235,
	676, 759, 722, 773, 286, 232, 658, 682, 342, 696,
	187, 742, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 780, 290, 729, 0,
	389, 313, 0, 0, 0, 710, 763, 717, 753, 705,
	741, 666, 728, 775, 692, 0, 737, 776, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 734, 770, 689, 736, 230, 274, 237,
	229, 406, 781, 762, 0, 0, 788, 772, 712, 739,
	787, 651, 731, 0, 654, 657, 783, 766, 685, 240,
	0, 0, 0, 0, 0, 0, 0, 709, 718, 750,
	703, 0, 0, 0, 0, 0, 0, 0, 0, 683,
	0, 727, 0, 0, 0, 0, 662, 655, 0, 0,
	0, 0, 707, 0, 0, 0, 665, 0, 684, 751,
	0, 649, 258, 659, 314, 0, 755, 765, 704, 438,
	769, 702, 701, 746, 663, 761, 695, 285, 661, 282,
	182, 198, 0, 693, 324, 363, 369, 760, 680, 688,
	221, 686, 367, 338, 423, 205, 248, 360, 343, 365,
	726, 744, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 1146, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 660, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 675, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 756, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 648, 642, 641, 283,
	292, 748, 786, 337, 368, 211, 425, 388, 670, 674,
	668, 669, 720, 721, 671, 777, 778, 779, 752, 664,
	0, 672, 673, 0, 758, 767, 768, 725, 181, 195,
	288, 782, 357, 251, 452, 432, 428, 650, 667, 227,
	678, 0, 0, 690, 698, 699, 711, 713, 714, 715,
	716, 724, 732, 733, 735, 743, 745, 747, 749, 754,
	764, 785, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 723, 730, 298, 245, 263, 273,
	738, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 771,
	757, 404, 0, 706, 774, 677, 694, 784, 697, 700,
	740, 656, 719, 328, 691, 0, 681, 652, 687, 653,
	679, 708, 235, 676, 759, 722, 773, 286, 232, 658,
	682, 342, 696, 187, 742, 380, 220, 295, 293, 409,
	246, 238, 234, 219, 270, 301, 340, 398, 334, 780,
	290, 729, 0, 389, 313, 0, 0, 0, 710, 763,
	717, 753, 705, 741, 666, 728, 775, 692, 0, 737,
	776, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 734, 770, 689, 736,
	230, 274, 237, 229, 406, 781, 762, 0, 0, 788,
	772, 712, 739, 787, 651, 731, 0, 654, 657, 783,
	766, 685, 240, 0, 0, 0, 0, 0, 0, 0,
	709, 718, 750, 703, 0, 0, 0, 0, 0, 0,
	0, 0, 683, 0, 727, 0, 0, 0, 0, 662,
	655, 0, 0, 0, 0, 707, 0, 0, 0, 665,
	0, 684, 751, 0, 649, 258, 659, 314, 0, 755,
	765, 704, 438, 769, 702, 701, 746, 663, 761, 695,
	285, 661, 282, 182, 198, 0, 693, 324, 363, 369,
	760, 680, 688, 221, 686, 367, 338, 423, 205, 248,
	360, 343, 365, 726, 744, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 639, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 660, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 675, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 756, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 648,
	642, 641, 283, 292, 748, 786, 337, 368, 211, 425,
	388, 670, 674, 668, 669, 720, 721, 671, 777, 778,
	779, 752, 664, 0, 672, 673, 0, 758, 767, 768,
	725, 181, 195, 288, 782, 357, 251, 452, 432, 428,
	650, 667, 227, 678, 0, 0, 690, 698, 699, 711,
	713, 714, 715, 716, 724, 732, 733, 735, 743, 745,
	747, 749, 754, 764, 785, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 0, 260, 420, 442, 0, 296, 723, 730, 298,
	245, 263, 273, 738, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 1470, 0, 536,
	0, 0, 0, 235, 541, 0, 0, 0, 286, 232,
	0, 1471, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	548, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 325, 390, 250, 0, 81,
	0, 0, 178, 179, 180, 577, 586, 587, 588, 589,
	578, 584, 0, 0, 209, 579, 216, 585, 590, 591,
	0, 230, 274, 237, 229, 406, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 519, 533, 0, 547,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	531, 628, 0, 0, 0, 563, 0, 0, 532, 0,
	0, 540, 580, 582, 581, 583, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	562, 0, 0, 438, 0, 0, 560, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 0, 0, 337, 368, 211,
	425, 388, 569, 561, 552, 555, 570, 571, 549, 550,
	554, 553, 564, 539, 538, 0, 545, 546, 0, 556,
	557, 537, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 0, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 0,
	536, 0, 0, 0, 235, 541, 0, 0, 0, 286,
	232, 0, 0, 342, 0, 187, 0, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 548, 290, 0, 0, 389, 313, 0, 0, 0,
	0, 0, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 1543, 0, 276, 218, 186, 325, 390, 250, 0,
	81, 0, 0, 178, 179, 180, 577, 586, 587, 588,
	589, 578, 584, 0, 0, 209, 579, 216, 585, 590,
	591, 1544, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 519, 533, 0,
	547, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 531, 0, 0, 0, 0, 563, 0, 0, 532,
	0, 0, 540, 580, 582, 581, 583, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 314,
	0, 562, 0, 0, 438, 0, 0, 560, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 324,
	363, 369, 0, 0, 0, 221, 0, 367, 338, 423,
	205, 248, 360, 343, 365, 0, 0, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 0, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 0,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 569, 561, 552, 555, 570, 571, 549,
	550, 554, 553, 564, 539, 538, 0, 545, 546, 0,
	556, 557, 537, 181, 195, 288, 0, 357, 251, 452,
	432, 428, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 0, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 72, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 0, 536, 0, 0, 0, 235, 541, 0, 0,
	0, 286, 232, 0, 0, 342, 0, 187, 0, 380,
	220, 295, 293, 409, 246, 238, 234, 219, 270, 301,
	340, 398, 334, 548, 290, 0, 0, 389, 313, 0,
	0, 0, 0, 0, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 81, 0, 0, 178, 179, 180, 577, 586,
	587, 588, 589, 578, 584, 0, 0, 209, 579, 216,
	585, 590, 591, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 519,
	533, 0, 547, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 531, 0, 0, 0, 0, 563, 0,
	0, 532, 0, 0, 540, 580, 582, 581, 583, 542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 314, 0, 562, 0, 0, 438, 0, 0, 560,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 324, 363, 369, 0, 0, 0, 221, 0, 367,
	338, 423, 205, 248, 360, 343, 365, 0, 0, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 0, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 0, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 569, 561, 552, 555, 570,
	571, 549, 550, 554, 553, 564, 539, 538, 0, 545,
	546, 0, 556, 557, 537, 181, 195, 288, 80, 357,
	251, 452, 432, 428, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 0, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 536, 0, 0, 0, 235, 541, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 548, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 81, 0, 0, 178, 179, 180, 577,
	586, 587, 588, 589, 578, 584, 0, 0, 209, 579,
	216, 585, 590, 591, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	519, 533, 0, 547, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 531, 0, 0, 0, 0, 563,
	0, 0, 532, 0, 0, 540, 580, 582, 581, 583,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 562, 0, 0, 438, 0, 0,
	560, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 2324, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 569, 561, 552, 555,
	570, 571, 549, 550, 554, 553, 564, 539, 538, 0,
	545, 546, 0, 556, 557, 537, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 0, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 536, 0, 0, 0, 235, 541,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 548, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 81, 0, 1114, 178, 179, 180,
	577, 586, 587, 588, 589, 578, 584, 0, 0, 209,
	579, 216, 585, 590, 591, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 519, 533, 0, 547, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 531, 0, 0, 0, 0,
	563, 0, 0, 532, 0, 0, 540, 580, 582, 581,
	583, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 562, 0, 0, 438, 0,
	0, 560, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 569, 561, 552,
	555, 570, 571, 549, 550, 554, 553, 564, 539, 538,
	0, 545, 546, 0, 556, 557, 537, 181, 195, 288,
	0, 357, 251, 452, 432, 428, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 0, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 536, 0, 0, 0, 235,
	541, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 548, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 81, 0, 0, 178, 179,
	180, 577, 586, 587, 588, 589, 578, 584, 0, 0,
	209, 579, 216, 585, 590, 591, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 519, 533, 0, 547, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 531, 628, 0, 0,
	0, 563, 0, 0, 532, 0, 0, 540, 580, 582,
	581, 583, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 562, 0, 0, 438,
	0, 0, 560, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 569, 561,
	552, 555, 570, 571, 549, 550, 554, 553, 564, 539,
	538, 0, 545, 546, 0, 556, 557, 537, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 536, 0, 0, 0,
	235, 541, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 548, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 81, 0, 0, 178,
	179, 180, 577, 586, 587, 588, 589, 578, 584, 0,
	0, 209, 579, 216, 585, 590, 591, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 519, 533, 0, 547, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 531, 0, 0,
	0, 0, 563, 0, 0, 532, 0, 0, 540, 580,
	582, 581, 583, 542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 314, 0, 562, 0, 0,
	438, 0, 0, 560, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 324, 363, 369, 0, 0,
	0, 221, 0, 367, 338, 423, 205, 248, 360, 343,
	365, 0, 0, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 0, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 0, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 569,
	561, 552, 555, 570, 571, 549, 550, 554, 553, 564,
	539, 538, 0, 545, 546, 0, 556, 557, 537, 181,
	195, 288, 0, 357, 251, 452, 432, 428, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 0,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 536, 0, 0,
	0, 235, 541, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 548, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 325, 390, 250, 0, 81, 0, 0,
	178, 179, 180, 577, 586, 587, 588, 589, 578, 584,
	0, 0, 209, 579, 216, 585, 590, 591, 0, 230,
	274, 237, 229, 406, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 533, 0, 547, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 531, 0,
	0, 0, 0, 563, 0, 0, 532, 0, 0, 540,
	580, 582, 581, 583, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 562, 0,
	0, 438, 0, 0, 560, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 451, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 445, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 453, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 454,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 455,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 446, 447, 448, 449, 450, 319, 268,
	387, 283, 292, 0, 0, 337, 368, 211, 425, 388,
	569, 561, 552, 555, 570, 571, 549, 550, 554, 553,
	564, 539, 538, 0, 545, 546, 0, 556, 557, 537,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	0, 260, 420, 442, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 342, 0, 187, 0, 380, 220, 295, 293, 409,
	246, 238, 234, 219, 270, 301, 340, 398, 334, 0,
	290, 0, 0, 389, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 314, 0, 0,
	0, 833, 438, 0, 0, 0, 0, 0, 830, 831,
	285, 796, 282, 182, 198, 824, 828, 324, 363, 369,
	0, 0, 0, 221, 0, 367, 338, 423, 205, 248,
	360, 343, 365, 0, 0, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 0, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 0, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 357, 251, 452, 432, 428,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 0, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 1134, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 1136, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 230, 274, 237, 229, 406, 0, 0, 0, 0,
	202, 0, 0, 996, 997, 998, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 0, 0, 337, 368, 211,
	425, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 0, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 72, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 325, 390, 250,
	0, 81, 0, 1114, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 230, 274, 237, 229, 406, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	451, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 445, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 453, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 454, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 455, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 446, 447, 448,
	449, 450, 319, 268, 387, 283, 292, 0, 0, 337,
	368, 211, 425, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 80, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 0, 260, 420, 442, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 431, 393, 200,
	364, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	312, 341, 344, 257, 236, 215, 361, 212, 379, 399,
	400, 401, 403, 310, 231, 72, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 81, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 80,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 0, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 1491, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 0, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 1307, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	1489, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 357, 251, 452, 432, 428, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 0, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 796, 282,
	182, 198, 794, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 1491, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 1307, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 314, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 324, 363, 369, 0, 0,
	0, 221, 0, 367, 338, 423, 205, 248, 360, 343,
	365, 0, 0, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 0, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 0, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 357, 251, 452, 432, 428, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 0,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 325, 390, 250, 0, 0, 0, 1114,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 230,
	274, 237, 229, 406, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 2206, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 451, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 445, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 453, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 454,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 455,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 446, 447, 448, 449, 450, 319, 268,
	387, 283, 292, 0, 0, 337, 368, 211, 425, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	0, 260, 420, 442, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 342, 0, 187, 0, 380, 220, 295, 293, 409,
	246, 238, 234, 219, 270, 301, 340, 398, 334, 0,
	290, 0, 0, 389, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 1739, 0, 0,
	1740, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 314, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 324, 363, 369,
	0, 0, 0, 221, 0, 367, 338, 423, 205, 248,
	360, 343, 365, 0, 0, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 0, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 0, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 357, 251, 452, 432, 428,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 0, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 230, 274, 237, 229, 406, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1027, 0, 0,
	1026, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 0, 0, 337, 368, 211,
	425, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 0, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 1157, 0, 0, 0, 286,
	232, 0, 0, 342, 0, 187, 0, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 0, 290, 0, 0, 389, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 1156, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 314,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 324,
	363, 369, 0, 0, 0, 221, 0, 367, 338, 423,
	205, 248, 360, 343, 365, 0, 0, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 0, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 0,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 357, 251, 452,
	432, 428, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 0, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 325, 390, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 230, 274, 237, 229, 406, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 2305,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	451, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 445, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 453, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 454, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 455, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 446, 447, 448,
	449, 450, 319, 268, 387, 283, 292, 0, 0, 337,
	368, 211, 425, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 0, 260, 420, 442, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 431, 393, 200,
	364, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	312, 341, 344, 257, 236, 215, 361, 212, 379, 399,
	400, 401, 403, 310, 231, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 342, 0, 187, 0, 380,
	220, 295, 293, 409, 246, 238, 234, 219, 270, 301,
	340, 398, 334, 0, 290, 0, 0, 389, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 314, 0, 0, 0, 0, 438, 0, 0, 0,
	2206, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 324, 363, 369, 0, 0, 0, 221, 0, 367,
	338, 423, 205, 248, 360, 343, 365, 0, 0, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 0, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 0, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 357,
	251, 452, 432, 428, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 0, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 81, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 0, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 0, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 1307, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 357, 251, 452, 432, 428, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 0, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 1532, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 1136, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 314, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 324, 363, 369, 0, 0,
	0, 221, 0, 367, 338, 423, 205, 248, 360, 343,
	365, 0, 0, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 0, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 0, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 357, 251, 452, 432, 428, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 0,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 325, 390, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 1456, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 230,
	274, 237, 229, 406, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 451, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 445, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 453, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 454,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 455,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 446, 447, 448, 449, 450, 319, 268,
	387, 283, 292, 0, 0, 337, 368, 211, 425, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	0, 260, 420, 442, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 342, 0, 187, 0, 380, 220, 295, 293, 409,
	246, 238, 234, 219, 270, 301, 340, 398, 334, 0,
	290, 0, 0, 389, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 314, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 324, 363, 369,
	0, 0, 0, 221, 0, 367, 338, 423, 205, 248,
	360, 343, 365, 0, 0, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 0, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 0, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 1398, 357, 251, 452, 432, 428,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 0, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 1279, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 230, 274, 237, 229, 406, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 0, 0, 337, 368, 211,
	425, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 0, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 1277, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 342, 0, 187, 0, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 0, 290, 0, 0, 389, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 314,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 324,
	363, 369, 0, 0, 0, 221, 0, 367, 338, 423,
	205, 248, 360, 343, 365, 0, 0, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 0, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 0,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 357, 251, 452,
	432, 428, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 0, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 1275, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 325, 390, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 230, 274, 237, 229, 406, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	451, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 445, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 453, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 454, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 455, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 446, 447, 448,
	449, 450, 319, 268, 387, 283, 292, 0, 0, 337,
	368, 211, 425, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 0, 260, 420, 442, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 431, 393, 200,
	364, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	312, 341, 344, 257, 236, 215, 361, 212, 379, 399,
	400, 401, 403, 310, 231, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 1273,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 342, 0, 187, 0, 380,
	220, 295, 293, 409, 246, 238, 234, 219, 270, 301,
	340, 398, 334, 0, 290, 0, 0, 389, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 314, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 324, 363, 369, 0, 0, 0, 221, 0, 367,
	338, 423, 205, 248, 360, 343, 365, 0, 0, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 0, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 0, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 357,
	251, 452, 432, 428, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 0, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	1271, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 0, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 1267, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 342, 0, 187,
	0, 380, 220, 295, 293, 409, 246, 238, 234, 219,
	270, 301, 340, 398, 334, 0, 290, 0, 0, 389,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	325, 390, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	406, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 314, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 324, 363, 369, 0, 0, 0, 221,
	0, 367, 338, 423, 205, 248, 360, 343, 365, 0,
	0, 366, 291, 411, 355, 421, 439, 440, 228, 318,
	429, 402, 435, 451, 199, 225, 332, 395, 426, 386,
	311, 407, 408, 281, 385, 256, 185, 289, 445, 197,
	375, 213, 190, 397, 419, 210, 378, 0, 0, 453,
	192, 417, 394, 308, 278, 279, 191, 0, 359, 233,
	254, 223, 327, 414, 415, 222, 454, 201, 434, 194,
	0, 433, 320, 410, 418, 309, 300, 193, 416, 307,
	299, 284, 244, 265, 353, 294, 354, 266, 316, 315,
	317, 0, 188, 0, 391, 427, 455, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 331,
	352, 350, 356, 0, 405, 422, 430, 437, 443, 444,
	446, 447, 448, 449, 450, 319, 268, 387, 283, 292,
	0, 0, 337, 368, 211, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 357, 251, 452, 432, 428, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 321, 322, 323, 326, 329, 330, 333, 335, 336,
	339, 345, 346, 347, 348, 349, 351, 358, 362, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 0, 260, 420,
	442, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	431, 393, 200, 364, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 312, 341, 344, 257, 236, 215, 361,
	212, 379, 399, 400, 401, 403, 310, 231, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 1265, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 342, 0,
	187, 0, 380, 220, 295, 293, 409, 246, 238, 234,
	219, 270, 301, 340, 398, 334, 0, 290, 0, 0,
	389, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 325, 390, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 406, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 314, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 324, 363, 369, 0, 0, 0,
	221, 0, 367, 338, 423, 205, 248, 360, 343, 365,
	0, 0, 366, 291, 411, 355, 421, 439, 440, 228,
	318, 429, 402, 435, 451, 199, 225, 332, 395, 426,
	386, 311, 407, 408, 281, 385, 256, 185, 289, 445,
	197, 375, 213, 190, 397, 419, 210, 378, 0, 0,
	453, 192, 417, 394, 308, 278, 279, 191, 0, 359,
	233, 254, 223, 327, 414, 415, 222, 454, 201, 434,
	194, 0, 433, 320, 410, 418, 309, 300, 193, 416,
	307, 299, 284, 244, 265, 353, 294, 354, 266, 316,
	315, 317, 0, 188, 0, 391, 427, 455, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	331, 352, 350, 356, 0, 405, 422, 430, 437, 443,
	444, 446, 447, 448, 449, 450, 319, 268, 387, 283,
	292, 0, 0, 337, 368, 211, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 357, 251, 452, 432, 428, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 321, 322, 323, 326, 329, 330, 333, 335,
	336, 339, 345, 346, 347, 348, 349, 351, 358, 362,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 0, 260,
	420, 442, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 431, 393, 200, 364, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 312, 341, 344, 257, 236, 215,
	361, 212, 379, 399, 400, 401, 403, 310, 231, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 328, 0, 1263, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 342,
	0, 187, 0, 380, 220, 295, 293, 409, 246, 238,
	234, 219, 270, 301, 340, 398, 334, 0, 290, 0,
	0, 389, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 325, 390, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 406, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 314, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 324, 363, 369, 0, 0,
	0, 221, 0, 367, 338, 423, 205, 248, 360, 343,
	365, 0, 0, 366, 291, 411, 355, 421, 439, 440,
	228, 318, 429, 402, 435, 451, 199, 225, 332, 395,
	426, 386, 311, 407, 408, 281, 385, 256, 185, 289,
	445, 197, 375, 213, 190, 397, 419, 210, 378, 0,
	0, 453, 192, 417, 394, 308, 278, 279, 191, 0,
	359, 233, 254, 223, 327, 414, 415, 222, 454, 201,
	434, 194, 0, 433, 320, 410, 418, 309, 300, 193,
	416, 307, 299, 284, 244, 265, 353, 294, 354, 266,
	316, 315, 317, 0, 188, 0, 391, 427, 455, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 331, 352, 350, 356, 0, 405, 422, 430, 437,
	443, 444, 446, 447, 448, 449, 450, 319, 268, 387,
	283, 292, 0, 0, 337, 368, 211, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 357, 251, 452, 432, 428, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 321, 322, 323, 326, 329, 330, 333,
	335, 336, 339, 345, 346, 347, 348, 349, 351, 358,
	362, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 0,
	260, 420, 442, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 431, 393, 200, 364, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 312, 341, 344, 257, 236,
	215, 361, 212, 379, 399, 400, 401, 403, 310, 231,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	342, 0, 187, 0, 380, 220, 295, 293, 409, 246,
	238, 234, 219, 270, 301, 340, 398, 334, 0, 290,
	0, 0, 389, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 325, 390, 250, 0, 1238, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 230,
	274, 237, 229, 406, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 314, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 324, 363, 369, 0,
	0, 0, 221, 0, 367, 338, 423, 205, 248, 360,
	343, 365, 0, 0, 366, 291, 411, 355, 421, 439,
	440, 228, 318, 429, 402, 435, 451, 199, 225, 332,
	395, 426, 386, 311, 407, 408, 281, 385, 256, 185,
	289, 445, 197, 375, 213, 190, 397, 419, 210, 378,
	0, 0, 453, 192, 417, 394, 308, 278, 279, 191,
	0, 359, 233, 254, 223, 327, 414, 415, 222, 454,
	201, 434, 194, 0, 433, 320, 410, 418, 309, 300,
	193, 416, 307, 299, 284, 244, 265, 353, 294, 354,
	266, 316, 315, 317, 0, 188, 0, 391, 427, 455,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 331, 352, 350, 356, 0, 405, 422, 430,
	437, 443, 444, 446, 447, 448, 449, 450, 319, 268,
	387, 283, 292, 0, 0, 337, 368, 211, 425, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 357, 251, 452, 432, 428, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 321, 322, 323, 326, 329, 330,
	333, 335, 336, 339, 345, 346, 347, 348, 349, 351,
	358, 362, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	0, 260, 420, 442, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 431, 393, 200, 364, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 312, 341, 344, 257,
	236, 215, 361, 212, 379, 399, 400, 401, 403, 310,
	231, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 1141, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 342, 0, 187, 0, 380, 220, 295, 293, 409,
	246, 238, 234, 219, 270, 301, 340, 398, 334, 0,
	290, 0, 0, 389, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 325, 390, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 406, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 314, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 324, 363, 369,
	0, 0, 0, 221, 0, 367, 338, 423, 205, 248,
	360, 343, 365, 0, 0, 366, 291, 411, 355, 421,
	439, 440, 228, 318, 429, 402, 435, 451, 199, 225,
	332, 395, 426, 386, 311, 407, 408, 281, 385, 256,
	185, 289, 445, 197, 375, 213, 190, 397, 419, 210,
	378, 0, 0, 453, 192, 417, 394, 308, 278, 279,
	191, 0, 359, 233, 254, 223, 327, 414, 415, 222,
	454, 201, 434, 194, 0, 433, 320, 410, 418, 309,
	300, 193, 416, 307, 299, 284, 244, 265, 353, 294,
	354, 266, 316, 315, 317, 0, 188, 0, 391, 427,
	455, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 331, 352, 350, 356, 0, 405, 422,
	430, 437, 443, 444, 446, 447, 448, 449, 450, 319,
	268, 387, 283, 292, 0, 0, 337, 368, 211, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 357, 251, 452, 432, 428,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 321, 322, 323, 326, 329,
	330, 333, 335, 336, 339, 345, 346, 347, 348, 349,
	351, 358, 362, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 0, 260, 420, 442, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 431, 393, 200, 364, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 312, 341, 344,
	257, 236, 215, 361, 212, 379, 399, 400, 401, 403,
	310, 231, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 342, 0, 187, 0, 380, 220, 295, 293,
	409, 246, 238, 234, 219, 270, 301, 340, 398, 334,
	0, 290, 0, 0, 389, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 325, 390, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 973, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 230, 274, 237, 229, 406, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 314, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 324, 363,
	369, 0, 0, 0, 221, 0, 367, 338, 423, 205,
	248, 360, 343, 365, 0, 0, 366, 291, 411, 355,
	421, 439, 440, 228, 318, 429, 402, 435, 451, 199,
	225, 332, 395, 426, 386, 311, 407, 408, 281, 385,
	256, 185, 289, 445, 197, 375, 213, 190, 397, 419,
	210, 378, 0, 0, 453, 192, 417, 394, 308, 278,
	279, 191, 0, 359, 233, 254, 223, 327, 414, 415,
	222, 454, 201, 434, 194, 0, 433, 320, 410, 418,
	309, 300, 193, 416, 307, 299, 284, 244, 265, 353,
	294, 354, 266, 316, 315, 317, 0, 188, 0, 391,
	427, 455, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 331, 352, 350, 356, 0, 405,
	422, 430, 437, 443, 444, 446, 447, 448, 449, 450,
	319, 268, 387, 283, 292, 0, 0, 337, 368, 211,
	425, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 357, 251, 452, 432,
	428, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 321, 322, 323, 326,
	329, 330, 333, 335, 336, 339, 345, 346, 347, 348,
	349, 351, 358, 362, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 0, 260, 420, 442, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 431, 393, 200, 364, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 312, 341,
	344, 257, 236, 215, 361, 212, 379, 399, 400, 401,
	403, 310, 231, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 342, 0, 187, 0, 380, 220, 295,
	293, 409, 246, 238, 234, 219, 270, 301, 340, 398,
	334, 0, 290, 0, 0, 389, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 325, 390, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 406, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 314,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 324,
	363, 369, 0, 0, 0, 221, 0, 367, 338, 423,
	205, 248, 360, 343, 365, 0, 0, 366, 291, 411,
	355, 421, 439, 440, 228, 318, 429, 402, 435, 451,
	199, 225, 332, 395, 426, 386, 311, 407, 408, 281,
	385, 256, 185, 289, 445, 197, 375, 213, 190, 397,
	419, 210, 378, 0, 0, 453, 192, 417, 394, 308,
	278, 279, 191, 0, 359, 233, 254, 223, 327, 414,
	415, 222, 454, 201, 434, 194, 0, 433, 320, 410,
	418, 309, 300, 193, 416, 307, 299, 284, 244, 265,
	353, 294, 354, 266, 316, 315, 317, 0, 188, 0,
	391, 427, 455, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 331, 352, 350, 356, 0,
	405, 422, 430, 437, 443, 444, 446, 447, 448, 449,
	450, 319, 268, 387, 283, 292, 0, 0, 337, 368,
	211, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 357, 251, 452,
	432, 428, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 321, 322, 323,
	326, 329, 330, 333, 335, 336, 339, 345, 346, 347,
	348, 349, 351, 358, 362, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 0, 260, 420, 442, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 431, 393, 200, 364,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 312,
	341, 344, 257, 236, 215, 361, 212, 379, 399, 400,
	401, 403, 310, 231, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 342, 0, 187, 0, 380, 220,
	295, 293, 409, 246, 238, 234, 219, 270, 301, 340,
	398, 334, 0, 290, 0, 0, 389, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 325, 390, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 230, 274, 237, 229, 406, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 0, 258, 0,
	314, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	324, 363, 369, 0, 0, 0, 221, 0, 367, 338,
	423, 205, 248, 360, 343, 365, 0, 0, 366, 291,
	411, 355, 421, 439, 440, 228, 318, 429, 402, 435,
	451, 199, 225, 332, 395, 426, 386, 311, 407, 408,
	281, 385, 256, 185, 289, 445, 197, 375, 213, 190,
	397, 419, 210, 378, 0, 0, 453, 192, 417, 394,
	308, 278, 279, 191, 0, 359, 233, 254, 223, 327,
	414, 415, 222, 454, 201, 434, 194, 0, 433, 320,
	410, 418, 309, 300, 193, 416, 307, 299, 284, 244,
	265, 353, 294, 354, 266, 316, 315, 317, 0, 188,
	0, 391, 427, 455, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 331, 352, 350, 356,
	0, 405, 422, 430, 437, 443, 444, 446, 447, 448,
	449, 450, 319, 268, 387, 283, 292, 0, 0, 337,
	368, 211, 425, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 357, 251,
	452, 432, 428, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 321, 322,
	323, 326, 329, 330, 333, 335, 336, 339, 345, 346,
	347, 348, 349, 351, 358, 362, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 0, 510, 420, 442, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 431, 393, 200,
	364, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	312, 341, 344, 257, 236, 215, 361, 212, 379, 399,
	400, 401, 403, 310, 231, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 342, 0, 187, 0, 380,
	220, 295, 293, 409, 246, 238, 234, 219, 270, 301,
	340, 398, 334, 0, 290, 0, 0, 389, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 325, 390,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 406, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 314, 0, 0, 458, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 324, 363, 369, 0, 0, 0, 221, 0, 367,
	338, 423, 205, 248, 360, 343, 365, 0, 0, 366,
	291, 411, 355, 421, 439, 440, 228, 318, 429, 402,
	435, 451, 199, 225, 332, 395, 426, 386, 311, 407,
	408, 281, 385, 256, 185, 289, 445, 197, 375, 213,
	190, 397, 419, 210, 378, 0, 0, 453, 192, 417,
	394, 308, 278, 279, 191, 0, 359, 233, 254, 223,
	327, 414, 415, 222, 454, 201, 434, 194, 0, 433,
	320, 410, 418, 309, 300, 193, 416, 307, 299, 284,
	244, 265, 353, 294, 354, 266, 316, 315, 317, 0,
	188, 0, 391, 427, 455, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 331, 352, 350,
	356, 0, 405, 422, 430, 437, 443, 444, 446, 447,
	448, 449, 450, 319, 268, 387, 283, 292, 0, 0,
	337, 368, 211, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 357,
	251, 452, 432, 428, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 321,
	322, 323, 326, 329, 330, 333, 335, 336, 339, 345,
	346, 347, 348, 349, 351, 358, 362, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 0, 260, 420, 442, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 431, 393,
	200, 364, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 312, 341, 344, 257, 236, 215, 361, 212, 379,
	399, 400, 401, 403, 310, 231, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 342, 0, 187, 0,
	380, 220, 295, 293, 409, 246, 238, 234, 219, 270,
	301, 340, 398, 334, 0, 290, 0, 0, 389, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 325,
	390, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 230, 274, 237, 229, 406,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 314, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 324, 363, 369, 0, 0, 0, 221, 0,
	367, 338, 423, 205, 248, 360, 343, 365, 0, 0,
	366, 291, 411, 355, 421, 439, 440, 228, 318, 429,
	402, 435, 451, 199, 225, 332, 395, 426, 386, 311,
	407, 408, 281, 385, 256, 185, 289, 445, 197, 375,
	213, 190, 397, 419, 210, 378, 0, 0, 453, 192,
	417, 394, 308, 278, 279, 191, 0, 359, 233, 254,
	223, 327, 414, 415, 222, 454, 201, 434, 194, 0,
	433, 320, 410, 418, 309, 300, 193, 416, 307, 299,
	284, 244, 265, 353, 294, 354, 266, 316, 315, 317,
	0, 188, 0, 391, 427, 455, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 331, 352,
	350, 356, 0, 405, 422, 430, 437, 443, 444, 446,
	447, 448, 449, 450, 319, 268, 387, 283, 292, 0,
	0, 337, 368, 211, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	357, 251, 452, 432, 428, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	321, 322, 323, 326, 329, 330, 333, 335, 336, 339,
	345, 346, 347, 348, 349, 351, 358, 362, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 0, 260, 420, 442,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 431,
	393, 200, 364, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 312, 341, 344, 257, 236, 215, 361, 212,
	379, 399, 400, 401, 403, 310, 231,
}

var yyPact = [...]int{
	4327, -1000, -327, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1617, 1671, -1000, -1000, -1000, -1000, 1746,
	-1000, 674, 1398, -1000, 1631, 2406, -1000, 29399, 502, -1000,
	28918, 492, 119, 29399, -1000, 146, -1000, 136, 29399, 141,
	28437, -1000, -1000, -257, 12562, 1571, 10, 9, 29399, -1000,
	1732, 1445, -1000, 226, -1000, -1000, -1000, -1000, -1000, -1000,
	27956, -1000, -1000, -1000, 1632, 1630, 1753, 609, 1569, -1000,
	1694, 1445, -1000, 12562, 1721, 1683, 12081, -1000, 12081, 426,
	-1000, -1000, 9194, -1000, -1000, 15931, 29399, 29399, 216, -1000,
	1631, -1000, -1000, 299, -1000, 327, 1368, -1000, 1367, -1000,
	431, 514, 324, 388, 385, 323, 319, 316, 315, 310,
	303, 302, 296, 334, -1000, 647, 647, -143, -147, 2305,
	392, 392, 392, 467, 1599, 1596, -1000, 584, -1000, 647,
	647, 248, 647, 647, 647, 647, 264, 263, 647, 647,
	647, 647, 647, 647, 647, 647, 647, 647, 647, 647,
	647, 647, 647, 223, 1631, 238, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 29399, 219, 29399, -1000,
	558, 29399, 760, 760, 48, 760, 760, 760, 760, 114,
	587, 8, -1000, 110, 245, 98, 235, 743, 234, 96,
	-1000, -1000, 233, 743, 1074, 628, 99, -1000, 760, 7262,
	7262, 7262, -1000, 1613, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 465, -1000, -1000, -1000, -1000, 29399, 27475, 217,
	671, -1000, -1000, -1000, 15, -1000, -1000, 1339, 800, 12562,
	904, -1000, 2400, 580, -1000, -1000, -1000, -1000, -1000, 529,
	13043, 13043, 13043, 13043, -1000, -1000, 1370, 1370, 1370, 1370,
	13043, 1370, 13043, 1370, 1370, 1370, 1370, 12562, 1370, 1370,
	1370, -1000, 1370, 1370, 1370, 1370, 1370, 1370, 1370, 556,
	1370, 1370, 1370, 1370, 1370, -1000, -1000, -1000, 10638, 1370,
	1370, 1370, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1165, 1110, 1104, 1036, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 29399, -1000, 1370, 154, 1694, 1445, -1000,
	1732, 1712, 226, -1000, 1664, 1276, 1273, 1093, 1445, 1357,
	29399, -1000, 1372, -1000, -1000, -1000, 1505, 1046, 1070, -1000,
	-1000, -1000, -1000, 991, 12562, -1000, -1000, 1741, -1000, 14005,
	555, 772, 1740, 26994, -1000, 426, 426, 1363, 8711, -36,
	-1000, -1000, -1000, 668, 18336, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1613, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1318,
	29399, -1000, -1000, 4441, 1013, -1000, 1395, -1000, 1308, -1000,
	1375, 1406, 490, 1013, 485, 484, 478, -1000, -68, -1000,
	-1000, -1000, -1000, -1000, 647, 647, 331, 2406, 4295, -1000,
	-1000, -1000, 26513, 1394, 1013, -1000, 1393, -1000, 730, 458,
	537, 537, 1013, -1000, -1000, 29399, 1013, 727, 725, 29399,
	29399, -1000, 26032, -1000, 25551, 25070, 980, 29399, 24589, 24108,
	23627, 23146, 22665, -1000, 1469, -1000, 1438, -1000, -1000, -1000,
	29399, 29399, 29399, 246, -1000, -1000, 29399, 1013, -1000, -1000,
	971, 968, 647, 647, 958, 1068, 1066, 1063, 647, 647,
	951, 1062, 20260, 228, 937, 933, 903, 999, 1052, 180,
	957, 849, 901, 29399, 1389, 29399, -1000, 211, 607, 304,
	667, 1631, 1565, 1362, 463, 489, 1013, 415, 415, -1000,
	7745, -1000, -1000, 1050, 12562, -1000, 756, 743, 743, -1000,
	-1000, -1000, -1000, -1000, -1000, 760, 29399, 756, -1000, -1000,
	-1000, 743, 760, 29399, 760, 760, 760, 760, 743, 743,
	743, 760, 29399, 29399, 29399, 29399, 29399, 29399, 29399, 29399,
	29399, 7262, 7262, 7262, 628, 760, -261, -1000, 1030, -1000,
	1452, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 140,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -85,
	1360, 22184, -1000, -263, -264, -266, -267, -1000, -1000, -1000,
	-275, -279, -1000, -1000, -1000, 12562, 12562, 12562, 12562, -1000,
	703, 13043, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 892,
	655, 13043, 13043, 13043, 13043, 13043, 13043, 13043, 13043, 13043,
	13043, 13043, 13043, 13043, 13043, 13043, 652, 13043, 1027, 1025,
	579, 579, 579, 579, -1000, 12081, 12562, 12562, 579, -1000,
	1013, 17855, 12081, 12081, 21703, 1603, 673, 800, 29399, -1000,
	1093, -1000, -1000, -1000, 829, -1000, -1000, 29399, 29399, 9675,
	7745, 12081, 12081, 12081, 12081, 12081, 1405, 1197, 1300, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1359,
	-1000, -144, 15450, 12562, 1023, -1000, -1000, -1000, 1694, -1000,
	1694, 1405, 1609, 1508, 12081, -1000, -1000, 1609, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1240, -1000, 29399, 1357,
	1672, 29399, 1503, 1021, 246, -1000, 12562, 12562, 1356, -1000,
	948, 29399, -1000, -1000, 21222, -1000, -1000, 6779, -1000, 29399,
	287, 29399, -1000, 19779, 20741, 8228, -36, -1000, 8228, 1348,
	-1000, -22, -41, 10156, 567, -1000, -1000, -1000, 2305, 13524,
	1183, 1583, 59, -1000, -1000, -1000, 1375, -1000, 1375, 1375,
	1375, 1375, 246, 246, 246, 246, -1000, -1000, -1000, -1000,
	-1000, 1388, 1387, -1000, 1375, 1375, 1375, 1375, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1386, 1386, 1386, 1376, 1376,
	383, -1000, 12562, 200, 29399, 1639, 886, 211, 421, 1423,
	1013, 1013, 1013, 421, -1000, 1185, 1175, -1000, 1355, -1000,
	-1000, 1716, -1000, -1000, 546, 749, 747, 577, 29399, 169,
	279, -1000, 375, -1000, 29399, 1013, 721, 537, 1013, -1000,
	1013, -1000, -1000, -1000, -1000, 553, -1000, -1000, 1013, 1354,
	-1000, 1391, 874, 745, 831, 744, 1354, -1000, -1000, -89,
	1354, -1000, 1354, -1000, 1354, -1000, 1354, -1000, 1354, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 646, 29399, 169,
	652, -1000, 434, -1000, -1000, 652, 652, -1000, -1000, -1000,
	-1000, 1017, 1016, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-315, 29399, -1000, 182, 661, 268, 311, 250, 29399, 212,
	1688, 203, 259, 29399, 29399, 415, 1450, 29399, 1651, 29399,
	-1000, -1000, -1000, -1000, 800, 29399, -1000, -1000, 760, 760,
	-1000, -1000, 29399, 760, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 760, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	29399, 29399, -1000, -1000, -1000, -1000, -1000, 44, -26, 208,
	-1000, -1000, -1000, -1000, -1000, 1691, -1000, 800, 702, 692,
	-1000, -1000, -1000, 944, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 892, 13043, 13043, 13043, 1170, 400, 1678, 871, 742,
	638, 638, 669, 669, 585, 585, 585, 585, 585, -1000,
	-1000, -1000, -1000, -1000, 579, -1000, -1000, 1243, -1000, 838,
	754, 1093, -1000, 1243, 1243, 1404, 1246, 12081, -1000, -1000,
	676, -1000, 12562, 1093, -1000, -1000, 1093, 1352, 1351, 1093,
	12081, 12081, 1349, 1370, 547, -1000, 1243, 1093, 1093, 1243,
	1243, 1093, -1000, 29399, -1000, -253, -1000, -35, 507, 1370,
	-1000, 20260, 1093, 1339, -1000, -1000, -1000, -1000, -1000, 17374,
	1390, 1609, -1000, -1000, 1370, 1298, -1000, -1000, 246, 26,
	658, 800, 800, 12562, -1000, -1000, -1000, -1000, -1000, -1000,
	545, 1729, 283, 1370, -1000, 1220, 1515, -1000, -1000, -1000,
	1668, 14969, 29399, 1353, 1335, -1000, 542, -1000, 1348, -36,
	-15, -1000, -1000, -1000, -1000, 800, -1000, 1125, -1000, 2276,
	-1000, 362, -1000, -1000, -1000, -1000, 394, 1665, 1572, 40,
	-1000, -1000, -1000, 246, 246, -1000, -1000, 567, 567, 567,
	567, 1004, 1004, -1000, -1000, -1000, -1000, -1000, 884, -1000,
	-1000, -1000, 843, -1000, -1000, 985, 1459, 200, -1000, -1000,
	647, 1003, 1587, 29399, -1000, -1000, 1158, 182, 29399, 688,
	1449, -1000, 1423, 1423, 1423, 29399, -1000, -1000, -1000, -1000,
	4155, 29399, 1296, -1000, 166, -1000, 1156, 29399, -1000, 1290,
	1385, 1013, 1013, -1000, -1000, 7745, -1000, 29399, 1370, -1000,
	-1000, -1000, -1000, 488, 1628, 1627, 169, 166, 567, 1013,
	-1000, -1000, -1000, -1000, -1000, -318, 1272, 471, 172, 196,
	29399, 29399, 29399, 29399, 29399, 532, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 249, 430, -1000, 29399, 29399, 500, -1000,
	-1000, -1000, 743, -1000, -1000, 743, -1000, -1000, -1000, -1000,
	-1000, 1611, 29399, -27, -292, -1000, -288, -1000, -1000, -1000,
	-1000, 858, 390, 1678, 13043, 13043, 12081, -84, 338, 338,
	652, -1000, -1000, -1000, 12562, 12562, 12562, 12562, 1396, 639,
	-1000, 12562, 708, -1000, -1000, 12562, 12562, -1000, 1243, 1243,
	12081, 7745, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 476, 475, 473, 29399, -1000, -1000, 1690, -1000, 1529,
	1520, 1739, 1729, -1000, 19779, 1609, -1000, -1000, 29399, -247,
	-1000, 1566, 1522, -1000, -1000, -1000, -1000, 6296, 1694, 12562,
	1448, 29399, 1370, -1000, 14487, 29399, 29399, 19779, 19779, 19779,
	19779, 19779, -1000, 1491, 1490, -1000, 1476, 1475, 1485, 29399,
	-1000, 1239, 1093, 1712, 14969, 287, 1337, 19779, -1000, -1000,
	19779, 29399, 5813, -1000, -1000, -30, -49, -1000, -1000, -1000,
	2305, -1000, -1000, -1000, -1000, 767, 1413, 1752, -1000, 995,
	-1000, -1000, 719, 718, -1000, 29399, 1384, -1000, -1000, -1000,
	567, 567, -1000, -1000, -1000, -1000, 1237, -1000, 1222, 1347,
	1216, 89, -1000, 1401, 1610, 647, 647, -1000, 811, -1000,
	1013, -1000, -1000, 469, -1000, 1642, 29399, 1447, 1446, 1437,
	-1000, 1707, 1345, 29399, -1000, -1000, 29399, -1000, 1519, 200,
	29399, -1000, -1000, -1000, -1000, 279, 29399, -1000, 1305, 166,
	-1000, -1000, -1000, -1000, -1000, -1000, 29399, 183, -1000, 1377,
	1051, -1000, 1407, -1000, -1000, -1000, -1000, 168, 267, -1000,
	29399, 493, 1459, 29399, -1000, -1000, -1000, 760, 760, -1000,
	-1000, 1605, -1000, 1013, 13043, 13043, -1000, 580, -1000, 1370,
	1093, 1375, 1375, -1000, 1375, 1376, -1000, 1375, 115, 1375,
	101, 1093, 1093, 794, 963, 746, 790, -76, -1000, 800,
	12562, 1048, 1044, -1000, -1000, 1093, -1000, 1370, 1370, 1370,
	1192, 29399, -1000, -1000, -1000, -1000, 1729, 1727, 1346, -1000,
	-1000, 26, 290, -1000, 1563, 1522, -1000, 1706, 1546, 1703,
	-1000, -1000, -1000, 800, -1000, 1634, 1200, -1000, 642, 1210,
	-1000, -1000, 11600, 1213, 1514, 541, 1192, 1342, 1515, 1412,
	1435, 1906, -1000, -1000, -1000, -1000, 1489, -1000, 1479, -1000,
	-1000, 1372, -1000, -1000, 1197, 1729, 19779, 1321, 1321, -1000,
	538, -1000, -1000, -1000, -1000, -1000, -1000, 12562, -1000, -1000,
	-1000, -1000, -1000, -1000, 876, 876, 4, -1000, -1000, -1000,
	1374, 12562, -1000, -1000, 246, 994, 246, 806, -1000, 788,
	-1000, -1000, -195, -1000, -1000, 1414, 1457, -1000, -1000, 29399,
	-1000, -1000, 29399, 29399, 29399, 29399, -1000, -1000, 276, -1000,
	1167, 1162, -1000, -145, -1000, 12562, -1000, 1372, -1000, -1000,
	-1000, 1139, -1000, -125, 1013, 29399, 29399, 29399, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 580, 13043, -1000,
	-1000, 443, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	12562, -1000, 12562, -1000, 12562, -1000, 12562, -1000, 1694, 989,
	800, 12562, 12562, -1000, 16893, 19298, 19298, 16412, -1000, 1727,
	1725, 1702, 1539, 1542, 1542, 1563, -1000, 1701, 1699, -1000,
	988, 1698, 986, 712, -1000, 29399, 12562, 1370, -1000, 213,
	29399, 1370, 29399, -1000, 1723, -1000, -1000, 12562, 1373, -1000,
	12562, -1000, -1000, -1000, -1000, -1000, 1723, 1321, -1000, -1000,
	598, 820, -1000, -1000, -1000, 29399, 979, 567, -1000, 567,
	1134, 1117, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1372, -1000, -1000, -1000, 1345, 251, 352, -1000, 279, -1000,
	-150, -153, 820, 1659, -1000, -1000, 7745, -1000, -1000, 1371,
	1417, -1000, 232, -1000, -1000, 820, 820, 820, 820, 1093,
	-1000, 820, 820, 1149, -1000, -1000, -1000, 1149, 1149, 507,
	1725, -1000, 12562, 12562, 1536, 920, -1000, -1000, -1000, -1000,
	983, 981, -1000, 965, -1000, 1751, -1000, 800, -1000, 1370,
	-1000, 536, 1210, -1000, 1694, 800, 29399, 800, 1694, -1000,
	-1000, 1112, -1000, -1000, -1000, -1000, -1000, 1658, 1370, -1000,
	-1000, -1000, -1000, -1000, 226, 1341, -1000, 641, 29399, 29399,
	1093, 207, -131, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	18817, -1000, -1000, -1000, -1000, -1000, 800, 1339, -1000, 823,
	-1000, -1000, -1000, -1000, -1000, 29399, 1210, 29399, -1000, 1088,
	-1000, 1427, 568, 226, 11119, -90, 7745, 5330, 1085, -1000,
	-1000, 1502, -87, -135, -1000, -1000, -1000, -1000, 1202, -1000,
	-1000, 1426, -1000, 1733, -1000, -1000, -1000, 758, 894, -1000,
	-1000, -1000, -90, 820, 1093, -1000, -8, -1000, -1000, -1000,
	-1000, -1000, 1407, -1000, 1496, -1000, -1000, 1749, 526, 526,
	-1000, -1000, -1000, -1000, -1000, 379, -1000, -1000, -125, -129,
	-1000, -1000, -1000, 370, 833, -1000, 192, -1000, -132, -1000,
	-1000, -1000, -1000, -137, -1000,
}

var yyPgo = [...]int{
	0, 2089, 18, 68, 148, 7, 152, 72, 2088, 2087,
	2086, 2085, 167, 165, 164, 2084, 2083, 2081, 2080, 2079,
	2078, 2077, 2076, 2075, 2074, 162, 124, 145, 2073, 2072,
	2071, 86, 144, 49, 63, 150, 2070, 2069, 58, 2064,
	2063, 2062, 158, 155, 681, 2059, 153, 76, 2057, 2056,
	2055, 2050, 2048, 2047, 2042, 2041, 2039, 2038, 2037, 2036,
	2035, 2034, 267, 2033, 2032, 6, 2031, 45, 2028, 2026,
	2011, 2010, 2008, 116, 2007, 2006, 2005, 151, 2002, 2001,
	175, 88, 82, 2000, 1999, 85, 135, 1998, 79, 125,
	1995, 1991, 233, 1990, 60, 57, 1989, 166, 50, 56,
	38, 1988, 1987, 1986, 62, 75, 52, 1985, 74, 109,
	1984, 43, 1983, 1979, 93, 1975, 1969, 1968, 71, 1967,
	1966, 2623, 1964, 66, 111, 22, 31, 41, 1962, 1961,
	1959, 1958, 1957, 35, 1948, 1947, 156, 1944, 115, 12,
	1943, 17, 13, 24, 114, 1935, 39, 46, 1934, 105,
	1933, 1931, 29, 20, 25, 1927, 23, 100, 122, 14,
	67, 119, 1913, 1911, 28, 42, 1908, 1906, 1905, 1903,
	1902, 1901, 36, 1900, 26, 1899, 159, 1898, 15, 32,
	40, 73, 80, 37, 8, 1895, 160, 1893, 27, 136,
	98, 132, 1890, 1889, 1888, 143, 173, 1887, 1886, 55,
	141, 120, 118, 1885, 178, 1883, 1880, 64, 1069, 2320,
	9, 133, 1875, 1874, 2173, 95, 104, 30, 1873, 113,
	1872, 1871, 1870, 149, 137, 83, 877, 78, 1868, 1865,
	1862, 1852, 1849, 1848, 1844, 182, 33, 34, 129, 44,
	1839, 1838, 1836, 96, 101, 1835, 128, 126, 97, 140,
	1834, 134, 123, 84, 1832, 87, 1830, 1814, 1813, 1812,
	65, 1811, 1810, 1808, 1807, 131, 127, 91, 70, 1805,
	47, 89, 121, 130, 1804, 16, 147, 5, 1802, 1,
	0, 1800, 4, 138, 177, 139, 1799, 1798, 2, 1796,
	3, 1795, 1794, 117, 1790, 1787, 1782, 11, 21, 10,
	1781, 1777, 3057, 1928, 99, 1764, 157,
}

//line sql.y:5598
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 300, 301, 301, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 280, 280, 280, 283, 283,
	23, 57, 25, 25, 24, 24, 27, 27, 26, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 5, 5, 5, 5, 7,
	7, 7, 7, 7, 10, 11, 6, 6, 12, 12,
	69, 69, 13, 14, 14, 14, 14, 304, 304, 116,
	116, 114, 114, 115, 115, 181, 181, 15, 16, 16,
	191, 191, 190, 190, 190, 192, 192, 192, 192, 226,
	226, 17, 17, 17, 17, 17, 78, 78, 282, 282,
	281, 279, 279, 278, 278, 277, 29, 30, 39, 39,
	39, 39, 40, 41, 284, 284, 256, 45, 45, 44,
	44, 44, 44, 46, 46, 43, 43, 42, 42, 258,
	258, 245, 245, 257, 257, 257, 257, 257, 257, 257,
	244, 244, 91, 91, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 296, 296, 163, 163, 163, 163, 163,
	163, 96, 96, 104, 104, 104, 94, 94, 95, 93,
	93, 93, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 103, 103, 100, 100, 101, 101, 101, 101, 101,
	101, 297, 297, 297, 297, 228, 228, 228, 228, 231,
	231, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	230, 230, 230, 230, 230, 232, 232, 232, 232, 232,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 234, 234, 234, 234, 234,
	234, 234, 234, 243, 243, 235, 235, 238, 238, 239,
	239, 239, 240, 240, 240, 241, 241, 236, 236, 236,
	236, 237, 237, 237, 246, 270, 270, 269, 269, 267,
	267, 267, 267, 255, 255, 264, 264, 264, 264, 264,
	254, 254, 250, 250, 250, 251, 251, 252, 252, 249,
	249, 253, 253, 266, 266, 265, 247, 247, 248, 248,
	272, 298, 298, 298, 298, 299, 299, 273, 289, 290,
	288, 288, 288, 288, 288, 67, 67, 67, 203, 203,
	203, 262, 262, 261, 261, 261, 263, 263, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 198, 198, 198, 287,
	287, 287, 287, 287, 287, 286, 286, 286, 259, 259,
	259, 285, 285, 47, 47, 147, 147, 36, 36, 36,
	36, 36, 36, 35, 35, 35, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 37,
	37, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 242, 242, 242, 274, 274, 275, 275, 19, 28,
	28, 20, 20, 20, 20, 21, 21, 48, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 291, 291, 197, 197,
	205, 205, 196, 196, 219, 219, 219, 199, 199, 199,
	200, 200, 295, 295, 295, 50, 50, 52, 52, 53,
	54, 54, 221, 221, 222, 222, 55, 56, 68, 68,
	68, 68, 68, 68, 70, 70, 70, 9, 9, 9,
	9, 64, 64, 64, 8, 8, 51, 51, 58, 292,
	292, 293, 294, 294, 294, 294, 59, 61, 22, 22,
	22, 22, 22, 22, 84, 84, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 79, 79,
	79, 74, 74, 305, 62, 63, 63, 77, 77, 77,
	71, 71, 71, 76, 76, 76, 81, 81, 83, 83,
	83, 83, 83, 85, 85, 85, 85, 85, 85, 85,
	80, 80, 82, 82, 82, 82, 212, 212, 212, 211,
	211, 105, 105, 107, 106, 106, 108, 108, 109, 109,
	109, 145, 124, 124, 179, 179, 178, 178, 180, 180,
	180, 180, 182, 182, 110, 110, 110, 110, 111, 111,
	112, 112, 113, 113, 220, 220, 217, 217, 217, 216,
	216, 117, 117, 117, 119, 118, 118, 118, 118, 120,
	120, 122, 122, 121, 121, 123, 125, 125, 125, 125,
	125, 126, 126, 92, 92, 92, 92, 92, 102, 102,
	102, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 97, 97, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 194,
	194, 128, 128, 137, 137, 137, 137, 137, 137, 129,
	129, 129, 129, 129, 129, 129, 138, 138, 138, 144,
	139, 139, 134, 134, 134, 134, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	133, 133, 133, 133, 133, 133, 133, 133, 306, 306,
	136, 136, 136, 135, 135, 135, 135, 135, 75, 75,
	75, 75, 75, 225, 225, 225, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 150,
	150, 72, 72, 148, 148, 149, 151, 151, 146, 146,
	146, 131, 131, 131, 152, 152, 153, 153, 154, 154,
	156, 155, 155, 157, 158, 158, 158, 159, 159, 160,
	160, 160, 38, 38, 38, 38, 38, 33, 33, 33,
	33, 34, 34, 34, 86, 86, 86, 86, 88, 88,
	87, 87, 65, 65, 66, 66, 66, 89, 89, 90,
	90, 90, 90, 176, 176, 161, 161, 161, 168, 168,
	168, 164, 164, 166, 166, 166, 167, 167, 167, 165,
	173, 173, 175, 175, 174, 174, 170, 170, 171, 171,
	172, 172, 172, 169, 169, 130, 130, 130, 130, 130,
	177, 177, 177, 177, 183, 183, 141, 141, 143, 143,
	142, 184, 184, 188, 185, 185, 189, 189, 189, 189,
	189, 186, 186, 187, 187, 213, 213, 213, 193, 193,
	204, 204, 201, 201, 202, 202, 195, 195, 206, 206,
	206, 60, 140, 140, 271, 271, 268, 209, 209, 210,
	210, 214, 214, 218, 218, 215, 215, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 302, 303, 223, 224, 224, 224,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 10, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 4, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	4, 9, 0, 2, 0, 2, 3, 5, 3, 4,
	2, 3, 2, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 2, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	4, 4, 2, 2, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 6, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 2, 2,
	2, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 1, 3, 1,
	7, 5, 6, 6, 7, 0, 1, 5, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 1, 0, 1,
	2, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 6, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 1, 3, 5, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 4, 4, 2, 11, 3, 6, 8, 6, 6,
	6, 13, 8, 6, 10, 5, 5, 5, 5, 5,
	3, 7, 4, 4, 4, 4, 3, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 2, 2, 1, 3, 8, 8, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 4, 2,
	4, 5, 4, 4, 4, 4, 4, 3, 3, 3,
	5, 2, 3, 3, 3, 3, 1, 1, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 2, 1, 1, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 3, 2, 2, 3, 1,
	3, 2, 1, 2, 1, 2, 2, 4, 3, 3,
	6, 4, 7, 6, 1, 3, 2, 2, 2, 2,
	1, 1, 1, 3, 2, 1, 1, 1, 0, 1,
	1, 0, 3, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 1, 0, 1, 1, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 3, 3, 7, 0, 3, 1, 3, 1, 1,
	3, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 5, 4, 5,
	5, 0, 2, 3, 3, 3, 2, 1, 3, 3,
	1, 3, 4, 5, 6, 3, 4, 5, 6, 3,
	4, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 3, 2, 2, 2, 2, 1, 1, 2,
	9, 6, 6, 6, 2, 2, 3, 3, 3, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 5, 5, 6, 4, 4, 8, 6,
	8, 6, 8, 6, 8, 6, 8, 5, 4, 2,
	2, 1, 2, 2, 2, 2, 8, 8, 0, 2,
	0, 2, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 2, 2, 0, 3, 0, 2, 0, 1,
	3, 1, 3, 2, 0, 1, 1, 0, 1, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 3, 3, 1, 3, 3, 3, 3, 3,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -300, -1, -5, -10, -11, -12, -13, -14, -15,
	-16, -17, -18, -19, -20, -21, -48, -49, -50, -52,
	-53, -54, -55, -56, -8, -51, -22, -23, -57, -58,
	-59, -60, -61, -3, -2, -7, 7, 8, -69, -24,
	30, -29, -39, 165, -40, -30, 166, -41, 168, 167,
	203, 169, 196, 72, 242, 243, 245, 246, 247, 248,
	-70, 201, 202, 171, 34, 43, 31, 32, 35, 174,
	-4, -25, 6, -302, 9, 347, 198, 197, 26, -6,
	360, 84, -301, 488, -176, -161, 20, 31, 27, -160,
	-156, -77, -161, 18, 16, 5, -62, -305, -62, -62,
	10, 11, -62, -256, -258, 84, 137, 84, -62, -45,
	-44, -43, -42, -46, 29, -36, -37, -276, -35, -32,
	170, 167, 211, 106, 107, 203, 204, 205, 169, 187,
	202, 206, 201, 220, -31, 79, 31, 360, 363, -263,
	166, 172, 173, 348, 109, 108, 73, 168, -260, 292,
	465, -46, 467, 99, 101, 466, 42, 177, 468, 469,
	470, 471, 186, 472, 473, 474, 475, 481, 482, 483,
	484, 110, 5, -62, -218, -214, -280, -208, 87, 88,
	89, 357, 189, 391, 392, 236, 79, 39, 292, 465,
	242, 256, 250, 277, 269, 358, 393, 239, 190, 224,
	462, 267, 115, 467, 394, 204, 297, 298, 299, 99,
	245, 334, 480, 241, 395, 478, 101, 466, 78, 49,
	42, 199, 265, 261, 468, 225, 396, 368, 218, 109,
	106, 487, 34, 259, 48, 28, 477, 108, 47, 469,
	128, 397, 470, 301, 282, 456, 46, 302, 205, 398,
	82, 362, 464, 303, 260, 304, 235, 476, 171, 399,
	448, 305, 306, 457, 400, 283, 287, 401, 326, 307,
	50, 402, 403, 458, 107, 404, 77, 471, 254, 255,
	405, 233, 188, 328, 281, 186, 33, 308, 359, 237,
	56, 212, 329, 44, 285, 43, 452, 406, 455, 280,
	276, 51, 407, 408, 409, 410, 472, 279, 253, 275,
	486, 230, 473, 60, 173, 289, 288, 290, 219, 325,
	272, 411, 412, 413, 193, 80, 414, 262, 19, 415,
	416, 309, 226, 417, 54, 418, 419, 332, 202, 420,
	52, 474, 37, 207, 475, 421, 422, 423, 424, 425,
	311, 426, 310, 284, 286, 214, 312, 361, 427, 258,
	206, 479, 428, 194, 463, 208, 211, 201, 333, 195,
	429, 430, 431, 432, 433, 240, 434, 435, 246, 481,
	41, 436, 437, 438, 439, 234, 229, 327, 336, 59,
	81, 294, 440, 461, 252, 227, 441, 243, 53, 482,
	483, 484, 221, 485, 7, 314, 110, 231, 232, 45,
	273, 213, 442, 443, 263, 264, 278, 251, 274, 244,
	449, 215, 315, 203, 444, 335, 228, 295, 365, 220,
	316, 460, 364, 271, 268, 222, 445, 317, 178, 216,
	217, 446, 450, 318, 319, 238, 320, 321, 322, 323,
	324, 223, 363, 249, 266, 296, 176, -62, 176, -121,
	-214, 176, -186, 298, -205, 300, 313, 308, 318, 306,
	-197, 309, 311, 214, -295, 326, 176, 315, 165, 156,
	301, 310, 319, 320, 238, 321, 324, 223, -291, -280,
	470, 485, 115, 270, 305, 303, 327, 452, 323, 322,
	-214, 244, -221, 249, -209, -280, -208, 247, -121, -68,
	448, 169, -223, -223, -79, 452, 454, -139, -92, 121,
	-102, -127, -97, -98, -132, -133, -134, -135, -103, -146,
	144, 145, 153, 122, -144, -142, 24, 356, 349, 348,
	156, 29, 161, 66, 67, 351, 352, 124, 55, 343,
	344, -104, 339, 346, 345, 340, 354, 355, -209, -214,
	181, 338, 175, 150, 347, -99, -95, -2, -302, 337,
	341, 342, -280, -208, -101, -100, -128, 90, 95, 100,
	157, 159, 158, 160, 96, 102, 91, 92, 93, 94,
	103, 104, 42, 314, 314, -121, -62, -154, -77, -156,
	-4, -2, -302, 6, -62, -2, -3, -7, -25, -27,
	387, -26, -214, -161, -176, 10, 139, 40, 48, -159,
	-160, -6, -2, -92, 17, 21, 22, -82, 146, -92,
	-214, -63, -82, -195, 180, -62, -62, -185, -226, 244,
	-189, 327, 326, -210, -187, -209, -207, -186, 325, 170,
	366, 120, 23, 25, 123, 156, 17, 124, 35, 172,
	270, 187, 155, 183, 348, 165, 70, 367, 339, 340,
	337, 343, 350, 351, 338, 300, 29, 11, 369, 26,
	197, 22, 36, 148, 167, 127, 200, 24, 198, 104,
	372, 20, 73, 192, 12, 185, 38, 14, 373, 374,
	15, 181, 180, 139, 177, 68, 9, 161, 27, 136,
	64, 375, 117, 376, 377, 378, 379, 66, 137, 18,
	341, 342, 31, 453, 380, 356, 209, 150, 71, 57,
	454, 121, 381, 382, 102, 383, 105, 75, 459, 118,
	16, 69, 40, 384, 210, 385, 182, 386, 330, 387,
	138, 168, 347, 67, 388, 175, 313, 6, 353, 30,
	196, 184, 112, 65, 389, 176, 126, 354, 355, 179,
	103, 5, 116, 32, 10, 72, 76, 344, 345, 346,
	55, 111, 360, 125, 13, 390, 331, 119, 115, -257,
	137, -244, -248, -209, 191, -273, 187, -121, -266, -265,
	-209, -78, -204, 177, 185, 184, 116, -284, 118, 231,
	338, 175, -42, -43, -186, 155, 208, 85, 85, -248,
	-247, -246, -285, 210, 191, -272, -264, 183, 192, -254,
	184, 185, -249, 177, 117, -285, -249, 182, 192, 210,
	210, 110, 210, 110, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 207, -255, 129, -255, 364, 364, -260,
	-285, -285, -285, 179, 33, 33, -206, -249, 179, 23,
	-255, -255, -186, 155, -255, -255, -255, -255, 218, 218,
	-255, -255, -255, -255, -255, -255, -255, -255, -255, -255,
	-255, -255, -255, -255, -255, 176, -284, -86, 324, 238,
	79, -44, 220, -28, -121, -204, 177, 178, -284, -121,
	162, -121, -199, 137, 13, -199, -196, 314, 312, 299,
	304, -199, -199, -199, -199, 221, 297, -250, 177, 33,
	188, 314, 221, 297, 221, 222, 221, 222, 307, 317,
	221, -219, 12, 139, 338, 302, 306, 214, 176, 215,
	178, 316, -280, 455, 222, -219, 91, -200, 137, 314,
	217, -199, -224, -302, -210, 270, -224, -224, 30, 179,
	-209, -64, -209, 91, -9, -5, -13, -12, -14, 129,
	-84, 314, -73, 156, 470, 456, 457, 458, 455, 311,
	463, 461, 459, 221, 460, 85, 118, 119, 120, -92,
	136, -129, 129, 130, 131, 132, 133, 134, 135, 139,
	121, 123, 137, 138, 140, 141, 142, 143, 144, 145,
	146, 147, 149, 148, 150, 151, 155, 152, 163, 164,
	-98, -98, -98, -98, -144, -302, -302, -302, -98, -194,
	-302, -98, -302, -302, -302, -302, -150, -92, -302, -306,
	-302, -306, -306, -136, -302, -136, -136, -302, -302, -302,
	162, -302, -302, -302, -302, -302, -2, -3, -139, -136,
	-136, -136, 90, 95, 100, 91, 90, 95, 100, 91,
	90, 95, 100, 91, 90, 95, 100, 91, -223, -292,
	-293, -124, -121, -302, 238, -159, -6, -2, -154, -160,
	-156, -2, -62, -71, -83, 61, 62, -85, 22, 36,
	65, 63, 21, -303, 86, -303, -176, -303, 85, -27,
	-179, 84, 59, 41, 91, 91, 85, 19, -155, -157,
	-92, 12, -212, -211, 23, -209, 91, 162, 98, 12,
	-122, 27, -121, -195, -195, 85, 244, -189, -226, -191,
	-190, 328, 330, 129, -213, -209, 91, 29, 86, 85,
	-121, -228, -231, -233, -232, -234, -229, -230, 267, 268,
	156, 271, 273, 274, 275, 276, 277, 278, 279, 280,
	281, 282, 30, 199, 263, 264, 265, 266, 283, 284,
	285, 286, 287, 288, 289, 290, 250, 269, 358, 251,
	252, 253, 254, 255, 256, 258, 259, 260, 261, 262,
	-283, -280, 84, 86, 85, -235, 84, -86, 176, -280,
	177, 177, 177, -62, 347, -255, -255, 207, -35, -32,
	-276, 16, -31, -32, 170, 106, 107, 167, 84, -244,
	84, -253, -283, -280, 84, 117, 182, 116, -252, -249,
	-252, -253, -280, -146, -209, -214, -280, 117, 117, -182,
	-209, -182, -182, 21, -182, 21, -182, 21, 93, -209,
	-182, 21, -182, 21, -182, 21, -182, 21, -182, 21,
	29, 77, 78, 29, 80, 81, 82, -146, -146, -244,
	-186, -121, -280, 93, 93, -255, -255, 93, 91, 91,
	91, -255, -255, 93, 91, -216, -214, 91, -286, 193,
	235, 237, 93, 93, 93, 93, 29, 91, -287, 29,
	477, 476, 478, 479, 480, 93, 29, 93, 29, 93,
	-209, 84, -121, -89, 225, 165, 167, 170, 75, 91,
	239, 129, 42, 85, 179, 176, -280, -201, 181, -201,
	-215, -214, -207, 91, -92, -251, 12, 139, -219, -219,
	-199, -121, -251, -219, -199, -121, -199, -199, -199, -199,
	-219, -219, -219, -199, -214, -214, -121, -121, -121, -121,
	-121, -121, -121, -224, -224, -224, -200, -199, 455, 91,
	75, -222, 247, 281, 449, 450, 451, 85, 360, -114,
	-121, 455, 455, 455, 455, 455, 455, -92, -92, -92,
	-92, -137, 102, 121, 103, 104, -127, -138, -142, -144,
	97, 139, 123, 137, 138, -97, -98, -97, -97, -97,
	-97, -97, -97, -97, -97, -97, -97, -97, -97, -97,
	-225, -280, 91, 156, -98, 91, 91, -80, -82, -92,
	-92, -280, -209, -80, -80, -146, 91, -76, 22, 36,
	-148, -149, 125, -146, -303, -303, 93, -209, -209, -81,
	22, 36, -80, -210, -215, -207, -80, -81, -81, -80,
	-80, -176, -303, 85, -294, 330, 331, 453, -217, 210,
	-216, 23, -140, -139, 91, -159, -159, 61, 62, 57,
	-80, -85, -303, -26, 23, -178, -209, 60, 91, -236,
	-186, -92, -92, 85, -158, 25, 26, -121, -211, 146,
	-215, -121, -181, 210, -121, -106, -108, -109, -110, -124,
	-145, -302, 12, -114, -115, -123, -214, -189, -191, 85,
	329, 331, 332, 75, 105, -92, -237, 155, -262, -261,
	-260, -244, -246, -247, -248, 86, -162, -91, 38, -240,
	295, 294, -235, -235, -235, -235, -235, -236, -236, -236,
	-236, 84, 84, -235, -235, -235, -235, -238, 84, -238,
	-238, -239, 84, -239, -273, -92, -270, -269, -267, -268,
	186, 99, 360, 76, -265, -158, 93, -89, -202, 181,
	-271, -268, -280, -280, -280, -202, -280, 91, -280, 91,
	85, 17, -245, -244, -47, 235, -275, 210, -272, -266,
	-253, 117, -252, -253, -253, 162, -280, 85, 27, 110,
	110, 110, 110, 360, 167, 30, -244, -47, -225, 179,
	-225, -225, 91, 91, -198, 485, -114, -88, 227, 129,
	216, 216, 176, 176, 229, -121, 240, 241, 239, 21,
	228, 230, 232, 218, -121, -121, -201, 75, -116, -121,
	24, -214, -121, -199, -199, -121, -199, -199, -121, -209,
	-73, 330, 85, 360, 20, -74, 20, 102, 103, 104,
	-138, -97, -98, -97, 120, 200, 85, -303, 23, 85,
	76, -303, -303, -303, 85, 12, 85, 12, -80, -151,
	-149, 127, -92, -303, -303, 85, 85, -303, -80, -80,
	-302, 162, -303, -303, -303, -303, -303, -293, 452, 331,
	-125, 72, 180, 73, -302, -216, -303, -131, -209, 93,
	96, -161, -105, -107, 12, -85, -144, 86, 85, -236,
	-165, -170, -196, -280, 91, 156, -157, 162, -126, 13,
	-130, 30, 55, -5, -302, -302, 30, 85, -117, -119,
	-118, -120, 64, 68, 70, 65, 66, 67, 71, -220,
	23, -106, -3, -2, -302, -121, -114, -304, 12, 76,
	-304, 85, 162, -190, -192, 333, 330, 336, -280, 91,
	85, -260, -248, -299, 102, 121, 29, 75, 292, 99,
	-297, -298, 182, 116, 117, 194, 23, 39, -241, 296,
	-236, -236, -237, -237, -237, -237, -243, 91, -243, 93,
	93, 86, -38, -33, -34, 31, 79, -267, -255, 91,
	37, -209, 86, -88, -121, 121, 75, -271, -271, -271,
	-214, 16, -178, 85, 86, -147, 236, 86, -209, 86,
	84, -253, -253, -210, -209, -302, 176, 29, 29, -47,
	-147, -237, -280, 487, 486, 86, 178, 234, -90, 343,
	91, 87, -121, -121, -121, -121, -121, 170, 167, 219,
	179, -114, -121, 85, -67, 195, 190, -219, -219, 31,
	-121, 330, 464, 462, 120, 200, -127, -98, -82, 357,
	-227, 156, 267, 199, 265, 261, 281, 272, 294, 263,
	295, -227, -225, -92, -92, -92, -92, -154, 128, -92,
	126, -92, -92, -303, -303, -81, -210, 177, 177, 177,
	-182, -193, 20, 12, 55, 55, -105, -126, -106, -85,
	-209, -168, 448, -173, 44, -171, -172, 45, -169, 46,
	54, 146, -159, -92, -183, 75, -184, -188, -146, -141,
	-143, -142, -302, -177, -303, -209, -182, -184, -108, -109,
	-109, -108, -109, 64, 64, 64, 69, 64, 69, 64,
	-118, -214, -303, -303, -3, -181, 76, -106, -106, -123,
	-214, 146, 330, 334, 335, -260, 102, -302, -96, -104,
	-94, -93, -95, -99, 144, 145, 10, 91, 117, 117,
	-121, 84, -237, -237, 86, 85, 86, 85, 86, 85,
	-203, 397, 121, -34, -33, -255, -255, 93, -280, 178,
	24, -121, 75, 75, 75, 17, -244, -146, 55, -270,
	-178, -274, -275, -121, -94, -302, -147, -121, -87, 225,
	233, 84, 88, -282, 76, 216, 292, 216, -121, -67,
	-38, -121, -199, -199, 31, -280, -127, -98, -302, -303,
	-235, -235, -235, -239, -235, 255, -235, 255, -303, -303,
	85, -303, 20, -303, 85, -303, 20, -303, -72, 353,
	-92, 85, 85, -303, -302, -302, -302, -303, -121, -126,
	-152, 14, -165, 49, 273, -175, -174, 53, 45, -172,
	17, 47, 17, 28, -183, 85, 129, 85, -303, -303,
	85, 55, 162, -303, -126, -112, -111, 75, 76, -113,
	75, -111, 64, 64, -179, -303, -126, -106, -126, -126,
	162, -92, -100, -100, -133, 84, -92, -236, 91, -236,
	93, 93, 397, 29, 80, 81, 82, 29, 77, 78,
	-121, -121, -121, -121, -178, 212, 86, -303, 85, -242,
	360, 363, -92, -179, 86, -279, 360, -281, -280, -209,
	-209, -209, -97, -236, -280, -92, -92, -92, -92, -159,
	91, -92, -92, -180, -303, -209, 182, -180, -180, -217,
	-152, -153, 15, 17, -166, 51, -164, 50, -164, -174,
	17, 17, 91, 17, 91, 117, -188, -92, -143, 55,
	-5, -209, -141, -209, -154, -92, 84, -92, -154, -126,
	-303, -178, 86, -237, -237, 86, 86, -179, 213, -298,
	-275, 364, 364, -303, 23, -278, -277, -210, 84, 76,
	-75, 139, 360, -303, -303, -303, -303, -303, -303, -303,
	85, -303, -303, -303, -125, -153, -92, -139, -167, 52,
	75, 105, 91, 91, 91, 10, -141, 162, -159, -178,
	-159, 86, -163, 23, -302, -5, 85, 129, -178, -121,
	-303, 358, 71, 361, -209, 182, 75, 105, -184, -209,
	86, -289, -290, 75, -299, -296, 102, 121, 99, -297,
	111, 112, -5, -92, 209, -65, 360, -277, -259, -210,
	91, 93, 86, 60, 359, 362, -290, 75, 11, 10,
	102, 91, -65, -303, -303, -66, 224, 452, -282, 60,
	-288, 195, 190, 193, 30, -288, 187, -279, 360, 189,
	29, 102, 226, 361, 362,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 643, 643, 643, 0,
	643, 0, 0, 643, -2, -2, 643, 1033, 0, 643,
	0, 0, -2, 576, 577, 0, 579, -2, 0, 0,
	588, 1453, 1453, 638, 0, 0, 0, 0, 0, 643,
	898, 45, 643, 0, 80, 81, 594, 595, 596, 60,
	0, 1451, 1, 3, 66, 70, 0, 0, 0, 53,
	907, 0, 73, 0, 0, 647, 0, 645, 0, 1016,
	643, 643, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 450, 410, 453, 408, 439,
	-2, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 303, 303, 0, 0, -2,
	401, 401, 401, 0, 0, 0, 436, 1018, 356, 303,
	303, 0, 303, 303, 303, 303, 0, 0, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 924, 143, 1034, 1031, 1032, 35, 36,
	37, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224,
	1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 0, 1010, 0, 506,
	733, 0, 567, 567, 0, 567, 567, 567, 567, 0,
	0, 0, 518, 0, 0, 0, 0, 564, 0, 0,
	537, 539, 0, 564, 0, 570, 0, 551, 567, 1454,
	1454, 1454, 1001, 0, 561, 559, 573, 574, 556, 557,
	575, 578, 0, 583, 586, 1027, 1028, 0, 601, 44,
	1255, 593, 606, 607, 0, 639, 640, 40, 820, 0,
	747, 750, 761, 774, 775, 776, 777, 778, 780, 781,
	0, 0, 0, 0, 787, 788, 0, 0, 0, 0,
	0, 799, 0, 0, 0, 0, 0, 879, 0, 848,
	848, 841, 848, 850, 850, 850, 0, 0, 888, 0,
	0, 0, 0, 0, 0, 211, 212, 819, 0, 850,
	850, 850, -2, -2, 192, 193, 194, 195, 196, 197,
	0, 0, 0, 0, 210, 188, 215, 216, 213, 214,
	801, 802, 1453, 0, 616, 0, 0, 907, 0, 899,
	898, 58, 0, 643, -2, 0, 0, 0, 0, 42,
	0, 47, 694, 72, 71, 943, 0, 0, 0, 54,
	908, 62, 64, 909, 0, 648, 649, 0, 672, 676,
	0, 644, 0, 0, 1017, 1016, 1016, 97, 0, 1414,
	994, -2, -2, 0, 0, 1029, 1030, 1003, -2, 1037,
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077,
	1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
	1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097,
	1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
	1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, -2, 0,
	0, 153, 154, 0, 38, 329, 0, 149, 0, 323,
	275, 924, 0, 0, 0, 0, 0, 643, 0, 1011,
	134, 135, 141, 142, 303, 303, 0, 143, 143, 417,
	418, 419, 0, 0, -2, 327, 0, 402, 0, 0,
	317, 317, 321, 319, 320, 0, 0, 0, 0, 0,
	0, 430, 0, 431, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 490, 0, 304, 0, 448, 449, 357,
	0, 0, 0, 0, 428, 429, 0, 0, 1019, 1020,
	0, 0, 303, 303, 0, 0, 0, 0, 303, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 937, 0, 0,
	0, -2, 0, 498, 0, 0, 0, 1012, 1012, 505,
	0, 507, 508, 0, 0, 509, 0, 564, 564, 562,
	563, 511, 512, 513, 514, 567, 0, 0, 312, 313,
	314, 564, 567, 0, 567, 567, 567, 567, 564, 564,
	564, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1454, 1454, 1454, 570, 567, 0, 547, 0, 548,
	549, 552, 553, 1455, 1456, 1048, 554, 555, 1002, 584,
	587, 604, 602, 603, 605, 597, 598, 599, 600, 0,
	618, 619, 624, 0, 0, 0, 0, 630, 631, 632,
	0, 0, 635, 636, 637, 0, 0, 0, 0, 746,
	0, 0, 809, 810, 811, 812, 813, 814, 815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	783, 784, 785, 786, 789, 0, 0, 0, 794, 795,
	0, 0, 0, 0, 0, 653, 0, 880, 0, 839,
	0, 840, 842, 843, 0, 844, 845, 0, 0, 656,
	0, 0, 656, 656, 0, 0, 819, 0, 0, 183,
	184, 185, 198, 202, 206, 217, 199, 203, 207, 218,
	200, 204, 208, 219, 201, 205, 209, 220, 41, 608,
	609, 0, 716, 1022, 0, 52, 61, 63, 907, 56,
	907, 0, 658, 0, 0, -2, -2, 659, 665, 666,
	667, 668, 669, 49, 1452, 50, 0, 69, 0, 43,
	0, 0, 0, 0, 287, 946, 0, 0, 900, 901,
	904, 0, 673, 677, 0, 679, 680, 0, 646, 0,
	95, 0, 732, 0, 0, 0, 1414, 1000, 0, 99,
	100, 0, 0, 0, 291, 1005, 1006, 1007, -2, 310,
	0, -2, 282, 226, 227, 228, 275, 230, 275, 275,
	275, 275, 287, 287, 287, 287, 258, 259, 260, 261,
	262, 0, 0, 245, 275, 275, 275, 275, 265, 266,
	267, 268, 269, 270, 271, 272, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 277, 277, 277, 279, 279,
	0, 39, 0, 295, 0, 904, 0, 937, 1014, 1024,
	0, 0, 0, 1014, 117, 0, 0, 451, 411, 440,
	452, 0, 414, 415, -2, 0, 0, 401, 0, 403,
	0, 311, 0, -2, 0, 321, 0, 317, 321, 318,
	321, 309, 322, 432, 888, 0, 433, 434, 0, 470,
	702, 0, 0, 0, 0, 0, 476, 477, 478, 0,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	441, 442, 443, 444, 445, 446, 447, 0, 0, 403,
	0, 437, 0, 358, 359, 0, 0, 362, 363, 364,
	365, 0, 0, 368, 369, 370, 719, 720, 371, 395,
	396, 397, 372, 373, 374, 375, 376, 377, 378, 389,
	390, 391, 392, 393, 394, 379, 380, 381, 382, 383,
	386, 0, 127, 928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1012, 0, 0, 0, 0,
	734, 1035, 1036, 568, 569, 0, 315, 316, 567, 567,
	515, 538, 0, 567, 519, 540, 520, 522, 521, 523,
	542, 543, 567, 526, 565, 566, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 544, 545, 546, 571,
	0, 0, 585, 589, 590, 591, 592, 0, 0, 621,
	91, 626, 627, 628, 629, 641, 634, 821, 743, 744,
	745, 748, 803, 0, 805, 807, 749, 751, 816, 817,
	818, 0, 0, 0, 0, 0, 755, 759, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	779, 863, 864, 865, 782, 797, 798, 0, 670, 0,
	0, 0, 796, 0, 0, 0, 0, 0, 654, 655,
	886, 883, 0, 0, 849, 851, 0, 0, 0, 0,
	0, 0, 657, 889, 0, -2, 0, 0, 0, 0,
	0, 0, 990, 0, 611, 612, 614, 0, 736, 0,
	717, 0, 0, 1023, 617, 55, 57, 663, 664, 0,
	681, 660, 51, 46, 0, 0, 696, 944, 287, 966,
	0, 910, 911, 0, 903, 905, 906, 74, 678, 674,
	0, 741, 0, 0, 731, 0, 684, 686, 687, 688,
	714, 0, 0, 0, 0, 93, 733, 995, 98, 0,
	0, 103, 104, 996, 997, 998, 999, 0, 136, -2,
	353, 155, 157, 158, 159, 150, 335, 0, 0, 285,
	283, 284, 229, 287, 287, 252, 253, 291, 291, 291,
	291, 0, 0, 246, 247, 248, 249, 240, 0, 241,
	242, 243, 0, 244, 328, 0, 912, 296, 297, 299,
	303, 0, 0, 0, 324, 325, 0, 928, 0, 0,
	0, 1025, 1024, 1024, 1024, 0, 145, 146, 147, 148,
	143, 0, 0, 151, 405, 404, 0, 0, 326, 0,
	0, 321, 321, 306, 307, 0, 435, 0, 0, 472,
	473, 474, 475, 0, 0, 0, 403, 405, 291, 0,
	360, 361, 366, 367, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 466, 467, 468,
	925, 926, 927, 0, 0, 499, 0, 0, 345, 89,
	1013, 504, 564, 525, 541, 564, 517, 524, 550, 581,
	625, 0, 0, 0, 0, 633, 0, 804, 806, 808,
	752, 0, 756, 760, 0, 0, 0, 0, 0, 0,
	0, 800, 826, 827, 0, 0, 0, 0, 898, 0,
	884, 0, 0, 838, 852, 0, 0, 822, 0, 0,
	656, 0, 853, 854, 855, 856, 857, 610, 613, 615,
	692, 0, 0, 0, 0, 718, 1021, 0, 891, 0,
	0, 681, 741, 682, 0, 661, 48, 695, 0, 948,
	947, 960, 973, 288, 289, 290, 902, 0, 907, 0,
	984, 0, 0, 976, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 0, 0, 724, 0, 0, 0, 0,
	715, 0, 0, 0, 0, -2, 0, 0, 87, 88,
	0, 0, 0, 101, 102, 0, 0, 108, 292, 293,
	143, 355, 156, 160, 165, 0, 0, 0, 170, 0,
	172, 336, 0, 222, 224, 0, 0, 163, 225, 286,
	291, 291, 254, 255, 256, 257, 0, 273, 0, 0,
	0, 348, 113, 916, 915, 303, 303, 298, 0, 301,
	0, 1026, 276, 0, 126, 0, 0, 0, 0, 0,
	132, 0, 409, 0, 420, 421, 0, 469, 0, 295,
	0, 305, 308, 889, 703, 0, 0, 422, 0, 405,
	426, 427, 438, 387, 388, 385, 0, 0, 938, 939,
	0, 942, 118, 458, 460, 459, 463, 0, 0, 456,
	0, 345, 912, 0, 503, 346, 347, 567, 567, 620,
	92, 0, 623, 0, 0, 0, 753, 757, 671, 0,
	0, 275, 275, 869, 275, 279, 872, 275, 874, 275,
	877, 0, 0, 0, 0, 0, 0, 881, 837, 887,
	0, 0, 0, 823, 824, 0, 890, 0, 0, 0,
	0, 0, 1008, 1009, 892, 893, 741, 894, 683, 662,
	697, 966, 0, 959, 0, -2, 968, 0, 0, 0,
	974, 675, 75, 742, 78, 0, 984, 991, 0, 975,
	986, 988, 0, 0, 0, 980, 0, 741, 685, 710,
	712, 0, 707, 722, 723, 725, 0, 727, 0, 729,
	730, 694, 690, 691, 0, 741, 0, 741, 741, 94,
	0, 735, 105, 106, 107, 354, 166, 0, 168, 181,
	182, 186, 187, 189, 0, 0, 0, 171, 221, 223,
	0, 0, 250, 251, 287, 0, 287, 0, 280, 0,
	337, 349, 0, 913, 914, 0, 0, 300, 302, 0,
	1015, 128, 0, 0, 0, 0, 152, 406, 0, 294,
	0, 0, 494, 491, 423, 0, 425, 694, 929, 930,
	931, 0, 941, 121, 0, 0, 0, 0, 500, 501,
	502, 90, 510, 516, 622, 642, 754, 758, 0, 791,
	866, 287, 870, 871, 873, 875, 876, 878, 792, 793,
	0, 829, 0, 831, 0, 833, 0, 835, 907, 0,
	885, 0, 0, 825, 0, 0, 0, 716, 59, 894,
	896, 0, 953, 951, 951, 961, 962, 0, 0, 969,
	0, 0, 0, 0, 79, 0, 0, 0, 989, 0,
	0, 0, 0, 96, 898, 704, 711, 0, 0, 705,
	0, 706, 726, 728, 689, -2, 898, 741, 85, 86,
	0, 0, 190, 191, 169, 0, 0, 291, 274, 291,
	0, 0, 350, 917, 918, 919, 920, 921, 922, 923,
	694, 129, 130, 131, 412, 0, 0, 471, 0, 479,
	0, 0, 0, 0, 940, 457, 0, 119, 120, 0,
	0, 462, 858, 867, 868, 0, 0, 0, 0, 0,
	882, 0, 0, 0, 738, 698, 699, 0, 0, 736,
	896, 77, 0, 0, 956, 0, 949, 952, 950, 963,
	0, 0, 970, 0, 972, 0, 992, 993, 987, 0,
	979, 982, 978, 981, 907, 708, 0, 713, 907, 84,
	167, 0, 175, 263, 264, 278, 281, 0, 0, 330,
	495, 492, 493, 424, 0, 122, 123, 0, 0, 0,
	0, 0, 0, 828, 830, 832, 834, 836, 846, 847,
	0, 737, 739, 740, 693, 76, 897, 895, 945, 0,
	954, 955, 964, 965, 971, 0, 977, 0, 82, 0,
	83, 331, 335, 0, 0, 932, 0, 0, 0, 464,
	790, 0, 0, 0, 700, 701, 957, 958, 985, 983,
	709, 332, 333, 0, 161, 176, 177, 0, 0, 180,
	173, 174, 932, 0, 0, 454, 934, 124, 125, 398,
	399, 400, 118, 859, 0, 862, 334, 0, 0, 0,
	178, 179, 114, 496, 497, 0, 935, 936, 121, 860,
	338, 340, 341, 0, 0, 339, 0, 461, 0, 342,
	343, 344, 933, 0, 861,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 122, 3, 3, 3, 149, 141, 3,
	84, 86, 146, 144, 85, 145, 162, 147, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 488,
	130, 129, 131, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 151, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 153,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 123, 124, 125,
	126, 127, 128, 132, 133, 134, 135, 136, 137, 138,
	139, 142, 143, 148, 150, 152, 154, 155, 156, 157,
	158, 159, 160, 161, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:446
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:451
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:452
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:456
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:489
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:495
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:499
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:503
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:508
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:512
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:518
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:524
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:530
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:534
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:539
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:543
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:549
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:553
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:559
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:565
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:569
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:573
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:596
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:602
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:607
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:613
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:620
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:626
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:633
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:637
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:647
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:655
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:659
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:665
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:669
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:693
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:699
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:705
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:712
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:718
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:738
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:750
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:762
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:766
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:772
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:778
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName}}, Partitions: yyDollar[7].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:782
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:786
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:790
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:795
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:796
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:800
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:804
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:810
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:814
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:820
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:824
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:833
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:839
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:845
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:849
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:855
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:859
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:865
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:869
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:873
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:879
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:883
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:887
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:891
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:897
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:901
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:907
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:913
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:929
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:933
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:940
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:944
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:949
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:953
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:959
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:964
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:969
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:975
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:980
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:986
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:992
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:999
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1006
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1011
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1016
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1021
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1028
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1035
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1046
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1056
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1062
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1066
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1074
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1080
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1084
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1090
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1094
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1100
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1104
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1111
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1115
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1121
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1125
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1131
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1136
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1141
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1145
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1150
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1158
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1164
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1170
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1178
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1182
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1191
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1195
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1201
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1207
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1212
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1217
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1222
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1227
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1232
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1239
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1243
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1248
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1252
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1257
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1263
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1269
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1274
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1281
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1288
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1292
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1296
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1307
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1314
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1318
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1324
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1328
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1332
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1336
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1340
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1344
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1348
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1352
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1356
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1360
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1364
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1368
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1372
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1376
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1380
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1384
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1388
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1392
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1407
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1411
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1418
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1422
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1426
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1430
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1434
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1438
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1444
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1448
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1452
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1456
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1462
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1473
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1484
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1528
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1534
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1540
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1546
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1558
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1562
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1566
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1570
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1576
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1580
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1584
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1588
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1596
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1600
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1604
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1616
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 263:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1628
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 264:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1633
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1678
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 275:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1687
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1692
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1696
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1704
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1708
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1714
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1722
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1726
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1730
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1735
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1739
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1744
		{
			yyVAL.str = ""
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = ""
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1776
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1785
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1791
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1801
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1805
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1810
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1814
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = ""
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1830
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1834
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1838
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1842
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1846
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = ""
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = yyDollar[2].str
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = "key"
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.str = yyDollar[1].str
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1914
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1918
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1924
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1930
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1934
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1940
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1944
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1950
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1956
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1960
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1964
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1968
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1973
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1977
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1983
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1989
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1995
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2001
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2005
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2009
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2013
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2017
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2022
		{
			yyVAL.str = ""
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2039
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2043
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2052
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2058
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2062
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2072
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2076
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2082
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2086
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2090
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2094
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2098
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2102
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2106
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2110
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2114
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2118
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2122
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2126
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2130
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2134
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2138
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2142
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2146
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2150
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2154
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2158
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2162
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2166
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2170
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2174
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2178
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2182
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2186
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2190
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2195
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2199
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2203
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2235
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2241
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2245
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2254
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2259
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2263
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2267
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2271
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2275
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 412:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2279
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2285
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2289
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2293
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2299
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2303
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2307
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2311
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2315
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2319
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2323
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2327
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2331
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2335
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2339
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2343
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2347
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2351
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2355
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2359
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2363
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2367
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2371
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2375
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2379
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2383
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2387
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2393
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2397
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2403
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2407
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2411
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2415
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2419
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2423
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2427
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2431
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2435
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2441
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2447
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2454
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2461
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2467
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2471
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2478
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2485
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2497
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2507
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2511
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2515
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2528
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2538
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2542
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2553
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2560
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2567
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2574
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2582
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2586
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2590
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2594
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2598
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2602
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2606
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2610
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2614
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2618
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2622
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2626
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2630
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2634
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2638
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2642
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2646
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2650
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2654
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2658
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2662
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2666
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2671
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2675
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2679
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2686
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2690
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 496:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2696
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2700
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2706
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2712
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2716
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 501:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2722
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2726
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2735
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2739
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2745
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2749
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2754
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2760
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2764
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2768
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2772
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2776
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2780
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2788
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2792
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2796
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2800
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2804
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2808
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2812
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2816
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2820
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2824
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2828
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2832
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2836
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2840
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2844
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2848
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2852
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2856
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2860
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2864
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2868
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2872
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2876
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2880
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2884
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2888
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2892
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2896
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2900
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2904
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2909
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2913
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2917
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2922
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2926
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2930
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2934
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2939
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2953
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2957
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2961
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2967
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2971
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2977
		{
			yyVAL.str = ""
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2981
		{
			yyVAL.str = "extended "
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2987
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2991
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2997
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3001
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3007
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3011
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3015
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3021
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3025
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3029
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3039
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3045
		{
			yyVAL.empty = struct{}{}
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.empty = struct{}{}
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3053
		{
			yyVAL.empty = struct{}{}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3059
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3063
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3069
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3073
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3079
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3085
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3089
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3094
		{
			yyVAL.empty = struct{}{}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.empty = struct{}{}
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3099
		{
			yyVAL.empty = struct{}{}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			yyVAL.empty = struct{}{}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3106
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3112
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3117
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3121
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3125
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3129
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3133
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3137
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.str = yyDollar[1].str
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3147
		{
			yyVAL.str = yyDollar[1].str
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.str = yyDollar[1].str
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3157
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3161
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3165
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3174
		{
			yyVAL.str = ""
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3178
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3182
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3188
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3192
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3202
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3208
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3214
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3218
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3224
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3230
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3234
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3238
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3242
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3248
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3254
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3264
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3268
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3276
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3286
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3290
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3296
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3300
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3304
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3312
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3316
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3320
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3324
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3328
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3332
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3336
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3340
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3345
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3349
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3353
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3358
		{
			yyVAL.str = ""
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3362
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3367
		{
			setAllowComments(yylex, true)
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3371
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3377
		{
			yyVAL.strs = nil
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3381
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3387
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3391
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3395
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3400
		{
			yyVAL.str = ""
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3404
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3408
		{
			yyVAL.str = SQLCacheStr
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3421
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3430
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3435
		{
			yyVAL.strs = nil
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3439
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3443
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3451
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3457
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3461
		{
			yyVAL.str = SQLCacheStr
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3465
		{
			yyVAL.str = DistinctStr
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3469
		{
			yyVAL.str = DistinctStr
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3473
		{
			yyVAL.str = StraightJoinHint
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3477
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3481
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3487
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3491
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3497
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3501
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3505
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3509
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3514
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3518
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3522
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3529
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3534
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3538
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3544
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3550
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3554
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3564
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3568
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3572
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3578
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3584
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3588
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3593
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3597
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3603
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3607
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3613
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3617
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3621
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3625
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3631
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3635
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3648
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3652
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3656
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3660
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3666
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3668
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3672
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3674
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3678
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3680
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3683
		{
			yyVAL.empty = struct{}{}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3685
		{
			yyVAL.empty = struct{}{}
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3688
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3692
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3696
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3703
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3709
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3713
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3717
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3723
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3729
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3733
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3737
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3741
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3747
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3751
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3761
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3765
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3771
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3775
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3781
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3790
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3794
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3798
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3802
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3811
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3818
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3822
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3826
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3830
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3834
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3841
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3845
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3849
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3855
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3859
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3863
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3867
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3871
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3875
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3879
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3883
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3887
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3891
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3895
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3901
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3905
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3909
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3913
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3917
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3921
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3925
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3929
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3933
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3937
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3941
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3945
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3949
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3955
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3959
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3963
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3967
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3971
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3975
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3979
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3983
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3987
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3991
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3995
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3999
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4003
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4007
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4011
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4015
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4019
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4023
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4027
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4031
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4035
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4039
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4047
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4051
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4058
		{
			yyVAL.str = ""
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4062
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4068
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4072
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4079
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4083
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4087
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4091
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4095
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4099
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4105
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4109
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4113
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4117
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4121
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4125
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4129
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4135
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4139
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4143
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4150
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4156
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4160
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4170
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4174
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4178
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4182
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4192
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4196
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4200
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4204
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4208
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4212
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4216
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4220
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4224
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4228
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4232
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4236
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4240
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4244
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4255
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4259
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4265
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4269
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4273
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4278
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4282
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4286
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4296
		{
			yyLOCAL = NewIntLiteral("0")
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4300
		{
			yyLOCAL = NewIntLiteral("0")
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4304
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4314
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4318
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4322
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4326
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4330
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4336
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4340
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4344
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4348
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4352
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4358
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4362
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4366
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4372
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4376
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4380
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4384
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4388
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4392
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4398
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4402
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4406
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4410
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4414
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4418
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4422
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4431
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4436
		{
			yyVAL.str = string("")
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4440
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4446
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4450
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4456
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4461
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4465
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4471
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4475
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4479
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4485
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4494
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4498
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4508
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4513
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4517
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4522
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4526
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4532
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4538
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4542
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4548
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4553
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4557
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4561
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4566
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4570
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4576
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4580
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4584
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4593
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4597
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4601
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4605
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4612
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4616
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4620
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4624
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4630
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4634
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4638
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4643
		{
			yyVAL.str = ""
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4647
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4651
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4655
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4660
		{
			yyVAL.str = ""
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4664
		{
			yyVAL.str = yyDollar[3].str
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4670
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4674
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4679
		{
			yyVAL.str = ""
		}
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4683
		{
			yyVAL.str = yyDollar[2].str
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4688
		{
			yyVAL.str = "cascaded"
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4692
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4696
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4701
		{
			yyVAL.str = ""
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4705
		{
			yyVAL.str = yyDollar[3].str
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4711
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4715
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4719
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4723
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4729
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4733
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4739
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4743
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4747
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4752
		{
			yyVAL.str = ""
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4756
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4760
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4765
		{
			yyVAL.str = ""
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4769
		{
			yyVAL.str = " header"
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4774
		{
			yyVAL.str = ""
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4778
		{
			yyVAL.str = " manifest on"
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4782
		{
			yyVAL.str = " manifest off"
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4787
		{
			yyVAL.str = ""
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4791
		{
			yyVAL.str = " overwrite on"
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4795
		{
			yyVAL.str = " overwrite off"
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4801
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4806
		{
			yyVAL.str = ""
		}
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4810
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4816
		{
			yyVAL.str = yyDollar[1].str
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4820
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4826
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4830
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4835
		{
			yyVAL.str = ""
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4839
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4845
		{
			yyVAL.str = yyDollar[1].str
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4849
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4855
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4859
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4863
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4868
		{
			yyVAL.str = ""
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4872
		{
			yyVAL.str = " optionally"
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4885
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4889
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4893
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4897
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4901
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4907
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4911
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4915
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4919
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4928
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4934
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4938
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4944
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4948
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4954
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4960
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4964
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4970
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4976
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4980
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4986
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4990
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4994
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4998
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5002
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5010
		{
			yyVAL.str = "charset"
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5020
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5024
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5028
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5037
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5039
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5042
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5044
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5047
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5049
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5052
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5054
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5057
		{
			yyVAL.empty = struct{}{}
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5059
		{
			yyVAL.empty = struct{}{}
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5061
		{
			yyVAL.empty = struct{}{}
		}
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5065
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5070
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5074
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5079
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5081
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5085
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5091
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5095
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5102
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5108
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5112
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5118
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5122
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5129
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5568
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5577
		{
			decNesting(yylex)
		}
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5582
		{
			skipToEnd(yylex)
		}
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5587
		{
			skipToEnd(yylex)
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5591
		{
			skipToEnd(yylex)
		}
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5595
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
