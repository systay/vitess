// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const TRACE = 57485
const EMPTY_FROM_CLAUSE = 57486
const LOWER_THAN_CHARSET = 57487
const CHARSET = 57488
const UNIQUE = 57489
const KEY = 57490
const EXPRESSION_PREC_SETTER = 57491
const OR = 57492
const XOR = 57493
const AND = 57494
const NOT = 57495
const BETWEEN = 57496
const CASE = 57497
const WHEN = 57498
const THEN = 57499
const ELSE = 57500
const END = 57501
const LE = 57502
const GE = 57503
const NE = 57504
const NULL_SAFE_EQUAL = 57505
const IS = 57506
const LIKE = 57507
const REGEXP = 57508
const RLIKE = 57509
const IN = 57510
const ASSIGNMENT_OPT = 57511
const SHIFT_LEFT = 57512
const SHIFT_RIGHT = 57513
const DIV = 57514
const MOD = 57515
const UNARY = 57516
const COLLATE = 57517
const BINARY = 57518
const UNDERSCORE_ARMSCII8 = 57519
const UNDERSCORE_ASCII = 57520
const UNDERSCORE_BIG5 = 57521
const UNDERSCORE_BINARY = 57522
const UNDERSCORE_CP1250 = 57523
const UNDERSCORE_CP1251 = 57524
const UNDERSCORE_CP1256 = 57525
const UNDERSCORE_CP1257 = 57526
const UNDERSCORE_CP850 = 57527
const UNDERSCORE_CP852 = 57528
const UNDERSCORE_CP866 = 57529
const UNDERSCORE_CP932 = 57530
const UNDERSCORE_DEC8 = 57531
const UNDERSCORE_EUCJPMS = 57532
const UNDERSCORE_EUCKR = 57533
const UNDERSCORE_GB18030 = 57534
const UNDERSCORE_GB2312 = 57535
const UNDERSCORE_GBK = 57536
const UNDERSCORE_GEOSTD8 = 57537
const UNDERSCORE_GREEK = 57538
const UNDERSCORE_HEBREW = 57539
const UNDERSCORE_HP8 = 57540
const UNDERSCORE_KEYBCS2 = 57541
const UNDERSCORE_KOI8R = 57542
const UNDERSCORE_KOI8U = 57543
const UNDERSCORE_LATIN1 = 57544
const UNDERSCORE_LATIN2 = 57545
const UNDERSCORE_LATIN5 = 57546
const UNDERSCORE_LATIN7 = 57547
const UNDERSCORE_MACCE = 57548
const UNDERSCORE_MACROMAN = 57549
const UNDERSCORE_SJIS = 57550
const UNDERSCORE_SWE7 = 57551
const UNDERSCORE_TIS620 = 57552
const UNDERSCORE_UCS2 = 57553
const UNDERSCORE_UJIS = 57554
const UNDERSCORE_UTF16 = 57555
const UNDERSCORE_UTF16LE = 57556
const UNDERSCORE_UTF32 = 57557
const UNDERSCORE_UTF8 = 57558
const UNDERSCORE_UTF8MB4 = 57559
const UNDERSCORE_UTF8MB3 = 57560
const INTERVAL = 57561
const WINDOW_EXPR = 57562
const JSON_EXTRACT_OP = 57563
const JSON_UNQUOTE_EXTRACT_OP = 57564
const CREATE = 57565
const ALTER = 57566
const DROP = 57567
const RENAME = 57568
const ANALYZE = 57569
const ADD = 57570
const FLUSH = 57571
const CHANGE = 57572
const MODIFY = 57573
const DEALLOCATE = 57574
const REVERT = 57575
const QUERIES = 57576
const SCHEMA = 57577
const TABLE = 57578
const INDEX = 57579
const VIEW = 57580
const TO = 57581
const IGNORE = 57582
const IF = 57583
const PRIMARY = 57584
const COLUMN = 57585
const SPATIAL = 57586
const FULLTEXT = 57587
const KEY_BLOCK_SIZE = 57588
const CHECK = 57589
const INDEXES = 57590
const ACTION = 57591
const CASCADE = 57592
const CONSTRAINT = 57593
const FOREIGN = 57594
const NO = 57595
const REFERENCES = 57596
const RESTRICT = 57597
const SHOW = 57598
const DESCRIBE = 57599
const EXPLAIN = 57600
const DATE = 57601
const ESCAPE = 57602
const REPAIR = 57603
const OPTIMIZE = 57604
const TRUNCATE = 57605
const COALESCE = 57606
const EXCHANGE = 57607
const REBUILD = 57608
const PARTITIONING = 57609
const REMOVE = 57610
const PREPARE = 57611
const EXECUTE = 57612
const MAXVALUE = 57613
const PARTITION = 57614
const REORGANIZE = 57615
const LESS = 57616
const THAN = 57617
const PROCEDURE = 57618
const TRIGGER = 57619
const VINDEX = 57620
const VINDEXES = 57621
const DIRECTORY = 57622
const NAME = 57623
const UPGRADE = 57624
const STATUS = 57625
const VARIABLES = 57626
const WARNINGS = 57627
const CASCADED = 57628
const DEFINER = 57629
const OPTION = 57630
const SQL = 57631
const UNDEFINED = 57632
const SEQUENCE = 57633
const MERGE = 57634
const TEMPORARY = 57635
const TEMPTABLE = 57636
const INVOKER = 57637
const SECURITY = 57638
const FIRST = 57639
const AFTER = 57640
const LAST = 57641
const VITESS_MIGRATION = 57642
const CANCEL = 57643
const RETRY = 57644
const LAUNCH = 57645
const COMPLETE = 57646
const CLEANUP = 57647
const THROTTLE = 57648
const UNTHROTTLE = 57649
const FORCE_CUTOVER = 57650
const CUTOVER_THRESHOLD = 57651
const EXPIRE = 57652
const RATIO = 57653
const VITESS_THROTTLER = 57654
const BEGIN = 57655
const START = 57656
const TRANSACTION = 57657
const COMMIT = 57658
const ROLLBACK = 57659
const SAVEPOINT = 57660
const RELEASE = 57661
const WORK = 57662
const CONSISTENT = 57663
const SNAPSHOT = 57664
const UNRESOLVED = 57665
const TRANSACTIONS = 57666
const BIT = 57667
const TINYINT = 57668
const SMALLINT = 57669
const MEDIUMINT = 57670
const INT = 57671
const INTEGER = 57672
const BIGINT = 57673
const INTNUM = 57674
const REAL = 57675
const DOUBLE = 57676
const FLOAT_TYPE = 57677
const FLOAT4_TYPE = 57678
const FLOAT8_TYPE = 57679
const DECIMAL_TYPE = 57680
const NUMERIC = 57681
const TIME = 57682
const TIMESTAMP = 57683
const DATETIME = 57684
const YEAR = 57685
const CHAR = 57686
const VARCHAR = 57687
const BOOL = 57688
const CHARACTER = 57689
const VARBINARY = 57690
const NCHAR = 57691
const TEXT = 57692
const TINYTEXT = 57693
const MEDIUMTEXT = 57694
const LONGTEXT = 57695
const BLOB = 57696
const TINYBLOB = 57697
const MEDIUMBLOB = 57698
const LONGBLOB = 57699
const JSON = 57700
const JSON_SCHEMA_VALID = 57701
const JSON_SCHEMA_VALIDATION_REPORT = 57702
const ENUM = 57703
const GEOMETRY = 57704
const POINT = 57705
const LINESTRING = 57706
const POLYGON = 57707
const GEOMCOLLECTION = 57708
const GEOMETRYCOLLECTION = 57709
const MULTIPOINT = 57710
const MULTILINESTRING = 57711
const MULTIPOLYGON = 57712
const ASCII = 57713
const UNICODE = 57714
const VECTOR = 57715
const NULLX = 57716
const AUTO_INCREMENT = 57717
const APPROXNUM = 57718
const SIGNED = 57719
const UNSIGNED = 57720
const ZEROFILL = 57721
const PURGE = 57722
const BEFORE = 57723
const CODE = 57724
const COLLATION = 57725
const COLUMNS = 57726
const DATABASES = 57727
const ENGINES = 57728
const EVENT = 57729
const EXTENDED = 57730
const FIELDS = 57731
const FULL = 57732
const FUNCTION = 57733
const GTID_EXECUTED = 57734
const KEYSPACES = 57735
const OPEN = 57736
const PLUGINS = 57737
const PRIVILEGES = 57738
const PROCESSLIST = 57739
const SCHEMAS = 57740
const TABLES = 57741
const TRIGGERS = 57742
const USER = 57743
const VGTID_EXECUTED = 57744
const VITESS_KEYSPACES = 57745
const VITESS_METADATA = 57746
const VITESS_MIGRATIONS = 57747
const VITESS_REPLICATION_STATUS = 57748
const VITESS_SHARDS = 57749
const VITESS_TABLETS = 57750
const VITESS_TARGET = 57751
const VSCHEMA = 57752
const VITESS_THROTTLED_APPS = 57753
const NAMES = 57754
const GLOBAL = 57755
const SESSION = 57756
const ISOLATION = 57757
const LEVEL = 57758
const READ = 57759
const WRITE = 57760
const ONLY = 57761
const REPEATABLE = 57762
const COMMITTED = 57763
const UNCOMMITTED = 57764
const SERIALIZABLE = 57765
const ADDDATE = 57766
const CURRENT_TIMESTAMP = 57767
const DATABASE = 57768
const CURRENT_DATE = 57769
const CURDATE = 57770
const DATE_ADD = 57771
const DATE_SUB = 57772
const NOW = 57773
const SUBDATE = 57774
const CURTIME = 57775
const CURRENT_TIME = 57776
const LOCALTIME = 57777
const LOCALTIMESTAMP = 57778
const CURRENT_USER = 57779
const UTC_DATE = 57780
const UTC_TIME = 57781
const UTC_TIMESTAMP = 57782
const SYSDATE = 57783
const DAY = 57784
const DAY_HOUR = 57785
const DAY_MICROSECOND = 57786
const DAY_MINUTE = 57787
const DAY_SECOND = 57788
const HOUR = 57789
const HOUR_MICROSECOND = 57790
const HOUR_MINUTE = 57791
const HOUR_SECOND = 57792
const MICROSECOND = 57793
const MINUTE = 57794
const MINUTE_MICROSECOND = 57795
const MINUTE_SECOND = 57796
const MONTH = 57797
const QUARTER = 57798
const SECOND = 57799
const SECOND_MICROSECOND = 57800
const YEAR_MONTH = 57801
const WEEK = 57802
const SQL_TSI_DAY = 57803
const SQL_TSI_WEEK = 57804
const SQL_TSI_HOUR = 57805
const SQL_TSI_MINUTE = 57806
const SQL_TSI_MONTH = 57807
const SQL_TSI_QUARTER = 57808
const SQL_TSI_SECOND = 57809
const SQL_TSI_MICROSECOND = 57810
const SQL_TSI_YEAR = 57811
const REPLACE = 57812
const CONVERT = 57813
const CAST = 57814
const SUBSTR = 57815
const SUBSTRING = 57816
const MID = 57817
const SEPARATOR = 57818
const TIMESTAMPADD = 57819
const TIMESTAMPDIFF = 57820
const WEIGHT_STRING = 57821
const LTRIM = 57822
const RTRIM = 57823
const TRIM = 57824
const JSON_ARRAY = 57825
const JSON_OBJECT = 57826
const JSON_QUOTE = 57827
const JSON_DEPTH = 57828
const JSON_TYPE = 57829
const JSON_LENGTH = 57830
const JSON_VALID = 57831
const JSON_ARRAY_APPEND = 57832
const JSON_ARRAY_INSERT = 57833
const JSON_INSERT = 57834
const JSON_MERGE = 57835
const JSON_MERGE_PATCH = 57836
const JSON_MERGE_PRESERVE = 57837
const JSON_REMOVE = 57838
const JSON_REPLACE = 57839
const JSON_SET = 57840
const JSON_UNQUOTE = 57841
const COUNT = 57842
const AVG = 57843
const MAX = 57844
const MIN = 57845
const SUM = 57846
const GROUP_CONCAT = 57847
const BIT_AND = 57848
const BIT_OR = 57849
const BIT_XOR = 57850
const STD = 57851
const STDDEV = 57852
const STDDEV_POP = 57853
const STDDEV_SAMP = 57854
const VAR_POP = 57855
const VAR_SAMP = 57856
const VARIANCE = 57857
const ANY_VALUE = 57858
const REGEXP_INSTR = 57859
const REGEXP_LIKE = 57860
const REGEXP_REPLACE = 57861
const REGEXP_SUBSTR = 57862
const ExtractValue = 57863
const UpdateXML = 57864
const GET_LOCK = 57865
const RELEASE_LOCK = 57866
const RELEASE_ALL_LOCKS = 57867
const IS_FREE_LOCK = 57868
const IS_USED_LOCK = 57869
const LOCATE = 57870
const POSITION = 57871
const ST_GeometryCollectionFromText = 57872
const ST_GeometryFromText = 57873
const ST_LineStringFromText = 57874
const ST_MultiLineStringFromText = 57875
const ST_MultiPointFromText = 57876
const ST_MultiPolygonFromText = 57877
const ST_PointFromText = 57878
const ST_PolygonFromText = 57879
const ST_GeometryCollectionFromWKB = 57880
const ST_GeometryFromWKB = 57881
const ST_LineStringFromWKB = 57882
const ST_MultiLineStringFromWKB = 57883
const ST_MultiPointFromWKB = 57884
const ST_MultiPolygonFromWKB = 57885
const ST_PointFromWKB = 57886
const ST_PolygonFromWKB = 57887
const ST_AsBinary = 57888
const ST_AsText = 57889
const ST_Dimension = 57890
const ST_Envelope = 57891
const ST_IsSimple = 57892
const ST_IsEmpty = 57893
const ST_GeometryType = 57894
const ST_X = 57895
const ST_Y = 57896
const ST_Latitude = 57897
const ST_Longitude = 57898
const ST_EndPoint = 57899
const ST_IsClosed = 57900
const ST_Length = 57901
const ST_NumPoints = 57902
const ST_StartPoint = 57903
const ST_PointN = 57904
const ST_Area = 57905
const ST_Centroid = 57906
const ST_ExteriorRing = 57907
const ST_InteriorRingN = 57908
const ST_NumInteriorRings = 57909
const ST_NumGeometries = 57910
const ST_GeometryN = 57911
const ST_LongFromGeoHash = 57912
const ST_PointFromGeoHash = 57913
const ST_LatFromGeoHash = 57914
const ST_GeoHash = 57915
const ST_AsGeoJSON = 57916
const ST_GeomFromGeoJSON = 57917
const MATCH = 57918
const AGAINST = 57919
const BOOLEAN = 57920
const LANGUAGE = 57921
const WITH = 57922
const QUERY = 57923
const EXPANSION = 57924
const WITHOUT = 57925
const VALIDATION = 57926
const ROLLUP = 57927
const UNUSED = 57928
const ARRAY = 57929
const BYTE = 57930
const CUME_DIST = 57931
const DESCRIPTION = 57932
const DENSE_RANK = 57933
const EMPTY = 57934
const EXCEPT = 57935
const FIRST_VALUE = 57936
const GROUPING = 57937
const GROUPS = 57938
const JSON_TABLE = 57939
const LAG = 57940
const LAST_VALUE = 57941
const LATERAL = 57942
const LEAD = 57943
const NTH_VALUE = 57944
const NTILE = 57945
const OF = 57946
const OVER = 57947
const PERCENT_RANK = 57948
const RANK = 57949
const RECURSIVE = 57950
const ROW_NUMBER = 57951
const SYSTEM = 57952
const WINDOW = 57953
const ACTIVE = 57954
const ADMIN = 57955
const AUTOEXTEND_SIZE = 57956
const BUCKETS = 57957
const CLONE = 57958
const COLUMN_FORMAT = 57959
const COMPONENT = 57960
const DEFINITION = 57961
const ENFORCED = 57962
const ENGINE_ATTRIBUTE = 57963
const EXCLUDE = 57964
const FOLLOWING = 57965
const GET_MASTER_PUBLIC_KEY = 57966
const HISTOGRAM = 57967
const HISTORY = 57968
const INACTIVE = 57969
const INVISIBLE = 57970
const LOCKED = 57971
const MASTER_COMPRESSION_ALGORITHMS = 57972
const MASTER_PUBLIC_KEY_PATH = 57973
const MASTER_TLS_CIPHERSUITES = 57974
const MASTER_ZSTD_COMPRESSION_LEVEL = 57975
const NESTED = 57976
const NETWORK_NAMESPACE = 57977
const NOWAIT = 57978
const NULLS = 57979
const OJ = 57980
const OLD = 57981
const OPTIONAL = 57982
const ORDINALITY = 57983
const ORGANIZATION = 57984
const OTHERS = 57985
const PARTIAL = 57986
const PATH = 57987
const PERSIST = 57988
const PERSIST_ONLY = 57989
const PRECEDING = 57990
const PRIVILEGE_CHECKS_USER = 57991
const PROCESS = 57992
const RANDOM = 57993
const REFERENCE = 57994
const REQUIRE_ROW_FORMAT = 57995
const RESOURCE = 57996
const RESPECT = 57997
const RESTART = 57998
const RETAIN = 57999
const REUSE = 58000
const ROLE = 58001
const SECONDARY = 58002
const SECONDARY_ENGINE = 58003
const SECONDARY_ENGINE_ATTRIBUTE = 58004
const SECONDARY_LOAD = 58005
const SECONDARY_UNLOAD = 58006
const SIMPLE = 58007
const SKIP = 58008
const SRID = 58009
const THREAD_PRIORITY = 58010
const TIES = 58011
const UNBOUNDED = 58012
const VCPU = 58013
const VISIBLE = 58014
const RETURNING = 58015
const FORMAT_BYTES = 58016
const FORMAT_PICO_TIME = 58017
const PS_CURRENT_THREAD_ID = 58018
const PS_THREAD_ID = 58019
const GTID_SUBSET = 58020
const GTID_SUBTRACT = 58021
const WAIT_FOR_EXECUTED_GTID_SET = 58022
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58023
const FORMAT = 58024
const TREE = 58025
const VITESS = 58026
const TRADITIONAL = 58027
const VTEXPLAIN = 58028
const VEXPLAIN = 58029
const PLAN = 58030
const LOCAL = 58031
const LOW_PRIORITY = 58032
const NO_WRITE_TO_BINLOG = 58033
const LOGS = 58034
const ERROR = 58035
const GENERAL = 58036
const HOSTS = 58037
const OPTIMIZER_COSTS = 58038
const USER_RESOURCES = 58039
const SLOW = 58040
const CHANNEL = 58041
const RELAY = 58042
const EXPORT = 58043
const CURRENT = 58044
const ROW = 58045
const ROWS = 58046
const AVG_ROW_LENGTH = 58047
const CONNECTION = 58048
const CHECKSUM = 58049
const DELAY_KEY_WRITE = 58050
const ENCRYPTION = 58051
const ENGINE = 58052
const INSERT_METHOD = 58053
const MAX_ROWS = 58054
const MIN_ROWS = 58055
const PACK_KEYS = 58056
const PASSWORD = 58057
const FIXED = 58058
const DYNAMIC = 58059
const COMPRESSED = 58060
const REDUNDANT = 58061
const COMPACT = 58062
const ROW_FORMAT = 58063
const STATS_AUTO_RECALC = 58064
const STATS_PERSISTENT = 58065
const STATS_SAMPLE_PAGES = 58066
const STORAGE = 58067
const MEMORY = 58068
const DISK = 58069
const PARTITIONS = 58070
const LINEAR = 58071
const RANGE = 58072
const LIST = 58073
const SUBPARTITION = 58074
const SUBPARTITIONS = 58075
const HASH = 58076

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"CUTOVER_THRESHOLD",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 49,
	17, 49,
	-2, 40,
	-1, 52,
	1, 160,
	752, 160,
	-2, 168,
	-1, 53,
	149, 168,
	191, 168,
	364, 168,
	-2, 526,
	-1, 61,
	38, 787,
	254, 787,
	265, 787,
	300, 801,
	301, 801,
	-2, 789,
	-1, 66,
	256, 825,
	-2, 823,
	-1, 124,
	253, 1630,
	-2, 134,
	-1, 126,
	1, 161,
	752, 161,
	-2, 168,
	-1, 137,
	150, 411,
	259, 411,
	-2, 515,
	-1, 156,
	149, 168,
	191, 168,
	364, 168,
	-2, 535,
	-1, 751,
	177, 41,
	-2, 43,
	-1, 960,
	95, 1647,
	-2, 1485,
	-1, 961,
	95, 1648,
	236, 1652,
	-2, 1486,
	-1, 962,
	236, 1651,
	-2, 42,
	-1, 1048,
	65, 899,
	-2, 912,
	-1, 1141,
	264, 1112,
	269, 1112,
	-2, 422,
	-1, 1226,
	1, 583,
	752, 583,
	-2, 168,
	-1, 1537,
	236, 1652,
	-2, 1486,
	-1, 1750,
	65, 900,
	-2, 916,
	-1, 1751,
	65, 901,
	-2, 917,
	-1, 1813,
	149, 168,
	191, 168,
	364, 168,
	-2, 461,
	-1, 1896,
	150, 411,
	259, 411,
	-2, 515,
	-1, 1905,
	264, 1113,
	269, 1113,
	-2, 423,
	-1, 2354,
	236, 1656,
	-2, 1650,
	-1, 2355,
	236, 1652,
	-2, 1648,
	-1, 2460,
	149, 168,
	191, 168,
	364, 168,
	-2, 462,
	-1, 2467,
	28, 189,
	-2, 191,
	-1, 2931,
	86, 99,
	96, 99,
	-2, 979,
	-1, 2999,
	727, 705,
	-2, 679,
	-1, 3224,
	55, 1589,
	-2, 1583,
	-1, 4061,
	727, 705,
	-2, 693,
	-1, 4153,
	98, 637,
	104, 637,
	114, 637,
	193, 637,
	194, 637,
	195, 637,
	196, 637,
	197, 637,
	198, 637,
	199, 637,
	200, 637,
	201, 637,
	202, 637,
	203, 637,
	204, 637,
	205, 637,
	206, 637,
	207, 637,
	208, 637,
	209, 637,
	210, 637,
	211, 637,
	212, 637,
	213, 637,
	214, 637,
	215, 637,
	216, 637,
	217, 637,
	218, 637,
	219, 637,
	220, 637,
	221, 637,
	222, 637,
	223, 637,
	224, 637,
	225, 637,
	226, 637,
	227, 637,
	228, 637,
	229, 637,
	230, 637,
	231, 637,
	232, 637,
	233, 637,
	234, 637,
	-2, 2028,
}

const yyPrivate = 57344

const yyLast = 56475

var yyAct = [...]int{
	976, 3712, 3713, 87, 3711, 4132, 4241, 4151, 4228, 4042,
	964, 3375, 4120, 2159, 4195, 1294, 971, 3661, 963, 2147,
	3276, 4196, 2457, 3283, 3947, 3511, 2383, 1292, 3333, 4024,
	3324, 3237, 3338, 3335, 3334, 3332, 3337, 3336, 1816, 4022,
	2085, 3648, 3353, 5, 2385, 2026, 3291, 2532, 3175, 3352,
	755, 3241, 3090, 3238, 3557, 3064, 3754, 3225, 3551, 2412,
	3089, 2495, 2891, 925, 3541, 783, 750, 924, 3355, 2965,
	1873, 3235, 3046, 4093, 749, 2996, 1770, 2519, 3382, 2500,
	2966, 3579, 2967, 2445, 165, 1103, 1046, 2563, 87, 1071,
	1043, 2916, 2431, 2433, 1921, 2428, 41, 2897, 2432, 1078,
	2883, 2867, 43, 2307, 2339, 2143, 3037, 2306, 2093, 1046,
	2181, 2541, 151, 2502, 2420, 2518, 2580, 2958, 1136, 1149,
	1131, 1805, 1903, 2933, 1113, 2435, 1785, 1731, 1550, 2187,
	2118, 2107, 106, 107, 1475, 1458, 2022, 1910, 1110, 1107,
	1882, 1142, 1111, 1139, 2002, 2491, 765, 978, 3240, 2904,
	102, 1137, 1138, 2413, 1804, 760, 1790, 1088, 1090, 1059,
	2492, 1055, 1753, 2214, 752, 101, 1533, 1052, 2084, 2034,
	85, 1282, 3749, 3512, 2865, 1895, 134, 169, 129, 1070,
	3741, 2195, 1509, 127, 1050, 3568, 128, 135, 1222, 1083,
	1051, 929, 1053, 109, 42, 1041, 108, 742, 1554, 753,
	93, 100, 84, 4229, 3649, 926, 2534, 2535, 2536, 4077,
	1268, 3321, 1290, 2534, 1082, 685, 2987, 1559, 3019, 3018,
	2578, 3641, 1476, 1040, 4178, 1061, 3054, 3055, 4072, 136,
	130, 4073, 2100, 2380, 2381, 4078, 2099, 2098, 2097, 2096,
	1104, 1178, 1987, 2095, 2065, 1060, 1238, 3343, 682, 4172,
	683, 2863, 1063, 2632, 3221, 2567, 3179, 4199, 1153, 1776,
	3340, 4251, 4194, 4219, 3716, 1774, 2409, 3515, 1064, 2,
	743, 4234, 1098, 3604, 1097, 3514, 2408, 1045, 2565, 1049,
	1186, 1042, 1152, 1492, 1128, 3012, 3343, 1173, 1044, 1777,
	1120, 2893, 95, 4025, 3716, 1775, 4233, 1115, 2828, 2566,
	1073, 1179, 1182, 1183, 130, 1127, 4182, 3341, 2105, 1072,
	1126, 721, 1239, 1125, 113, 114, 115, 4051, 118, 2989,
	1057, 124, 4180, 1195, 193, 1472, 3401, 677, 1469, 4073,
	1486, 4181, 4147, 2404, 3943, 3942, 3347, 727, 721, 740,
	741, 1177, 95, 1176, 977, 4209, 3341, 4179, 1039, 1034,
	1035, 1036, 1037, 3953, 2416, 3654, 1048, 1764, 3655, 4176,
	3715, 3673, 1057, 3662, 4121, 4129, 1460, 2560, 3952, 3009,
	727, 2152, 130, 4156, 3427, 3347, 1096, 1100, 928, 1884,
	1129, 1096, 1100, 928, 2864, 2942, 1085, 1086, 2941, 3272,
	3715, 2943, 3026, 3053, 3027, 980, 981, 982, 3273, 3274,
	2452, 2453, 2636, 192, 2077, 2078, 980, 981, 982, 1806,
	3036, 1807, 2451, 1258, 1032, 1246, 3672, 1031, 2990, 721,
	1247, 1287, 2639, 1246, 4043, 721, 131, 1488, 1247, 2030,
	721, 2954, 1489, 1471, 1490, 1491, 1245, 3409, 1244, 1263,
	1264, 1175, 174, 1482, 1259, 1119, 1474, 86, 1121, 4133,
	86, 3344, 2470, 2469, 1192, 1193, 1194, 3407, 1197, 1198,
	1199, 1200, 716, 86, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 3111, 1252, 1453, 1221, 2511, 2907, 4161, 2947, 721,
	3344, 2076, 2637, 2630, 721, 735, 1476, 1802, 97, 2900,
	2901, 3768, 171, 733, 3379, 172, 2382, 4159, 3038, 2505,
	701, 4200, 2179, 2080, 2908, 739, 3383, 4165, 4166, 1735,
	721, 1977, 2997, 699, 2542, 4137, 722, 3293, 3294, 1459,
	95, 191, 4201, 95, 4160, 1286, 4137, 2416, 1470, 3022,
	3377, 1285, 3995, 1260, 3996, 2587, 95, 1124, 1265, 1116,
	2414, 2415, 86, 722, 2581, 88, 1118, 1117, 1266, 4231,
	3370, 2003, 1196, 696, 1510, 1978, 1279, 1979, 3371, 1261,
	1262, 2031, 711, 1124, 1452, 1231, 1232, 1284, 2633, 1227,
	2634, 1253, 1267, 3041, 3639, 3643, 3398, 706, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1519, 1518, 1520, 1521, 709,
	2588, 3380, 719, 97, 1486, 1122, 3642, 1234, 1089, 2585,
	720, 2171, 2160, 2161, 2162, 2163, 2173, 2164, 2165, 2166,
	2178, 2174, 2167, 2168, 2175, 2176, 2177, 2169, 2170, 2172,
	2609, 1122, 2583, 1202, 722, 95, 3292, 3378, 1201, 2606,
	722, 2607, 3927, 2608, 2545, 722, 175, 3720, 3295, 1132,
	3112, 2584, 4173, 1133, 2429, 181, 1133, 1171, 1170, 1169,
	1524, 1168, 2504, 1167, 2586, 1166, 1888, 1165, 1164, 1159,
	686, 3178, 688, 702, 1738, 724, 3554, 723, 692, 1172,
	690, 694, 703, 695, 3295, 689, 1524, 700, 4252, 4206,
	691, 704, 705, 708, 712, 713, 714, 710, 707, 3638,
	698, 725, 1144, 1108, 722, 1099, 1093, 1091, 1145, 722,
	1099, 1093, 1091, 1108, 2023, 1084, 1291, 1482, 1291, 1291,
	1181, 1108, 1883, 3042, 2991, 1106, 1144, 2571, 2570, 1803,
	1180, 2019, 1461, 2414, 2415, 722, 1189, 3315, 1123, 1481,
	1478, 1479, 1480, 1485, 1487, 1484, 3058, 1483, 3024, 3021,
	1881, 1880, 1879, 3007, 2020, 1877, 1237, 1477, 2564, 676,
	3035, 1525, 1526, 3034, 1123, 4174, 4038, 2956, 1046, 1534,
	1539, 1540, 2654, 1543, 1545, 1546, 1547, 1548, 1549, 3593,
	1552, 1553, 1555, 1555, 166, 1555, 1555, 1560, 1560, 1560,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1531, 1130, 1280, 4050, 1687, 2988,
	1689, 1690, 1691, 1692, 1693, 1061, 3345, 3346, 4096, 3671,
	1450, 1451, 1560, 1560, 1560, 1560, 1560, 1560, 1544, 3349,
	3714, 1989, 1988, 1990, 1991, 1992, 1449, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1527, 1528, 1529, 1530, 3345, 3346, 1061, 1233, 3499,
	3714, 1541, 3602, 3603, 1535, 1230, 726, 4135, 3349, 1243,
	3011, 1556, 1092, 1557, 1558, 2223, 3555, 1092, 4135, 2637,
	95, 1256, 1468, 2638, 1162, 1160, 2508, 717, 1151, 1242,
	3575, 1248, 1249, 1250, 1251, 1561, 1562, 3399, 1225, 4134,
	3045, 2938, 718, 1481, 1478, 1479, 1480, 1485, 1487, 1484,
	4134, 1483, 4164, 167, 3010, 1288, 1289, 89, 1728, 1909,
	179, 1477, 94, 2903, 1734, 94, 1763, 2509, 1151, 1275,
	2840, 1277, 2562, 1046, 2507, 2868, 2870, 1046, 94, 2155,
	1794, 2007, 1151, 1046, 1688, 1236, 3187, 3186, 2898, 684,
	2458, 4245, 1773, 1524, 1521, 2008, 4163, 3271, 2196, 2665,
	1067, 187, 1764, 1725, 1269, 2035, 126, 1504, 2510, 1274,
	1276, 121, 1241, 1283, 2215, 2197, 4064, 1174, 2506, 2217,
	3634, 3567, 1151, 2222, 2218, 2582, 2089, 2219, 2220, 2221,
	2016, 1150, 2216, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 1808, 3085, 168, 173, 170, 176, 177, 178,
	180, 182, 183, 184, 185, 2188, 2188, 2674, 1490, 1491,
	186, 188, 189, 190, 2524, 1744, 1745, 94, 1908, 106,
	107, 1150, 3206, 1725, 1163, 1161, 4210, 1188, 1491, 1694,
	1695, 1696, 1697, 1698, 1699, 1150, 2665, 1732, 2559, 122,
	3048, 3279, 3763, 3609, 3608, 3047, 2549, 1918, 1724, 1917,
	1124, 1220, 2594, 2590, 2592, 2593, 2591, 2595, 2596, 2597,
	2598, 3048, 3204, 4056, 1907, 2557, 3047, 1162, 2554, 1160,
	1272, 1151, 4202, 4097, 1273, 1150, 2554, 3065, 3594, 1062,
	109, 1144, 1147, 1148, 1278, 1108, 2004, 1255, 2005, 1141,
	1145, 2006, 3280, 2344, 4247, 1764, 1766, 4253, 1257, 2869,
	3668, 1740, 3669, 2193, 2194, 1901, 95, 3935, 1729, 1271,
	1140, 2558, 1270, 2036, 1742, 1224, 1240, 3282, 1746, 2556,
	1743, 1042, 4098, 1741, 1045, 1492, 2121, 1769, 1894, 2561,
	1972, 3934, 2028, 2182, 1923, 1044, 1924, 3277, 1926, 1928,
	3925, 3685, 1932, 1934, 1936, 1938, 1940, 1911, 1911, 1954,
	1151, 1226, 1913, 3684, 1151, 1799, 1800, 3293, 3294, 1291,
	1868, 3067, 3616, 3615, 3278, 2012, 1912, 2010, 2011, 2009,
	2013, 2014, 2015, 4243, 1150, 4030, 4244, 1997, 4242, 3605,
	1144, 1147, 1148, 1876, 1108, 1510, 3322, 3311, 1141, 1145,
	1891, 1892, 1151, 4254, 2963, 1904, 2962, 1747, 3284, 980,
	981, 982, 1890, 2111, 2112, 2644, 2645, 2961, 745, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1519, 1518, 1520, 1521,
	1995, 2514, 1998, 1958, 4031, 1223, 1514, 1515, 1516, 1517,
	1519, 1518, 1520, 1521, 1492, 3077, 3076, 3075, 1915, 1982,
	3069, 1123, 3073, 1981, 3068, 1980, 3066, 1970, 1996, 1964,
	2024, 3071, 1961, 1150, 1960, 1187, 1959, 1150, 2701, 1184,
	3070, 1984, 1154, 1144, 1930, 1950, 3292, 1156, 1953, 1739,
	1955, 1157, 1155, 3599, 1489, 727, 1490, 1491, 3295, 3072,
	3074, 3374, 1455, 3087, 130, 1127, 2945, 1510, 727, 3057,
	1126, 1994, 1158, 1125, 727, 1150, 1885, 1886, 1887, 1802,
	1154, 1144, 2889, 4230, 2041, 1156, 1779, 4203, 4059, 1157,
	1155, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1518,
	1520, 1521, 1516, 1517, 1519, 1518, 1520, 1521, 1764, 1291,
	1291, 2063, 1983, 4190, 1764, 2037, 2038, 2123, 2111, 2112,
	2109, 2110, 2530, 4052, 2529, 87, 2344, 3962, 87, 2042,
	2341, 2124, 1522, 1523, 2122, 1780, 2049, 2050, 2051, 2343,
	2889, 1764, 1492, 1962, 1963, 2108, 1488, 1764, 1492, 1968,
	1969, 2062, 1492, 2889, 4128, 975, 1510, 4058, 1492, 1506,
	4034, 1507, 1492, 1489, 4033, 1490, 1491, 1510, 2528, 2653,
	2527, 2179, 2526, 4032, 2525, 1508, 1522, 1523, 1505, 3281,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1518, 1520,
	1521, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1518,
	1520, 1521, 2150, 2150, 2148, 2148, 2151, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1519, 1518, 1520, 1521, 1492, 103,
	112, 3930, 2113, 2889, 4107, 2039, 192, 3914, 2713, 104,
	2663, 111, 2043, 110, 2045, 2046, 2047, 2048, 1488, 1764,
	2662, 2052, 2661, 3913, 4215, 1764, 2889, 4103, 3961, 131,
	4213, 1764, 3918, 2064, 4143, 1764, 2234, 1498, 1499, 1500,
	1501, 1502, 1503, 1497, 1494, 174, 4015, 1764, 3652, 4049,
	2171, 2160, 2161, 2162, 2163, 2173, 2164, 2165, 2166, 2178,
	2174, 2167, 2168, 2175, 2176, 2177, 2169, 2170, 2172, 3762,
	1764, 1489, 85, 1490, 1491, 85, 2090, 1489, 3760, 1490,
	1491, 1489, 1725, 1490, 1491, 3681, 1764, 1489, 1723, 1490,
	1491, 1489, 2120, 1490, 1491, 1722, 42, 1721, 2183, 42,
	3613, 2070, 2071, 3938, 1764, 171, 2889, 3926, 172, 3652,
	1764, 3917, 2126, 3598, 2128, 2129, 2130, 2131, 2132, 2133,
	2135, 2137, 2138, 2139, 2140, 2141, 2142, 2889, 3650, 2125,
	2554, 1764, 103, 1510, 191, 3573, 1764, 3660, 105, 2795,
	1764, 2154, 104, 1492, 2354, 3384, 3381, 1489, 2127, 1490,
	1491, 1492, 3314, 2258, 3313, 2715, 2352, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1519, 1518, 1520, 1521, 1552, 3304,
	3303, 1492, 3301, 3302, 2353, 3299, 3300, 1724, 3299, 3298,
	1535, 2913, 1764, 2998, 2340, 2233, 2198, 2199, 2200, 2201,
	1510, 3039, 2637, 3020, 1492, 2342, 2972, 1720, 2189, 2250,
	2212, 3285, 1718, 1764, 2977, 3289, 2959, 1716, 1872, 3001,
	1717, 1715, 3288, 1719, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1519, 1518, 1520, 1521, 1512, 1513, 1514, 1515, 1516,
	1517, 1519, 1518, 1520, 1521, 4141, 1764, 2466, 2351, 2934,
	2437, 2357, 2358, 4139, 1764, 3566, 3290, 2994, 2995, 175,
	2354, 3286, 2889, 2888, 106, 107, 3287, 1720, 181, 2153,
	1764, 2886, 2352, 4008, 1764, 3570, 1492, 1714, 2627, 2619,
	2618, 2576, 1492, 2575, 2411, 105, 106, 107, 2388, 2467,
	2426, 2066, 2032, 1492, 1993, 2387, 4006, 1764, 1492, 2399,
	2119, 105, 1489, 1783, 1490, 1491, 1985, 112, 1492, 2934,
	1489, 1975, 1490, 1491, 1971, 1967, 1966, 2935, 111, 1965,
	110, 1872, 1871, 1113, 1781, 1060, 1492, 2937, 105, 95,
	1489, 1281, 1490, 1491, 1814, 1813, 2905, 2476, 2477, 2478,
	2479, 2375, 2471, 3569, 2472, 2473, 2474, 2475, 2461, 2884,
	2462, 1488, 2905, 1489, 2912, 1490, 1491, 1113, 2481, 2443,
	1492, 2483, 2484, 2485, 2486, 2400, 1764, 1063, 4003, 1764,
	1060, 1492, 111, 2393, 1782, 2394, 4091, 2935, 1492, 2497,
	2402, 4063, 2406, 2465, 2555, 3985, 1764, 2637, 2889, 2913,
	3540, 1764, 2670, 1764, 1492, 2543, 3519, 166, 2424, 2503,
	3533, 1764, 3266, 3236, 3301, 1098, 1492, 1097, 2449, 2448,
	2447, 1492, 2637, 2913, 3566, 2913, 2464, 2463, 3530, 1764,
	3209, 2450, 2795, 2698, 2697, 1489, 2554, 1490, 1491, 3566,
	2537, 1489, 1492, 1490, 1491, 2419, 2540, 1768, 2513, 2378,
	1492, 2439, 1489, 2153, 1490, 1491, 1488, 1489, 2554, 1490,
	1491, 2091, 3528, 1764, 2075, 2018, 1047, 1489, 2498, 1490,
	1491, 2494, 1801, 3491, 1764, 2512, 1772, 1135, 2517, 1153,
	2669, 2516, 2487, 2489, 2490, 1489, 1134, 1490, 1491, 1911,
	2548, 4169, 4110, 2551, 3949, 2552, 3489, 1764, 1771, 2568,
	3915, 3775, 3633, 1152, 2498, 2547, 2546, 2550, 3485, 1764,
	3630, 1492, 3325, 3482, 1764, 1492, 3611, 97, 3432, 1489,
	3431, 1490, 1491, 1492, 2572, 1874, 2569, 1492, 2573, 2574,
	1489, 1492, 1490, 1491, 3480, 1764, 1492, 1489, 2496, 1490,
	1491, 3586, 3478, 1764, 1492, 3372, 3327, 1765, 1767, 95,
	3323, 3002, 1492, 1489, 2493, 1490, 1491, 1492, 2488, 86,
	44, 45, 88, 1492, 2482, 1489, 2642, 1490, 1491, 2579,
	1489, 2480, 1490, 1491, 2000, 1046, 1046, 1046, 92, 1492,
	1906, 1902, 48, 76, 77, 1870, 74, 78, 123, 2969,
	1225, 1489, 3376, 1490, 1491, 1545, 3950, 1545, 75, 1489,
	2968, 1490, 1491, 3476, 1764, 2421, 2422, 3474, 1764, 4225,
	97, 3617, 2511, 2657, 2391, 3472, 1764, 2612, 1492, 3470,
	1764, 3580, 3581, 3468, 1764, 2397, 1492, 4223, 3466, 1764,
	62, 2354, 3585, 3255, 1492, 4197, 3464, 1764, 2068, 4071,
	1946, 3990, 95, 2660, 3462, 1764, 167, 3583, 3319, 3460,
	1764, 3318, 3317, 179, 2969, 3458, 1764, 1492, 3236, 2981,
	1489, 2353, 1490, 1491, 1489, 1492, 1490, 1491, 3618, 3619,
	3620, 2629, 1489, 2613, 1490, 1491, 1489, 3254, 1490, 1491,
	1489, 4067, 1490, 1491, 3951, 1489, 2635, 1490, 1491, 1492,
	1726, 681, 83, 1489, 187, 1490, 1491, 1947, 1948, 1949,
	2643, 1489, 1492, 1490, 1491, 2069, 1489, 1492, 1490, 1491,
	3456, 1764, 1489, 2649, 1490, 1491, 2410, 1778, 3454, 1764,
	3258, 2646, 2647, 2648, 3416, 3259, 3452, 1764, 1489, 2120,
	1490, 1491, 3260, 3574, 2922, 2923, 1492, 168, 173, 170,
	176, 177, 178, 180, 182, 183, 184, 185, 2650, 3957,
	2652, 3214, 1065, 186, 188, 189, 190, 3438, 1764, 2655,
	3213, 2656, 4029, 3226, 3228, 744, 3256, 1489, 1492, 1490,
	1491, 3257, 3229, 3753, 3755, 1489, 2673, 1490, 1491, 3562,
	3223, 3414, 1764, 1489, 2651, 1490, 1491, 51, 54, 57,
	56, 59, 2017, 73, 3621, 1764, 82, 79, 1030, 2860,
	1764, 1492, 3740, 1066, 3739, 3297, 1489, 1492, 1490, 1491,
	2621, 2622, 2952, 2839, 1489, 2624, 1490, 1491, 1492, 2658,
	61, 91, 90, 1492, 2625, 71, 72, 58, 2858, 1764,
	1492, 3559, 2709, 80, 81, 1068, 2973, 2605, 1489, 3558,
	1490, 1491, 2604, 1069, 1191, 2871, 1492, 3622, 3623, 3624,
	2827, 1489, 1492, 1490, 1491, 2196, 1489, 3738, 1490, 1491,
	2833, 1764, 1077, 2603, 1046, 2602, 2150, 1190, 2148, 2874,
	1492, 2601, 2197, 2116, 2114, 2115, 1076, 63, 64, 2600,
	65, 66, 67, 68, 1492, 1489, 2599, 1490, 1491, 2910,
	2911, 2872, 3392, 2810, 1764, 1492, 103, 2968, 2437, 2802,
	1764, 1046, 2930, 103, 3051, 3008, 104, 1492, 1454, 105,
	2793, 1764, 131, 104, 3564, 2791, 1764, 1489, 105, 1490,
	1491, 1492, 2778, 1764, 2875, 1492, 2877, 2119, 4239, 2909,
	1942, 2890, 1492, 4146, 2421, 2422, 1492, 2985, 2776, 1764,
	2616, 4048, 3945, 3296, 60, 1764, 2926, 2403, 3542, 2641,
	1489, 2074, 1490, 1491, 110, 2073, 1489, 1492, 1490, 1491,
	3212, 4014, 2774, 1764, 1732, 111, 2862, 1489, 3211, 1490,
	1491, 1492, 1489, 2899, 1490, 1491, 2772, 1764, 4013, 1489,
	3993, 1490, 1491, 1943, 1944, 1945, 1492, 2770, 1764, 3761,
	2928, 3759, 2955, 2957, 1725, 1489, 3758, 1490, 1491, 2768,
	1764, 1489, 1492, 1490, 1491, 2948, 2902, 1492, 3751, 2882,
	2887, 2932, 3631, 2766, 1764, 1492, 3006, 2764, 1764, 1489,
	1492, 1490, 1491, 3563, 2762, 1764, 3750, 3561, 2936, 4204,
	3328, 2538, 2939, 1489, 89, 1490, 1491, 1889, 1492, 2503,
	2946, 2949, 112, 1492, 1489, 1075, 1490, 1491, 3552, 2760,
	1764, 1492, 2191, 111, 112, 3017, 1489, 2192, 1490, 1491,
	2960, 2905, 3724, 2758, 1764, 111, 2886, 110, 1492, 3115,
	1489, 2699, 1490, 1491, 1489, 2970, 1490, 1491, 2756, 1764,
	42, 1489, 1492, 1490, 1491, 1489, 2389, 1490, 1491, 2927,
	2978, 1492, 2929, 2979, 3588, 2254, 2982, 2983, 2984, 2754,
	1764, 4227, 4226, 112, 1492, 3014, 1489, 3535, 1490, 1491,
	1894, 1795, 2752, 1764, 111, 1787, 110, 116, 117, 4226,
	1489, 4227, 1490, 1491, 105, 4035, 3597, 3, 99, 3061,
	3062, 4047, 3003, 3004, 1492, 1489, 3922, 1490, 1491, 2088,
	3013, 1, 10, 3531, 94, 1038, 1492, 2086, 2711, 1457,
	9, 1489, 1492, 1490, 1491, 1456, 1489, 3601, 1490, 1491,
	2750, 1764, 2087, 4158, 1489, 8, 1490, 1491, 1492, 1489,
	3040, 1490, 1491, 1492, 3497, 2337, 697, 2379, 3078, 1730,
	3059, 3043, 1492, 2748, 1764, 4198, 4154, 1489, 1492, 1490,
	1491, 4155, 1489, 1986, 1490, 1491, 2746, 1764, 1976, 3663,
	1489, 1492, 1490, 1491, 2305, 2369, 3096, 3097, 3098, 3099,
	3100, 3101, 3102, 3103, 3104, 3105, 3946, 1489, 3331, 1490,
	1491, 2544, 1765, 2376, 3629, 2501, 3113, 1764, 1143, 3079,
	156, 1489, 2459, 1490, 1491, 2460, 3015, 4123, 2744, 1764,
	1489, 120, 1490, 1491, 2739, 1764, 1101, 119, 1146, 1254,
	1492, 70, 2971, 1489, 2539, 1490, 1491, 2974, 2975, 1726,
	2735, 1764, 3653, 2401, 1492, 2733, 1764, 2953, 1492, 2468,
	2407, 1820, 1492, 1818, 2726, 1764, 1819, 1817, 1492, 3117,
	2724, 1764, 3063, 1489, 1822, 1490, 1491, 1821, 4095, 3173,
	3080, 3049, 3400, 3493, 3050, 1489, 2700, 1490, 1491, 3498,
	2079, 1489, 734, 1490, 1491, 2925, 2248, 1492, 728, 194,
	1809, 1788, 2072, 1492, 3060, 1185, 687, 1489, 3305, 1490,
	1491, 2577, 1489, 693, 1490, 1491, 1542, 2067, 3191, 3210,
	2940, 1489, 2993, 1490, 1491, 1095, 1087, 1489, 2390, 1490,
	1491, 3182, 3429, 3180, 2876, 1492, 1094, 2437, 3923, 1492,
	1489, 3106, 1490, 1491, 1492, 2340, 3428, 2340, 3244, 3153,
	3556, 3635, 1492, 3222, 3420, 3224, 2342, 2892, 2342, 3243,
	3418, 87, 2515, 3227, 2437, 2437, 2437, 2437, 2437, 3163,
	3164, 3165, 3166, 3167, 3220, 4028, 2331, 2332, 2333, 2334,
	2335, 3191, 3752, 4108, 2437, 2950, 3181, 2437, 3183, 1489,
	2964, 1490, 1491, 2356, 3248, 2856, 2359, 2360, 1784, 3518,
	3190, 2672, 1492, 1489, 2028, 1490, 1491, 1489, 3265, 1490,
	1491, 1489, 2186, 1490, 1491, 1532, 3208, 1489, 3202, 1490,
	1491, 1492, 759, 2436, 930, 1058, 3719, 2855, 1492, 3218,
	2106, 2851, 2377, 3215, 3217, 757, 2850, 756, 3203, 3205,
	3207, 754, 3230, 3231, 2849, 2878, 1489, 2906, 1490, 1491,
	3348, 1496, 1489, 1495, 1490, 1491, 3247, 1050, 3250, 3251,
	3356, 3253, 3249, 1051, 965, 3252, 3261, 106, 107, 1492,
	2866, 3269, 1796, 1492, 2917, 2915, 3267, 2377, 2914, 3268,
	2614, 2444, 3275, 3216, 1489, 3582, 1490, 1491, 1489, 3578,
	1490, 1491, 4150, 1489, 2848, 1490, 1491, 2438, 3308, 3307,
	2434, 1489, 3306, 1490, 1491, 2885, 1060, 1492, 916, 915,
	766, 758, 748, 2847, 979, 1492, 914, 913, 3358, 3359,
	2846, 3023, 1492, 3360, 3373, 3357, 3025, 3361, 2439, 2503,
	3329, 3350, 2951, 3369, 3233, 1492, 1473, 1749, 1752, 3367,
	2398, 2918, 2921, 2922, 2923, 2919, 1114, 2920, 2924, 3397,
	1492, 1489, 1049, 1490, 1491, 2439, 2439, 2439, 2439, 2439,
	1492, 2837, 4054, 3239, 3388, 2836, 3387, 2640, 3239, 3385,
	1489, 3426, 1490, 1491, 3395, 2439, 1748, 1489, 2439, 1490,
	1491, 3405, 4061, 3339, 3647, 3320, 3402, 3403, 2999, 3404,
	2531, 69, 3406, 46, 3408, 4023, 3410, 4092, 908, 2835,
	905, 3721, 3421, 3422, 3423, 3424, 3425, 2834, 3722, 3723,
	3176, 3177, 4074, 4075, 2831, 904, 4076, 2243, 1489, 1467,
	1490, 1491, 1489, 1464, 1490, 1491, 4171, 2826, 2081, 98,
	36, 35, 34, 33, 32, 1545, 26, 25, 24, 1545,
	23, 2659, 2819, 22, 29, 2664, 19, 21, 20, 18,
	3342, 4193, 2818, 3330, 4238, 3543, 1489, 3545, 1490, 1491,
	125, 55, 52, 50, 1489, 133, 1490, 1491, 2667, 132,
	2668, 1489, 53, 1490, 1491, 49, 2676, 1228, 3513, 47,
	2678, 2679, 96, 31, 1489, 3517, 1490, 1491, 30, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 1489,
	2696, 1490, 1491, 3242, 17, 16, 3309, 3310, 3396, 1489,
	15, 1490, 1491, 14, 13, 12, 11, 2437, 7, 6,
	3544, 39, 3546, 2702, 2703, 2704, 2705, 38, 2707, 2708,
	3595, 2710, 3560, 3553, 3548, 2712, 1492, 37, 28, 2717,
	2718, 27, 2719, 40, 4, 2722, 2723, 2725, 2727, 2728,
	2729, 2730, 2731, 2732, 2734, 2736, 2737, 2738, 2740, 3565,
	2742, 2743, 2745, 2747, 2749, 2751, 2753, 2755, 2757, 2759,
	2761, 2763, 2765, 2767, 2769, 2771, 2773, 2775, 2777, 2779,
	2780, 2781, 746, 2783, 3584, 2785, 3351, 2787, 2788, 3587,
	2790, 2792, 2794, 3360, 1733, 3357, 2797, 3361, 3596, 3520,
	2801, 3522, 3523, 3524, 2806, 2807, 2808, 2809, 3612, 3590,
	3614, 3589, 3390, 3391, 1492, 3550, 2986, 2820, 2821, 2822,
	2823, 2824, 2825, 3657, 3658, 2829, 2830, 1492, 2817, 2533,
	0, 1492, 0, 2832, 0, 0, 0, 0, 2838, 0,
	0, 0, 1492, 2841, 2842, 2843, 2844, 2845, 3577, 1492,
	0, 0, 0, 679, 2852, 2853, 0, 2854, 1492, 0,
	2857, 2859, 2401, 1492, 2861, 0, 0, 3591, 3592, 0,
	1492, 0, 0, 1033, 2873, 0, 0, 0, 0, 0,
	1492, 0, 0, 0, 0, 1489, 0, 1490, 1491, 1492,
	0, 0, 0, 1074, 0, 3659, 1080, 1080, 1492, 2680,
	0, 0, 0, 0, 0, 0, 2816, 0, 2439, 0,
	0, 0, 0, 3675, 0, 0, 2695, 1109, 0, 2815,
	0, 0, 0, 2814, 1492, 2918, 2921, 2922, 2923, 2919,
	0, 2920, 2924, 0, 2813, 3580, 3581, 0, 0, 0,
	0, 2812, 1492, 0, 3686, 0, 0, 0, 0, 0,
	2811, 1492, 0, 0, 0, 2805, 1492, 0, 0, 0,
	0, 0, 2804, 1489, 0, 1490, 1491, 0, 1492, 0,
	0, 0, 2803, 0, 1492, 0, 1489, 0, 1490, 1491,
	1489, 2800, 1490, 1491, 3727, 1492, 3728, 3729, 3730, 0,
	2799, 1489, 3737, 1490, 1491, 3744, 0, 3746, 1489, 0,
	1490, 1491, 0, 0, 1492, 3717, 0, 1489, 0, 1490,
	1491, 0, 1489, 0, 1490, 1491, 2798, 0, 0, 1489,
	3243, 1490, 1491, 87, 3747, 3243, 1492, 3606, 3607, 1489,
	1492, 1490, 1491, 0, 2796, 0, 0, 0, 1489, 0,
	1490, 1491, 0, 2789, 0, 0, 1492, 1489, 2786, 1490,
	1491, 1492, 0, 0, 0, 2150, 3680, 2148, 3777, 3748,
	2784, 3757, 3756, 3769, 0, 3767, 2782, 0, 0, 0,
	3764, 3766, 0, 1489, 0, 1490, 1491, 2741, 0, 3640,
	1492, 0, 0, 3644, 3645, 3646, 0, 0, 0, 0,
	3929, 1489, 0, 1490, 1491, 0, 2721, 0, 3781, 0,
	1489, 0, 1490, 1491, 0, 1489, 0, 1490, 1491, 0,
	0, 3636, 3637, 0, 0, 0, 0, 1489, 2720, 1490,
	1491, 0, 2716, 1489, 0, 1490, 1491, 0, 0, 3921,
	3920, 0, 0, 0, 1489, 0, 1490, 1491, 2714, 0,
	3948, 3936, 0, 2706, 0, 3941, 0, 3940, 0, 0,
	0, 0, 3919, 1489, 0, 1490, 1491, 0, 0, 0,
	0, 0, 0, 3987, 3988, 0, 0, 3091, 3092, 3093,
	3094, 3095, 2677, 3771, 0, 1489, 3745, 1490, 1491, 1489,
	0, 1490, 1491, 2150, 0, 2148, 3991, 3110, 0, 3778,
	3779, 0, 0, 0, 0, 1489, 0, 1490, 1491, 0,
	1489, 0, 1490, 1491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 4036, 3243,
	3994, 0, 3239, 3773, 3997, 0, 0, 0, 0, 1489,
	0, 1490, 1491, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1683, 1684, 1685, 1686,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 3242, 3992, 1060, 4037, 4011, 3242,
	3081, 4021, 4020, 0, 0, 4017, 1492, 4019, 4055, 3931,
	3932, 3933, 1492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 87, 3245, 0, 0,
	0, 0, 0, 4040, 1754, 0, 0, 4039, 0, 1762,
	0, 0, 1755, 0, 0, 3263, 0, 3924, 1762, 0,
	0, 1755, 0, 0, 4044, 0, 4057, 0, 0, 0,
	4060, 0, 0, 0, 3928, 0, 4062, 2395, 2396, 1761,
	1759, 1760, 1756, 0, 1757, 0, 1750, 1751, 1761, 1759,
	1760, 1756, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 2671, 0,
	0, 1229, 0, 1235, 2666, 0, 1758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4105, 0, 0, 4080, 0, 87,
	4081, 0, 3155, 0, 3157, 0, 0, 0, 0, 0,
	0, 4090, 0, 0, 0, 0, 0, 4099, 0, 0,
	3168, 3169, 3170, 3171, 0, 1489, 0, 1490, 1491, 0,
	1493, 1489, 4111, 1490, 1491, 1463, 0, 4136, 4122, 4109,
	4114, 3948, 4125, 3394, 4119, 4116, 4115, 4113, 4118, 4117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4041,
	0, 1551, 0, 3242, 0, 3411, 3412, 0, 3413, 3415,
	3417, 4144, 4167, 0, 0, 0, 0, 0, 0, 4157,
	0, 4149, 4162, 0, 0, 0, 0, 42, 0, 4177,
	4175, 0, 0, 0, 4136, 0, 3430, 4188, 0, 0,
	0, 3433, 0, 3435, 3436, 3437, 3439, 3440, 3441, 3442,
	3443, 3444, 3445, 3446, 3447, 3448, 3449, 3450, 3451, 3453,
	3455, 3457, 3459, 3461, 3463, 3465, 3467, 3469, 3471, 3473,
	3475, 3477, 3479, 3481, 3483, 3484, 3486, 3487, 3488, 3490,
	2028, 4192, 3492, 4208, 3494, 3495, 3496, 4211, 4218, 3500,
	3501, 3502, 3503, 3504, 3505, 3506, 3507, 3508, 3509, 3510,
	2150, 4224, 2148, 4221, 4217, 4220, 4232, 4222, 3516, 4187,
	4207, 4136, 3521, 4101, 4106, 0, 3525, 3526, 0, 3527,
	3529, 4240, 3532, 3534, 4246, 3536, 3537, 3538, 3539, 4248,
	42, 3239, 0, 0, 0, 3547, 0, 0, 0, 4046,
	0, 0, 0, 0, 0, 0, 0, 4257, 4258, 3988,
	4256, 0, 0, 0, 0, 0, 0, 0, 2150, 0,
	2148, 4255, 4053, 0, 0, 0, 0, 0, 0, 0,
	3571, 3572, 0, 4065, 3576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4183, 0, 0, 0, 0, 4191, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 0,
	0, 0, 0, 0, 3670, 0, 0, 3674, 0, 0,
	0, 0, 0, 0, 0, 0, 1875, 1815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3687, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 961, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 4205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1956, 0, 0, 0, 0, 3710, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 197, 3718, 0,
	0, 732, 0, 0, 0, 3725, 738, 1839, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 197, 0, 0,
	0, 0, 0, 0, 2033, 0, 0, 0, 0, 0,
	0, 0, 2029, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 0, 2044, 0, 0, 0, 0,
	738, 197, 738, 0, 0, 0, 2055, 2056, 2057, 2058,
	2059, 2060, 2061, 1852, 1855, 1856, 1857, 1858, 1859, 1860,
	0, 1861, 1862, 1864, 1865, 1863, 1866, 1867, 1840, 1841,
	1842, 1843, 1823, 1824, 1853, 0, 1826, 0, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 0, 0, 1836,
	1844, 1845, 1846, 1847, 0, 1848, 1849, 1850, 1851, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3937, 0, 0, 0, 0, 0,
	0, 0, 0, 3944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3954, 3955, 3956, 0, 3958, 0, 3959,
	3960, 0, 0, 0, 0, 3963, 3964, 3965, 3966, 3967,
	3968, 3969, 3970, 3971, 3972, 3973, 3974, 3975, 3976, 3977,
	3978, 3979, 3980, 3981, 3982, 3983, 3984, 3708, 3986, 3989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3998, 3999, 4000, 4001, 4002, 4004,
	4005, 4007, 4009, 4010, 4012, 0, 0, 0, 4016, 0,
	0, 0, 4018, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4045, 0, 2094,
	0, 2101, 2102, 2103, 2104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2156, 2157, 0, 0, 1854, 0, 2180, 0,
	0, 2184, 2185, 0, 0, 0, 2190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210,
	2211, 0, 2213, 0, 0, 0, 2235, 2236, 2237, 2238,
	2239, 2240, 2241, 2242, 2244, 0, 2249, 0, 2251, 2252,
	2253, 0, 2255, 2256, 2257, 0, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 4027, 0, 0, 0, 0,
	2336, 0, 2338, 0, 2345, 2346, 2347, 2348, 2349, 2350,
	0, 0, 0, 0, 4070, 0, 0, 0, 0, 0,
	0, 0, 0, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 0, 2370, 2371, 2372, 2373, 2374, 0, 4085, 0,
	0, 0, 0, 0, 4088, 0, 4089, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4104,
	0, 0, 1080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4130, 4131, 0, 0, 0,
	0, 0, 0, 0, 0, 2417, 2418, 0, 0, 4138,
	4140, 4142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 2423, 0, 0, 0, 0, 4148, 0, 0,
	2427, 2456, 2430, 0, 0, 2094, 0, 0, 0, 4170,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 153, 1726, 0, 0, 0, 4189, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 2499, 738, 0, 738, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4212, 4214, 4216, 0, 0, 0, 0, 738, 197,
	164, 0, 0, 0, 0, 0, 152, 0, 0, 4069,
	0, 0, 0, 0, 0, 0, 0, 4079, 0, 0,
	0, 0, 0, 0, 4237, 0, 171, 1537, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4249, 4250, 0, 0, 0, 0, 0, 0,
	0, 140, 141, 163, 162, 191, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2094, 0, 0, 0, 0,
	0, 0, 2589, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2610, 2611, 0, 0, 2615, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 2620,
	0, 0, 0, 0, 0, 0, 2623, 157, 138, 160,
	145, 137, 0, 158, 159, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	146, 0, 2626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 147, 142, 143, 144, 148,
	0, 0, 0, 0, 0, 0, 139, 0, 1852, 1855,
	1856, 1857, 1858, 1859, 1860, 150, 1861, 1862, 1864, 1865,
	1863, 1866, 1867, 1840, 1841, 1842, 1843, 1823, 1824, 1853,
	0, 1826, 0, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 0, 0, 1836, 1844, 1845, 1846, 1847, 0,
	1848, 1849, 1850, 1851, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 2675, 0, 0, 738, 738, 0, 0, 0, 0,
	0, 2681, 2682, 2683, 2684, 0, 0, 0, 166, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 738,
	0, 0, 197, 0, 0, 0, 1551, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 738, 0,
	738, 0, 0, 0, 161, 0, 0, 0, 738, 0,
	0, 1537, 738, 0, 0, 738, 738, 738, 738, 0,
	738, 0, 738, 738, 0, 738, 738, 738, 738, 738,
	738, 0, 0, 0, 0, 0, 0, 0, 1537, 738,
	738, 1537, 738, 1537, 197, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 738, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 0, 738, 0, 197, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 154, 0, 0, 155, 0, 0, 197,
	0, 0, 1786, 0, 0, 0, 0, 0, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 2931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2980, 0, 0, 0, 0, 0, 168, 173,
	170, 176, 177, 178, 180, 182, 183, 184, 185, 0,
	0, 0, 0, 0, 186, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3028, 3029,
	3030, 3031, 3032, 3033, 0, 0, 0, 738, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 0, 0, 2094, 3044, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3056, 0, 0, 0, 0,
	0, 0, 3052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3082, 3083, 3084, 0, 0, 3086, 0, 0,
	3088, 0, 0, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1537, 0, 0, 0, 0, 0, 0,
	3107, 3108, 3109, 0, 0, 0, 0, 0, 0, 3114,
	0, 1537, 0, 0, 3116, 0, 0, 3118, 3119, 3120,
	0, 0, 0, 3121, 3122, 0, 0, 3123, 0, 3124,
	0, 0, 0, 0, 0, 0, 3125, 0, 3126, 0,
	0, 0, 3127, 0, 3128, 0, 0, 3129, 0, 3130,
	0, 3131, 0, 3132, 0, 3133, 0, 3134, 0, 3135,
	0, 3136, 0, 3137, 0, 3138, 0, 3139, 0, 3140,
	0, 3141, 0, 3142, 0, 3143, 0, 3144, 0, 3145,
	0, 3146, 0, 0, 0, 3147, 0, 3148, 0, 3149,
	0, 0, 3150, 0, 3151, 0, 3152, 0, 2308, 3154,
	0, 0, 3156, 0, 0, 3158, 3159, 3160, 3161, 0,
	0, 0, 0, 3162, 2308, 2308, 2308, 2308, 2308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3172,
	0, 0, 0, 0, 0, 0, 0, 3185, 0, 0,
	3189, 0, 0, 0, 0, 0, 0, 2355, 0, 3192,
	3193, 3194, 3195, 3196, 3197, 0, 0, 0, 3198, 3199,
	0, 3200, 0, 3201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1080, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 197, 0, 0,
	738, 0, 0, 3264, 0, 2992, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 131, 0, 153,
	738, 0, 0, 2355, 197, 0, 197, 0, 197, 197,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3326, 0, 0, 3316, 164, 0, 0,
	0, 0, 0, 152, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1893, 0, 0, 0,
	0, 0, 3354, 171, 0, 0, 172, 0, 131, 0,
	153, 738, 0, 0, 0, 0, 3368, 0, 738, 738,
	738, 197, 0, 0, 174, 0, 0, 0, 1897, 1898,
	163, 162, 191, 0, 0, 0, 0, 3386, 0, 738,
	3389, 0, 0, 0, 0, 738, 738, 0, 0, 738,
	0, 738, 0, 0, 0, 0, 0, 738, 164, 0,
	0, 0, 0, 960, 152, 0, 0, 0, 0, 0,
	3419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 172, 0, 0,
	0, 0, 738, 0, 0, 0, 0, 738, 3434, 0,
	0, 738, 738, 0, 0, 0, 0, 0, 0, 1897,
	1898, 163, 162, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 0,
	0, 737, 0, 0, 157, 1899, 160, 0, 1896, 197,
	158, 159, 0, 0, 0, 0, 197, 175, 1028, 0,
	0, 2344, 0, 0, 1029, 0, 181, 197, 197, 0,
	0, 197, 0, 197, 2149, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 737, 0, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3549, 197, 0, 0, 0,
	0, 0, 0, 197, 0, 157, 1899, 160, 738, 1896,
	0, 158, 159, 0, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 0, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 166, 0, 0, 0, 0,
	3610, 0, 1537, 0, 2355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3632, 0, 0, 0,
	3625, 0, 3626, 3627, 3628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3676, 0, 3677,
	0, 3678, 0, 3679, 0, 0, 0, 0, 0, 0,
	0, 3682, 3683, 917, 0, 0, 0, 0, 0, 0,
	0, 3688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3689, 0, 3690, 0, 3691,
	0, 3692, 0, 3693, 0, 3694, 0, 3695, 0, 3696,
	0, 3697, 0, 3698, 0, 3699, 0, 3700, 0, 3701,
	0, 3702, 161, 3703, 0, 3704, 0, 0, 3705, 0,
	0, 0, 3706, 0, 3707, 0, 0, 0, 0, 0,
	3709, 736, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 3726, 0, 0, 0, 0, 0, 0, 0,
	0, 3731, 0, 3732, 3733, 0, 3734, 197, 3735, 0,
	0, 0, 0, 3736, 167, 197, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 1105, 738, 1112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3765, 0, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3774, 0, 0, 3776, 0, 0, 0,
	0, 154, 187, 0, 155, 0, 197, 0, 3780, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3916, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 168, 173, 170, 176, 177,
	178, 180, 182, 183, 184, 185, 0, 0, 0, 0,
	0, 186, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 0, 187, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 738, 0, 0,
	0, 0, 0, 0, 738, 0, 0, 0, 738, 738,
	0, 0, 0, 738, 0, 0, 168, 173, 170, 176,
	177, 178, 180, 182, 183, 184, 185, 0, 0, 1537,
	738, 0, 186, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 197, 197, 197, 197, 197, 197, 0, 0,
	0, 0, 0, 4026, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 197, 0, 0, 95, 0, 0, 1028, 0,
	0, 0, 0, 966, 1029, 980, 981, 982, 967, 0,
	0, 968, 969, 0, 970, 0, 197, 0, 0, 737,
	1448, 737, 737, 0, 0, 0, 0, 0, 0, 0,
	975, 0, 983, 984, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1536, 0, 0, 0, 0, 0, 0, 0,
	0, 3362, 3363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3364, 0, 0, 0,
	4068, 0, 0, 0, 0, 4066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 738,
	0, 0, 0, 0, 0, 0, 4082, 0, 0, 4083,
	0, 4084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 0, 0, 0, 0, 0, 3365, 3366, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 0, 1537, 0, 0, 738,
	738, 1537, 197, 197, 197, 197, 197, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	197, 0, 197, 0, 0, 197, 197, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4168, 0, 0, 0, 0, 0, 737,
	737, 0, 931, 0, 0, 0, 0, 0, 935, 0,
	0, 0, 932, 933, 0, 0, 0, 934, 936, 0,
	197, 0, 4184, 0, 4185, 0, 4186, 0, 0, 1293,
	0, 1293, 1293, 738, 0, 0, 1537, 0, 0, 0,
	0, 738, 0, 0, 737, 0, 197, 0, 0, 0,
	0, 0, 0, 1462, 0, 0, 0, 0, 0, 737,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 197, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4235, 0, 4236, 0,
	0, 0, 0, 737, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 1536, 737, 0, 0,
	737, 737, 737, 737, 0, 737, 0, 737, 737, 0,
	737, 737, 737, 737, 737, 737, 0, 0, 0, 0,
	0, 0, 0, 1536, 737, 737, 1536, 737, 1536, 0,
	737, 0, 0, 0, 0, 1028, 0, 0, 0, 0,
	0, 1029, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 737, 0, 0, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 197,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 918, 0, 0, 0, 0, 0, 1736,
	1737, 0, 0, 0, 197, 0, 197, 197, 197, 0,
	0, 0, 0, 0, 0, 0, 738, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 0, 0, 195,
	0, 0, 680, 0, 0, 0, 0, 0, 0, 1810,
	0, 0, 737, 737, 0, 738, 738, 738, 738, 0,
	1869, 0, 680, 0, 0, 0, 0, 737, 0, 0,
	1878, 0, 0, 0, 0, 0, 0, 0, 1056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1105, 0, 1905, 0, 1081, 1081, 0,
	0, 0, 0, 1914, 0, 0, 680, 1916, 0, 0,
	1919, 1920, 1922, 1922, 0, 1922, 0, 1922, 1922, 0,
	1931, 1922, 1922, 1922, 1922, 1922, 0, 0, 737, 0,
	0, 0, 0, 0, 1951, 1952, 0, 1105, 1536, 0,
	1957, 0, 0, 0, 0, 0, 0, 2158, 0, 0,
	0, 0, 0, 0, 0, 0, 1536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1999, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2021, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 738, 0, 197, 0, 0, 0,
	0, 0, 1293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1537, 0, 0, 0, 197,
	0, 0, 738, 0, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 738, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 737, 0, 0, 737, 0,
	0, 0, 1293, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 738, 2082, 737, 0,
	0, 0, 0, 738, 0, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 737, 0, 2144, 0,
	0, 0, 0, 737, 737, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 737, 0, 0, 0, 0, 0,
	737, 737, 0, 0, 737, 0, 737, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 737, 0, 0,
	0, 0, 737, 0, 0, 0, 737, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 738, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 0, 680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 2392, 0, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1537, 738, 0, 738, 0, 0,
	0, 0, 0, 0, 680, 2405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 738, 2355, 0, 1792, 0, 0, 1293, 0,
	0, 0, 1538, 0, 0, 0, 0, 1536, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 1105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 1112, 0, 0, 0,
	0, 0, 0, 2520, 2521, 2522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 738, 0,
	0, 0, 0, 197, 1105, 0, 0, 0, 0, 0,
	1112, 1914, 0, 0, 1914, 0, 1914, 738, 0, 738,
	0, 0, 2553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1105, 0, 0,
	0, 0, 2144, 0, 0, 0, 2144, 2144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 0, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2631, 0, 0, 0, 0, 1056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2944, 0, 0, 0, 0, 680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1293,
	0, 0, 0, 0, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1538, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 737, 737, 0, 0, 0, 737, 0,
	0, 0, 0, 1538, 0, 0, 1538, 0, 1538, 680,
	0, 0, 0, 0, 1536, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 680, 0, 0,
	0, 0, 0, 0, 680, 0, 0, 0, 0, 0,
	0, 0, 0, 2053, 2054, 680, 680, 680, 680, 680,
	680, 680, 0, 0, 0, 0, 0, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 680, 0,
	0, 0, 0, 0, 0, 2976, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2405, 737, 0, 0, 0, 0, 0, 3000,
	0, 0, 0, 1914, 1914, 0, 0, 737, 3005, 0,
	0, 1536, 0, 0, 737, 737, 1536, 0, 1538, 0,
	0, 0, 0, 0, 0, 3016, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 0,
	0, 1536, 0, 0, 0, 0, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3393,
	0, 0, 0, 0, 0, 0, 0, 2144, 0, 0,
	0, 0, 2027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1056, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 680, 0, 0, 0, 0, 0, 737, 2027, 680,
	0, 680, 3174, 680, 2446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1922, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1293, 0, 0,
	0, 0, 0, 0, 3246, 1922, 2523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 737, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1105, 0,
	0, 0, 0, 0, 0, 0, 2405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 737, 737, 737, 680, 0, 0, 0, 0, 0,
	0, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 680, 0, 0, 680, 0, 2617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 680, 0,
	0, 0, 0, 0, 0, 680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 680, 0, 0, 0, 0, 0, 0, 2628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1538, 0, 2027,
	0, 0, 0, 0, 0, 0, 0, 737, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1536, 0, 0, 0, 0, 0, 0, 737, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2405, 2405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3664, 3665, 3666, 3667, 0, 0, 0, 0, 0, 0,
	0, 737, 0, 0, 0, 0, 0, 0, 737, 0,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 0, 0, 0,
	1973, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 680, 0, 0, 0, 0, 680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3742, 0, 3742,
	0, 680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 3770, 0, 3772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 1538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 680, 680, 680,
	680, 680, 680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2405, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 680, 0, 0,
	0, 0, 0, 3939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1293, 0, 0, 737,
	0, 680, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1536,
	737, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 737, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3742, 0, 0, 0, 0, 0, 0, 3742, 0,
	3742, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 737, 0, 737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1081, 2405,
	680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1538, 0, 0, 0, 0, 1538, 680, 680, 680,
	680, 680, 0, 2405, 0, 0, 0, 0, 0, 3262,
	0, 0, 0, 0, 0, 1973, 0, 680, 0, 0,
	680, 3270, 2027, 0, 0, 0, 0, 3802, 3804, 3803,
	3869, 3870, 3871, 3872, 3873, 3874, 3875, 3805, 3806, 808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 0, 0, 0, 4086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4094,
	0, 1538, 0, 0, 0, 0, 0, 0, 0, 0,
	2405, 680, 4102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1293, 1293, 0,
	0, 0, 0, 0, 0, 0, 680, 0, 0, 680,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 4152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3818, 3819, 0, 0,
	3894, 3893, 3892, 0, 680, 3890, 3891, 3889, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 3895, 931, 0, 784, 785, 3896, 3897, 935, 3898,
	787, 788, 932, 933, 0, 782, 786, 934, 936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	0, 680, 680, 680, 3799, 3800, 3801, 3807, 3808, 3809,
	3820, 3867, 3868, 3876, 3878, 887, 3877, 3879, 3880, 3881,
	3884, 3885, 3886, 3887, 3882, 3883, 3888, 3782, 3786, 3783,
	3784, 3785, 3797, 3787, 3788, 3789, 3790, 3791, 3792, 3793,
	3794, 3795, 3796, 3798, 3899, 3900, 3901, 3902, 3903, 3904,
	3813, 3817, 3816, 3814, 3815, 3811, 3812, 3839, 3838, 3840,
	3841, 3842, 3843, 3844, 3845, 3847, 3846, 3848, 3849, 3850,
	3851, 3852, 3853, 3821, 3822, 3825, 3826, 3824, 3823, 3827,
	3836, 3837, 3828, 3829, 3830, 3831, 3832, 3833, 3835, 3834,
	3854, 3855, 3856, 3857, 3858, 3860, 3859, 3863, 3864, 3862,
	3861, 3866, 3865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 937, 0, 938, 0,
	0, 942, 0, 0, 0, 944, 943, 0, 945, 907,
	906, 0, 0, 939, 940, 0, 941, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3905, 3906, 3907, 3908, 3909, 3910, 3911, 3912, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1538, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 1431, 1415,
	531, 0, 1357, 1434, 1325, 1344, 1444, 1347, 1350, 1394,
	1303, 1372, 419, 1341, 1329, 1298, 1336, 1299, 1327, 1359,
	273, 1324, 1417, 1376, 1433, 369, 270, 1305, 1296, 206,
	508, 1330, 433, 1346, 205, 1396, 490, 255, 380, 377,
	586, 285, 276, 272, 252, 320, 388, 431, 521, 425,
	1440, 373, 1382, 0, 500, 404, 0, 0, 2027, 1421,
	1420, 1351, 1361, 1423, 1370, 1408, 1356, 1395, 1313, 1381,
	1435, 1342, 1391, 1436, 326, 250, 328, 204, 416, 501,
	289, 0, 0, 0, 0, 4126, 510, 962, 0, 0,
	0, 0, 4127, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 354, 363, 362, 342, 343, 345,
	347, 353, 360, 366, 339, 348, 1338, 1388, 612, 1430,
	1339, 1390, 268, 324, 275, 267, 583, 1441, 1422, 1302,
	1369, 1429, 1364, 599, 0, 0, 231, 1432, 1363, 0,
	1393, 0, 1447, 1297, 1384, 0, 1300, 1304, 1443, 1427,
	1333, 278, 0, 0, 0, 0, 0, 0, 0, 1360,
	1371, 1405, 1409, 1354, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 1380, 0, 0, 0, 1309, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 0, 1312, 0, 1332,
	1406, 0, 1295, 300, 1306, 405, 260, 0, 456, 1413,
	1426, 1355, 632, 1428, 1353, 1352, 1400, 1310, 1419, 1345,
	368, 1308, 333, 199, 227, 0, 1343, 415, 464, 476,
	1418, 1328, 1337, 256, 1335, 474, 429, 607, 235, 287,
	461, 435, 472, 443, 290, 1379, 1398, 473, 375, 588,
	453, 604, 633, 634, 266, 409, 618, 525, 626, 651,
	228, 263, 423, 509, 610, 497, 400, 584, 585, 332,
	496, 298, 203, 372, 639, 226, 482, 374, 244, 233,
	590, 615, 302, 254, 292, 459, 646, 215, 520, 601,
	241, 486, 0, 0, 654, 249, 507, 613, 602, 217,
	597, 506, 396, 329, 330, 216, 0, 460, 271, 296,
	0, 0, 261, 418, 592, 593, 259, 655, 230, 625,
	222, 1307, 624, 411, 587, 598, 397, 386, 221, 596,
	395, 385, 337, 358, 359, 283, 310, 450, 378, 451,
	309, 311, 407, 406, 408, 209, 611, 629, 0, 210,
	0, 502, 614, 656, 455, 214, 236, 237, 239, 1323,
	282, 286, 294, 297, 306, 307, 316, 370, 422, 449,
	445, 454, 1414, 582, 605, 619, 631, 637, 638, 640,
	641, 642, 643, 644, 647, 645, 410, 314, 498, 336,
	376, 1403, 1446, 428, 475, 242, 609, 499, 201, 1317,
	1322, 1315, 0, 257, 258, 1385, 578, 1318, 1316, 1374,
	1375, 1319, 1437, 1438, 1439, 1424, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 652, 511, 517, 512, 513, 514,
	515, 516, 0, 518, 1407, 1311, 0, 1320, 1321, 401,
	1416, 594, 595, 675, 387, 489, 606, 338, 352, 355,
	344, 364, 0, 365, 340, 341, 346, 349, 350, 351,
	356, 357, 361, 367, 251, 212, 393, 402, 581, 315,
	218, 219, 220, 527, 528, 529, 530, 622, 623, 627,
	207, 465, 466, 467, 468, 295, 617, 312, 471, 470,
	334, 335, 382, 452, 543, 545, 556, 560, 562, 564,
	570, 573, 544, 546, 557, 561, 563, 565, 571, 574,
	533, 535, 537, 539, 552, 551, 548, 576, 577, 554,
	559, 538, 550, 555, 568, 575, 572, 532, 536, 540,
	549, 567, 566, 547, 558, 569, 553, 541, 534, 542,
	1378, 198, 223, 371, 1442, 457, 291, 653, 621, 487,
	616, 208, 225, 1314, 265, 1326, 1334, 0, 1340, 1348,
	1349, 1362, 1365, 1366, 1367, 1368, 1386, 1387, 1389, 1397,
	1399, 1402, 1404, 1411, 1425, 1445, 200, 202, 211, 224,
	234, 238, 245, 264, 279, 281, 288, 301, 313, 321,
	322, 325, 331, 383, 389, 390, 391, 392, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	439, 440, 442, 444, 446, 458, 463, 477, 478, 479,
	480, 481, 484, 485, 491, 492, 493, 494, 495, 503,
	504, 519, 589, 591, 608, 628, 635, 483, 304, 305,
	447, 448, 317, 318, 649, 650, 303, 603, 636, 600,
	648, 630, 441, 381, 1377, 1383, 384, 284, 308, 323,
	1392, 620, 505, 229, 469, 293, 253, 1410, 1412, 213,
	248, 232, 262, 277, 280, 327, 394, 403, 432, 437,
	299, 274, 246, 462, 243, 488, 522, 523, 524, 526,
	398, 269, 436, 1373, 1401, 379, 579, 580, 319, 399,
	0, 0, 0, 0, 0, 0, 1431, 1415, 531, 0,
	1357, 1434, 1325, 1344, 1444, 1347, 1350, 1394, 1303, 1372,
	419, 1341, 1329, 1298, 1336, 1299, 1327, 1359, 273, 1324,
	1417, 1376, 1433, 369, 270, 1305, 1296, 206, 508, 1330,
	433, 1346, 205, 1396, 490, 255, 380, 377, 586, 285,
	276, 272, 252, 320, 388, 431, 521, 425, 1440, 373,
	1382, 0, 500, 404, 0, 0, 0, 1421, 1420, 1351,
	1361, 1423, 1370, 1408, 1356, 1395, 1313, 1381, 1435, 1342,
	1391, 1436, 326, 250, 328, 204, 416, 501, 289, 0,
	0, 0, 0, 0, 510, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 354, 363, 362, 342, 343, 345, 347, 353,
	360, 366, 339, 348, 1338, 1388, 612, 1430, 1339, 1390,
	268, 324, 275, 267, 583, 1441, 1422, 1302, 1369, 1429,
	1364, 599, 0, 0, 231, 1432, 1363, 0, 1393, 0,
	1447, 1297, 1384, 0, 1300, 1304, 1443, 1427, 1333, 278,
	0, 0, 0, 0, 0, 0, 0, 1360, 1371, 1405,
	1409, 1354, 0, 0, 0, 0, 0, 0, 3271, 0,
	1331, 0, 1380, 0, 0, 0, 1309, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 0, 0, 0, 1312, 0, 1332, 1406, 0,
	1295, 300, 1306, 405, 260, 0, 456, 1413, 1426, 1355,
	632, 1428, 1353, 1352, 1400, 1310, 1419, 1345, 368, 1308,
	333, 199, 227, 0, 1343, 415, 464, 476, 1418, 1328,
	1337, 256, 1335, 474, 429, 607, 235, 287, 461, 435,
	472, 443, 290, 1379, 1398, 473, 375, 588, 453, 604,
	633, 634, 266, 409, 618, 525, 626, 651, 228, 263,
	423, 509, 610, 497, 400, 584, 585, 332, 496, 298,
	203, 372, 639, 226, 482, 374, 244, 233, 590, 615,
	302, 254, 292, 459, 646, 215, 520, 601, 241, 486,
	0, 0, 654, 249, 507, 613, 602, 217, 597, 506,
	396, 329, 330, 216, 0, 460, 271, 296, 0, 0,
	261, 418, 592, 593, 259, 655, 230, 625, 222, 1307,
	624, 411, 587, 598, 397, 386, 221, 596, 395, 385,
	337, 358, 359, 283, 310, 450, 378, 451, 309, 311,
	407, 406, 408, 209, 611, 629, 0, 210, 0, 502,
	614, 656, 455, 214, 236, 237, 239, 1323, 282, 286,
	294, 297, 306, 307, 316, 370, 422, 449, 445, 454,
	1414, 582, 605, 619, 631, 637, 638, 640, 641, 642,
	643, 644, 647, 645, 410, 314, 498, 336, 376, 1403,
	1446, 428, 475, 242, 609, 499, 201, 1317, 1322, 1315,
	0, 257, 258, 1385, 578, 1318, 1316, 1374, 1375, 1319,
	1437, 1438, 1439, 1424, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 652, 511, 517, 512, 513, 514, 515, 516,
	0, 518, 1407, 1311, 0, 1320, 1321, 401, 1416, 594,
	595, 675, 387, 489, 606, 338, 352, 355, 344, 364,
	0, 365, 340, 341, 346, 349, 350, 351, 356, 357,
	361, 367, 251, 212, 393, 402, 581, 315, 218, 219,
	220, 527, 528, 529, 530, 622, 623, 627, 207, 465,
	466, 467, 468, 295, 617, 312, 471, 470, 334, 335,
	382, 452, 543, 545, 556, 560, 562, 564, 570, 573,
	544, 546, 557, 561, 563, 565, 571, 574, 533, 535,
	537, 539, 552, 551, 548, 576, 577, 554, 559, 538,
	550, 555, 568, 575, 572, 532, 536, 540, 549, 567,
	566, 547, 558, 569, 553, 541, 534, 542, 1378, 198,
	223, 371, 1442, 457, 291, 653, 621, 487, 616, 208,
	225, 1314, 265, 1326, 1334, 0, 1340, 1348, 1349, 1362,
	1365, 1366, 1367, 1368, 1386, 1387, 1389, 1397, 1399, 1402,
	1404, 1411, 1425, 1445, 200, 202, 211, 224, 234, 238,
	245, 264, 279, 281, 288, 301, 313, 321, 322, 325,
	331, 383, 389, 390, 391, 392, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 439, 440,
	442, 444, 446, 458, 463, 477, 478, 479, 480, 481,
	484, 485, 491, 492, 493, 494, 495, 503, 504, 519,
	589, 591, 608, 628, 635, 483, 304, 305, 447, 448,
	317, 318, 649, 650, 303, 603, 636, 600, 648, 630,
	441, 381, 1377, 1383, 384, 284, 308, 323, 1392, 620,
	505, 229, 469, 293, 253, 1410, 1412, 213, 248, 232,
	262, 277, 280, 327, 394, 403, 432, 437, 299, 274,
	246, 462, 243, 488, 522, 523, 524, 526, 398, 269,
	436, 1373, 1401, 379, 579, 580, 319, 399, 0, 0,
	0, 0, 0, 0, 1431, 1415, 531, 0, 1357, 1434,
	1325, 1344, 1444, 1347, 1350, 1394, 1303, 1372, 419, 1341,
	1329, 1298, 1336, 1299, 1327, 1359, 273, 1324, 1417, 1376,
	1433, 369, 270, 1305, 1296, 206, 508, 1330, 433, 1346,
	205, 1396, 490, 255, 380, 377, 586, 285, 276, 272,
	252, 320, 388, 431, 521, 425, 1440, 373, 1382, 0,
	500, 404, 0, 0, 0, 1421, 1420, 1351, 1361, 1423,
	1370, 1408, 1356, 1395, 1313, 1381, 1435, 1342, 1391, 1436,
	326, 250, 328, 204, 416, 501, 289, 0, 0, 0,
	0, 0, 510, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	354, 363, 362, 342, 343, 345, 347, 353, 360, 366,
	339, 348, 1338, 1388, 612, 1430, 1339, 1390, 268, 324,
	275, 267, 583, 1441, 1422, 1302, 1369, 1429, 1364, 599,
	0, 0, 231, 1432, 1363, 0, 1393, 0, 1447, 1297,
	1384, 0, 1300, 1304, 1443, 1427, 1333, 278, 0, 0,
	0, 0, 0, 0, 0, 1360, 1371, 1405, 1409, 1354,
	0, 0, 0, 0, 0, 0, 3232, 0, 1331, 0,
	1380, 0, 0, 0, 1309, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1358, 0,
	0, 0, 0, 1312, 0, 1332, 1406, 0, 1295, 300,
	1306, 405, 260, 0, 456, 1413, 1426, 1355, 632, 1428,
	1353, 1352, 1400, 1310, 1419, 1345, 368, 1308, 333, 199,
	227, 0, 1343, 415, 464, 476, 1418, 1328, 1337, 256,
	1335, 474, 429, 607, 235, 287, 461, 435, 472, 443,
	290, 1379, 1398, 473, 375, 588, 453, 604, 633, 634,
	266, 409, 618, 525, 626, 651, 228, 263, 423, 509,
	610, 497, 400, 584, 585, 332, 496, 298, 203, 372,
	639, 226, 482, 374, 244, 233, 590, 615, 302, 254,
	292, 459, 646, 215, 520, 601, 241, 486, 0, 0,
	654, 249, 507, 613, 602, 217, 597, 506, 396, 329,
	330, 216, 0, 460, 271, 296, 0, 0, 261, 418,
	592, 593, 259, 655, 230, 625, 222, 1307, 624, 411,
	587, 598, 397, 386, 221, 596, 395, 385, 337, 358,
	359, 283, 310, 450, 378, 451, 309, 311, 407, 406,
	408, 209, 611, 629, 0, 210, 0, 502, 614, 656,
	455, 214, 236, 237, 239, 1323, 282, 286, 294, 297,
	306, 307, 316, 370, 422, 449, 445, 454, 1414, 582,
	605, 619, 631, 637, 638, 640, 641, 642, 643, 644,
	647, 645, 410, 314, 498, 336, 376, 1403, 1446, 428,
	475, 242, 609, 499, 201, 1317, 1322, 1315, 0, 257,
	258, 1385, 578, 1318, 1316, 1374, 1375, 1319, 1437, 1438,
	1439, 1424, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	652, 511, 517, 512, 513, 514, 515, 516, 0, 518,
	1407, 1311, 0, 1320, 1321, 401, 1416, 594, 595, 675,
	387, 489, 606, 338, 352, 355, 344, 364, 0, 365,
	340, 341, 346, 349, 350, 351, 356, 357, 361, 367,
	251, 212, 393, 402, 581, 315, 218, 219, 220, 527,
	528, 529, 530, 622, 623, 627, 207, 465, 466, 467,
	468, 295, 617, 312, 471, 470, 334, 335, 382, 452,
	543, 545, 556, 560, 562, 564, 570, 573, 544, 546,
	557, 561, 563, 565, 571, 574, 533, 535, 537, 539,
	552, 551, 548, 576, 577, 554, 559, 538, 550, 555,
	568, 575, 572, 532, 536, 540, 549, 567, 566, 547,
	558, 569, 553, 541, 534, 542, 1378, 198, 223, 371,
	1442, 457, 291, 653, 621, 487, 616, 208, 225, 1314,
	265, 1326, 1334, 0, 1340, 1348, 1349, 1362, 1365, 1366,
	1367, 1368, 1386, 1387, 1389, 1397, 1399, 1402, 1404, 1411,
	1425, 1445, 200, 202, 211, 224, 234, 238, 245, 264,
	279, 281, 288, 301, 313, 321, 322, 325, 331, 383,
	389, 390, 391, 392, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 439, 440, 442, 444,
	446, 458, 463, 477, 478, 479, 480, 481, 484, 485,
	491, 492, 493, 494, 495, 503, 504, 519, 589, 591,
	608, 628, 635, 483, 304, 305, 447, 448, 317, 318,
	649, 650, 303, 603, 636, 600, 648, 630, 441, 381,
	1377, 1383, 384, 284, 308, 323, 1392, 620, 505, 229,
	469, 293, 253, 1410, 1412, 213, 248, 232, 262, 277,
	280, 327, 394, 403, 432, 437, 299, 274, 246, 462,
	243, 488, 522, 523, 524, 526, 398, 269, 436, 1373,
	1401, 379, 579, 580, 319, 399, 0, 0, 0, 0,
	0, 0, 1431, 1415, 531, 0, 1357, 1434, 1325, 1344,
	1444, 1347, 1350, 1394, 1303, 1372, 419, 1341, 1329, 1298,
	1336, 1299, 1327, 1359, 273, 1324, 1417, 1376, 1433, 369,
	270, 1305, 1296, 206, 508, 1330, 433, 1346, 205, 1396,
	490, 255, 380, 377, 586, 285, 276, 272, 252, 320,
	388, 431, 521, 425, 1440, 373, 1382, 0, 500, 404,
	0, 0, 0, 1421, 1420, 1351, 1361, 1423, 1370, 1408,
	1356, 1395, 1313, 1381, 1435, 1342, 1391, 1436, 326, 250,
	328, 204, 416, 501, 289, 0, 0, 0, 0, 0,
	510, 962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 354, 363,
	362, 342, 343, 345, 347, 353, 360, 366, 339, 348,
	1338, 1388, 612, 1430, 1339, 1390, 268, 324, 275, 267,
	583, 1441, 1422, 1302, 1369, 1429, 1364, 599, 0, 0,
	231, 1432, 1363, 0, 1393, 0, 1447, 1297, 1384, 0,
	1300, 1304, 1443, 1427, 1333, 278, 0, 0, 0, 0,
	0, 0, 0, 1360, 1371, 1405, 1409, 1354, 0, 0,
	0, 0, 0, 0, 2425, 0, 1331, 0, 1380, 0,
	0, 0, 1309, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1358, 0, 0, 0,
	0, 1312, 0, 1332, 1406, 0, 1295, 300, 1306, 405,
	260, 0, 456, 1413, 1426, 1355, 632, 1428, 1353, 1352,
	1400, 1310, 1419, 1345, 368, 1308, 333, 199, 227, 0,
	1343, 415, 464, 476, 1418, 1328, 1337, 256, 1335, 474,
	429, 607, 235, 287, 461, 435, 472, 443, 290, 1379,
	1398, 473, 375, 588, 453, 604, 633, 634, 266, 409,
	618, 525, 626, 651, 228, 263, 423, 509, 610, 497,
	400, 584, 585, 332, 496, 298, 203, 372, 639, 226,
	482, 374, 244, 233, 590, 615, 302, 254, 292, 459,
	646, 215, 520, 601, 241, 486, 0, 0, 654, 249,
	507, 613, 602, 217, 597, 506, 396, 329, 330, 216,
	0, 460, 271, 296, 0, 0, 261, 418, 592, 593,
	259, 655, 230, 625, 222, 1307, 624, 411, 587, 598,
	397, 386, 221, 596, 395, 385, 337, 358, 359, 283,
	310, 450, 378, 451, 309, 311, 407, 406, 408, 209,
	611, 629, 0, 210, 0, 502, 614, 656, 455, 214,
	236, 237, 239, 1323, 282, 286, 294, 297, 306, 307,
	316, 370, 422, 449, 445, 454, 1414, 582, 605, 619,
	631, 637, 638, 640, 641, 642, 643, 644, 647, 645,
	410, 314, 498, 336, 376, 1403, 1446, 428, 475, 242,
	609, 499, 201, 1317, 1322, 1315, 0, 257, 258, 1385,
	578, 1318, 1316, 1374, 1375, 1319, 1437, 1438, 1439, 1424,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 652, 511,
	517, 512, 513, 514, 515, 516, 0, 518, 1407, 1311,
	0, 1320, 1321, 401, 1416, 594, 595, 675, 387, 489,
	606, 338, 352, 355, 344, 364, 0, 365, 340, 341,
	346, 349, 350, 351, 356, 357, 361, 367, 251, 212,
	393, 402, 581, 315, 218, 219, 220, 527, 528, 529,
	530, 622, 623, 627, 207, 465, 466, 467, 468, 295,
	617, 312, 471, 470, 334, 335, 382, 452, 543, 545,
	556, 560, 562, 564, 570, 573, 544, 546, 557, 561,
	563, 565, 571, 574, 533, 535, 537, 539, 552, 551,
	548, 576, 577, 554, 559, 538, 550, 555, 568, 575,
	572, 532, 536, 540, 549, 567, 566, 547, 558, 569,
	553, 541, 534, 542, 1378, 198, 223, 371, 1442, 457,
	291, 653, 621, 487, 616, 208, 225, 1314, 265, 1326,
	1334, 0, 1340, 1348, 1349, 1362, 1365, 1366, 1367, 1368,
	1386, 1387, 1389, 1397, 1399, 1402, 1404, 1411, 1425, 1445,
	200, 202, 211, 224, 234, 238, 245, 264, 279, 281,
	288, 301, 313, 321, 322, 325, 331, 383, 389, 390,
	391, 392, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 439, 440, 442, 444, 446, 458,
	463, 477, 478, 479, 480, 481, 484, 485, 491, 492,
	493, 494, 495, 503, 504, 519, 589, 591, 608, 628,
	635, 483, 304, 305, 447, 448, 317, 318, 649, 650,
	303, 603, 636, 600, 648, 630, 441, 381, 1377, 1383,
	384, 284, 308, 323, 1392, 620, 505, 229, 469, 293,
	253, 1410, 1412, 213, 248, 232, 262, 277, 280, 327,
	394, 403, 432, 437, 299, 274, 246, 462, 243, 488,
	522, 523, 524, 526, 398, 269, 436, 1373, 1401, 379,
	579, 580, 319, 399, 0, 0, 0, 0, 0, 0,
	1431, 1415, 531, 0, 1357, 1434, 1325, 1344, 1444, 1347,
	1350, 1394, 1303, 1372, 419, 1341, 1329, 1298, 1336, 1299,
	1327, 1359, 273, 1324, 1417, 1376, 1433, 369, 270, 1305,
	1296, 206, 508, 1330, 433, 1346, 205, 1396, 490, 255,
	380, 377, 586, 285, 276, 272, 252, 320, 388, 431,
	521, 425, 1440, 373, 1382, 0, 500, 404, 0, 0,
	0, 1421, 1420, 1351, 1361, 1423, 1370, 1408, 1356, 1395,
	1313, 1381, 1435, 1342, 1391, 1436, 326, 250, 328, 204,
	416, 501, 289, 0, 95, 0, 0, 0, 510, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 354, 363, 362, 342,
	343, 345, 347, 353, 360, 366, 339, 348, 1338, 1388,
	612, 1430, 1339, 1390, 268, 324, 275, 267, 583, 1441,
	1422, 1302, 1369, 1429, 1364, 599, 0, 0, 231, 1432,
	1363, 0, 1393, 0, 1447, 1297, 1384, 0, 1300, 1304,
	1443, 1427, 1333, 278, 0, 0, 0, 0, 0, 0,
	0, 1360, 1371, 1405, 1409, 1354, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 1380, 0, 0, 0,
	1309, 1301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 0, 1312,
	0, 1332, 1406, 0, 1295, 300, 1306, 405, 260, 0,
	456, 1413, 1426, 1355, 632, 1428, 1353, 1352, 1400, 1310,
	1419, 1345, 368, 1308, 333, 199, 227, 0, 1343, 415,
	464, 476, 1418, 1328, 1337, 256, 1335, 474, 429, 607,
	235, 287, 461, 435, 472, 443, 290, 1379, 1398, 473,
	375, 588, 453, 604, 633, 634, 266, 409, 618, 525,
	626, 651, 228, 263, 423, 509, 610, 497, 400, 584,
	585, 332, 496, 298, 203, 372, 639, 226, 482, 374,
	244, 233, 590, 615, 302, 254, 292, 459, 646, 215,
	520, 601, 241, 486, 0, 0, 654, 249, 507, 613,
	602, 217, 597, 506, 396, 329, 330, 216, 0, 460,
	271, 296, 0, 0, 261, 418, 592, 593, 259, 655,
	230, 625, 222, 1307, 624, 411, 587, 598, 397, 386,
	221, 596, 395, 385, 337, 358, 359, 283, 310, 450,
	378, 451, 309, 311, 407, 406, 408, 209, 611, 629,
	0, 210, 0, 502, 614, 656, 455, 214, 236, 237,
	239, 1323, 282, 286, 294, 297, 306, 307, 316, 370,
	422, 449, 445, 454, 1414, 582, 605, 619, 631, 637,
	638, 640, 641, 642, 643, 644, 647, 645, 410, 314,
	498, 336, 376, 1403, 1446, 428, 475, 242, 609, 499,
	201, 1317, 1322, 1315, 0, 257, 258, 1385, 578, 1318,
	1316, 1374, 1375, 1319, 1437, 1438, 1439, 1424, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 652, 511, 517, 512,
	513, 514, 515, 516, 0, 518, 1407, 1311, 0, 1320,
	1321, 401, 1416, 594, 595, 675, 387, 489, 606, 338,
	352, 355, 344, 364, 0, 365, 340, 341, 346, 349,
	350, 351, 356, 357, 361, 367, 251, 212, 393, 402,
	581, 315, 218, 219, 220, 527, 528, 529, 530, 622,
	623, 627, 207, 465, 466, 467, 468, 295, 617, 312,
	471, 470, 334, 335, 382, 452, 543, 545, 556, 560,
	562, 564, 570, 573, 544, 546, 557, 561, 563, 565,
	571, 574, 533, 535, 537, 539, 552, 551, 548, 576,
	577, 554, 559, 538, 550, 555, 568, 575, 572, 532,
	536, 540, 549, 567, 566, 547, 558, 569, 553, 541,
	534, 542, 1378, 198, 223, 371, 1442, 457, 291, 653,
	621, 487, 616, 208, 225, 1314, 265, 1326, 1334, 0,
	1340, 1348, 1349, 1362, 1365, 1366, 1367, 1368, 1386, 1387,
	1389, 1397, 1399, 1402, 1404, 1411, 1425, 1445, 200, 202,
	211, 224, 234, 238, 245, 264, 279, 281, 288, 301,
	313, 321, 322, 325, 331, 383, 389, 390, 391, 392,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 439, 440, 442, 444, 446, 458, 463, 477,
	478, 479, 480, 481, 484, 485, 491, 492, 493, 494,
	495, 503, 504, 519, 589, 591, 608, 628, 635, 483,
	304, 305, 447, 448, 317, 318, 649, 650, 303, 603,
	636, 600, 648, 630, 441, 381, 1377, 1383, 384, 284,
	308, 323, 1392, 620, 505, 229, 469, 293, 253, 1410,
	1412, 213, 248, 232, 262, 277, 280, 327, 394, 403,
	432, 437, 299, 274, 246, 462, 243, 488, 522, 523,
	524, 526, 398, 269, 436, 1373, 1401, 379, 579, 580,
	319, 399, 0, 0, 0, 0, 0, 0, 1431, 1415,
	531, 0, 1357, 1434, 1325, 1344, 1444, 1347, 1350, 1394,
	1303, 1372, 419, 1341, 1329, 1298, 1336, 1299, 1327, 1359,
	273, 1324, 1417, 1376, 1433, 369, 270, 1305, 1296, 206,
	508, 1330, 433, 1346, 205, 1396, 490, 255, 380, 377,
	586, 285, 276, 272, 252, 320, 388, 431, 521, 425,
	1440, 373, 1382, 0, 500, 404, 0, 0, 0, 1421,
	1420, 1351, 1361, 1423, 1370, 1408, 1356, 1395, 1313, 1381,
	1435, 1342, 1391, 1436, 326, 250, 328, 204, 416, 501,
	289, 0, 0, 0, 0, 0, 510, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 354, 363, 362, 342, 343, 345,
	347, 353, 360, 366, 339, 348, 1338, 1388, 612, 1430,
	1339, 1390, 268, 324, 275, 267, 583, 1441, 1422, 1302,
	1369, 1429, 1364, 599, 0, 0, 231, 1432, 1363, 0,
	1393, 0, 1447, 1297, 1384, 0, 1300, 1304, 1443, 1427,
	1333, 278, 0, 0, 0, 0, 0, 0, 0, 1360,
	1371, 1405, 1409, 1354, 0, 0, 0, 0, 0, 0,
	0, 0, 1331, 0, 1380, 0, 0, 0, 1309, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 0, 1312, 0, 1332,
	1406, 0, 1295, 300, 1306, 405, 260, 0, 456, 1413,
	1426, 1355, 632, 1428, 1353, 1352, 1400, 1310, 1419, 1345,
	368, 1308, 333, 199, 227, 0, 1343, 415, 464, 476,
	1418, 1328, 1337, 256, 1335, 474, 429, 607, 235, 287,
	461, 435, 472, 443, 290, 1379, 1398, 473, 375, 588,
	453, 604, 633, 634, 266, 409, 618, 525, 626, 651,
	228, 263, 423, 509, 610, 497, 400, 584, 585, 332,
	496, 298, 203, 372, 639, 226, 482, 374, 244, 233,
	590, 615, 302, 254, 292, 459, 646, 215, 520, 601,
	241, 486, 0, 0, 654, 249, 507, 613, 602, 217,
	597, 506, 396, 329, 330, 216, 0, 460, 271, 296,
	0, 0, 261, 418, 592, 593, 259, 655, 230, 625,
	222, 1307, 624, 411, 587, 598, 397, 386, 221, 596,
	395, 385, 337, 358, 359, 283, 310, 450, 378, 451,
	309, 311, 407, 406, 408, 209, 611, 629, 0, 210,
	0, 502, 614, 656, 455, 214, 236, 237, 239, 1323,
	282, 286, 294, 297, 306, 307, 316, 370, 422, 449,
	445, 454, 1414, 582, 605, 619, 631, 637, 638, 640,
	641, 642, 643, 644, 647, 645, 410, 314, 498, 336,
	376, 1403, 1446, 428, 475, 242, 609, 499, 201, 1317,
	1322, 1315, 0, 257, 258, 1385, 578, 1318, 1316, 1374,
	1375, 1319, 1437, 1438, 1439, 1424, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 652, 511, 517, 512, 513, 514,
	515, 516, 0, 518, 1407, 1311, 0, 1320, 1321, 401,
	1416, 594, 595, 675, 387, 489, 606, 338, 352, 355,
	344, 364, 0, 365, 340, 341, 346, 349, 350, 351,
	356, 357, 361, 367, 251, 212, 393, 402, 581, 315,
	218, 219, 220, 527, 528, 529, 530, 622, 623, 627,
	207, 465, 466, 467, 468, 295, 617, 312, 471, 470,
	334, 335, 382, 452, 543, 545, 556, 560, 562, 564,
	570, 573, 544, 546, 557, 561, 563, 565, 571, 574,
	533, 535, 537, 539, 552, 551, 548, 576, 577, 554,
	559, 538, 550, 555, 568, 575, 572, 532, 536, 540,
	549, 567, 566, 547, 558, 569, 553, 541, 534, 542,
	1378, 198, 223, 371, 1442, 457, 291, 653, 621, 487,
	616, 208, 225, 1314, 265, 1326, 1334, 0, 1340, 1348,
	1349, 1362, 1365, 1366, 1367, 1368, 1386, 1387, 1389, 1397,
	1399, 1402, 1404, 1411, 1425, 1445, 200, 202, 211, 224,
	234, 238, 245, 264, 279, 281, 288, 301, 313, 321,
	322, 325, 331, 383, 389, 390, 391, 392, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	439, 440, 442, 444, 446, 458, 463, 477, 478, 479,
	480, 481, 484, 485, 491, 492, 493, 494, 495, 503,
	504, 519, 589, 591, 608, 628, 635, 483, 304, 305,
	447, 448, 317, 318, 649, 650, 303, 603, 636, 600,
	648, 630, 441, 381, 1377, 1383, 384, 284, 308, 323,
	1392, 620, 505, 229, 469, 293, 253, 1410, 1412, 213,
	248, 232, 262, 277, 280, 327, 394, 403, 432, 437,
	299, 274, 246, 462, 243, 488, 522, 523, 524, 526,
	398, 269, 436, 1373, 1401, 379, 579, 580, 319, 399,
	0, 0, 0, 0, 0, 0, 1431, 1415, 531, 0,
	1357, 1434, 1325, 1344, 1444, 1347, 1350, 1394, 1303, 1372,
	419, 1341, 1329, 1298, 1336, 1299, 1327, 1359, 273, 1324,
	1417, 1376, 1433, 369, 270, 1305, 1296, 206, 508, 1330,
	433, 1346, 205, 1396, 490, 255, 380, 377, 586, 285,
	276, 272, 252, 320, 388, 431, 521, 425, 1440, 373,
	1382, 0, 500, 404, 0, 0, 0, 1421, 1420, 1351,
	1361, 1423, 1370, 1408, 1356, 1395, 1313, 1381, 1435, 1342,
	1391, 1436, 326, 250, 328, 204, 416, 501, 289, 0,
	0, 0, 0, 0, 510, 727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 354, 363, 362, 342, 343, 345, 347, 353,
	360, 366, 339, 348, 1338, 1388, 612, 1430, 1339, 1390,
	268, 324, 275, 267, 583, 1441, 1422, 1302, 1369, 1429,
	1364, 599, 0, 0, 231, 1432, 1363, 0, 1393, 0,
	1447, 1297, 1384, 0, 1300, 1304, 1443, 1427, 1333, 278,
	0, 0, 0, 0, 0, 0, 0, 1360, 1371, 1405,
	1409, 1354, 0, 0, 0, 0, 0, 0, 0, 0,
	1331, 0, 1380, 0, 0, 0, 1309, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 0, 0, 0, 1312, 0, 1332, 1406, 0,
	1295, 300, 1306, 405, 260, 0, 456, 1413, 1426, 1355,
	632, 1428, 1353, 1352, 1400, 1310, 1419, 1345, 368, 1308,
	333, 199, 227, 0, 1343, 415, 464, 476, 1418, 1328,
	1337, 256, 1335, 474, 429, 607, 235, 287, 461, 435,
	472, 443, 290, 1379, 1398, 473, 375, 588, 453, 604,
	633, 634, 266, 409, 618, 525, 626, 651, 228, 263,
	423, 509, 610, 497, 400, 584, 585, 332, 496, 298,
	203, 372, 639, 226, 482, 374, 244, 233, 590, 615,
	302, 254, 292, 459, 646, 215, 520, 601, 241, 486,
	0, 0, 654, 249, 507, 613, 602, 217, 597, 506,
	396, 329, 330, 216, 0, 460, 271, 296, 0, 0,
	261, 418, 592, 593, 259, 655, 230, 625, 222, 1307,
	624, 411, 587, 598, 397, 386, 221, 596, 395, 385,
	337, 358, 359, 283, 310, 450, 378, 451, 309, 311,
	407, 406, 408, 209, 611, 629, 0, 210, 0, 502,
	614, 656, 455, 214, 236, 237, 239, 1323, 282, 286,
	294, 297, 306, 307, 316, 370, 422, 449, 445, 454,
	1414, 582, 605, 619, 631, 637, 638, 640, 641, 642,
	643, 644, 647, 645, 410, 314, 498, 336, 376, 1403,
	1446, 428, 475, 242, 609, 499, 201, 1317, 1322, 1315,
	0, 257, 258, 1385, 578, 1318, 1316, 1374, 1375, 1319,
	1437, 1438, 1439, 1424, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 652, 511, 517, 512, 513, 514, 515, 516,
	0, 518, 1407, 1311, 0, 1320, 1321, 401, 1416, 594,
	595, 675, 387, 489, 606, 338, 352, 355, 344, 364,
	0, 365, 340, 341, 346, 349, 350, 351, 356, 357,
	361, 367, 251, 212, 393, 402, 581, 315, 218, 219,
	220, 527, 528, 529, 530, 622, 623, 627, 207, 465,
	466, 467, 468, 295, 617, 312, 471, 470, 334, 335,
	382, 452, 543, 545, 556, 560, 562, 564, 570, 573,
	544, 546, 557, 561, 563, 565, 571, 574, 533, 535,
	537, 539, 552, 551, 548, 576, 577, 554, 559, 538,
	550, 555, 568, 575, 572, 532, 536, 540, 549, 567,
	566, 547, 558, 569, 553, 541, 534, 542, 1378, 198,
	223, 371, 1442, 457, 291, 653, 621, 487, 616, 208,
	225, 1314, 265, 1326, 1334, 0, 1340, 1348, 1349, 1362,
	1365, 1366, 1367, 1368, 1386, 1387, 1389, 1397, 1399, 1402,
	1404, 1411, 1425, 1445, 200, 202, 211, 224, 234, 238,
	245, 264, 279, 281, 288, 301, 313, 321, 322, 325,
	331, 383, 389, 390, 391, 392, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 439, 440,
	442, 444, 446, 458, 463, 477, 478, 479, 480, 481,
	484, 485, 491, 492, 493, 494, 495, 503, 504, 519,
	589, 591, 608, 628, 635, 483, 304, 305, 447, 448,
	317, 318, 649, 650, 303, 603, 636, 600, 648, 630,
	441, 381, 1377, 1383, 384, 284, 308, 323, 1392, 620,
	505, 229, 469, 293, 253, 1410, 1412, 213, 248, 232,
	262, 277, 280, 327, 394, 403, 432, 437, 299, 274,
	246, 462, 243, 488, 522, 523, 524, 526, 398, 269,
	436, 1373, 1401, 379, 579, 580, 319, 399, 0, 0,
	0, 0, 0, 0, 1431, 1415, 531, 0, 1357, 1434,
	1325, 1344, 1444, 1347, 1350, 1394, 1303, 1372, 419, 1341,
	1329, 1298, 1336, 1299, 1327, 1359, 273, 1324, 1417, 1376,
	1433, 369, 270, 1305, 1296, 206, 508, 1330, 433, 1346,
	205, 1396, 490, 255, 380, 377, 586, 285, 276, 272,
	252, 320, 388, 431, 521, 425, 1440, 373, 1382, 0,
	500, 404, 0, 0, 0, 1421, 1420, 1351, 1361, 1423,
	1370, 1408, 1356, 1395, 1313, 1381, 1435, 1342, 1391, 1436,
	326, 250, 328, 204, 416, 501, 289, 0, 0, 0,
	0, 0, 510, 962, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	354, 363, 362, 342, 343, 345, 347, 353, 360, 366,
	339, 348, 1338, 1388, 612, 1430, 1339, 1390, 268, 324,
	275, 267, 583, 1441, 1422, 1302, 1369, 1429, 1364, 599,
	0, 0, 231, 1432, 1363, 0, 1393, 0, 1447, 1297,
	1384, 0, 1300, 1304, 1443, 1427, 1333, 278, 0, 0,
	0, 0, 0, 0, 0, 1360, 1371, 1405, 1409, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 1331, 0,
	1380, 0, 0, 0, 1309, 1301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1358, 0,
	0, 0, 0, 1312, 0, 1332, 1406, 0, 1295, 300,
	1306, 405, 260, 0, 456, 1413, 1426, 1355, 632, 1428,
	1353, 1352, 1400, 1310, 1419, 1345, 368, 1308, 333, 199,
	227, 0, 1343, 415, 464, 476, 1418, 1328, 1337, 256,
	1335, 474, 429, 607, 235, 287, 461, 435, 472, 443,
	290, 1379, 1398, 473, 375, 588, 453, 604, 633, 634,
	266, 409, 618, 525, 626, 651, 228, 263, 423, 509,
	610, 497, 400, 584, 585, 332, 496, 298, 203, 372,
	639, 226, 482, 374, 244, 233, 590, 615, 302, 254,
	292, 459, 646, 215, 520, 601, 241, 486, 0, 0,
	654, 249, 507, 613, 602, 217, 597, 506, 396, 329,
	330, 216, 0, 460, 271, 296, 0, 0, 261, 418,
	592, 593, 259, 655, 230, 625, 222, 1307, 624, 411,
	587, 598, 397, 386, 221, 596, 395, 385, 337, 358,
	359, 283, 310, 450, 378, 451, 309, 311, 407, 406,
	408, 209, 611, 629, 0, 210, 0, 502, 614, 656,
	455, 214, 236, 237, 239, 1323, 282, 286, 294, 297,
	306, 307, 316, 370, 422, 449, 445, 454, 1414, 582,
	605, 619, 631, 637, 638, 640, 641, 642, 643, 644,
	647, 645, 410, 314, 498, 336, 376, 1403, 1446, 428,
	475, 242, 609, 499, 201, 1317, 1322, 1315, 0, 257,
	258, 1385, 578, 1318, 1316, 1374, 1375, 1319, 1437, 1438,
	1439, 1424, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	652, 511, 517, 512, 513, 514, 515, 516, 0, 518,
	1407, 1311, 0, 1320, 1321, 401, 1416, 594, 595, 675,
	387, 489, 606, 338, 352, 355, 344, 364, 0, 365,
	340, 341, 346, 349, 350, 351, 356, 357, 361, 367,
	251, 212, 393, 402, 581, 315, 218, 219, 220, 527,
	528, 529, 530, 622, 623, 627, 207, 465, 466, 467,
	468, 295, 617, 312, 471, 470, 334, 335, 382, 452,
	543, 545, 556, 560, 562, 564, 570, 573, 544, 546,
	557, 561, 563, 565, 571, 574, 533, 535, 537, 539,
	552, 551, 548, 576, 577, 554, 559, 538, 550, 555,
	568, 575, 572, 532, 536, 540, 549, 567, 566, 547,
	558, 569, 553, 541, 534, 542, 1378, 198, 223, 371,
	1442, 457, 291, 653, 621, 487, 616, 208, 225, 1314,
	265, 1326, 1334, 0, 1340, 1348, 1349, 1362, 1365, 1366,
	1367, 1368, 1386, 1387, 1389, 1397, 1399, 1402, 1404, 1411,
	1425, 1445, 200, 202, 211, 224, 234, 238, 245, 264,
	279, 281, 288, 301, 313, 321, 322, 325, 331, 383,
	389, 390, 391, 392, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 439, 440, 442, 444,
	446, 458, 463, 477, 478, 479, 480, 481, 484, 485,
	491, 492, 493, 494, 495, 503, 504, 519, 589, 591,
	608, 628, 635, 483, 304, 305, 447, 448, 317, 318,
	649, 650, 303, 603, 636, 600, 648, 630, 441, 381,
	1377, 1383, 384, 284, 308, 323, 1392, 620, 505, 229,
	469, 293, 253, 1410, 1412, 213, 248, 232, 262, 277,
	280, 327, 394, 403, 432, 437, 299, 274, 246, 462,
	243, 488, 522, 523, 524, 526, 398, 269, 436, 1373,
	1401, 379, 579, 580, 319, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 0, 780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	767, 0, 0, 0, 273, 772, 0, 0, 0, 369,
	270, 0, 0, 206, 508, 0, 433, 0, 205, 0,
	490, 255, 380, 377, 586, 285, 276, 272, 252, 320,
	388, 431, 521, 425, 779, 373, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 774, 775,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 250,
	328, 204, 416, 501, 289, 0, 95, 0, 0, 1028,
	510, 962, 751, 928, 966, 1029, 980, 981, 982, 967,
	0, 240, 968, 969, 247, 970, 0, 927, 810, 812,
	811, 877, 878, 879, 880, 881, 882, 883, 813, 814,
	808, 975, 612, 983, 984, 0, 268, 324, 275, 267,
	583, 0, 0, 2245, 2246, 2247, 0, 599, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 747, 764,
	0, 778, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 761, 762, 0, 0, 0, 0, 922, 0,
	763, 0, 0, 771, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 405,
	260, 0, 456, 921, 0, 0, 632, 0, 0, 919,
	0, 0, 0, 0, 368, 0, 333, 199, 227, 0,
	0, 415, 464, 476, 0, 0, 0, 972, 0, 474,
	429, 607, 235, 287, 461, 435, 472, 443, 290, 0,
	0, 473, 375, 588, 453, 604, 633, 634, 266, 409,
	618, 525, 626, 651, 228, 263, 423, 509, 610, 497,
	400, 584, 585, 332, 496, 298, 203, 372, 639, 226,
	482, 374, 244, 233, 590, 615, 302, 254, 292, 459,
	646, 215, 520, 601, 241, 486, 0, 0, 654, 249,
	507, 613, 602, 217, 597, 506, 396, 329, 330, 216,
	0, 460, 271, 296, 0, 0, 261, 418, 973, 974,
	259, 655, 818, 625, 222, 0, 624, 411, 587, 598,
	397, 386, 221, 596, 395, 385, 337, 826, 827, 283,
	310, 903, 902, 901, 309, 311, 899, 900, 898, 209,
	611, 629, 0, 210, 0, 502, 614, 656, 455, 214,
	236, 237, 239, 0, 282, 286, 294, 297, 306, 307,
	316, 370, 422, 449, 445, 454, 0, 582, 605, 619,
	631, 637, 638, 640, 641, 642, 643, 644, 647, 645,
	410, 314, 498, 336, 376, 0, 0, 428, 475, 242,
	609, 499, 909, 931, 920, 784, 785, 910, 911, 935,
	912, 787, 788, 932, 933, 781, 782, 786, 934, 936,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 652, 511,
	517, 512, 513, 514, 515, 516, 0, 518, 923, 770,
	769, 0, 776, 777, 0, 806, 807, 809, 815, 816,
	817, 828, 875, 876, 884, 886, 887, 885, 888, 889,
	890, 893, 894, 895, 896, 891, 892, 897, 789, 793,
	790, 791, 792, 804, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 803, 805, 946, 947, 948, 949, 950,
	951, 821, 825, 824, 822, 823, 819, 820, 847, 846,
	848, 849, 850, 851, 852, 853, 855, 854, 856, 857,
	858, 859, 860, 861, 829, 830, 833, 834, 832, 831,
	835, 844, 845, 836, 837, 838, 839, 840, 841, 843,
	842, 862, 863, 864, 865, 866, 868, 867, 871, 872,
	870, 869, 874, 873, 768, 198, 223, 371, 0, 457,
	291, 653, 621, 487, 616, 208, 225, 937, 265, 938,
	0, 0, 942, 0, 0, 0, 944, 943, 0, 945,
	907, 906, 0, 0, 939, 940, 0, 941, 0, 0,
	200, 202, 211, 224, 234, 238, 245, 264, 279, 281,
	288, 301, 313, 321, 322, 325, 331, 383, 389, 390,
	391, 392, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 439, 440, 442, 444, 446, 458,
	463, 477, 478, 479, 480, 481, 484, 485, 491, 492,
	493, 494, 495, 503, 504, 519, 589, 591, 608, 628,
	635, 483, 952, 953, 954, 955, 956, 957, 958, 959,
	303, 603, 636, 600, 648, 630, 441, 381, 0, 0,
	384, 284, 308, 323, 0, 620, 505, 229, 469, 293,
	253, 1027, 0, 213, 248, 232, 262, 277, 280, 327,
	394, 403, 432, 437, 299, 274, 246, 462, 243, 488,
	522, 523, 524, 526, 398, 269, 436, 399, 0, 379,
	579, 580, 319, 0, 0, 0, 531, 0, 780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 767, 0, 0, 0, 273, 772, 0, 0,
	0, 369, 270, 0, 0, 206, 508, 0, 433, 0,
	205, 0, 490, 255, 380, 377, 586, 285, 276, 272,
	252, 320, 388, 431, 521, 425, 779, 373, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	774, 775, 0, 0, 0, 0, 0, 0, 2454, 0,
	326, 250, 328, 204, 416, 501, 289, 0, 95, 0,
	0, 1028, 510, 962, 751, 928, 966, 1029, 980, 981,
	982, 967, 0, 240, 968, 969, 247, 970, 0, 927,
	810, 812, 811, 877, 878, 879, 880, 881, 882, 883,
	813, 814, 808, 975, 612, 983, 984, 2455, 268, 324,
	275, 267, 583, 0, 0, 0, 0, 0, 0, 599,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	747, 764, 0, 778, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 762, 0, 0, 0, 0,
	922, 0, 763, 0, 0, 771, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 405, 260, 0, 456, 921, 0, 0, 632, 0,
	0, 919, 0, 0, 0, 0, 368, 0, 333, 199,
	227, 0, 0, 415, 464, 476, 0, 0, 0, 972,
	0, 474, 429, 607, 235, 287, 461, 435, 472, 443,
	290, 0, 0, 473, 375, 588, 453, 604, 633, 634,
	266, 409, 618, 525, 626, 651, 228, 263, 423, 509,
	610, 497, 400, 584, 585, 332, 496, 298, 203, 372,
	639, 226, 482, 374, 244, 233, 590, 615, 302, 254,
	292, 459, 646, 215, 520, 601, 241, 486, 0, 0,
	654, 249, 507, 613, 602, 217, 597, 506, 396, 329,
	330, 216, 0, 460, 271, 296, 0, 0, 261, 418,
	973, 974, 259, 655, 818, 625, 222, 0, 624, 411,
	587, 598, 397, 386, 221, 596, 395, 385, 337, 826,
	827, 283, 310, 903, 902, 901, 309, 311, 899, 900,
	898, 209, 611, 629, 0, 210, 0, 502, 614, 656,
	455, 214, 236, 237, 239, 0, 282, 286, 294, 297,
	306, 307, 316, 370, 422, 449, 445, 454, 0, 582,
	605, 619, 631, 637, 638, 640, 641, 642, 643, 644,
	647, 645, 410, 314, 498, 336, 376, 0, 0, 428,
	475, 242, 609, 499, 909, 931, 920, 784, 785, 910,
	911, 935, 912, 787, 788, 932, 933, 781, 782, 786,
	934, 936, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	652, 511, 517, 512, 513, 514, 515, 516, 0, 518,
	923, 770, 769, 0, 776, 777, 0, 806, 807, 809,
	815, 816, 817, 828, 875, 876, 884, 886, 887, 885,
	888, 889, 890, 893, 894, 895, 896, 891, 892, 897,
	789, 793, 790, 791, 792, 804, 794, 795, 796, 797,
	798, 799, 800, 801, 802, 803, 805, 946, 947, 948,
	949, 950, 951, 821, 825, 824, 822, 823, 819, 820,
	847, 846, 848, 849, 850, 851, 852, 853, 855, 854,
	856, 857, 858, 859, 860, 861, 829, 830, 833, 834,
	832, 831, 835, 844, 845, 836, 837, 838, 839, 840,
	841, 843, 842, 862, 863, 864, 865, 866, 868, 867,
	871, 872, 870, 869, 874, 873, 768, 198, 223, 371,
	0, 457, 291, 653, 621, 487, 616, 208, 225, 937,
	265, 938, 0, 0, 942, 0, 0, 0, 944, 943,
	0, 945, 907, 906, 0, 0, 939, 940, 0, 941,
	0, 0, 200, 202, 211, 224, 234, 238, 245, 264,
	279, 281, 288, 301, 313, 321, 322, 325, 331, 383,
	389, 390, 391, 392, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 439, 440, 442, 444,
	446, 458, 463, 477, 478, 479, 480, 481, 484, 485,
	491, 492, 493, 494, 495, 503, 504, 519, 589, 591,
	608, 628, 635, 483, 952, 953, 954, 955, 956, 957,
	958, 959, 303, 603, 636, 600, 648, 630, 441, 381,
	0, 0, 384, 284, 308, 323, 0, 620, 505, 229,
	469, 293, 253, 1027, 0, 213, 248, 232, 262, 277,
	280, 327, 394, 403, 432, 437, 299, 274, 246, 462,
	243, 488, 522, 523, 524, 526, 398, 269, 436, 399,
	0, 379, 579, 580, 319, 0, 0, 86, 531, 0,
	780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 767, 0, 0, 0, 273, 772,
	0, 0, 0, 369, 270, 0, 0, 206, 508, 0,
	433, 0, 205, 0, 490, 255, 380, 377, 586, 285,
	276, 272, 252, 320, 388, 431, 521, 425, 1727, 373,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 774, 775, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 250, 328, 204, 416, 501, 289, 0,
	95, 0, 0, 1028, 510, 962, 751, 928, 966, 1029,
	980, 981, 982, 967, 0, 240, 968, 969, 247, 970,
	0, 927, 810, 812, 811, 877, 878, 879, 880, 881,
	882, 883, 813, 814, 808, 975, 612, 983, 984, 0,
	268, 324, 275, 267, 583, 0, 0, 0, 0, 0,
	0, 599, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 747, 764, 0, 778, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 761, 762, 0, 0,
	0, 0, 922, 0, 763, 0, 0, 771, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 405, 260, 0, 456, 921, 0, 0,
	632, 0, 0, 919, 0, 0, 0, 0, 368, 0,
	333, 199, 227, 0, 0, 415, 464, 476, 0, 0,
	0, 972, 0, 474, 429, 607, 235, 287, 461, 435,
	472, 443, 290, 0, 0, 473, 375, 588, 453, 604,
	633, 634, 266, 409, 618, 525, 626, 651, 228, 263,
	423, 509, 610, 497, 400, 584, 585, 332, 496, 298,
	203, 372, 639, 226, 482, 374, 244, 233, 590, 615,
	302, 254, 292, 459, 646, 215, 520, 601, 241, 486,
	0, 0, 654, 249, 507, 613, 602, 217, 597, 506,
	396, 329, 330, 216, 0, 460, 271, 296, 0, 0,
	261, 418, 973, 974, 259, 655, 818, 625, 222, 0,
	624, 411, 587, 598, 397, 386, 221, 596, 395, 385,
	337, 826, 827, 283, 310, 903, 902, 901, 309, 311,
	899, 900, 898, 209, 611, 629, 0, 210, 0, 502,
	614, 656, 455, 214, 236, 237, 239, 0, 282, 286,
	294, 297, 306, 307, 316, 370, 422, 449, 445, 454,
	0, 582, 605, 619, 631, 637, 638, 640, 641, 642,
	643, 644, 647, 645, 410, 314, 498, 336, 376, 0,
	0, 428, 475, 242, 609, 499, 909, 931, 920, 784,
	785, 910, 911, 935, 912, 787, 788, 932, 933, 781,
	782, 786, 934, 936, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 652, 511, 517, 512, 513, 514, 515, 516,
	0, 518, 923, 770, 769, 0, 776, 777, 0, 806,
	807, 809, 815, 816, 817, 828, 875, 876, 884, 886,
	887, 885, 888, 889, 890, 893, 894, 895, 896, 891,
	892, 897, 789, 793, 790, 791, 792, 804, 794, 795,
	796, 797, 798, 799, 800, 801, 802, 803, 805, 946,
	947, 948, 949, 950, 951, 821, 825, 824, 822, 823,
	819, 820, 847, 846, 848, 849, 850, 851, 852, 853,
	855, 854, 856, 857, 858, 859, 860, 861, 829, 830,
	833, 834, 832, 831, 835, 844, 845, 836, 837, 838,
	839, 840, 841, 843, 842, 862, 863, 864, 865, 866,
	868, 867, 871, 872, 870, 869, 874, 873, 768, 198,
	223, 371, 94, 457, 291, 653, 621, 487, 616, 208,
	225, 937, 265, 938, 0, 0, 942, 0, 0, 0,
	944, 943, 0, 945, 907, 906, 0, 0, 939, 940,
	0, 941, 0, 0, 200, 202, 211, 224, 234, 238,
	245, 264, 279, 281, 288, 301, 313, 321, 322, 325,
	331, 383, 389, 390, 391, 392, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 439, 440,
	442, 444, 446, 458, 463, 477, 478, 479, 480, 481,
	484, 485, 491, 492, 493, 494, 495, 503, 504, 519,
	589, 591, 608, 628, 635, 483, 952, 953, 954, 955,
	956, 957, 958, 959, 303, 603, 636, 600, 648, 630,
	441, 381, 0, 0, 384, 284, 308, 323, 0, 620,
	505, 229, 469, 293, 253, 1027, 0, 213, 248, 232,
	262, 277, 280, 327, 394, 403, 432, 437, 299, 274,
	246, 462, 243, 488, 522, 523, 524, 526, 398, 269,
	436, 399, 0, 379, 579, 580, 319, 0, 0, 0,
	531, 0, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 767, 0, 0, 0,
	273, 772, 0, 0, 0, 369, 270, 0, 0, 206,
	508, 0, 433, 0, 205, 0, 490, 255, 380, 377,
	586, 285, 276, 272, 252, 320, 388, 431, 521, 425,
	779, 373, 0, 0, 500, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 774, 775, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 250, 328, 204, 416, 501,
	289, 0, 95, 0, 0, 1028, 510, 962, 751, 928,
	966, 1029, 980, 981, 982, 967, 0, 240, 968, 969,
	247, 970, 0, 927, 810, 812, 811, 877, 878, 879,
	880, 881, 882, 883, 813, 814, 808, 975, 612, 983,
	984, 0, 268, 324, 275, 267, 583, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 747, 764, 0, 778, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 762,
	0, 0, 0, 0, 922, 0, 763, 0, 0, 771,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 405, 260, 0, 456, 921,
	0, 0, 632, 0, 0, 919, 0, 0, 0, 0,
	368, 0, 333, 199, 227, 0, 0, 415, 464, 476,
	0, 0, 0, 972, 0, 474, 429, 607, 235, 287,
	461, 435, 472, 443, 290, 4112, 0, 473, 375, 588,
	453, 604, 633, 634, 266, 409, 618, 525, 626, 651,
	228, 263, 423, 509, 610, 497, 400, 584, 585, 332,
	496, 298, 203, 372, 639, 226, 482, 374, 244, 233,
	590, 615, 302, 254, 292, 459, 646, 215, 520, 601,
	241, 486, 0, 0, 654, 249, 507, 613, 602, 217,
	597, 506, 396, 329, 330, 216, 0, 460, 271, 296,
	0, 0, 261, 418, 973, 974, 259, 655, 818, 625,
	222, 0, 624, 411, 587, 598, 397, 386, 221, 596,
	395, 385, 337, 826, 827, 283, 310, 903, 902, 901,
	309, 311, 899, 900, 898, 209, 611, 629, 0, 210,
	0, 502, 614, 656, 455, 214, 236, 237, 239, 0,
	282, 286, 294, 297, 306, 307, 316, 370, 422, 449,
	445, 454, 0, 582, 605, 619, 631, 637, 638, 640,
	641, 642, 643, 644, 647, 645, 410, 314, 498, 336,
	376, 0, 0, 428, 475, 242, 609, 499, 909, 931,
	920, 784, 785, 910, 911, 935, 912, 787, 788, 932,
	933, 781, 782, 786, 934, 936, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 652, 511, 517, 512, 513, 514,
	515, 516, 0, 518, 923, 770, 769, 0, 776, 777,
	0, 806, 807, 809, 815, 816, 817, 828, 875, 876,
	884, 886, 887, 885, 888, 889, 890, 893, 894, 895,
	896, 891, 892, 897, 789, 793, 790, 791, 792, 804,
	794, 795, 796, 797, 798, 799, 800, 801, 802, 803,
	805, 946, 947, 948, 949, 950, 951, 821, 825, 824,
	822, 823, 819, 820, 847, 846, 848, 849, 850, 851,
	852, 853, 855, 854, 856, 857, 858, 859, 860, 861,
	829, 830, 833, 834, 832, 831, 835, 844, 845, 836,
	837, 838, 839, 840, 841, 843, 842, 862, 863, 864,
	865, 866, 868, 867, 871, 872, 870, 869, 874, 873,
	768, 198, 223, 371, 0, 457, 291, 653, 621, 487,
	616, 208, 225, 937, 265, 938, 0, 0, 942, 0,
	0, 0, 944, 943, 0, 945, 907, 906, 0, 0,
	939, 940, 0, 941, 0, 0, 200, 202, 211, 224,
	234, 238, 245, 264, 279, 281, 288, 301, 313, 321,
	322, 325, 331, 383, 389, 390, 391, 392, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	439, 440, 442, 444, 446, 458, 463, 477, 478, 479,
	480, 481, 484, 485, 491, 492, 493, 494, 495, 503,
	504, 519, 589, 591, 608, 628, 635, 483, 952, 953,
	954, 955, 956, 957, 958, 959, 303, 603, 636, 600,
	648, 630, 441, 381, 0, 0, 384, 284, 308, 323,
	0, 620, 505, 229, 469, 293, 253, 1027, 0, 213,
	248, 232, 262, 277, 280, 327, 394, 403, 432, 437,
	299, 274, 246, 462, 243, 488, 522, 523, 524, 526,
	398, 269, 436, 399, 0, 379, 579, 580, 319, 0,
	0, 0, 531, 0, 780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 767, 0,
	0, 0, 273, 772, 0, 0, 0, 369, 270, 0,
	0, 206, 508, 0, 433, 0, 205, 0, 490, 255,
	380, 377, 586, 285, 276, 272, 252, 320, 388, 431,
	521, 425, 779, 373, 0, 0, 500, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 774, 775, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 250, 328, 204,
	416, 501, 289, 0, 95, 0, 1764, 1028, 510, 962,
	751, 928, 966, 1029, 980, 981, 982, 967, 0, 240,
	968, 969, 247, 970, 0, 927, 810, 812, 811, 877,
	878, 879, 880, 881, 882, 883, 813, 814, 808, 975,
	612, 983, 984, 0, 268, 324, 275, 267, 583, 0,
	0, 0, 0, 0, 0, 599, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 747, 764, 0, 778,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	761, 762, 0, 0, 0, 0, 922, 0, 763, 0,
	0, 771, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 405, 260, 0,
	456, 921, 0, 0, 632, 0, 0, 919, 0, 0,
	0, 0, 368, 0, 333, 199, 227, 0, 0, 415,
	464, 476, 0, 0, 0, 972, 0, 474, 429, 607,
	235, 287, 461, 435, 472, 443, 290, 0, 0, 473,
	375, 588, 453, 604, 633, 634, 266, 409, 618, 525,
	626, 651, 228, 263, 423, 509, 610, 497, 400, 584,
	585, 332, 496, 298, 203, 372, 639, 226, 482, 374,
	244, 233, 590, 615, 302, 254, 292, 459, 646, 215,
	520, 601, 241, 486, 0, 0, 654, 249, 507, 613,
	602, 217, 597, 506, 396, 329, 330, 216, 0, 460,
	271, 296, 0, 0, 261, 418, 973, 974, 259, 655,
	818, 625, 222, 0, 624, 411, 587, 598, 397, 386,
	221, 596, 395, 385, 337, 826, 827, 283, 310, 903,
	902, 901, 309, 311, 899, 900, 898, 209, 611, 629,
	0, 210, 0, 502, 614, 656, 455, 214, 236, 237,
	239, 0, 282, 286, 294, 297, 306, 307, 316, 370,
	422, 449, 445, 454, 0, 582, 605, 619, 631, 637,
	638, 640, 641, 642, 643, 644, 647, 645, 410, 314,
	498, 336, 376, 0, 0, 428, 475, 242, 609, 499,
	909, 931, 920, 784, 785, 910, 911, 935, 912, 787,
	788, 932, 933, 781, 782, 786, 934, 936, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 652, 511, 517, 512,
	513, 514, 515, 516, 0, 518, 923, 770, 769, 0,
	776, 777, 0, 806, 807, 809, 815, 816, 817, 828,
	875, 876, 884, 886, 887, 885, 888, 889, 890, 893,
	894, 895, 896, 891, 892, 897, 789, 793, 790, 791,
	792, 804, 794, 795, 796, 797, 798, 799, 800, 801,
	802, 803, 805, 946, 947, 948, 949, 950, 951, 821,
	825, 824, 822, 823, 819, 820, 847, 846, 848, 849,
	850, 851, 852, 853, 855, 854, 856, 857, 858, 859,
	860, 861, 829, 830, 833, 834, 832, 831, 835, 844,
	845, 836, 837, 838, 839, 840, 841, 843, 842, 862,
	863, 864, 865, 866, 868, 867, 871, 872, 870, 869,
	874, 873, 768, 198, 223, 371, 0, 457, 291, 653,
	621, 487, 616, 208, 225, 937, 265, 938, 0, 0,
	942, 0, 0, 0, 944, 943, 0, 945, 907, 906,
	0, 0, 939, 940, 0, 941, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 264, 279, 281, 288, 301,
	313, 321, 322, 325, 331, 383, 389, 390, 391, 392,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 439, 440, 442, 444, 446, 458, 463, 477,
	478, 479, 480, 481, 484, 485, 491, 492, 493, 494,
	495, 503, 504, 519, 589, 591, 608, 628, 635, 483,
	952, 953, 954, 955, 956, 957, 958, 959, 303, 603,
	636, 600, 648, 630, 441, 381, 0, 0, 384, 284,
	308, 323, 0, 620, 505, 229, 469, 293, 253, 1027,
	0, 213, 248, 232, 262, 277, 280, 327, 394, 403,
	432, 437, 299, 274, 246, 462, 243, 488, 522, 523,
	524, 526, 398, 269, 436, 399, 0, 379, 579, 580,
	319, 0, 0, 0, 531, 0, 780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	767, 0, 0, 0, 273, 772, 0, 0, 0, 369,
	270, 0, 0, 206, 508, 0, 433, 0, 205, 0,
	490, 255, 380, 377, 586, 285, 276, 272, 252, 320,
	388, 431, 521, 425, 779, 373, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 774, 775,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 250,
	328, 204, 416, 501, 289, 0, 95, 0, 0, 1028,
	510, 962, 751, 928, 966, 1029, 980, 981, 982, 967,
	0, 240, 968, 969, 247, 970, 0, 927, 810, 812,
	811, 877, 878, 879, 880, 881, 882, 883, 813, 814,
	808, 975, 612, 983, 984, 0, 268, 324, 275, 267,
	583, 0, 0, 0, 0, 0, 0, 599, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 747, 764,
	0, 778, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 761, 762, 1079, 0, 0, 0, 922, 0,
	763, 0, 0, 771, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 405,
	260, 0, 456, 921, 0, 0, 632, 0, 0, 919,
	0, 0, 0, 0, 368, 0, 333, 199, 227, 0,
	0, 415, 464, 476, 0, 0, 0, 972, 0, 474,
	429, 607, 235, 287, 461, 435, 472, 443, 290, 0,
	0, 473, 375, 588, 453, 604, 633, 634, 266, 409,
	618, 525, 626, 651, 228, 263, 423, 509, 610, 497,
	400, 584, 585, 332, 496, 298, 203, 372, 639, 226,
	482, 374, 244, 233, 590, 615, 302, 254, 292, 459,
	646, 215, 520, 601, 241, 486, 0, 0, 654, 249,
	507, 613, 602, 217, 597, 506, 396, 329, 330, 216,
	0, 460, 271, 296, 0, 0, 261, 418, 973, 974,
	259, 655, 818, 625, 222, 0, 624, 411, 587, 598,
	397, 386, 221, 596, 395, 385, 337, 826, 827, 283,
	310, 903, 902, 901, 309, 311, 899, 900, 898, 209,
	611, 629, 0, 210, 0, 502, 614, 656, 455, 214,
	236, 237, 239, 0, 282, 286, 294, 297, 306, 307,
	316, 370, 422, 449, 445, 454, 0, 582, 605, 619,
	631, 637, 638, 640, 641, 642, 643, 644, 647, 645,
	410, 314, 498, 336, 376, 0, 0, 428, 475, 242,
	609, 499, 909, 931, 920, 784, 785, 910, 911, 935,
	912, 787, 788, 932, 933, 781, 782, 786, 934, 936,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 652, 511,
	517, 512, 513, 514, 515, 516, 0, 518, 923, 770,
	769, 0, 776, 777, 0, 806, 807, 809, 815, 816,
	817, 828, 875, 876, 884, 886, 887, 885, 888, 889,
	890, 893, 894, 895, 896, 891, 892, 897, 789, 793,
	790, 791, 792, 804, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 803, 805, 946, 947, 948, 949, 950,
	951, 821, 825, 824, 822, 823, 819, 820, 847, 846,
	848, 849, 850, 851, 852, 853, 855, 854, 856, 857,
	858, 859, 860, 861, 829, 830, 833, 834, 832, 831,
	835, 844, 845, 836, 837, 838, 839, 840, 841, 843,
	842, 862, 863, 864, 865, 866, 868, 867, 871, 872,
	870, 869, 874, 873, 768, 198, 223, 371, 0, 457,
	291, 653, 621, 487, 616, 208, 225, 937, 265, 938,
	0, 0, 942, 0, 0, 0, 944, 943, 0, 945,
	907, 906, 0, 0, 939, 940, 0, 941, 0, 0,
	200, 202, 211, 224, 234, 238, 245, 264, 279, 281,
	288, 301, 313, 321, 322, 325, 331, 383, 389, 390,
	391, 392, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 439, 440, 442, 444, 446, 458,
	463, 477, 478, 479, 480, 481, 484, 485, 491, 492,
	493, 494, 495, 503, 504, 519, 589, 591, 608, 628,
	635, 483, 952, 953, 954, 955, 956, 957, 958, 959,
	303, 603, 636, 600, 648, 630, 441, 381, 0, 0,
	384, 284, 308, 323, 0, 620, 505, 229, 469, 293,
	253, 1027, 0, 213, 248, 232, 262, 277, 280, 327,
	394, 403, 432, 437, 299, 274, 246, 462, 243, 488,
	522, 523, 524, 526, 398, 269, 436, 399, 0, 379,
	579, 580, 319, 0, 0, 0, 531, 0, 780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 767, 0, 0, 0, 273, 772, 0, 0,
	0, 369, 270, 0, 0, 206, 508, 0, 433, 0,
	205, 0, 490, 255, 380, 377, 586, 285, 276, 272,
	252, 320, 388, 431, 521, 425, 779, 373, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	774, 775, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 250, 328, 204, 416, 501, 289, 0, 95, 0,
	0, 1028, 510, 962, 751, 928, 966, 1029, 980, 981,
	982, 967, 0, 240, 968, 969, 247, 970, 0, 927,
	810, 812, 811, 877, 878, 879, 880, 881, 882, 883,
	813, 814, 808, 975, 612, 983, 984, 0, 268, 324,
	275, 267, 583, 0, 0, 0, 0, 0, 0, 599,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	747, 764, 0, 778, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 762, 0, 0, 0, 0,
	922, 0, 763, 0, 0, 771, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 405, 260, 0, 456, 921, 0, 0, 632, 0,
	0, 919, 0, 0, 0, 0, 368, 0, 333, 199,
	227, 0, 0, 415, 464, 476, 0, 0, 0, 972,
	0, 474, 429, 607, 235, 287, 461, 435, 472, 443,
	290, 0, 0, 473, 375, 588, 453, 604, 633, 634,
	266, 409, 618, 525, 626, 651, 228, 263, 423, 509,
	610, 497, 400, 584, 585, 332, 496, 298, 203, 372,
	639, 226, 482, 374, 244, 233, 590, 615, 302, 254,
	292, 459, 646, 215, 520, 601, 241, 486, 0, 0,
	654, 249, 507, 613, 602, 217, 597, 506, 396, 329,
	330, 216, 0, 460, 271, 296, 0, 0, 261, 418,
	973, 974, 259, 655, 818, 625, 222, 0, 624, 411,
	587, 598, 397, 386, 221, 596, 395, 385, 337, 826,
	827, 283, 310, 903, 902, 901, 309, 311, 899, 900,
	898, 209, 611, 629, 0, 210, 0, 502, 614, 656,
	455, 214, 236, 237, 239, 0, 282, 286, 294, 297,
	306, 307, 316, 370, 422, 449, 445, 454, 0, 582,
	605, 619, 631, 637, 638, 640, 641, 642, 643, 644,
	647, 645, 410, 314, 498, 336, 376, 0, 0, 428,
	475, 242, 609, 499, 909, 931, 920, 784, 785, 910,
	911, 935, 912, 787, 788, 932, 933, 781, 782, 786,
	934, 936, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	652, 511, 517, 512, 513, 514, 515, 516, 0, 518,
	923, 770, 769, 0, 776, 777, 0, 806, 807, 809,
	815, 816, 817, 828, 875, 876, 884, 886, 887, 885,
	888, 889, 890, 893, 894, 895, 896, 891, 892, 897,
	789, 793, 790, 791, 792, 804, 794, 795, 796, 797,
	798, 799, 800, 801, 802, 803, 805, 946, 947, 948,
	949, 950, 951, 821, 825, 824, 822, 823, 819, 820,
	847, 846, 848, 849, 850, 851, 852, 853, 855, 854,
	856, 857, 858, 859, 860, 861, 829, 830, 833, 834,
	832, 831, 835, 844, 845, 836, 837, 838, 839, 840,
	841, 843, 842, 862, 863, 864, 865, 866, 868, 867,
	871, 872, 870, 869, 874, 873, 768, 198, 223, 371,
	0, 457, 291, 653, 621, 487, 616, 208, 225, 937,
	265, 938, 0, 0, 942, 0, 0, 0, 944, 943,
	0, 945, 907, 906, 0, 0, 939, 940, 0, 941,
	0, 0, 200, 202, 211, 224, 234, 238, 245, 264,
	279, 281, 288, 301, 313, 321, 322, 325, 331, 383,
	389, 390, 391, 392, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 439, 440, 442, 444,
	446, 458, 463, 477, 478, 479, 480, 481, 484, 485,
	491, 492, 493, 494, 495, 503, 504, 519, 589, 591,
	608, 628, 635, 483, 952, 953, 954, 955, 956, 957,
	958, 959, 303, 603, 636, 600, 648, 630, 441, 381,
	0, 0, 384, 284, 308, 323, 0, 620, 505, 229,
	469, 293, 253, 1027, 0, 213, 248, 232, 262, 277,
	280, 327, 394, 403, 432, 437, 299, 274, 246, 462,
	243, 488, 522, 523, 524, 526, 398, 269, 436, 399,
	0, 379, 579, 580, 319, 0, 0, 0, 531, 0,
	780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 767, 0, 0, 0, 273, 772,
	0, 0, 0, 369, 270, 0, 0, 206, 508, 0,
	433, 0, 205, 0, 490, 255, 380, 377, 586, 285,
	276, 272, 252, 320, 388, 431, 521, 425, 779, 373,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 774, 775, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 250, 328, 204, 416, 501, 289, 0,
	95, 0, 0, 1028, 510, 962, 751, 928, 966, 1029,
	980, 981, 982, 967, 0, 240, 968, 969, 247, 970,
	0, 927, 810, 812, 811, 877, 878, 879, 880, 881,
	882, 883, 813, 814, 808, 975, 612, 983, 984, 0,
	268, 324, 275, 267, 583, 0, 0, 0, 0, 0,
	0, 599, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 747, 764, 0, 778, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 761, 762, 0, 0,
	0, 0, 922, 0, 763, 0, 0, 771, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	3188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 405, 260, 0, 456, 921, 0, 0,
	632, 0, 0, 919, 0, 0, 0, 0, 368, 0,
	333, 199, 227, 0, 0, 415, 464, 476, 0, 0,
	0, 972, 0, 474, 429, 607, 235, 287, 461, 435,
	472, 443, 290, 0, 0, 473, 375, 588, 453, 604,
	633, 634, 266, 409, 618, 525, 626, 651, 228, 263,
	423, 509, 610, 497, 400, 584, 585, 332, 496, 298,
	203, 372, 639, 226, 482, 374, 244, 233, 590, 615,
	302, 254, 292, 459, 646, 215, 520, 601, 241, 486,
	0, 0, 654, 249, 507, 613, 602, 217, 597, 506,
	396, 329, 330, 216, 0, 460, 271, 296, 0, 0,
	261, 418, 973, 974, 259, 655, 818, 625, 222, 0,
	624, 411, 587, 598, 397, 386, 221, 596, 395, 385,
	337, 826, 827, 283, 310, 903, 902, 901, 309, 311,
	899, 900, 898, 209, 611, 629, 0, 210, 0, 502,
	614, 656, 455, 214, 236, 237, 239, 0, 282, 286,
	294, 297, 306, 307, 316, 370, 422, 449, 445, 454,
	0, 582, 605, 619, 631, 637, 638, 640, 641, 642,
	643, 644, 647, 645, 410, 314, 498, 336, 376, 0,
	0, 428, 475, 242, 609, 499, 909, 931, 920, 784,
	785, 910, 911, 935, 912, 787, 788, 932, 933, 781,
	782, 786, 934, 936, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 652, 511, 517, 512, 513, 514, 515, 516,
	0, 518, 923, 770, 769, 0, 776, 777, 0, 806,
	807, 809, 815, 816, 817, 828, 875, 876, 884, 886,
	887, 885, 888, 889, 890, 893, 894, 895, 896, 891,
	892, 897, 789, 793, 790, 791, 792, 804, 794, 795,
	796, 797, 798, 799, 800, 801, 802, 803, 805, 946,
	947, 948, 949, 950, 951, 821, 825, 824, 822, 823,
	819, 820, 847, 846, 848, 849, 850, 851, 852, 853,
	855, 854, 856, 857, 858, 859, 860, 861, 829, 830,
	833, 834, 832, 831, 835, 844, 845, 836, 837, 838,
	839, 840, 841, 843, 842, 862, 863, 864, 865, 866,
	868, 867, 871, 872, 870, 869, 874, 873, 768, 198,
	223, 371, 0, 457, 291, 653, 621, 487, 616, 208,
	225, 937, 265, 938, 0, 0, 942, 0, 0, 0,
	944, 943, 0, 945, 907, 906, 0, 0, 939, 940,
	0, 941, 0, 0, 200, 202, 211, 224, 234, 238,
	245, 264, 279, 281, 288, 301, 313, 321, 322, 325,
	331, 383, 389, 390, 391, 392, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 439, 440,
	442, 444, 446, 458, 463, 477, 478, 479, 480, 481,
	484, 485, 491, 492, 493, 494, 495, 503, 504, 519,
	589, 591, 608, 628, 635, 483, 952, 953, 954, 955,
	956, 957, 958, 959, 303, 603, 636, 600, 648, 630,
	441, 381, 0, 0, 384, 284, 308, 323, 0, 620,
	505, 229, 469, 293, 253, 1027, 0, 213, 248, 232,
	262, 277, 280, 327, 394, 403, 432, 437, 299, 274,
	246, 462, 243, 488, 522, 523, 524, 526, 398, 269,
	436, 399, 0, 379, 579, 580, 319, 0, 0, 0,
	531, 0, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 767, 0, 0, 0,
	273, 772, 0, 0, 0, 369, 270, 0, 0, 206,
	508, 0, 433, 0, 205, 0, 490, 255, 380, 377,
	586, 285, 276, 272, 252, 320, 388, 431, 521, 425,
	779, 373, 0, 0, 500, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 774, 775, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 250, 328, 204, 416, 501,
	289, 0, 95, 0, 0, 1028, 510, 962, 751, 928,
	966, 1029, 980, 981, 982, 967, 0, 240, 968, 969,
	247, 970, 0, 927, 810, 812, 811, 877, 878, 879,
	880, 881, 882, 883, 813, 814, 808, 975, 612, 983,
	984, 0, 268, 324, 275, 267, 583, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 747, 764, 0, 778, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 762,
	0, 0, 0, 0, 922, 0, 763, 0, 0, 771,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 3184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 405, 260, 0, 456, 921,
	0, 0, 632, 0, 0, 919, 0, 0, 0, 0,
	368, 0, 333, 199, 227, 0, 0, 415, 464, 476,
	0, 0, 0, 972, 0, 474, 429, 607, 235, 287,
	461, 435, 472, 443, 290, 0, 0, 473, 375, 588,
	453, 604, 633, 634, 266, 409, 618, 525, 626, 651,
	228, 263, 423, 509, 610, 497, 400, 584, 585, 332,
	496, 298, 203, 372, 639, 226, 482, 374, 244, 233,
	590, 615, 302, 254, 292, 459, 646, 215, 520, 601,
	241, 486, 0, 0, 654, 249, 507, 613, 602, 217,
	597, 506, 396, 329, 330, 216, 0, 460, 271, 296,
	0, 0, 261, 418, 973, 974, 259, 655, 818, 625,
	222, 0, 624, 411, 587, 598, 397, 386, 221, 596,
	395, 385, 337, 826, 827, 283, 310, 903, 902, 901,
	309, 311, 899, 900, 898, 209, 611, 629, 0, 210,
	0, 502, 614, 656, 455, 214, 236, 237, 239, 0,
	282, 286, 294, 297, 306, 307, 316, 370, 422, 449,
	445, 454, 0, 582, 605, 619, 631, 637, 638, 640,
	641, 642, 643, 644, 647, 645, 410, 314, 498, 336,
	376, 0, 0, 428, 475, 242, 609, 499, 909, 931,
	920, 784, 785, 910, 911, 935, 912, 787, 788, 932,
	933, 781, 782, 786, 934, 936, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 652, 511, 517, 512, 513, 514,
	515, 516, 0, 518, 923, 770, 769, 0, 776, 777,
	0, 806, 807, 809, 815, 816, 817, 828, 875, 876,
	884, 886, 887, 885, 888, 889, 890, 893, 894, 895,
	896, 891, 892, 897, 789, 793, 790, 791, 792, 804,
	794, 795, 796, 797, 798, 799, 800, 801, 802, 803,
	805, 946, 947, 948, 949, 950, 951, 821, 825, 824,
	822, 823, 819, 820, 847, 846, 848, 849, 850, 851,
	852, 853, 855, 854, 856, 857, 858, 859, 860, 861,
	829, 830, 833, 834, 832, 831, 835, 844, 845, 836,
	837, 838, 839, 840, 841, 843, 842, 862, 863, 864,
	865, 866, 868, 867, 871, 872, 870, 869, 874, 873,
	768, 198, 223, 371, 0, 457, 291, 653, 621, 487,
	616, 208, 225, 937, 265, 938, 0, 0, 942, 0,
	0, 0, 944, 943, 0, 945, 907, 906, 0, 0,
	939, 940, 0, 941, 0, 0, 200, 202, 211, 224,
	234, 238, 245, 264, 279, 281, 288, 301, 313, 321,
	322, 325, 331, 383, 389, 390, 391, 392, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	439, 440, 442, 444, 446, 458, 463, 477, 478, 479,
	480, 481, 484, 485, 491, 492, 493, 494, 495, 503,
	504, 519, 589, 591, 608, 628, 635, 483, 952, 953,
	954, 955, 956, 957, 958, 959, 303, 603, 636, 600,
	648, 630, 441, 381, 0, 0, 384, 284, 308, 323,
	0, 620, 505, 229, 469, 293, 253, 1027, 0, 213,
	248, 232, 262, 277, 280, 327, 394, 403, 432, 437,
	299, 274, 246, 462, 243, 488, 522, 523, 524, 526,
	398, 269, 436, 399, 0, 379, 579, 580, 319, 0,
	0, 0, 531, 0, 780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 767, 0,
	0, 0, 273, 772, 0, 0, 0, 369, 270, 0,
	0, 206, 508, 0, 433, 0, 205, 0, 490, 255,
	380, 377, 586, 285, 276, 272, 252, 320, 388, 431,
	521, 425, 779, 373, 0, 0, 500, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 774, 775, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 250, 328, 204,
	416, 501, 289, 0, 95, 0, 0, 1028, 510, 962,
	1100, 928, 966, 1029, 980, 981, 982, 967, 0, 240,
	968, 969, 247, 970, 0, 927, 810, 812, 811, 877,
	878, 879, 880, 881, 882, 883, 813, 814, 808, 975,
	612, 983, 984, 0, 268, 324, 275, 267, 583, 0,
	0, 0, 0, 0, 0, 599, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 764, 0, 778,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	761, 762, 0, 0, 0, 0, 922, 0, 763, 0,
	0, 771, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 405, 260, 0,
	456, 921, 0, 0, 632, 0, 0, 919, 0, 0,
	0, 0, 368, 0, 333, 199, 227, 0, 0, 415,
	464, 476, 0, 0, 0, 972, 0, 474, 429, 607,
	235, 287, 461, 435, 472, 443, 290, 0, 0, 473,
	375, 588, 453, 604, 633, 634, 266, 409, 618, 525,
	626, 651, 228, 263, 423, 509, 610, 497, 400, 584,
	585, 332, 496, 298, 203, 372, 639, 226, 482, 374,
	244, 233, 590, 615, 302, 254, 292, 459, 646, 215,
	520, 601, 241, 486, 0, 0, 654, 249, 507, 613,
	602, 217, 597, 506, 396, 329, 330, 216, 0, 460,
	271, 296, 0, 0, 261, 418, 973, 974, 259, 655,
	818, 625, 222, 0, 624, 411, 587, 598, 397, 386,
	221, 596, 395, 385, 337, 826, 827, 283, 310, 903,
	902, 901, 309, 311, 899, 900, 898, 209, 611, 629,
	0, 210, 0, 502, 614, 656, 455, 214, 236, 237,
	239, 0, 282, 286, 294, 297, 306, 307, 316, 370,
	422, 449, 445, 454, 0, 582, 605, 619, 631, 637,
	638, 640, 641, 642, 643, 644, 647, 645, 410, 314,
	498, 336, 376, 0, 0, 428, 475, 242, 609, 499,
	909, 931, 920, 784, 785, 910, 911, 935, 912, 787,
	788, 932, 933, 781, 782, 786, 934, 936, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 652, 511, 517, 512,
	513, 514, 515, 516, 0, 518, 923, 770, 769, 0,
	776, 777, 0, 806, 807, 809, 815, 816, 817, 828,
	875, 876, 884, 886, 887, 885, 888, 889, 890, 893,
	894, 895, 896, 891, 892, 897, 789, 793, 790, 791,
	792, 804, 794, 795, 796, 797, 798, 799, 800, 801,
	802, 803, 805, 946, 947, 948, 949, 950, 951, 821,
	825, 824, 822, 823, 819, 820, 847, 846, 848, 849,
	850, 851, 852, 853, 855, 854, 856, 857, 858, 859,
	860, 861, 829, 830, 833, 834, 832, 831, 835, 844,
	845, 836, 837, 838, 839, 840, 841, 843, 842, 862,
	863, 864, 865, 866, 868, 867, 871, 872, 870, 869,
	874, 873, 768, 198, 223, 371, 0, 457, 291, 653,
	621, 487, 616, 208, 225, 937, 265, 938, 0, 0,
	942, 0, 0, 0, 944, 943, 0, 945, 907, 906,
	0, 0, 939, 940, 0, 941, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 264, 279, 281, 288, 301,
	313, 321, 322, 325, 331, 383, 389, 390, 391, 392,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 439, 440, 442, 444, 446, 458, 463, 477,
	478, 479, 480, 481, 484, 485, 491, 492, 493, 494,
	495, 503, 504, 519, 589, 591, 608, 628, 635, 483,
	952, 953, 954, 955, 956, 957, 958, 959, 303, 603,
	636, 600, 648, 630, 441, 381, 0, 0, 384, 284,
	308, 323, 0, 620, 505, 229, 469, 293, 253, 1027,
	0, 213, 248, 232, 262, 277, 280, 327, 394, 403,
	432, 437, 299, 274, 246, 462, 243, 488, 522, 523,
	524, 526, 398, 269, 436, 399, 0, 379, 579, 580,
	319, 0, 0, 0, 531, 0, 780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	767, 0, 0, 0, 273, 772, 0, 0, 0, 369,
	270, 0, 0, 206, 508, 0, 433, 0, 205, 0,
	490, 255, 380, 377, 586, 285, 276, 272, 252, 320,
	388, 431, 521, 425, 779, 373, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 774, 775,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 250,
	328, 204, 416, 501, 289, 0, 95, 0, 0, 1028,
	510, 962, 1100, 928, 966, 1029, 980, 981, 982, 967,
	0, 240, 968, 969, 247, 970, 0, 927, 810, 812,
	811, 877, 878, 879, 880, 881, 882, 883, 813, 814,
	808, 975, 612, 983, 984, 0, 268, 324, 275, 267,
	583, 0, 0, 0, 0, 0, 0, 599, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 764,
	0, 778, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 761, 762, 0, 0, 0, 0, 922, 0,
	763, 0, 0, 771, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 2136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 405,
	260, 0, 456, 921, 0, 0, 632, 0, 0, 919,
	0, 0, 0, 0, 368, 0, 333, 199, 227, 0,
	0, 415, 464, 476, 0, 0, 0, 972, 0, 474,
	429, 607, 235, 287, 461, 435, 472, 443, 290, 0,
	0, 473, 375, 588, 453, 604, 633, 634, 266, 409,
	618, 525, 626, 651, 228, 263, 423, 509, 610, 497,
	400, 584, 585, 332, 496, 298, 203, 372, 639, 226,
	482, 374, 244, 233, 590, 615, 302, 254, 292, 459,
	646, 215, 520, 601, 241, 486, 0, 0, 654, 249,
	507, 613, 602, 217, 597, 506, 396, 329, 330, 216,
	0, 460, 271, 296, 0, 0, 261, 418, 973, 974,
	259, 655, 818, 625, 222, 0, 624, 411, 587, 598,
	397, 386, 221, 596, 395, 385, 337, 826, 827, 283,
	310, 903, 902, 901, 309, 311, 899, 900, 898, 209,
	611, 629, 0, 210, 0, 502, 614, 656, 455, 214,
	236, 237, 239, 0, 282, 286, 294, 297, 306, 307,
	316, 370, 422, 449, 445, 454, 0, 582, 605, 619,
	631, 637, 638, 640, 641, 642, 643, 644, 647, 645,
	410, 314, 498, 336, 376, 0, 0, 428, 475, 242,
	609, 499, 909, 931, 920, 784, 785, 910, 911, 935,
	912, 787, 788, 932, 933, 781, 782, 786, 934, 936,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 652, 511,
	517, 512, 513, 514, 515, 516, 0, 518, 923, 770,
	769, 0, 776, 777, 0, 806, 807, 809, 815, 816,
	817, 828, 875, 876, 884, 886, 887, 885, 888, 889,
	890, 893, 894, 895, 896, 891, 892, 897, 789, 793,
	790, 791, 792, 804, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 803, 805, 946, 947, 948, 949, 950,
	951, 821, 825, 824, 822, 823, 819, 820, 847, 846,
	848, 849, 850, 851, 852, 853, 855, 854, 856, 857,
	858, 859, 860, 861, 829, 830, 833, 834, 832, 831,
	835, 844, 845, 836, 837, 838, 839, 840, 841, 843,
	842, 862, 863, 864, 865, 866, 868, 867, 871, 872,
	870, 869, 874, 873, 768, 198, 223, 371, 0, 457,
	291, 653, 621, 487, 616, 208, 225, 937, 265, 938,
	0, 0, 942, 0, 0, 0, 944, 943, 0, 945,
	907, 906, 0, 0, 939, 940, 0, 941, 0, 0,
	200, 202, 211, 224, 234, 238, 245, 264, 279, 281,
	288, 301, 313, 321, 322, 325, 331, 383, 389, 390,
	391, 392, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 439, 440, 442, 444, 446, 458,
	463, 477, 478, 479, 480, 481, 484, 485, 491, 492,
	493, 494, 495, 503, 504, 519, 589, 591, 608, 628,
	635, 483, 952, 953, 954, 955, 956, 957, 958, 959,
	303, 603, 636, 600, 648, 630, 441, 381, 0, 0,
	384, 284, 308, 323, 0, 620, 505, 229, 469, 293,
	253, 1027, 0, 213, 248, 232, 262, 277, 280, 327,
	394, 403, 432, 437, 299, 274, 246, 462, 243, 488,
	522, 523, 524, 526, 398, 269, 436, 399, 0, 379,
	579, 580, 319, 0, 0, 0, 531, 0, 780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 767, 0, 0, 0, 273, 772, 0, 0,
	0, 369, 270, 0, 0, 206, 508, 0, 433, 0,
	205, 0, 490, 255, 380, 377, 586, 285, 276, 272,
	252, 320, 388, 431, 521, 425, 779, 373, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	774, 775, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 250, 328, 204, 416, 501, 289, 0, 95, 0,
	0, 1028, 510, 962, 1100, 928, 966, 1029, 980, 981,
	982, 967, 0, 240, 968, 969, 247, 970, 0, 927,
	810, 812, 811, 877, 878, 879, 880, 881, 882, 883,
	813, 814, 808, 975, 612, 983, 984, 0, 268, 324,
	275, 267, 583, 0, 0, 0, 0, 0, 0, 599,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 764, 0, 778, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 762, 0, 0, 0, 0,
	922, 0, 763, 0, 0, 771, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 2134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 405, 260, 0, 456, 921, 0, 0, 632, 0,
	0, 919, 0, 0, 0, 0, 368, 0, 333, 199,
	227, 0, 0, 415, 464, 476, 0, 0, 0, 972,
	0, 474, 429, 607, 235, 287, 461, 435, 472, 443,
	290, 0, 0, 473, 375, 588, 453, 604, 633, 634,
	266, 409, 618, 525, 626, 651, 228, 263, 423, 509,
	610, 497, 400, 584, 585, 332, 496, 298, 203, 372,
	639, 226, 482, 374, 244, 233, 590, 615, 302, 254,
	292, 459, 646, 215, 520, 601, 241, 486, 0, 0,
	654, 249, 507, 613, 602, 217, 597, 506, 396, 329,
	330, 216, 0, 460, 271, 296, 0, 0, 261, 418,
	973, 974, 259, 655, 818, 625, 222, 0, 624, 411,
	587, 598, 397, 386, 221, 596, 395, 385, 337, 826,
	827, 283, 310, 903, 902, 901, 309, 311, 899, 900,
	898, 209, 611, 629, 0, 210, 0, 502, 614, 656,
	455, 214, 236, 237, 239, 0, 282, 286, 294, 297,
	306, 307, 316, 370, 422, 449, 445, 454, 0, 582,
	605, 619, 631, 637, 638, 640, 641, 642, 643, 644,
	647, 645, 410, 314, 498, 336, 376, 0, 0, 428,
	475, 242, 609, 499, 909, 931, 920, 784, 785, 910,
	911, 935, 912, 787, 788, 932, 933, 781, 782, 786,
	934, 936, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	652, 511, 517, 512, 513, 514, 515, 516, 0, 518,
	923, 770, 769, 0, 776, 777, 0, 806, 807, 809,
	815, 816, 817, 828, 875, 876, 884, 886, 887, 885,
	888, 889, 890, 893, 894, 895, 896, 891, 892, 897,
	789, 793, 790, 791, 792, 804, 794, 795, 796, 797,
	798, 799, 800, 801, 802, 803, 805, 946, 947, 948,
	949, 950, 951, 821, 825, 824, 822, 823, 819, 820,
	847, 846, 848, 849, 850, 851, 852, 853, 855, 854,
	856, 857, 858, 859, 860, 861, 829, 830, 833, 834,
	832, 831, 835, 844, 845, 836, 837, 838, 839, 840,
	841, 843, 842, 862, 863, 864, 865, 866, 868, 867,
	871, 872, 870, 869, 874, 873, 768, 198, 223, 371,
	0, 457, 291, 653, 621, 487, 616, 208, 225, 937,
	265, 938, 0, 0, 942, 0, 0, 0, 944, 943,
	0, 945, 907, 906, 0, 0, 939, 940, 0, 941,
	0, 0, 200, 202, 211, 224, 234, 238, 245, 264,
	279, 281, 288, 301, 313, 321, 322, 325, 331, 383,
	389, 390, 391, 392, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 439, 440, 442, 444,
	446, 458, 463, 477, 478, 479, 480, 481, 484, 485,
	491, 492, 493, 494, 495, 503, 504, 519, 589, 591,
	608, 628, 635, 483, 952, 953, 954, 955, 956, 957,
	958, 959, 303, 603, 636, 600, 648, 630, 441, 381,
	0, 0, 384, 284, 308, 323, 0, 620, 505, 229,
	469, 293, 253, 1027, 0, 213, 248, 232, 262, 277,
	280, 327, 394, 403, 432, 437, 299, 274, 246, 462,
	243, 488, 522, 523, 524, 526, 398, 269, 436, 399,
	0, 379, 579, 580, 319, 0, 0, 0, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 369, 270, 0, 0, 206, 508, 0,
	433, 0, 205, 0, 490, 255, 380, 377, 586, 285,
	276, 272, 252, 320, 388, 431, 521, 425, 0, 373,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 250, 328, 204, 416, 501, 289, 0,
	0, 0, 0, 0, 510, 727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 354, 363, 362, 342, 343, 345, 347, 353,
	360, 366, 339, 348, 0, 0, 612, 0, 0, 0,
	268, 324, 275, 267, 583, 0, 0, 0, 0, 0,
	0, 599, 0, 0, 231, 0, 1151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 405, 260, 0, 456, 0, 0, 1150,
	632, 0, 0, 0, 0, 0, 1147, 1148, 368, 1108,
	333, 199, 227, 1141, 1145, 415, 464, 476, 0, 0,
	0, 256, 0, 474, 429, 607, 235, 287, 461, 435,
	472, 443, 290, 0, 0, 473, 375, 588, 453, 604,
	633, 634, 266, 409, 618, 525, 626, 651, 228, 263,
	423, 509, 610, 497, 400, 584, 585, 332, 496, 298,
	203, 372, 639, 226, 482, 374, 244, 233, 590, 615,
	302, 254, 292, 459, 646, 215, 520, 601, 241, 486,
	0, 0, 654, 249, 507, 613, 602, 217, 597, 506,
	396, 329, 330, 216, 0, 460, 271, 296, 0, 0,
	261, 418, 592, 593, 259, 655, 230, 625, 222, 0,
	624, 411, 587, 598, 397, 386, 221, 596, 395, 385,
	337, 358, 359, 283, 310, 450, 378, 451, 309, 311,
	407, 406, 408, 209, 611, 629, 0, 210, 0, 502,
	614, 656, 455, 214, 236, 237, 239, 0, 282, 286,
	294, 297, 306, 307, 316, 370, 422, 449, 445, 454,
	0, 582, 605, 619, 631, 637, 638, 640, 641, 642,
	643, 644, 647, 645, 410, 314, 498, 336, 376, 0,
	0, 428, 475, 242, 609, 499, 201, 0, 0, 0,
	0, 257, 258, 0, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 652, 511, 517, 512, 513, 514, 515, 516,
	0, 518, 0, 0, 0, 0, 0, 401, 0, 594,
	595, 675, 387, 489, 606, 338, 352, 355, 344, 364,
	0, 365, 340, 341, 346, 349, 350, 351, 356, 357,
	361, 367, 251, 212, 393, 402, 581, 315, 218, 219,
	220, 527, 528, 529, 530, 622, 623, 627, 207, 465,
	466, 467, 468, 295, 617, 312, 471, 470, 334, 335,
	382, 452, 543, 545, 556, 560, 562, 564, 570, 573,
	544, 546, 557, 561, 563, 565, 571, 574, 533, 535,
	537, 539, 552, 551, 548, 576, 577, 554, 559, 538,
	550, 555, 568, 575, 572, 532, 536, 540, 549, 567,
	566, 547, 558, 569, 553, 541, 534, 542, 0, 198,
	223, 371, 0, 457, 291, 653, 621, 487, 616, 208,
	225, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 202, 211, 224, 234, 238,
	245, 264, 279, 281, 288, 301, 313, 321, 322, 325,
	331, 383, 389, 390, 391, 392, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 439, 440,
	442, 444, 446, 458, 463, 477, 478, 479, 480, 481,
	484, 485, 491, 492, 493, 494, 495, 503, 504, 519,
	589, 591, 608, 628, 635, 483, 304, 305, 447, 448,
	317, 318, 649, 650, 303, 603, 636, 600, 648, 630,
	441, 381, 0, 0, 384, 284, 308, 323, 0, 620,
	505, 229, 469, 293, 253, 0, 0, 213, 248, 232,
	262, 277, 280, 327, 394, 403, 432, 437, 299, 274,
	246, 462, 243, 488, 522, 523, 524, 526, 398, 269,
	436, 399, 0, 379, 579, 580, 319, 0, 0, 86,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 369, 270, 0, 0, 206,
	508, 0, 433, 0, 205, 0, 490, 255, 380, 377,
	586, 285, 276, 272, 252, 320, 388, 431, 521, 425,
	97, 373, 0, 0, 500, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 250, 328, 204, 416, 501,
	289, 0, 95, 0, 0, 0, 510, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 354, 363, 362, 342, 343, 345,
	347, 353, 360, 366, 339, 348, 0, 0, 612, 0,
	0, 0, 268, 324, 275, 267, 583, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 405, 260, 0, 456, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 333, 199, 227, 0, 0, 415, 464, 476,
	0, 0, 0, 256, 0, 474, 429, 607, 235, 287,
	461, 435, 472, 443, 290, 0, 0, 473, 375, 588,
	453, 604, 633, 634, 266, 409, 618, 525, 626, 651,
	228, 263, 423, 509, 610, 497, 400, 584, 585, 332,
	496, 298, 203, 372, 639, 226, 482, 374, 244, 233,
	590, 615, 302, 254, 292, 459, 646, 215, 520, 601,
	241, 486, 0, 0, 654, 249, 507, 613, 602, 217,
	597, 506, 396, 329, 330, 216, 0, 460, 271, 296,
	0, 0, 261, 418, 592, 593, 259, 655, 230, 625,
	222, 0, 624, 411, 587, 598, 397, 386, 221, 596,
	395, 385, 337, 358, 359, 283, 310, 450, 378, 451,
	309, 311, 407, 406, 408, 209, 611, 629, 0, 210,
	0, 502, 614, 656, 455, 214, 236, 237, 239, 0,
	282, 286, 294, 297, 306, 307, 316, 370, 422, 449,
	445, 454, 0, 582, 605, 619, 631, 637, 638, 640,
	641, 642, 643, 644, 647, 645, 410, 314, 498, 336,
	376, 0, 0, 428, 475, 242, 609, 499, 201, 0,
	0, 0, 0, 257, 258, 0, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 652, 511, 517, 512, 513, 514,
	515, 516, 0, 518, 0, 0, 0, 0, 0, 401,
	0, 594, 595, 675, 387, 489, 606, 338, 352, 355,
	344, 364, 0, 365, 340, 341, 346, 349, 350, 351,
	356, 357, 361, 367, 251, 212, 393, 402, 581, 315,
	218, 219, 220, 527, 528, 529, 530, 622, 623, 627,
	207, 465, 466, 467, 468, 295, 617, 312, 471, 470,
	334, 335, 382, 452, 543, 545, 556, 560, 562, 564,
	570, 573, 544, 546, 557, 561, 563, 565, 571, 574,
	533, 535, 537, 539, 552, 551, 548, 576, 577, 554,
	559, 538, 550, 555, 568, 575, 572, 532, 536, 540,
	549, 567, 566, 547, 558, 569, 553, 541, 534, 542,
	0, 198, 223, 371, 94, 457, 291, 653, 621, 487,
	616, 208, 225, 0, 265, 0, 0, 0, 0, 0,
	0, 2441, 0, 0, 2440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 202, 211, 224,
	234, 238, 245, 264, 279, 281, 288, 301, 313, 321,
	322, 325, 331, 383, 389, 390, 391, 392, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	439, 440, 442, 444, 446, 458, 463, 477, 478, 479,
	480, 481, 484, 485, 491, 492, 493, 494, 495, 503,
	504, 519, 589, 591, 608, 628, 635, 483, 304, 305,
	447, 448, 317, 318, 649, 650, 303, 603, 636, 600,
	648, 630, 441, 381, 0, 0, 384, 284, 308, 323,
	0, 620, 505, 229, 469, 293, 253, 0, 0, 213,
	248, 232, 262, 277, 280, 327, 394, 403, 432, 437,
	299, 274, 246, 462, 243, 488, 522, 523, 524, 526,
	398, 269, 436, 399, 0, 379, 579, 580, 319, 0,
	0, 86, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 369, 270, 0,
	0, 206, 508, 0, 433, 0, 205, 0, 490, 255,
	380, 377, 586, 285, 276, 272, 252, 320, 388, 431,
	521, 425, 97, 373, 0, 0, 500, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 250, 328, 204,
	416, 501, 289, 0, 95, 0, 1764, 0, 510, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 354, 363, 362, 342,
	343, 345, 347, 353, 360, 366, 339, 348, 0, 0,
	612, 0, 0, 0, 268, 324, 275, 267, 583, 0,
	0, 0, 0, 0, 0, 599, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 405, 260, 0,
	456, 0, 0, 0, 632, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 333, 199, 227, 0, 0, 415,
	464, 476, 0, 0, 0, 256, 0, 474, 429, 607,
	235, 287, 461, 435, 472, 443, 290, 0, 0, 473,
	375, 588, 453, 604, 633, 634, 266, 409, 618, 525,
	626, 651, 228, 263, 423, 509, 610, 497, 400, 584,
	585, 332, 496, 298, 203, 372, 639, 226, 482, 374,
	244, 233, 590, 615, 302, 254, 292, 459, 646, 215,
	520, 601, 241, 486, 0, 0, 654, 249, 507, 613,
	602, 217, 597, 506, 396, 329, 330, 216, 0, 460,
	271, 296, 0, 0, 261, 418, 592, 593, 259, 655,
	230, 625, 222, 0, 624, 411, 587, 598, 397, 386,
	221, 596, 395, 385, 337, 358, 359, 283, 310, 450,
	378, 451, 309, 311, 407, 406, 408, 209, 611, 629,
	0, 210, 0, 502, 614, 656, 455, 214, 236, 237,
	239, 0, 282, 286, 294, 297, 306, 307, 316, 370,
	422, 449, 445, 454, 0, 582, 605, 619, 631, 637,
	638, 640, 641, 642, 643, 644, 647, 645, 410, 314,
	498, 336, 376, 0, 0, 428, 475, 242, 609, 499,
	201, 0, 0, 0, 0, 257, 258, 0, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 652, 511, 517, 512,
	513, 514, 515, 516, 0, 518, 0, 0, 0, 0,
	0, 401, 0, 594, 595, 675, 387, 489, 606, 338,
	352, 355, 344, 364, 0, 365, 340, 341, 346, 349,
	350, 351, 356, 357, 361, 367, 251, 212, 393, 402,
	581, 315, 218, 219, 220, 527, 528, 529, 530, 622,
	623, 627, 207, 465, 466, 467, 468, 295, 617, 312,
	471, 470, 334, 335, 382, 452, 543, 545, 556, 560,
	562, 564, 570, 573, 544, 546, 557, 561, 563, 565,
	571, 574, 533, 535, 537, 539, 552, 551, 548, 576,
	577, 554, 559, 538, 550, 555, 568, 575, 572, 532,
	536, 540, 549, 567, 566, 547, 558, 569, 553, 541,
	534, 542, 0, 198, 223, 371, 94, 457, 291, 653,
	621, 487, 616, 208, 225, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 264, 279, 281, 288, 301,
	313, 321, 322, 325, 331, 383, 389, 390, 391, 392,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 439, 440, 442, 444, 446, 458, 463, 477,
	478, 479, 480, 481, 484, 485, 491, 492, 493, 494,
	495, 503, 504, 519, 589, 591, 608, 628, 635, 483,
	304, 305, 447, 448, 317, 318, 649, 650, 303, 603,
	636, 600, 648, 630, 441, 381, 0, 0, 384, 284,
	308, 323, 0, 620, 505, 229, 469, 293, 253, 0,
	0, 213, 248, 232, 262, 277, 280, 327, 394, 403,
	432, 437, 299, 274, 246, 462, 243, 488, 522, 523,
	524, 526, 398, 269, 436, 1789, 0, 379, 579, 580,
	319, 0, 0, 0, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 1791,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 369,
	270, 0, 0, 206, 508, 0, 433, 0, 205, 0,
	490, 255, 380, 377, 586, 285, 276, 272, 252, 320,
	388, 431, 521, 425, 0, 373, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 250,
	328, 204, 416, 501, 289, 0, 0, 0, 0, 1793,
	510, 727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 354, 363,
	362, 342, 343, 345, 347, 353, 360, 366, 339, 348,
	0, 0, 612, 0, 0, 0, 268, 324, 275, 267,
	583, 0, 0, 0, 0, 0, 0, 599, 0, 0,
	231, 0, 0, 0, 1489, 0, 1490, 1491, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 405,
	260, 0, 456, 0, 0, 0, 632, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 333, 199, 227, 0,
	0, 415, 464, 476, 0, 0, 0, 256, 0, 474,
	429, 607, 235, 287, 461, 435, 472, 443, 290, 0,
	0, 473, 375, 588, 453, 604, 633, 634, 266, 409,
	618, 525, 626, 651, 228, 263, 423, 509, 610, 497,
	400, 584, 585, 332, 496, 298, 203, 372, 639, 226,
	482, 374, 244, 233, 590, 615, 302, 254, 292, 459,
	646, 215, 520, 601, 241, 486, 0, 0, 654, 249,
	507, 613, 602, 217, 597, 506, 396, 329, 330, 216,
	0, 460, 271, 296, 0, 0, 261, 418, 592, 593,
	259, 655, 230, 625, 222, 0, 624, 411, 587, 598,
	397, 386, 221, 596, 395, 385, 337, 358, 359, 283,
	310, 450, 378, 451, 309, 311, 407, 406, 408, 209,
	611, 629, 0, 210, 0, 502, 614, 656, 455, 214,
	236, 237, 239, 0, 282, 286, 294, 297, 306, 307,
	316, 370, 422, 449, 445, 454, 0, 582, 605, 619,
	631, 637, 638, 640, 641, 642, 643, 644, 647, 645,
	410, 314, 498, 336, 376, 0, 0, 428, 475, 242,
	609, 499, 201, 0, 0, 0, 0, 257, 258, 0,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 652, 511,
	517, 512, 513, 514, 515, 516, 0, 518, 0, 0,
	0, 0, 0, 401, 0, 594, 595, 675, 387, 489,
	606, 338, 352, 355, 344, 364, 0, 365, 340, 341,
	346, 349, 350, 351, 356, 357, 361, 367, 251, 212,
	393, 402, 581, 315, 218, 219, 220, 527, 528, 529,
	530, 622, 623, 627, 207, 465, 466, 467, 468, 295,
	617, 312, 471, 470, 334, 335, 382, 452, 543, 545,
	556, 560, 562, 564, 570, 573, 544, 546, 557, 561,
	563, 565, 571, 574, 533, 535, 537, 539, 552, 551,
	548, 576, 577, 554, 559, 538, 550, 555, 568, 575,
	572, 532, 536, 540, 549, 567, 566, 547, 558, 569,
	553, 541, 534, 542, 0, 198, 223, 371, 0, 457,
	291, 653, 621, 487, 616, 208, 225, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 202, 211, 224, 234, 238, 245, 264, 279, 281,
	288, 301, 313, 321, 322, 325, 331, 383, 389, 390,
	391, 392, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 439, 440, 442, 444, 446, 458,
	463, 477, 478, 479, 480, 481, 484, 485, 491, 492,
	493, 494, 495, 503, 504, 519, 589, 591, 608, 628,
	635, 483, 304, 305, 447, 448, 317, 318, 649, 650,
	303, 603, 636, 600, 648, 630, 441, 381, 0, 0,
	384, 284, 308, 323, 0, 620, 505, 229, 469, 293,
	253, 0, 0, 213, 248, 232, 262, 277, 280, 327,
	394, 403, 432, 437, 299, 274, 246, 462, 243, 488,
	522, 523, 524, 526, 398, 269, 436, 399, 0, 379,
	579, 580, 319, 0, 0, 0, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 369, 270, 0, 0, 206, 508, 0, 433, 0,
	205, 0, 490, 255, 380, 377, 586, 285, 276, 272,
	252, 320, 388, 431, 521, 425, 0, 373, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 250, 328, 204, 416, 501, 289, 0, 95, 0,
	0, 0, 510, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	354, 363, 362, 342, 343, 345, 347, 353, 360, 366,
	339, 348, 0, 0, 612, 0, 0, 0, 268, 324,
	275, 267, 583, 0, 0, 0, 0, 0, 0, 599,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 405, 260, 0, 456, 0, 0, 0, 632, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 333, 199,
	227, 0, 0, 415, 464, 476, 0, 0, 0, 256,
	0, 474, 429, 607, 235, 287, 461, 435, 472, 443,
	290, 0, 0, 473, 375, 588, 453, 604, 633, 634,
	266, 409, 618, 525, 626, 651, 228, 263, 423, 509,
	610, 497, 400, 584, 585, 332, 496, 298, 203, 372,
	639, 226, 482, 374, 244, 233, 590, 615, 302, 254,
	292, 459, 646, 215, 520, 601, 241, 486, 0, 0,
	654, 249, 507, 613, 602, 217, 597, 506, 396, 329,
	330, 216, 0, 460, 271, 296, 0, 0, 261, 418,
	592, 593, 259, 655, 230, 625, 222, 0, 624, 411,
	587, 598, 397, 386, 221, 596, 395, 385, 337, 358,
	359, 283, 310, 450, 378, 451, 309, 311, 407, 406,
	408, 209, 611, 629, 0, 210, 0, 502, 614, 656,
	455, 214, 236, 237, 239, 0, 282, 286, 294, 297,
	306, 307, 316, 370, 422, 449, 445, 454, 0, 582,
	605, 619, 631, 637, 638, 640, 641, 642, 643, 644,
	647, 645, 410, 314, 498, 336, 376, 0, 0, 428,
	475, 242, 609, 499, 201, 0, 0, 0, 0, 257,
	258, 0, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	652, 511, 517, 512, 513, 514, 515, 516, 0, 518,
	0, 0, 0, 0, 0, 401, 0, 594, 595, 675,
	387, 489, 606, 338, 352, 355, 344, 364, 0, 365,
	340, 341, 346, 349, 350, 351, 356, 357, 361, 367,
	251, 212, 393, 402, 581, 315, 218, 219, 220, 527,
	528, 529, 530, 622, 623, 627, 207, 465, 466, 467,
	468, 295, 617, 312, 471, 470, 334, 335, 382, 452,
	543, 545, 556, 560, 562, 564, 570, 573, 544, 546,
	557, 561, 563, 565, 571, 574, 533, 535, 537, 539,
	552, 551, 548, 576, 577, 554, 559, 538, 550, 555,
	568, 575, 572, 532, 536, 540, 549, 567, 566, 547,
	558, 569, 553, 541, 534, 542, 0, 198, 223, 371,
	0, 457, 291, 653, 621, 487, 616, 208, 225, 0,
	265, 0, 0, 0, 0, 0, 0, 2441, 0, 0,
	2440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 211, 224, 234, 238, 245, 264,
	279, 281, 288, 301, 313, 321, 322, 325, 331, 383,
	389, 390, 391, 392, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 439, 440, 442, 444,
	446, 458, 463, 477, 478, 479, 480, 481, 484, 485,
	491, 492, 493, 494, 495, 503, 504, 519, 589, 591,
	608, 628, 635, 483, 304, 305, 447, 448, 317, 318,
	649, 650, 303, 603, 636, 600, 648, 630, 441, 381,
	0, 0, 384, 284, 308, 323, 0, 620, 505, 229,
	469, 293, 253, 0, 0, 213, 248, 232, 262, 277,
	280, 327, 394, 403, 432, 437, 299, 274, 246, 462,
	243, 488, 522, 523, 524, 526, 398, 269, 436, 399,
	0, 379, 579, 580, 319, 0, 0, 0, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 2386, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 369, 270, 0, 0, 206, 508, 0,
	433, 0, 205, 0, 490, 255, 380, 377, 586, 285,
	276, 272, 252, 320, 388, 431, 521, 425, 0, 373,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 250, 328, 204, 416, 501, 289, 0,
	0, 0, 0, 1974, 510, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 354, 363, 362, 342, 343, 345, 347, 353,
	360, 366, 339, 348, 0, 0, 612, 0, 0, 0,
	268, 324, 275, 267, 583, 0, 0, 0, 0, 0,
	0, 599, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 405, 260, 0, 456, 0, 0, 0,
	632, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	333, 199, 227, 0, 0, 415, 464, 476, 0, 0,
	0, 256, 0, 474, 429, 607, 235, 287, 461, 435,
	472, 443, 290, 0, 2384, 473, 375, 588, 453, 604,
	633, 634, 266, 409, 618, 525, 626, 651, 228, 263,
	423, 509, 610, 497, 400, 584, 585, 332, 496, 298,
	203, 372, 639, 226, 482, 374, 244, 233, 590, 615,
	302, 254, 292, 459, 646, 215, 520, 601, 241, 486,
	0, 0, 654, 249, 507, 613, 602, 217, 597, 506,
	396, 329, 330, 216, 0, 460, 271, 296, 0, 0,
	261, 418, 592, 593, 259, 655, 230, 625, 222, 0,
	624, 411, 587, 598, 397, 386, 221, 596, 395, 385,
	337, 358, 359, 283, 310, 450, 378, 451, 309, 311,
	407, 406, 408, 209, 611, 629, 0, 210, 0, 502,
	614, 656, 455, 214, 236, 237, 239, 0, 282, 286,
	294, 297, 306, 307, 316, 370, 422, 449, 445, 454,
	0, 582, 605, 619, 631, 637, 638, 640, 641, 642,
	643, 644, 647, 645, 410, 314, 498, 336, 376, 0,
	0, 428, 475, 242, 609, 499, 201, 0, 0, 0,
	0, 257, 258, 0, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 652, 511, 517, 512, 513, 514, 515, 516,
	0, 518, 0, 0, 0, 0, 0, 401, 0, 594,
	595, 675, 387, 489, 606, 338, 352, 355, 344, 364,
	0, 365, 340, 341, 346, 349, 350, 351, 356, 357,
	361, 367, 251, 212, 393, 402, 581, 315, 218, 219,
	220, 527, 528, 529, 530, 622, 623, 627, 207, 465,
	466, 467, 468, 295, 617, 312, 471, 470, 334, 335,
	382, 452, 543, 545, 556, 560, 562, 564, 570, 573,
	544, 546, 557, 561, 563, 565, 571, 574, 533, 535,
	537, 539, 552, 551, 548, 576, 577, 554, 559, 538,
	550, 555, 568, 575, 572, 532, 536, 540, 549, 567,
	566, 547, 558, 569, 553, 541, 534, 542, 0, 198,
	223, 371, 0, 457, 291, 653, 621, 487, 616, 208,
	225, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 202, 211, 224, 234, 238,
	245, 264, 279, 281, 288, 301, 313, 321, 322, 325,
	331, 383, 389, 390, 391, 392, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 439, 440,
	442, 444, 446, 458, 463, 477, 478, 479, 480, 481,
	484, 485, 491, 492, 493, 494, 495, 503, 504, 519,
	589, 591, 608, 628, 635, 483, 304, 305, 447, 448,
	317, 318, 649, 650, 303, 603, 636, 600, 648, 630,
	441, 381, 0, 0, 384, 284, 308, 323, 0, 620,
	505, 229, 469, 293, 253, 0, 0, 213, 248, 232,
	262, 277, 280, 327, 394, 403, 432, 437, 299, 274,
	246, 462, 243, 488, 522, 523, 524, 526, 398, 269,
	436, 399, 0, 379, 579, 580, 319, 0, 0, 0,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 369, 270, 0, 0, 206,
	508, 0, 433, 0, 205, 0, 490, 255, 380, 377,
	586, 285, 276, 272, 252, 320, 388, 431, 521, 425,
	0, 373, 0, 0, 500, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 250, 328, 204, 416, 501,
	289, 0, 0, 0, 0, 0, 510, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 354, 363, 362, 342, 343, 345,
	347, 353, 360, 366, 339, 348, 0, 0, 612, 0,
	0, 0, 268, 324, 275, 267, 583, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	1102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 405, 260, 0, 456, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	368, 1108, 333, 199, 227, 1106, 0, 415, 464, 476,
	0, 0, 0, 256, 0, 474, 429, 607, 235, 287,
	461, 435, 472, 443, 290, 0, 0, 473, 375, 588,
	453, 604, 633, 634, 266, 409, 618, 525, 626, 651,
	228, 263, 423, 509, 610, 497, 400, 584, 585, 332,
	496, 298, 203, 372, 639, 226, 482, 374, 244, 233,
	590, 615, 302, 254, 292, 459, 646, 215, 520, 601,
	241, 486, 0, 0, 654, 249, 507, 613, 602, 217,
	597, 506, 396, 329, 330, 216, 0, 460, 271, 296,
	0, 0, 261, 418, 592, 593, 259, 655, 230, 625,
	222, 0, 624, 411, 587, 598, 397, 386, 221, 596,
	395, 385, 337, 358, 359, 283, 310, 450, 378, 451,
	309, 311, 407, 406, 408, 209, 611, 629, 0, 210,
	0, 502, 614, 656, 455, 214, 236, 237, 239, 0,
	282, 286, 294, 297, 306, 307, 316, 370, 422, 449,
	445, 454, 0, 582, 605, 619, 631, 637, 638, 640,
	641, 642, 643, 644, 647, 645, 410, 314, 498, 336,
	376, 0, 0, 428, 475, 242, 609, 499, 201, 0,
	0, 0, 0, 257, 258, 0, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 652, 511, 517, 512, 513, 514,
	515, 516, 0, 518, 0, 0, 0, 0, 0, 401,
	0, 594, 595, 675, 387, 489, 606, 338, 352, 355,
	344, 364, 0, 365, 340, 341, 346, 349, 350, 351,
	356, 357, 361, 367, 251, 212, 393, 402, 581, 315,
	218, 219, 220, 527, 528, 529, 530, 622, 623, 627,
	207, 465, 466, 467, 468, 295, 617, 312, 471, 470,
	334, 335, 382, 452, 543, 545, 556, 560, 562, 564,
	570, 573, 544, 546, 557, 561, 563, 565, 571, 574,
	533, 535, 537, 539, 552, 551, 548, 576, 577, 554,
	559, 538, 550, 555, 568, 575, 572, 532, 536, 540,
	549, 567, 566, 547, 558, 569, 553, 541, 534, 542,
	0, 198, 223, 371, 0, 457, 291, 653, 621, 487,
	616, 208, 225, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 202, 211, 224,
	234, 238, 245, 264, 279, 281, 288, 301, 313, 321,
	322, 325, 331, 383, 389, 390, 391, 392, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	439, 440, 442, 444, 446, 458, 463, 477, 478, 479,
	480, 481, 484, 485, 491, 492, 493, 494, 495, 503,
	504, 519, 589, 591, 608, 628, 635, 483, 304, 305,
	447, 448, 317, 318, 649, 650, 303, 603, 636, 600,
	648, 630, 441, 381, 0, 0, 384, 284, 308, 323,
	0, 620, 505, 229, 469, 293, 253, 0, 0, 213,
	248, 232, 262, 277, 280, 327, 394, 403, 432, 437,
	299, 274, 246, 462, 243, 488, 522, 523, 524, 526,
	398, 269, 436, 399, 0, 379, 579, 580, 319, 0,
	0, 0, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 0, 2386, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 369, 270, 0,
	0, 206, 508, 0, 433, 0, 205, 0, 490, 255,
	380, 377, 586, 285, 276, 272, 252, 320, 388, 431,
	521, 425, 0, 373, 0, 0, 500, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 250, 328, 204,
	416, 501, 289, 0, 0, 0, 0, 1974, 510, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 354, 363, 362, 342,
	343, 345, 347, 353, 360, 366, 339, 348, 0, 0,
	612, 0, 0, 0, 268, 324, 275, 267, 583, 0,
	0, 0, 0, 0, 0, 599, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 405, 260, 0,
	456, 0, 0, 0, 632, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 333, 199, 227, 0, 0, 415,
	464, 476, 0, 0, 0, 256, 0, 474, 429, 607,
	235, 287, 461, 435, 472, 443, 290, 0, 0, 473,
	375, 588, 453, 604, 633, 634, 266, 409, 618, 525,
	626, 651, 228, 263, 423, 509, 610, 497, 400, 584,
	585, 332, 496, 298, 203, 372, 639, 226, 482, 374,
	244, 233, 590, 615, 302, 254, 292, 459, 646, 215,
	520, 601, 241, 486, 0, 0, 654, 249, 507, 613,
	602, 217, 597, 506, 396, 329, 330, 216, 0, 460,
	271, 296, 0, 0, 261, 418, 592, 593, 259, 655,
	230, 625, 222, 0, 624, 411, 587, 598, 397, 386,
	221, 596, 395, 385, 337, 358, 359, 283, 310, 450,
	378, 451, 309, 311, 407, 406, 408, 209, 611, 629,
	0, 210, 0, 502, 614, 656, 455, 214, 236, 237,
	239, 0, 282, 286, 294, 297, 306, 307, 316, 370,
	422, 449, 445, 454, 0, 582, 605, 619, 631, 637,
	638, 640, 641, 642, 643, 644, 647, 645, 410, 314,
	498, 336, 376, 0, 0, 428, 475, 242, 609, 499,
	201, 0, 0, 0, 0, 257, 258, 0, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 652, 511, 517, 512,
	513, 514, 515, 516, 0, 518, 0, 0, 0, 0,
	0, 401, 0, 594, 595, 675, 387, 489, 606, 338,
	352, 355, 344, 364, 0, 365, 340, 341, 346, 349,
	350, 351, 356, 357, 361, 367, 251, 212, 393, 402,
	581, 315, 218, 219, 220, 527, 528, 529, 530, 622,
	623, 627, 207, 465, 466, 467, 468, 295, 617, 312,
	471, 470, 334, 335, 382, 452, 543, 545, 556, 560,
	562, 564, 570, 573, 544, 546, 557, 561, 563, 565,
	571, 574, 533, 535, 537, 539, 552, 551, 548, 576,
	577, 554, 559, 538, 550, 555, 568, 575, 572, 532,
	536, 540, 549, 567, 566, 547, 558, 569, 553, 541,
	534, 542, 0, 198, 223, 371, 0, 457, 291, 653,
	621, 487, 616, 208, 225, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 264, 279, 281, 288, 301,
	313, 321, 322, 325, 331, 383, 389, 390, 391, 392,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 439, 440, 442, 444, 446, 458, 463, 477,
	478, 479, 480, 481, 484, 485, 491, 492, 493, 494,
	495, 503, 504, 519, 589, 591, 608, 628, 635, 483,
	304, 305, 447, 448, 317, 318, 649, 650, 303, 603,
	636, 600, 648, 630, 441, 381, 0, 0, 384, 284,
	308, 323, 0, 620, 505, 229, 469, 293, 253, 0,
	0, 213, 248, 232, 262, 277, 280, 327, 394, 403,
	432, 437, 299, 274, 246, 462, 243, 488, 522, 523,
	524, 526, 398, 269, 436, 399, 0, 379, 579, 580,
	319, 0, 0, 0, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 369,
	270, 0, 0, 206, 508, 0, 433, 0, 205, 0,
	490, 255, 380, 377, 586, 285, 276, 272, 252, 320,
	388, 431, 521, 425, 0, 373, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 250,
	328, 204, 416, 501, 289, 0, 0, 0, 1764, 0,
	510, 727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 354, 363,
	362, 342, 343, 345, 347, 353, 360, 366, 339, 348,
	0, 0, 612, 0, 0, 0, 268, 324, 275, 267,
	583, 0, 0, 0, 0, 0, 0, 599, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 405,
	260, 0, 456, 0, 0, 0, 632, 0, 0, 0,
	3743, 0, 0, 0, 368, 0, 333, 199, 227, 0,
	0, 415, 464, 476, 0, 0, 0, 256, 0, 474,
	429, 607, 235, 287, 461, 435, 472, 443, 290, 0,
	0, 473, 375, 588, 453, 604, 633, 634, 266, 409,
	618, 525, 626, 651, 228, 263, 423, 509, 610, 497,
	400, 584, 585, 332, 496, 298, 203, 372, 639, 226,
	482, 374, 244, 233, 590, 615, 302, 254, 292, 459,
	646, 215, 520, 601, 241, 486, 0, 0, 654, 249,
	507, 613, 602, 217, 597, 506, 396, 329, 330, 216,
	0, 460, 271, 296, 0, 0, 261, 418, 592, 593,
	259, 655, 230, 625, 222, 0, 624, 411, 587, 598,
	397, 386, 221, 596, 395, 385, 337, 358, 359, 283,
	310, 450, 378, 451, 309, 311, 407, 406, 408, 209,
	611, 629, 0, 210, 0, 502, 614, 656, 455, 214,
	236, 237, 239, 0, 282, 286, 294, 297, 306, 307,
	316, 370, 422, 449, 445, 454, 0, 582, 605, 619,
	631, 637, 638, 640, 641, 642, 643, 644, 647, 645,
	410, 314, 498, 336, 376, 0, 0, 428, 475, 242,
	609, 499, 201, 0, 0, 0, 0, 257, 258, 0,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 652, 511,
	517, 512, 513, 514, 515, 516, 0, 518, 0, 0,
	0, 0, 0, 401, 0, 594, 595, 675, 387, 489,
	606, 338, 352, 355, 344, 364, 0, 365, 340, 341,
	346, 349, 350, 351, 356, 357, 361, 367, 251, 212,
	393, 402, 581, 315, 218, 219, 220, 527, 528, 529,
	530, 622, 623, 627, 207, 465, 466, 467, 468, 295,
	617, 312, 471, 470, 334, 335, 382, 452, 543, 545,
	556, 560, 562, 564, 570, 573, 544, 546, 557, 561,
	563, 565, 571, 574, 533, 535, 537, 539, 552, 551,
	548, 576, 577, 554, 559, 538, 550, 555, 568, 575,
	572, 532, 536, 540, 549, 567, 566, 547, 558, 569,
	553, 541, 534, 542, 0, 198, 223, 371, 0, 457,
	291, 653, 621, 487, 616, 208, 225, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 202, 211, 224, 234, 238, 245, 264, 279, 281,
	288, 301, 313, 321, 322, 325, 331, 383, 389, 390,
	391, 392, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 439, 440, 442, 444, 446, 458,
	463, 477, 478, 479, 480, 481, 484, 485, 491, 492,
	493, 494, 495, 503, 504, 519, 589, 591, 608, 628,
	635, 483, 304, 305, 447, 448, 317, 318, 649, 650,
	303, 603, 636, 600, 648, 630, 441, 381, 0, 0,
	384, 284, 308, 323, 0, 620, 505, 229, 469, 293,
	253, 0, 0, 213, 248, 232, 262, 277, 280, 327,
	394, 403, 432, 437, 299, 274, 246, 462, 243, 488,
	522, 523, 524, 526, 398, 269, 436, 399, 0, 379,
	579, 580, 319, 0, 0, 0, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 369, 270, 0, 0, 206, 508, 0, 433, 0,
	205, 0, 490, 255, 380, 377, 586, 285, 276, 272,
	252, 320, 388, 431, 521, 425, 0, 373, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 250, 328, 204, 416, 501, 289, 0, 0, 0,
	0, 2145, 510, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	354, 363, 362, 342, 343, 345, 347, 353, 360, 366,
	339, 348, 0, 0, 612, 0, 0, 0, 268, 324,
	275, 267, 583, 0, 0, 0, 0, 0, 0, 599,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 405, 260, 0, 456, 0, 0, 0, 632, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 333, 199,
	227, 0, 0, 415, 464, 476, 0, 0, 0, 256,
	0, 474, 429, 607, 235, 287, 461, 435, 472, 443,
	290, 0, 0, 473, 375, 588, 453, 604, 633, 634,
	266, 409, 618, 525, 626, 651, 228, 263, 423, 509,
	610, 497, 400, 584, 585, 332, 496, 298, 203, 372,
	639, 226, 482, 374, 244, 233, 590, 615, 302, 254,
	292, 459, 646, 215, 520, 601, 241, 486, 0, 0,
	654, 249, 507, 613, 602, 217, 597, 506, 396, 329,
	330, 216, 0, 460, 271, 296, 0, 0, 261, 418,
	592, 593, 259, 655, 230, 625, 222, 0, 624, 411,
	587, 598, 397, 386, 221, 596, 395, 385, 337, 358,
	359, 283, 310, 450, 378, 451, 309, 311, 407, 406,
	408, 209, 611, 629, 0, 210, 0, 502, 614, 656,
	455, 214, 236, 237, 239, 0, 282, 286, 294, 297,
	306, 307, 316, 370, 422, 449, 445, 454, 0, 582,
	605, 619, 631, 637, 638, 640, 641, 642, 643, 644,
	647, 645, 410, 314, 498, 336, 376, 0, 0, 428,
	475, 242, 609, 499, 201, 0, 0, 0, 0, 257,
	258, 0, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	652, 511, 517, 512, 513, 514, 515, 516, 0, 518,
	0, 0, 0, 0, 0, 401, 0, 594, 595, 675,
	387, 489, 606, 338, 352, 355, 344, 364, 0, 365,
	340, 341, 346, 349, 350, 351, 356, 357, 361, 367,
	251, 212, 393, 402, 581, 315, 218, 219, 220, 527,
	528, 529, 530, 622, 623, 627, 207, 465, 466, 467,
	468, 295, 617, 312, 471, 470, 334, 335, 382, 452,
	543, 545, 556, 560, 562, 564, 570, 573, 544, 546,
	557, 561, 563, 565, 571, 574, 533, 535, 537, 539,
	552, 551, 548, 576, 577, 554, 559, 538, 550, 555,
	568, 575, 572, 532, 536, 540, 549, 567, 566, 547,
	558, 569, 553, 541, 534, 542, 0, 198, 223, 371,
	0, 457, 291, 653, 621, 487, 616, 208, 225, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 211, 224, 234, 238, 245, 264,
	279, 281, 288, 301, 313, 321, 322, 325, 331, 383,
	389, 390, 391, 392, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 439, 440, 442, 444,
	446, 458, 463, 477, 478, 479, 480, 481, 484, 485,
	491, 492, 493, 494, 495, 503, 504, 519, 589, 591,
	608, 628, 635, 483, 304, 305, 447, 448, 317, 318,
	649, 650, 303, 603, 636, 600, 648, 630, 441, 381,
	0, 0, 384, 284, 308, 323, 0, 620, 505, 229,
	469, 293, 253, 0, 0, 213, 248, 232, 262, 277,
	280, 327, 394, 403, 432, 437, 299, 274, 246, 462,
	243, 488, 522, 523, 524, 526, 398, 269, 436, 399,
	0, 379, 579, 580, 319, 0, 0, 0, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 369, 270, 0, 0, 206, 508, 0,
	433, 0, 205, 0, 490, 255, 380, 377, 586, 285,
	276, 272, 252, 320, 388, 431, 521, 425, 0, 373,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 250, 328, 204, 416, 501, 289, 0,
	0, 0, 0, 2895, 510, 727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 354, 363, 362, 342, 343, 345, 347, 353,
	360, 366, 339, 348, 0, 0, 612, 0, 0, 0,
	268, 324, 275, 267, 583, 0, 0, 0, 0, 0,
	0, 599, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2896, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 405, 260, 0, 456, 0, 0, 0,
	632, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	333, 199, 227, 0, 0, 415, 464, 476, 0, 0,
	0, 256, 0, 474, 429, 607, 235, 287, 461, 435,
	472, 443, 290, 0, 0, 473, 375, 588, 453, 604,
	633, 634, 266, 409, 618, 525, 626, 651, 228, 263,
	423, 509, 610, 497, 400, 584, 585, 332, 496, 298,
	203, 372, 639, 226, 482, 374, 244, 233, 590, 615,
	302, 254, 292, 459, 646, 215, 520, 601, 241, 486,
	0, 0, 654, 249, 507, 613, 602, 217, 597, 506,
	396, 329, 330, 216, 0, 460, 271, 296, 0, 0,
	261, 418, 592, 593, 259, 655, 230, 625, 222, 0,
	624, 411, 587, 598, 397, 386, 221, 596, 395, 385,
	337, 358, 359, 283, 310, 450, 378, 451, 309, 311,
	407, 406, 408, 209, 611, 629, 0, 210, 0, 502,
	614, 656, 455, 214, 236, 237, 239, 0, 282, 286,
	294, 297, 306, 307, 316, 370, 422, 449, 445, 454,
	0, 582, 605, 619, 631, 637, 638, 640, 641, 642,
	643, 644, 647, 645, 410, 314, 498, 336, 376, 0,
	0, 428, 475, 242, 609, 499, 201, 0, 0, 0,
	0, 257, 258, 0, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 652, 511, 517, 512, 513, 514, 515, 516,
	0, 518, 0, 0, 0, 0, 0, 401, 0, 594,
	595, 675, 387, 489, 606, 338, 352, 355, 344, 364,
	0, 365, 340, 341, 346, 349, 350, 351, 356, 357,
	361, 367, 251, 212, 393, 402, 581, 315, 218, 219,
	220, 527, 528, 529, 530, 622, 623, 627, 207, 465,
	466, 467, 468, 295, 617, 312, 471, 470, 334, 335,
	382, 452, 543, 545, 556, 560, 562, 564, 570, 573,
	544, 546, 557, 561, 563, 565, 571, 574, 533, 535,
	537, 539, 552, 551, 548, 576, 577, 554, 559, 538,
	550, 555, 568, 575, 572, 532, 536, 540, 549, 567,
	566, 547, 558, 569, 553, 541, 534, 542, 0, 198,
	223, 371, 0, 457, 291, 653, 621, 487, 616, 208,
	225, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 202, 211, 224, 234, 238,
	245, 264, 279, 281, 288, 301, 313, 321, 322, 325,
	331, 383, 389, 390, 391, 392, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 439, 440,
	442, 444, 446, 458, 463, 477, 478, 479, 480, 481,
	484, 485, 491, 492, 493, 494, 495, 503, 504, 519,
	589, 591, 608, 628, 635, 483, 304, 305, 447, 448,
	317, 318, 649, 650, 303, 603, 636, 600, 648, 630,
	441, 381, 0, 0, 384, 284, 308, 323, 0, 620,
	505, 229, 469, 293, 253, 0, 0, 213, 248, 232,
	262, 277, 280, 327, 394, 403, 432, 437, 299, 274,
	246, 462, 243, 488, 522, 523, 524, 526, 398, 269,
	436, 399, 0, 379, 579, 580, 319, 0, 0, 0,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 369, 270, 0, 0, 206,
	508, 0, 433, 0, 205, 0, 490, 255, 380, 377,
	586, 285, 276, 272, 252, 320, 388, 431, 521, 425,
	0, 373, 0, 0, 500, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 250, 328, 204, 416, 501,
	289, 0, 0, 0, 0, 0, 510, 727, 0, 0,
	0, 0, 2880, 0, 0, 0, 0, 240, 0, 0,
	247, 2881, 0, 0, 354, 363, 362, 342, 343, 345,
	347, 353, 360, 366, 339, 348, 0, 0, 612, 0,
	0, 0, 268, 324, 275, 267, 583, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 405, 260, 0, 456, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 333, 199, 227, 0, 0, 415, 464, 476,
	0, 0, 0, 256, 0, 474, 429, 607, 235, 287,
	461, 435, 472, 443, 290, 0, 0, 473, 375, 588,
	453, 604, 633, 634, 266, 409, 618, 525, 626, 651,
	228, 263, 423, 509, 610, 497, 400, 584, 585, 332,
	496, 298, 203, 372, 639, 226, 482, 374, 244, 233,
	590, 615, 302, 254, 292, 459, 646, 215, 520, 601,
	241, 486, 0, 0, 654, 249, 507, 613, 602, 217,
	597, 506, 396, 329, 330, 216, 0, 460, 271, 296,
	0, 0, 261, 418, 592, 593, 259, 655, 230, 625,
	222, 0, 624, 411, 587, 598, 397, 386, 221, 596,
	395, 385, 337, 358, 359, 283, 310, 450, 378, 451,
	309, 311, 407, 406, 408, 209, 611, 629, 0, 210,
	0, 502, 614, 656, 455, 214, 236, 237, 239, 0,
	282, 286, 294, 297, 306, 307, 316, 370, 422, 449,
	445, 454, 0, 582, 605, 619, 631, 637, 638, 640,
	641, 642, 643, 644, 647, 645, 410, 314, 498, 336,
	376, 0, 0, 428, 475, 242, 609, 499, 201, 0,
	0, 0, 0, 257, 258, 0, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 652, 511, 517, 512, 513, 514,
	515, 516, 0, 518, 0, 0, 0, 0, 0, 401,
	0, 594, 595, 675, 387, 489, 606, 338, 352, 355,
	344, 364, 0, 365, 340, 341, 346, 349, 350, 351,
	356, 357, 361, 367, 251, 212, 393, 402, 581, 315,
	218, 219, 220, 527, 528, 529, 530, 622, 623, 627,
	207, 465, 466, 467, 468, 295, 617, 312, 471, 470,
	334, 335, 382, 452, 543, 545, 556, 560, 562, 564,
	570, 573, 544, 546, 557, 561, 563, 565, 571, 574,
	533, 535, 537, 539, 552, 551, 548, 576, 577, 554,
	559, 538, 550, 555, 568, 575, 572, 532, 536, 540,
	549, 567, 566, 547, 558, 569, 553, 541, 534, 542,
	0, 198, 223, 371, 0, 457, 291, 653, 621, 487,
	616, 208, 225, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 202, 211, 224,
	234, 238, 245, 264, 279, 281, 288, 301, 313, 321,
	322, 325, 331, 383, 389, 390, 391, 392, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	439, 440, 442, 444, 446, 458, 463, 477, 478, 479,
	480, 481, 484, 485, 491, 492, 493, 494, 495, 503,
	504, 519, 589, 591, 608, 628, 635, 483, 304, 305,
	447, 448, 317, 318, 649, 650, 303, 603, 636, 600,
	648, 630, 441, 381, 0, 0, 384, 284, 308, 323,
	0, 620, 505, 229, 469, 293, 253, 0, 0, 213,
	248, 232, 262, 277, 280, 327, 394, 403, 432, 437,
	299, 274, 246, 462, 243, 488, 522, 523, 524, 526,
	398, 269, 436, 399, 0, 379, 579, 580, 319, 0,
	0, 0, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 273, 1812, 0, 0, 0, 369, 270, 0,
	0, 206, 508, 0, 433, 0, 205, 0, 490, 255,
	380, 377, 586, 285, 276, 272, 252, 320, 388, 431,
	521, 425, 0, 373, 0, 0, 500, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 250, 328, 204,
	416, 501, 289, 0, 0, 0, 0, 1811, 510, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 354, 363, 362, 342,
	343, 345, 347, 353, 360, 366, 339, 348, 0, 0,
	612, 0, 0, 0, 268, 324, 275, 267, 583, 0,
	0, 0, 0, 0, 0, 599, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 405, 260, 0,
	456, 0, 0, 0, 632, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 333, 199, 227, 0, 0, 415,
	464, 476, 0, 0, 0, 256, 0, 474, 429, 607,
	235, 287, 461, 435, 472, 443, 290, 0, 0, 473,
	375, 588, 453, 604, 633, 634, 266, 409, 618, 525,
	626, 651, 228, 263, 423, 509, 610, 497, 400, 584,
	585, 332, 496, 298, 203, 372, 639, 226, 482, 374,
	244, 233, 590, 615, 302, 254, 292, 459, 646, 215,
	520, 601, 241, 486, 0, 0, 654, 249, 507, 613,
	602, 217, 597, 506, 396, 329, 330, 216, 0, 460,
	271, 296, 0, 0, 261, 418, 592, 593, 259, 655,
	230, 625, 222, 0, 624, 411, 587, 598, 397, 386,
	221, 596, 395, 385, 337, 358, 359, 283, 310, 450,
	378, 451, 309, 311, 407, 406, 408, 209, 611, 629,
	0, 210, 0, 502, 614, 656, 455, 214, 236, 237,
	239, 0, 282, 286, 294, 297, 306, 307, 316, 370,
	422, 449, 445, 454, 0, 582, 605, 619, 631, 637,
	638, 640, 641, 642, 643, 644, 647, 645, 410, 314,
	498, 336, 376, 0, 0, 428, 475, 242, 609, 499,
	201, 0, 0, 0, 0, 257, 258, 0, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 652, 511, 517, 512,
	513, 514, 515, 516, 0, 518, 0, 0, 0, 0,
	0, 401, 0, 594, 595, 675, 387, 489, 606, 338,
	352, 355, 344, 364, 0, 365, 340, 341, 346, 349,
	350, 351, 356, 357, 361, 367, 251, 212, 393, 402,
	581, 315, 218, 219, 220, 527, 528, 529, 530, 622,
	623, 627, 207, 465, 466, 467, 468, 295, 617, 312,
	471, 470, 334, 335, 382, 452, 543, 545, 556, 560,
	562, 564, 570, 573, 544, 546, 557, 561, 563, 565,
	571, 574, 533, 535, 537, 539, 552, 551, 548, 576,
	577, 554, 559, 538, 550, 555, 568, 575, 572, 532,
	536, 540, 549, 567, 566, 547, 558, 569, 553, 541,
	534, 542, 0, 198, 223, 371, 0, 457, 291, 653,
	621, 487, 616, 208, 225, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 264, 279, 281, 288, 301,
	313, 321, 322, 325, 331, 383, 389, 390, 391, 392,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 439, 440, 442, 444, 446, 458, 463, 477,
	478, 479, 480, 481, 484, 485, 491, 492, 493, 494,
	495, 503, 504, 519, 589, 591, 608, 628, 635, 483,
	304, 305, 447, 448, 317, 318, 649, 650, 303, 603,
	636, 600, 648, 630, 441, 381, 0, 0, 384, 284,
	308, 323, 0, 620, 505, 229, 469, 293, 253, 0,
	0, 213, 248, 232, 262, 277, 280, 327, 394, 403,
	432, 437, 299, 274, 246, 462, 243, 488, 522, 523,
	524, 526, 398, 269, 436, 399, 0, 379, 579, 580,
	319, 0, 0, 0, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 369,
	270, 0, 0, 206, 508, 0, 433, 0, 205, 0,
	490, 255, 380, 377, 586, 285, 276, 272, 252, 320,
	388, 431, 521, 425, 0, 373, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 250,
	328, 204, 416, 501, 289, 0, 0, 0, 0, 0,
	510, 729, 730, 731, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 354, 363,
	362, 342, 343, 345, 347, 353, 360, 366, 339, 348,
	0, 0, 612, 0, 0, 0, 268, 324, 275, 267,
	583, 0, 0, 0, 0, 0, 0, 599, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 405,
	260, 0, 456, 0, 0, 0, 632, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 333, 199, 227, 0,
	0, 415, 464, 476, 0, 0, 0, 256, 0, 474,
	429, 607, 235, 287, 461, 435, 472, 443, 290, 0,
	0, 473, 375, 588, 453, 604, 633, 634, 266, 409,
	618, 525, 626, 651, 228, 263, 423, 509, 610, 497,
	400, 584, 585, 332, 496, 298, 203, 372, 639, 226,
	482, 374, 244, 233, 590, 615, 302, 254, 292, 459,
	646, 215, 520, 601, 241, 486, 0, 0, 654, 249,
	507, 613, 602, 217, 597, 506, 396, 329, 330, 216,
	0, 460, 271, 296, 0, 0, 261, 418, 592, 593,
	259, 655, 230, 625, 222, 0, 624, 411, 587, 598,
	397, 386, 221, 596, 395, 385, 337, 358, 359, 283,
	310, 450, 378, 451, 309, 311, 407, 406, 408, 209,
	611, 629, 0, 210, 0, 502, 614, 656, 455, 214,
	236, 237, 239, 0, 282, 286, 294, 297, 306, 307,
	316, 370, 422, 449, 445, 454, 0, 582, 605, 619,
	631, 637, 638, 640, 641, 642, 643, 644, 647, 645,
	410, 314, 498, 336, 376, 0, 0, 428, 475, 242,
	609, 499, 201, 0, 0, 0, 0, 257, 258, 0,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 652, 511,
	517, 512, 513, 514, 515, 516, 0, 518, 0, 0,
	0, 0, 0, 401, 0, 594, 595, 675, 387, 489,
	606, 338, 352, 355, 344, 364, 0, 365, 340, 341,
	346, 349, 350, 351, 356, 357, 361, 367, 251, 212,
	393, 402, 581, 315, 218, 219, 220, 527, 528, 529,
	530, 622, 623, 627, 207, 465, 466, 467, 468, 295,
	617, 312, 471, 470, 334, 335, 382, 452, 543, 545,
	556, 560, 562, 564, 570, 573, 544, 546, 557, 561,
	563, 565, 571, 574, 533, 535, 537, 539, 552, 551,
	548, 576, 577, 554, 559, 538, 550, 555, 568, 575,
	572, 532, 536, 540, 549, 567, 566, 547, 558, 569,
	553, 541, 534, 542, 0, 198, 223, 371, 0, 457,
	291, 653, 621, 487, 616, 208, 225, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 202, 211, 224, 234, 238, 245, 264, 279, 281,
	288, 301, 313, 321, 322, 325, 331, 383, 389, 390,
	391, 392, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 439, 440, 442, 444, 446, 458,
	463, 477, 478, 479, 480, 481, 484, 485, 491, 492,
	493, 494, 495, 503, 504, 519, 589, 591, 608, 628,
	635, 483, 304, 305, 447, 448, 317, 318, 649, 650,
	303, 603, 636, 600, 648, 630, 441, 381, 0, 0,
	384, 284, 308, 323, 0, 620, 505, 229, 469, 293,
	253, 0, 0, 213, 248, 232, 262, 277, 280, 327,
	394, 403, 432, 437, 299, 274, 246, 462, 243, 488,
	522, 523, 524, 526, 398, 269, 436, 399, 0, 379,
	579, 580, 319, 0, 0, 0, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 369, 270, 0, 0, 206, 508, 0, 433, 0,
	205, 0, 490, 255, 380, 377, 586, 285, 276, 272,
	252, 320, 388, 431, 521, 425, 0, 373, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 250, 328, 204, 416, 501, 289, 0, 0, 0,
	0, 0, 510, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	354, 363, 362, 342, 343, 345, 347, 353, 360, 366,
	339, 348, 0, 0, 612, 0, 0, 0, 268, 324,
	275, 267, 583, 0, 0, 0, 0, 0, 0, 599,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 405, 260, 0, 456, 0, 0, 0, 632, 0,
	0, 0, 4087, 0, 0, 0, 368, 0, 333, 199,
	227, 0, 0, 415, 464, 476, 0, 0, 0, 256,
	0, 474, 429, 607, 235, 287, 461, 435, 472, 443,
	290, 0, 0, 473, 375, 588, 453, 604, 633, 634,
	266, 409, 618, 525, 626, 651, 228, 263, 423, 509,
	610, 497, 400, 584, 585, 332, 496, 298, 203, 372,
	639, 226, 482, 374, 244, 233, 590, 615, 302, 254,
	292, 459, 646, 215, 520, 601, 241, 486, 0, 0,
	654, 249, 507, 613, 602, 217, 597, 506, 396, 329,
	330, 216, 0, 460, 271, 296, 0, 0, 261, 418,
	592, 593, 259, 655, 230, 625, 222, 0, 624, 411,
	587, 598, 397, 386, 221, 596, 395, 385, 337, 358,
	359, 283, 310, 450, 378, 451, 309, 311, 407, 406,
	408, 209, 611, 629, 0, 210, 0, 502, 614, 656,
	455, 214, 236, 237, 239, 0, 282, 286, 294, 297,
	306, 307, 316, 370, 422, 449, 445, 454, 0, 582,
	605, 619, 631, 637, 638, 640, 641, 642, 643, 644,
	647, 645, 410, 314, 498, 336, 376, 0, 0, 428,
	475, 242, 609, 499, 201, 0, 0, 0, 0, 257,
	258, 0, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	652, 511, 517, 512, 513, 514, 515, 516, 0, 518,
	0, 0, 0, 0, 0, 401, 0, 594, 595, 675,
	387, 489, 606, 338, 352, 355, 344, 364, 0, 365,
	340, 341, 346, 349, 350, 351, 356, 357, 361, 367,
	251, 212, 393, 402, 581, 315, 218, 219, 220, 527,
	528, 529, 530, 622, 623, 627, 207, 465, 466, 467,
	468, 295, 617, 312, 471, 470, 334, 335, 382, 452,
	543, 545, 556, 560, 562, 564, 570, 573, 544, 546,
	557, 561, 563, 565, 571, 574, 533, 535, 537, 539,
	552, 551, 548, 576, 577, 554, 559, 538, 550, 555,
	568, 575, 572, 532, 536, 540, 549, 567, 566, 547,
	558, 569, 553, 541, 534, 542, 0, 198, 223, 371,
	0, 457, 291, 653, 621, 487, 616, 208, 225, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 211, 224, 234, 238, 245, 264,
	279, 281, 288, 301, 313, 321, 322, 325, 331, 383,
	389, 390, 391, 392, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 439, 440, 442, 444,
	446, 458, 463, 477, 478, 479, 480, 481, 484, 485,
	491, 492, 493, 494, 495, 503, 504, 519, 589, 591,
	608, 628, 635, 483, 304, 305, 447, 448, 317, 318,
	649, 650, 303, 603, 636, 600, 648, 630, 441, 381,
	0, 0, 384, 284, 308, 323, 0, 620, 505, 229,
	469, 293, 253, 0, 0, 213, 248, 232, 262, 277,
	280, 327, 394, 403, 432, 437, 299, 274, 246, 462,
	243, 488, 522, 523, 524, 526, 398, 269, 436, 399,
	0, 379, 579, 580, 319, 0, 0, 0, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 369, 270, 0, 0, 206, 508, 0,
	433, 0, 205, 0, 490, 255, 380, 377, 586, 285,
	276, 272, 252, 320, 388, 431, 521, 425, 0, 373,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 250, 328, 204, 416, 501, 289, 0,
	0, 0, 0, 1974, 510, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 354, 363, 362, 342, 343, 345, 347, 353,
	360, 366, 339, 348, 0, 0, 612, 0, 0, 0,
	268, 324, 275, 267, 583, 0, 0, 0, 0, 0,
	0, 599, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 405, 260, 0, 456, 0, 0, 0,
	632, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	333, 199, 227, 0, 0, 415, 464, 476, 0, 0,
	0, 256, 0, 474, 429, 607, 235, 287, 461, 435,
	472, 443, 290, 0, 0, 473, 375, 588, 453, 604,
	633, 634, 266, 409, 618, 525, 626, 651, 228, 263,
	423, 509, 610, 497, 400, 584, 585, 332, 496, 298,
	203, 372, 639, 226, 482, 374, 244, 233, 590, 615,
	302, 254, 292, 459, 646, 215, 520, 601, 241, 486,
	0, 0, 654, 249, 507, 613, 602, 217, 597, 506,
	396, 329, 330, 216, 0, 460, 271, 296, 0, 0,
	261, 418, 592, 593, 259, 655, 230, 625, 222, 0,
	624, 411, 587, 598, 397, 386, 221, 596, 395, 385,
	337, 358, 359, 283, 310, 450, 378, 451, 309, 311,
	407, 406, 408, 209, 611, 629, 0, 210, 0, 502,
	614, 656, 455, 214, 236, 237, 239, 0, 282, 286,
	294, 297, 306, 307, 316, 370, 422, 449, 445, 454,
	0, 582, 605, 619, 631, 637, 638, 640, 641, 642,
	643, 644, 647, 645, 410, 314, 498, 336, 376, 0,
	0, 428, 475, 242, 609, 499, 201, 0, 0, 0,
	0, 257, 258, 0, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 652, 511, 517, 512, 513, 514, 515, 516,
	0, 518, 0, 0, 0, 0, 0, 401, 0, 594,
	595, 675, 387, 489, 606, 338, 352, 355, 344, 364,
	0, 365, 340, 341, 346, 349, 350, 351, 356, 357,
	361, 367, 251, 212, 393, 402, 581, 315, 218, 219,
	220, 527, 528, 529, 530, 622, 623, 627, 207, 465,
	466, 467, 468, 295, 617, 312, 471, 470, 334, 335,
	382, 452, 543, 545, 556, 560, 562, 564, 570, 573,
	544, 546, 557, 561, 563, 565, 571, 574, 533, 535,
	537, 539, 552, 551, 548, 576, 577, 554, 559, 538,
	550, 555, 568, 575, 572, 532, 536, 540, 549, 567,
	566, 547, 558, 569, 553, 541, 534, 542, 0, 198,
	223, 371, 0, 457, 291, 653, 621, 487, 616, 208,
	225, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 202, 211, 224, 234, 238,
	245, 264, 279, 281, 288, 301, 313, 321, 322, 325,
	331, 383, 389, 390, 391, 392, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 439, 440,
	442, 444, 446, 458, 463, 477, 478, 479, 480, 481,
	484, 485, 491, 492, 493, 494, 495, 503, 504, 519,
	589, 591, 608, 628, 635, 483, 304, 305, 447, 448,
	317, 318, 649, 650, 303, 603, 636, 600, 648, 630,
	441, 381, 0, 0, 384, 284, 308, 323, 0, 620,
	505, 229, 469, 293, 253, 0, 0, 213, 248, 232,
	262, 277, 280, 327, 394, 403, 432, 437, 299, 274,
	246, 462, 243, 488, 522, 523, 524, 526, 398, 269,
	436, 399, 0, 379, 579, 580, 319, 0, 0, 0,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 369, 270, 0, 0, 206,
	508, 0, 433, 0, 205, 0, 490, 255, 380, 377,
	586, 285, 276, 272, 252, 320, 388, 431, 521, 425,
	0, 373, 0, 0, 500, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 250, 328, 204, 416, 501,
	289, 0, 0, 0, 0, 0, 510, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 354, 363, 362, 342, 343, 345,
	347, 353, 360, 366, 339, 348, 0, 0, 612, 0,
	0, 0, 268, 324, 275, 267, 583, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 405, 260, 0, 456, 0,
	0, 0, 632, 0, 0, 0, 3743, 0, 0, 0,
	368, 0, 333, 199, 227, 0, 0, 415, 464, 476,
	0, 0, 0, 256, 0, 474, 429, 607, 235, 287,
	461, 435, 472, 443, 290, 0, 0, 473, 375, 588,
	453, 604, 633, 634, 266, 409, 618, 525, 626, 651,
	228, 263, 423, 509, 610, 497, 400, 584, 585, 332,
	496, 298, 203, 372, 639, 226, 482, 374, 244, 233,
	590, 615, 302, 254, 292, 459, 646, 215, 520, 601,
	241, 486, 0, 0, 654, 249, 507, 613, 602, 217,
	597, 506, 396, 329, 330, 216, 0, 460, 271, 296,
	0, 0, 261, 418, 592, 593, 259, 655, 230, 625,
	222, 0, 624, 411, 587, 598, 397, 386, 221, 596,
	395, 385, 337, 358, 359, 283, 310, 450, 378, 451,
	309, 311, 407, 406, 408, 209, 611, 629, 0, 210,
	0, 502, 614, 656, 455, 214, 236, 237, 239, 0,
	282, 286, 294, 297, 306, 307, 316, 370, 422, 449,
	445, 454, 0, 582, 605, 619, 631, 637, 638, 640,
	641, 642, 643, 644, 647, 645, 410, 314, 498, 336,
	376, 0, 0, 428, 475, 242, 609, 499, 201, 0,
	0, 0, 0, 257, 258, 0, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 652, 511, 517, 512, 513, 514,
	515, 516, 0, 518, 0, 0, 0, 0, 0, 401,
	0, 594, 595, 675, 387, 489, 606, 338, 352, 355,
	344, 364, 0, 365, 340, 341, 346, 349, 350, 351,
	356, 357, 361, 367, 251, 212, 393, 402, 581, 315,
	218, 219, 220, 527, 528, 529, 530, 622, 623, 627,
	207, 465, 466, 467, 468, 295, 617, 312, 471, 470,
	334, 335, 382, 452, 543, 545, 556, 560, 562, 564,
	570, 573, 544, 546, 557, 561, 563, 565, 571, 574,
	533, 535, 537, 539, 552, 551, 548, 576, 577, 554,
	559, 538, 550, 555, 568, 575, 572, 532, 536, 540,
	549, 567, 566, 547, 558, 569, 553, 541, 534, 542,
	0, 198, 223, 371, 0, 457, 291, 653, 621, 487,
	616, 208, 225, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 202, 211, 224,
	234, 238, 245, 264, 279, 281, 288, 301, 313, 321,
	322, 325, 331, 383, 389, 390, 391, 392, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	439, 440, 442, 444, 446, 458, 463, 477, 478, 479,
	480, 481, 484, 485, 491, 492, 493, 494, 495, 503,
	504, 519, 589, 591, 608, 628, 635, 483, 304, 305,
	447, 448, 317, 318, 649, 650, 303, 603, 636, 600,
	648, 630, 441, 381, 0, 0, 384, 284, 308, 323,
	0, 620, 505, 229, 469, 293, 253, 0, 0, 213,
	248, 232, 262, 277, 280, 327, 394, 403, 432, 437,
	299, 274, 246, 462, 243, 488, 522, 523, 524, 526,
	398, 269, 436, 399, 0, 379, 579, 580, 319, 0,
	0, 0, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 369, 270, 0,
	0, 206, 508, 0, 433, 0, 205, 0, 490, 255,
	380, 377, 586, 285, 276, 272, 252, 320, 388, 431,
	521, 425, 0, 373, 0, 0, 500, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 250, 328, 204,
	416, 501, 289, 0, 95, 0, 0, 0, 510, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 354, 363, 362, 342,
	343, 345, 347, 353, 360, 366, 339, 348, 0, 0,
	612, 0, 0, 0, 268, 324, 275, 267, 583, 0,
	0, 0, 0, 0, 0, 599, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 405, 260, 0,
	456, 0, 0, 0, 632, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 333, 199, 227, 0, 0, 415,
	464, 476, 0, 0, 0, 256, 0, 474, 429, 607,
	235, 287, 461, 435, 472, 443, 290, 0, 0, 473,
	375, 588, 453, 604, 633, 634, 266, 409, 618, 525,
	626, 651, 228, 263, 423, 509, 610, 497, 400, 584,
	585, 332, 496, 298, 203, 372, 639, 226, 482, 374,
	244, 233, 590, 615, 302, 254, 292, 459, 646, 215,
	520, 601, 241, 486, 0, 0, 654, 249, 507, 613,
	602, 217, 597, 506, 396, 329, 330, 216, 0, 460,
	271, 296, 0, 0, 261, 418, 592, 593, 259, 655,
	230, 625, 222, 0, 624, 411, 587, 598, 397, 386,
	221, 596, 395, 385, 337, 358, 359, 283, 310, 450,
	378, 451, 309, 311, 407, 406, 408, 209, 611, 629,
	0, 210, 0, 502, 614, 656, 455, 214, 236, 237,
	239, 0, 282, 286, 294, 297, 306, 307, 316, 370,
	422, 449, 445, 454, 0, 582, 605, 619, 631, 637,
	638, 640, 641, 642, 643, 644, 647, 645, 410, 314,
	498, 336, 376, 0, 0, 428, 475, 242, 609, 499,
	201, 0, 0, 0, 0, 257, 258, 0, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 652, 511, 517, 512,
	513, 514, 515, 516, 0, 518, 0, 0, 0, 0,
	0, 401, 0, 594, 595, 675, 387, 489, 606, 338,
	352, 355, 344, 364, 0, 365, 340, 341, 346, 349,
	350, 351, 356, 357, 361, 367, 251, 212, 393, 402,
	581, 315, 218, 219, 220, 527, 528, 529, 530, 622,
	623, 627, 207, 465, 466, 467, 468, 295, 617, 312,
	471, 470, 334, 335, 382, 452, 543, 545, 556, 560,
	562, 564, 570, 573, 544, 546, 557, 561, 563, 565,
	571, 574, 533, 535, 537, 539, 552, 551, 548, 576,
	577, 554, 559, 538, 550, 555, 568, 575, 572, 532,
	536, 540, 549, 567, 566, 547, 558, 569, 553, 541,
	534, 542, 0, 198, 223, 371, 0, 457, 291, 653,
	621, 487, 616, 208, 225, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 264, 279, 281, 288, 301,
	313, 321, 322, 325, 331, 383, 389, 390, 391, 392,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 439, 440, 442, 444, 446, 458, 463, 477,
	478, 479, 480, 481, 484, 485, 491, 492, 493, 494,
	495, 503, 504, 519, 589, 591, 608, 628, 635, 483,
	304, 305, 447, 448, 317, 318, 649, 650, 303, 603,
	636, 600, 648, 630, 441, 381, 0, 0, 384, 284,
	308, 323, 0, 620, 505, 229, 469, 293, 253, 0,
	0, 213, 248, 232, 262, 277, 280, 327, 394, 403,
	432, 437, 299, 274, 246, 462, 243, 488, 522, 523,
	524, 526, 398, 269, 436, 399, 0, 379, 579, 580,
	319, 0, 0, 0, 531, 0, 0, 0, 0, 2442,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 369,
	270, 0, 0, 206, 508, 0, 433, 0, 205, 0,
	490, 255, 380, 377, 586, 285, 276, 272, 252, 320,
	388, 431, 521, 425, 0, 373, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 250,
	328, 204, 416, 501, 289, 0, 0, 0, 0, 0,
	510, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 354, 363,
	362, 342, 343, 345, 347, 353, 360, 366, 339, 348,
	0, 0, 612, 0, 0, 0, 268, 324, 275, 267,
	583, 0, 0, 0, 0, 0, 0, 599, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 405,
	260, 0, 456, 0, 0, 0, 632, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 333, 199, 227, 0,
	0, 415, 464, 476, 0, 0, 0, 256, 0, 474,
	429, 607, 235, 287, 461, 435, 472, 443, 290, 0,
	0, 473, 375, 588, 453, 604, 633, 634, 266, 409,
	618, 525, 626, 651, 228, 263, 423, 509, 610, 497,
	400, 584, 585, 332, 496, 298, 203, 372, 639, 226,
	482, 374, 244, 233, 590, 615, 302, 254, 292, 459,
	646, 215, 520, 601, 241, 486, 0, 0, 654, 249,
	507, 613, 602, 217, 597, 506, 396, 329, 330, 216,
	0, 460, 271, 296, 0, 0, 261, 418, 592, 593,
	259, 655, 230, 625, 222, 0, 624, 411, 587, 598,
	397, 386, 221, 596, 395, 385, 337, 358, 359, 283,
	310, 450, 378, 451, 309, 311, 407, 406, 408, 209,
	611, 629, 0, 210, 0, 502, 614, 656, 455, 214,
	236, 237, 239, 0, 282, 286, 294, 297, 306, 307,
	316, 370, 422, 449, 445, 454, 0, 582, 605, 619,
	631, 637, 638, 640, 641, 642, 643, 644, 647, 645,
	410, 314, 498, 336, 376, 0, 0, 428, 475, 242,
	609, 499, 201, 0, 0, 0, 0, 257, 258, 0,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 652, 511,
	517, 512, 513, 514, 515, 516, 0, 518, 0, 0,
	0, 0, 0, 401, 0, 594, 595, 675, 387, 489,
	606, 338, 352, 355, 344, 364, 0, 365, 340, 341,
	346, 349, 350, 351, 356, 357, 361, 367, 251, 212,
	393, 402, 581, 315, 218, 219, 220, 527, 528, 529,
	530, 622, 623, 627, 207, 465, 466, 467, 468, 295,
	617, 312, 471, 470, 334, 335, 382, 452, 543, 545,
	556, 560, 562, 564, 570, 573, 544, 546, 557, 561,
	563, 565, 571, 574, 533, 535, 537, 539, 552, 551,
	548, 576, 577, 554, 559, 538, 550, 555, 568, 575,
	572, 532, 536, 540, 549, 567, 566, 547, 558, 569,
	553, 541, 534, 542, 0, 198, 223, 371, 0, 457,
	291, 653, 621, 487, 616, 208, 225, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 202, 211, 224, 234, 238, 245, 264, 279, 281,
	288, 301, 313, 321, 322, 325, 331, 383, 389, 390,
	391, 392, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 439, 440, 442, 444, 446, 458,
	463, 477, 478, 479, 480, 481, 484, 485, 491, 492,
	493, 494, 495, 503, 504, 519, 589, 591, 608, 628,
	635, 483, 304, 305, 447, 448, 317, 318, 649, 650,
	303, 603, 636, 600, 648, 630, 441, 381, 0, 0,
	384, 284, 308, 323, 0, 620, 505, 229, 469, 293,
	253, 0, 0, 213, 248, 232, 262, 277, 280, 327,
	394, 403, 432, 437, 299, 274, 246, 462, 243, 488,
	522, 523, 524, 526, 398, 269, 436, 399, 0, 379,
	579, 580, 319, 0, 0, 0, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 369, 270, 0, 0, 206, 508, 0, 433, 0,
	205, 0, 490, 255, 380, 377, 586, 285, 276, 272,
	252, 320, 388, 431, 521, 425, 0, 373, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 250, 328, 204, 416, 501, 289, 0, 0, 0,
	0, 1793, 510, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	354, 363, 362, 342, 343, 345, 347, 353, 360, 366,
	339, 348, 0, 0, 612, 0, 0, 0, 268, 324,
	275, 267, 583, 0, 0, 0, 0, 0, 0, 599,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 405, 260, 0, 456, 0, 0, 0, 632, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 333, 199,
	227, 0, 0, 415, 464, 476, 0, 0, 0, 256,
	0, 474, 429, 607, 235, 287, 461, 435, 472, 443,
	290, 0, 0, 473, 375, 588, 453, 604, 633, 634,
	266, 409, 618, 525, 626, 651, 228, 263, 423, 509,
	610, 497, 400, 584, 585, 332, 496, 298, 203, 372,
	639, 226, 482, 374, 244, 233, 590, 615, 302, 254,
	292, 459, 646, 215, 520, 601, 241, 486, 0, 0,
	654, 249, 507, 613, 602, 217, 597, 506, 396, 329,
	330, 216, 0, 460, 271, 296, 0, 0, 261, 418,
	592, 593, 259, 655, 230, 625, 222, 0, 624, 411,
	587, 598, 397, 386, 221, 596, 395, 385, 337, 358,
	359, 283, 310, 450, 378, 451, 309, 311, 407, 406,
	408, 209, 611, 629, 0, 210, 0, 502, 614, 656,
	455, 214, 236, 237, 239, 0, 282, 286, 294, 297,
	306, 307, 316, 370, 422, 449, 445, 454, 0, 582,
	605, 619, 631, 637, 638, 640, 641, 642, 643, 644,
	647, 645, 410, 314, 498, 336, 376, 0, 0, 428,
	475, 242, 609, 499, 201, 0, 0, 0, 0, 257,
	258, 0, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	652, 511, 517, 512, 513, 514, 515, 516, 0, 518,
	0, 0, 0, 0, 0, 401, 0, 594, 595, 675,
	387, 489, 606, 338, 352, 355, 344, 364, 0, 365,
	340, 341, 346, 349, 350, 351, 356, 357, 361, 367,
	251, 212, 393, 402, 581, 315, 218, 219, 220, 527,
	528, 529, 530, 622, 623, 627, 207, 465, 466, 467,
	468, 295, 617, 312, 471, 470, 334, 335, 382, 452,
	543, 545, 556, 560, 562, 564, 570, 573, 544, 546,
	557, 561, 563, 565, 571, 574, 533, 535, 537, 539,
	552, 551, 548, 576, 577, 554, 559, 538, 550, 555,
	568, 575, 572, 532, 536, 540, 549, 567, 566, 547,
	558, 569, 553, 541, 534, 542, 0, 198, 223, 371,
	0, 457, 291, 653, 621, 487, 616, 208, 225, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 211, 224, 234, 238, 245, 264,
	279, 281, 288, 301, 313, 321, 322, 325, 331, 383,
	389, 390, 391, 392, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 439, 440, 442, 444,
	446, 458, 463, 477, 478, 479, 480, 481, 484, 485,
	491, 492, 493, 494, 495, 503, 504, 519, 589, 591,
	608, 628, 635, 483, 304, 305, 447, 448, 317, 318,
	649, 650, 303, 603, 636, 600, 648, 630, 441, 381,
	0, 0, 384, 284, 308, 323, 0, 620, 505, 229,
	469, 293, 253, 0, 0, 213, 248, 232, 262, 277,
	280, 327, 394, 403, 432, 437, 299, 274, 246, 462,
	243, 488, 522, 523, 524, 526, 398, 269, 436, 399,
	0, 379, 579, 580, 319, 0, 0, 0, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 369, 270, 0, 0, 206, 508, 0,
	433, 0, 205, 0, 490, 255, 380, 377, 586, 285,
	276, 272, 252, 320, 388, 431, 521, 425, 0, 373,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 250, 328, 204, 416, 501, 289, 0,
	0, 0, 0, 0, 510, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 354, 363, 362, 342, 343, 345, 347, 353,
	360, 366, 339, 348, 0, 0, 612, 0, 0, 0,
	268, 324, 275, 267, 583, 0, 0, 0, 0, 0,
	0, 599, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 405, 260, 0, 456, 0, 0, 0,
	632, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	333, 199, 227, 0, 0, 415, 464, 476, 0, 0,
	0, 256, 0, 474, 429, 607, 235, 287, 461, 435,
	472, 443, 290, 0, 0, 473, 375, 588, 453, 604,
	633, 634, 266, 409, 618, 525, 626, 651, 228, 263,
	423, 509, 610, 497, 400, 584, 585, 332, 496, 298,
	203, 372, 639, 226, 482, 374, 244, 233, 590, 615,
	302, 254, 292, 459, 646, 215, 520, 601, 241, 486,
	0, 0, 654, 249, 507, 613, 602, 217, 597, 506,
	396, 329, 330, 216, 0, 460, 271, 296, 0, 0,
	261, 418, 592, 593, 259, 655, 230, 625, 222, 0,
	624, 411, 587, 598, 397, 386, 221, 596, 395, 385,
	337, 358, 359, 283, 310, 450, 378, 451, 309, 311,
	407, 406, 408, 209, 611, 629, 0, 210, 0, 502,
	614, 656, 455, 214, 236, 237, 239, 0, 282, 286,
	294, 297, 306, 307, 316, 370, 422, 449, 445, 454,
	0, 582, 605, 619, 631, 637, 638, 640, 641, 642,
	643, 644, 647, 645, 410, 314, 498, 336, 376, 0,
	0, 428, 475, 242, 609, 499, 201, 0, 0, 0,
	0, 257, 258, 0, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 652, 511, 517, 512, 513, 514, 515, 516,
	0, 518, 0, 0, 0, 0, 0, 401, 0, 594,
	595, 675, 387, 489, 606, 338, 352, 355, 344, 364,
	0, 365, 340, 341, 346, 349, 350, 351, 356, 357,
	361, 367, 251, 212, 393, 402, 581, 315, 218, 219,
	220, 527, 528, 529, 530, 622, 623, 627, 207, 465,
	466, 467, 468, 295, 617, 312, 471, 470, 334, 335,
	382, 452, 543, 545, 556, 560, 562, 564, 570, 573,
	544, 546, 557, 561, 563, 565, 571, 574, 533, 535,
	537, 539, 552, 551, 548, 576, 577, 554, 559, 538,
	550, 555, 568, 575, 572, 532, 536, 540, 549, 567,
	566, 547, 558, 569, 553, 541, 534, 542, 0, 198,
	223, 371, 2092, 457, 291, 653, 621, 487, 616, 208,
	225, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 202, 211, 224, 234, 238,
	245, 264, 279, 281, 288, 301, 313, 321, 322, 325,
	331, 383, 389, 390, 391, 392, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 439, 440,
	442, 444, 446, 458, 463, 477, 478, 479, 480, 481,
	484, 485, 491, 492, 493, 494, 495, 503, 504, 519,
	589, 591, 608, 628, 635, 483, 304, 305, 447, 448,
	317, 318, 649, 650, 303, 603, 636, 600, 648, 630,
	441, 381, 0, 0, 384, 284, 308, 323, 0, 620,
	505, 229, 469, 293, 253, 0, 0, 213, 248, 232,
	262, 277, 280, 327, 394, 403, 432, 437, 299, 274,
	246, 462, 243, 488, 522, 523, 524, 526, 398, 269,
	436, 399, 0, 379, 579, 580, 319, 0, 0, 0,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 369, 270, 0, 0, 206,
	508, 0, 433, 0, 205, 0, 490, 255, 380, 377,
	586, 285, 276, 272, 252, 320, 388, 431, 521, 425,
	0, 373, 0, 0, 500, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 250, 328, 204, 416, 501,
	289, 0, 0, 0, 0, 2083, 510, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 354, 363, 362, 342, 343, 345,
	347, 353, 360, 366, 339, 348, 0, 0, 612, 0,
	0, 0, 268, 324, 275, 267, 583, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 405, 260, 0, 456, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 333, 199, 227, 0, 0, 415, 464, 476,
	0, 0, 0, 256, 0, 474, 429, 607, 235, 287,
	461, 435, 472, 443, 290, 0, 0, 473, 375, 588,
	453, 604, 633, 634, 266, 409, 618, 525, 626, 651,
	228, 263, 423, 509, 610, 497, 400, 584, 585, 332,
	496, 298, 203, 372, 639, 226, 482, 374, 244, 233,
	590, 615, 302, 254, 292, 459, 646, 215, 520, 601,
	241, 486, 0, 0, 654, 249, 507, 613, 602, 217,
	597, 506, 396, 329, 330, 216, 0, 460, 271, 296,
	0, 0, 261, 418, 592, 593, 259, 655, 230, 625,
	222, 0, 624, 411, 587, 598, 397, 386, 221, 596,
	395, 385, 337, 358, 359, 283, 310, 450, 378, 451,
	309, 311, 407, 406, 408, 209, 611, 629, 0, 210,
	0, 502, 614, 656, 455, 214, 236, 237, 239, 0,
	282, 286, 294, 297, 306, 307, 316, 370, 422, 449,
	445, 454, 0, 582, 605, 619, 631, 637, 638, 640,
	641, 642, 643, 644, 647, 645, 410, 314, 498, 336,
	376, 0, 0, 428, 475, 242, 609, 499, 201, 0,
	0, 0, 0, 257, 258, 0, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 652, 511, 517, 512, 513, 514,
	515, 516, 0, 518, 0, 0, 0, 0, 0, 401,
	0, 594, 595, 675, 387, 489, 606, 338, 352, 355,
	344, 364, 0, 365, 340, 341, 346, 349, 350, 351,
	356, 357, 361, 367, 251, 212, 393, 402, 581, 315,
	218, 219, 220, 527, 528, 529, 530, 622, 623, 627,
	207, 465, 466, 467, 468, 295, 617, 312, 471, 470,
	334, 335, 382, 452, 543, 545, 556, 560, 562, 564,
	570, 573, 544, 546, 557, 561, 563, 565, 571, 574,
	533, 535, 537, 539, 552, 551, 548, 576, 577, 554,
	559, 538, 550, 555, 568, 575, 572, 532, 536, 540,
	549, 567, 566, 547, 558, 569, 553, 541, 534, 542,
	0, 198, 223, 371, 0, 457, 291, 653, 621, 487,
	616, 208, 225, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 202, 211, 224,
	234, 238, 245, 264, 279, 281, 288, 301, 313, 321,
	322, 325, 331, 383, 389, 390, 391, 392, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	439, 440, 442, 444, 446, 458, 463, 477, 478, 479,
	480, 481, 484, 485, 491, 492, 493, 494, 495, 503,
	504, 519, 589, 591, 608, 628, 635, 483, 304, 305,
	447, 448, 317, 318, 649, 650, 303, 603, 636, 600,
	648, 630, 441, 381, 0, 0, 384, 284, 308, 323,
	0, 620, 505, 229, 469, 293, 253, 0, 0, 213,
	248, 232, 262, 277, 280, 327, 394, 403, 432, 437,
	299, 274, 246, 462, 243, 488, 522, 523, 524, 526,
	398, 269, 436, 399, 0, 379, 579, 580, 319, 0,
	0, 0, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 369, 270, 0,
	1941, 206, 508, 0, 433, 0, 205, 0, 490, 255,
	380, 377, 586, 285, 276, 272, 252, 320, 388, 431,
	521, 425, 0, 373, 0, 0, 500, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 250, 328, 204,
	416, 501, 289, 0, 0, 0, 0, 0, 510, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 354, 363, 362, 342,
	343, 345, 347, 353, 360, 366, 339, 348, 0, 0,
	612, 0, 0, 0, 268, 324, 275, 267, 583, 0,
	0, 0, 0, 0, 0, 599, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 405, 260, 0,
	456, 0, 0, 0, 632, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 333, 199, 227, 0, 0, 415,
	464, 476, 0, 0, 0, 256, 0, 474, 429, 607,
	235, 287, 461, 435, 472, 443, 290, 0, 0, 473,
	375, 588, 453, 604, 633, 634, 266, 409, 618, 525,
	626, 651, 228, 263, 423, 509, 610, 497, 400, 584,
	585, 332, 496, 298, 203, 372, 639, 226, 482, 374,
	244, 233, 590, 615, 302, 254, 292, 459, 646, 215,
	520, 601, 241, 486, 0, 0, 654, 249, 507, 613,
	602, 217, 597, 506, 396, 329, 330, 216, 0, 460,
	271, 296, 0, 0, 261, 418, 592, 593, 259, 655,
	230, 625, 222, 0, 624, 411, 587, 598, 397, 386,
	221, 596, 395, 385, 337, 358, 359, 283, 310, 450,
	378, 451, 309, 311, 407, 406, 408, 209, 611, 629,
	0, 210, 0, 502, 614, 656, 455, 214, 236, 237,
	239, 0, 282, 286, 294, 297, 306, 307, 316, 370,
	422, 449, 445, 454, 0, 582, 605, 619, 631, 637,
	638, 640, 641, 642, 643, 644, 647, 645, 410, 314,
	498, 336, 376, 0, 0, 428, 475, 242, 609, 499,
	201, 0, 0, 0, 0, 257, 258, 0, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 652, 511, 517, 512,
	513, 514, 515, 516, 0, 518, 0, 0, 0, 0,
	0, 401, 0, 594, 595, 675, 387, 489, 606, 338,
	352, 355, 344, 364, 0, 365, 340, 341, 346, 349,
	350, 351, 356, 357, 361, 367, 251, 212, 393, 402,
	581, 315, 218, 219, 220, 527, 528, 529, 530, 622,
	623, 627, 207, 465, 466, 467, 468, 295, 617, 312,
	471, 470, 334, 335, 382, 452, 543, 545, 556, 560,
	562, 564, 570, 573, 544, 546, 557, 561, 563, 565,
	571, 574, 533, 535, 537, 539, 552, 551, 548, 576,
	577, 554, 559, 538, 550, 555, 568, 575, 572, 532,
	536, 540, 549, 567, 566, 547, 558, 569, 553, 541,
	534, 542, 0, 198, 223, 371, 0, 457, 291, 653,
	621, 487, 616, 208, 225, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 264, 279, 281, 288, 301,
	313, 321, 322, 325, 331, 383, 389, 390, 391, 392,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 439, 440, 442, 444, 446, 458, 463, 477,
	478, 479, 480, 481, 484, 485, 491, 492, 493, 494,
	495, 503, 504, 519, 589, 591, 608, 628, 635, 483,
	304, 305, 447, 448, 317, 318, 649, 650, 303, 603,
	636, 600, 648, 630, 441, 381, 0, 0, 384, 284,
	308, 323, 0, 620, 505, 229, 469, 293, 253, 0,
	0, 213, 248, 232, 262, 277, 280, 327, 394, 403,
	432, 437, 299, 274, 246, 462, 243, 488, 522, 523,
	524, 526, 398, 269, 436, 399, 0, 379, 579, 580,
	319, 0, 0, 0, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 369,
	270, 0, 1939, 206, 508, 0, 433, 0, 205, 0,
	490, 255, 380, 377, 586, 285, 276, 272, 252, 320,
	388, 431, 521, 425, 0, 373, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 250,
	328, 204, 416, 501, 289, 0, 0, 0, 0, 0,
	510, 727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 354, 363,
	362, 342, 343, 345, 347, 353, 360, 366, 339, 348,
	0, 0, 612, 0, 0, 0, 268, 324, 275, 267,
	583, 0, 0, 0, 0, 0, 0, 599, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 405,
	260, 0, 456, 0, 0, 0, 632, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 333, 199, 227, 0,
	0, 415, 464, 476, 0, 0, 0, 256, 0, 474,
	429, 607, 235, 287, 461, 435, 472, 443, 290, 0,
	0, 473, 375, 588, 453, 604, 633, 634, 266, 409,
	618, 525, 626, 651, 228, 263, 423, 509, 610, 497,
	400, 584, 585, 332, 496, 298, 203, 372, 639, 226,
	482, 374, 244, 233, 590, 615, 302, 254, 292, 459,
	646, 215, 520, 601, 241, 486, 0, 0, 654, 249,
	507, 613, 602, 217, 597, 506, 396, 329, 330, 216,
	0, 460, 271, 296, 0, 0, 261, 418, 592, 593,
	259, 655, 230, 625, 222, 0, 624, 411, 587, 598,
	397, 386, 221, 596, 395, 385, 337, 358, 359, 283,
	310, 450, 378, 451, 309, 311, 407, 406, 408, 209,
	611, 629, 0, 210, 0, 502, 614, 656, 455, 214,
	236, 237, 239, 0, 282, 286, 294, 297, 306, 307,
	316, 370, 422, 449, 445, 454, 0, 582, 605, 619,
	631, 637, 638, 640, 641, 642, 643, 644, 647, 645,
	410, 314, 498, 336, 376, 0, 0, 428, 475, 242,
	609, 499, 201, 0, 0, 0, 0, 257, 258, 0,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 652, 511,
	517, 512, 513, 514, 515, 516, 0, 518, 0, 0,
	0, 0, 0, 401, 0, 594, 595, 675, 387, 489,
	606, 338, 352, 355, 344, 364, 0, 365, 340, 341,
	346, 349, 350, 351, 356, 357, 361, 367, 251, 212,
	393, 402, 581, 315, 218, 219, 220, 527, 528, 529,
	530, 622, 623, 627, 207, 465, 466, 467, 468, 295,
	617, 312, 471, 470, 334, 335, 382, 452, 543, 545,
	556, 560, 562, 564, 570, 573, 544, 546, 557, 561,
	563, 565, 571, 574, 533, 535, 537, 539, 552, 551,
	548, 576, 577, 554, 559, 538, 550, 555, 568, 575,
	572, 532, 536, 540, 549, 567, 566, 547, 558, 569,
	553, 541, 534, 542, 0, 198, 223, 371, 0, 457,
	291, 653, 621, 487, 616, 208, 225, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 202, 211, 224, 234, 238, 245, 264, 279, 281,
	288, 301, 313, 321, 322, 325, 331, 383, 389, 390,
	391, 392, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 439, 440, 442, 444, 446, 458,
	463, 477, 478, 479, 480, 481, 484, 485, 491, 492,
	493, 494, 495, 503, 504, 519, 589, 591, 608, 628,
	635, 483, 304, 305, 447, 448, 317, 318, 649, 650,
	303, 603, 636, 600, 648, 630, 441, 381, 0, 0,
	384, 284, 308, 323, 0, 620, 505, 229, 469, 293,
	253, 0, 0, 213, 248, 232, 262, 277, 280, 327,
	394, 403, 432, 437, 299, 274, 246, 462, 243, 488,
	522, 523, 524, 526, 398, 269, 436, 399, 0, 379,
	579, 580, 319, 0, 0, 0, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 369, 270, 0, 1937, 206, 508, 0, 433, 0,
	205, 0, 490, 255, 380, 377, 586, 285, 276, 272,
	252, 320, 388, 431, 521, 425, 0, 373, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 250, 328, 204, 416, 501, 289, 0, 0, 0,
	0, 0, 510, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	354, 363, 362, 342, 343, 345, 347, 353, 360, 366,
	339, 348, 0, 0, 612, 0, 0, 0, 268, 324,
	275, 267, 583, 0, 0, 0, 0, 0, 0, 599,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 405, 260, 0, 456, 0, 0, 0, 632, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 333, 199,
	227, 0, 0, 415, 464, 476, 0, 0, 0, 256,
	0, 474, 429, 607, 235, 287, 461, 435, 472, 443,
	290, 0, 0, 473, 375, 588, 453, 604, 633, 634,
	266, 409, 618, 525, 626, 651, 228, 263, 423, 509,
	610, 497, 400, 584, 585, 332, 496, 298, 203, 372,
	639, 226, 482, 374, 244, 233, 590, 615, 302, 254,
	292, 459, 646, 215, 520, 601, 241, 486, 0, 0,
	654, 249, 507, 613, 602, 217, 597, 506, 396, 329,
	330, 216, 0, 460, 271, 296, 0, 0, 261, 418,
	592, 593, 259, 655, 230, 625, 222, 0, 624, 411,
	587, 598, 397, 386, 221, 596, 395, 385, 337, 358,
	359, 283, 310, 450, 378, 451, 309, 311, 407, 406,
	408, 209, 611, 629, 0, 210, 0, 502, 614, 656,
	455, 214, 236, 237, 239, 0, 282, 286, 294, 297,
	306, 307, 316, 370, 422, 449, 445, 454, 0, 582,
	605, 619, 631, 637, 638, 640, 641, 642, 643, 644,
	647, 645, 410, 314, 498, 336, 376, 0, 0, 428,
	475, 242, 609, 499, 201, 0, 0, 0, 0, 257,
	258, 0, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	652, 511, 517, 512, 513, 514, 515, 516, 0, 518,
	0, 0, 0, 0, 0, 401, 0, 594, 595, 675,
	387, 489, 606, 338, 352, 355, 344, 364, 0, 365,
	340, 341, 346, 349, 350, 351, 356, 357, 361, 367,
	251, 212, 393, 402, 581, 315, 218, 219, 220, 527,
	528, 529, 530, 622, 623, 627, 207, 465, 466, 467,
	468, 295, 617, 312, 471, 470, 334, 335, 382, 452,
	543, 545, 556, 560, 562, 564, 570, 573, 544, 546,
	557, 561, 563, 565, 571, 574, 533, 535, 537, 539,
	552, 551, 548, 576, 577, 554, 559, 538, 550, 555,
	568, 575, 572, 532, 536, 540, 549, 567, 566, 547,
	558, 569, 553, 541, 534, 542, 0, 198, 223, 371,
	0, 457, 291, 653, 621, 487, 616, 208, 225, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 211, 224, 234, 238, 245, 264,
	279, 281, 288, 301, 313, 321, 322, 325, 331, 383,
	389, 390, 391, 392, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 439, 440, 442, 444,
	446, 458, 463, 477, 478, 479, 480, 481, 484, 485,
	491, 492, 493, 494, 495, 503, 504, 519, 589, 591,
	608, 628, 635, 483, 304, 305, 447, 448, 317, 318,
	649, 650, 303, 603, 636, 600, 648, 630, 441, 381,
	0, 0, 384, 284, 308, 323, 0, 620, 505, 229,
	469, 293, 253, 0, 0, 213, 248, 232, 262, 277,
	280, 327, 394, 403, 432, 437, 299, 274, 246, 462,
	243, 488, 522, 523, 524, 526, 398, 269, 436, 399,
	0, 379, 579, 580, 319, 0, 0, 0, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 369, 270, 0, 1935, 206, 508, 0,
	433, 0, 205, 0, 490, 255, 380, 377, 586, 285,
	276, 272, 252, 320, 388, 431, 521, 425, 0, 373,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 250, 328, 204, 416, 501, 289, 0,
	0, 0, 0, 0, 510, 727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 354, 363, 362, 342, 343, 345, 347, 353,
	360, 366, 339, 348, 0, 0, 612, 0, 0, 0,
	268, 324, 275, 267, 583, 0, 0, 0, 0, 0,
	0, 599, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 405, 260, 0, 456, 0, 0, 0,
	632, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	333, 199, 227, 0, 0, 415, 464, 476, 0, 0,
	0, 256, 0, 474, 429, 607, 235, 287, 461, 435,
	472, 443, 290, 0, 0, 473, 375, 588, 453, 604,
	633, 634, 266, 409, 618, 525, 626, 651, 228, 263,
	423, 509, 610, 497, 400, 584, 585, 332, 496, 298,
	203, 372, 639, 226, 482, 374, 244, 233, 590, 615,
	302, 254, 292, 459, 646, 215, 520, 601, 241, 486,
	0, 0, 654, 249, 507, 613, 602, 217, 597, 506,
	396, 329, 330, 216, 0, 460, 271, 296, 0, 0,
	261, 418, 592, 593, 259, 655, 230, 625, 222, 0,
	624, 411, 587, 598, 397, 386, 221, 596, 395, 385,
	337, 358, 359, 283, 310, 450, 378, 451, 309, 311,
	407, 406, 408, 209, 611, 629, 0, 210, 0, 502,
	614, 656, 455, 214, 236, 237, 239, 0, 282, 286,
	294, 297, 306, 307, 316, 370, 422, 449, 445, 454,
	0, 582, 605, 619, 631, 637, 638, 640, 641, 642,
	643, 644, 647, 645, 410, 314, 498, 336, 376, 0,
	0, 428, 475, 242, 609, 499, 201, 0, 0, 0,
	0, 257, 258, 0, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 652, 511, 517, 512, 513, 514, 515, 516,
	0, 518, 0, 0, 0, 0, 0, 401, 0, 594,
	595, 675, 387, 489, 606, 338, 352, 355, 344, 364,
	0, 365, 340, 341, 346, 349, 350, 351, 356, 357,
	361, 367, 251, 212, 393, 402, 581, 315, 218, 219,
	220, 527, 528, 529, 530, 622, 623, 627, 207, 465,
	466, 467, 468, 295, 617, 312, 471, 470, 334, 335,
	382, 452, 543, 545, 556, 560, 562, 564, 570, 573,
	544, 546, 557, 561, 563, 565, 571, 574, 533, 535,
	537, 539, 552, 551, 548, 576, 577, 554, 559, 538,
	550, 555, 568, 575, 572, 532, 536, 540, 549, 567,
	566, 547, 558, 569, 553, 541, 534, 542, 0, 198,
	223, 371, 0, 457, 291, 653, 621, 487, 616, 208,
	225, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 202, 211, 224, 234, 238,
	245, 264, 279, 281, 288, 301, 313, 321, 322, 325,
	331, 383, 389, 390, 391, 392, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 439, 440,
	442, 444, 446, 458, 463, 477, 478, 479, 480, 481,
	484, 485, 491, 492, 493, 494, 495, 503, 504, 519,
	589, 591, 608, 628, 635, 483, 304, 305, 447, 448,
	317, 318, 649, 650, 303, 603, 636, 600, 648, 630,
	441, 381, 0, 0, 384, 284, 308, 323, 0, 620,
	505, 229, 469, 293, 253, 0, 0, 213, 248, 232,
	262, 277, 280, 327, 394, 403, 432, 437, 299, 274,
	246, 462, 243, 488, 522, 523, 524, 526, 398, 269,
	436, 399, 0, 379, 579, 580, 319, 0, 0, 0,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 369, 270, 0, 1933, 206,
	508, 0, 433, 0, 205, 0, 490, 255, 380, 377,
	586, 285, 276, 272, 252, 320, 388, 431, 521, 425,
	0, 373, 0, 0, 500, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 250, 328, 204, 416, 501,
	289, 0, 0, 0, 0, 0, 510, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 354, 363, 362, 342, 343, 345,
	347, 353, 360, 366, 339, 348, 0, 0, 612, 0,
	0, 0, 268, 324, 275, 267, 583, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 405, 260, 0, 456, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 333, 199, 227, 0, 0, 415, 464, 476,
	0, 0, 0, 256, 0, 474, 429, 607, 235, 287,
	461, 435, 472, 443, 290, 0, 0, 473, 375, 588,
	453, 604, 633, 634, 266, 409, 618, 525, 626, 651,
	228, 263, 423, 509, 610, 497, 400, 584, 585, 332,
	496, 298, 203, 372, 639, 226, 482, 374, 244, 233,
	590, 615, 302, 254, 292, 459, 646, 215, 520, 601,
	241, 486, 0, 0, 654, 249, 507, 613, 602, 217,
	597, 506, 396, 329, 330, 216, 0, 460, 271, 296,
	0, 0, 261, 418, 592, 593, 259, 655, 230, 625,
	222, 0, 624, 411, 587, 598, 397, 386, 221, 596,
	395, 385, 337, 358, 359, 283, 310, 450, 378, 451,
	309, 311, 407, 406, 408, 209, 611, 629, 0, 210,
	0, 502, 614, 656, 455, 214, 236, 237, 239, 0,
	282, 286, 294, 297, 306, 307, 316, 370, 422, 449,
	445, 454, 0, 582, 605, 619, 631, 637, 638, 640,
	641, 642, 643, 644, 647, 645, 410, 314, 498, 336,
	376, 0, 0, 428, 475, 242, 609, 499, 201, 0,
	0, 0, 0, 257, 258, 0, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 652, 511, 517, 512, 513, 514,
	515, 516, 0, 518, 0, 0, 0, 0, 0, 401,
	0, 594, 595, 675, 387, 489, 606, 338, 352, 355,
	344, 364, 0, 365, 340, 341, 346, 349, 350, 351,
	356, 357, 361, 367, 251, 212, 393, 402, 581, 315,
	218, 219, 220, 527, 528, 529, 530, 622, 623, 627,
	207, 465, 466, 467, 468, 295, 617, 312, 471, 470,
	334, 335, 382, 452, 543, 545, 556, 560, 562, 564,
	570, 573, 544, 546, 557, 561, 563, 565, 571, 574,
	533, 535, 537, 539, 552, 551, 548, 576, 577, 554,
	559, 538, 550, 555, 568, 575, 572, 532, 536, 540,
	549, 567, 566, 547, 558, 569, 553, 541, 534, 542,
	0, 198, 223, 371, 0, 457, 291, 653, 621, 487,
	616, 208, 225, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 202, 211, 224,
	234, 238, 245, 264, 279, 281, 288, 301, 313, 321,
	322, 325, 331, 383, 389, 390, 391, 392, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	439, 440, 442, 444, 446, 458, 463, 477, 478, 479,
	480, 481, 484, 485, 491, 492, 493, 494, 495, 503,
	504, 519, 589, 591, 608, 628, 635, 483, 304, 305,
	447, 448, 317, 318, 649, 650, 303, 603, 636, 600,
	648, 630, 441, 381, 0, 0, 384, 284, 308, 323,
	0, 620, 505, 229, 469, 293, 253, 0, 0, 213,
	248, 232, 262, 277, 280, 327, 394, 403, 432, 437,
	299, 274, 246, 462, 243, 488, 522, 523, 524, 526,
	398, 269, 436, 399, 0, 379, 579, 580, 319, 0,
	0, 0, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 369, 270, 0,
	1929, 206, 508, 0, 433, 0, 205, 0, 490, 255,
	380, 377, 586, 285, 276, 272, 252, 320, 388, 431,
	521, 425, 0, 373, 0, 0, 500, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 250, 328, 204,
	416, 501, 289, 0, 0, 0, 0, 0, 510, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 354, 363, 362, 342,
	343, 345, 347, 353, 360, 366, 339, 348, 0, 0,
	612, 0, 0, 0, 268, 324, 275, 267, 583, 0,
	0, 0, 0, 0, 0, 599, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 405, 260, 0,
	456, 0, 0, 0, 632, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 333, 199, 227, 0, 0, 415,
	464, 476, 0, 0, 0, 256, 0, 474, 429, 607,
	235, 287, 461, 435, 472, 443, 290, 0, 0, 473,
	375, 588, 453, 604, 633, 634, 266, 409, 618, 525,
	626, 651, 228, 263, 423, 509, 610, 497, 400, 584,
	585, 332, 496, 298, 203, 372, 639, 226, 482, 374,
	244, 233, 590, 615, 302, 254, 292, 459, 646, 215,
	520, 601, 241, 486, 0, 0, 654, 249, 507, 613,
	602, 217, 597, 506, 396, 329, 330, 216, 0, 460,
	271, 296, 0, 0, 261, 418, 592, 593, 259, 655,
	230, 625, 222, 0, 624, 411, 587, 598, 397, 386,
	221, 596, 395, 385, 337, 358, 359, 283, 310, 450,
	378, 451, 309, 311, 407, 406, 408, 209, 611, 629,
	0, 210, 0, 502, 614, 656, 455, 214, 236, 237,
	239, 0, 282, 286, 294, 297, 306, 307, 316, 370,
	422, 449, 445, 454, 0, 582, 605, 619, 631, 637,
	638, 640, 641, 642, 643, 644, 647, 645, 410, 314,
	498, 336, 376, 0, 0, 428, 475, 242, 609, 499,
	201, 0, 0, 0, 0, 257, 258, 0, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 652, 511, 517, 512,
	513, 514, 515, 516, 0, 518, 0, 0, 0, 0,
	0, 401, 0, 594, 595, 675, 387, 489, 606, 338,
	352, 355, 344, 364, 0, 365, 340, 341, 346, 349,
	350, 351, 356, 357, 361, 367, 251, 212, 393, 402,
	581, 315, 218, 219, 220, 527, 528, 529, 530, 622,
	623, 627, 207, 465, 466, 467, 468, 295, 617, 312,
	471, 470, 334, 335, 382, 452, 543, 545, 556, 560,
	562, 564, 570, 573, 544, 546, 557, 561, 563, 565,
	571, 574, 533, 535, 537, 539, 552, 551, 548, 576,
	577, 554, 559, 538, 550, 555, 568, 575, 572, 532,
	536, 540, 549, 567, 566, 547, 558, 569, 553, 541,
	534, 542, 0, 198, 223, 371, 0, 457, 291, 653,
	621, 487, 616, 208, 225, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 264, 279, 281, 288, 301,
	313, 321, 322, 325, 331, 383, 389, 390, 391, 392,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 439, 440, 442, 444, 446, 458, 463, 477,
	478, 479, 480, 481, 484, 485, 491, 492, 493, 494,
	495, 503, 504, 519, 589, 591, 608, 628, 635, 483,
	304, 305, 447, 448, 317, 318, 649, 650, 303, 603,
	636, 600, 648, 630, 441, 381, 0, 0, 384, 284,
	308, 323, 0, 620, 505, 229, 469, 293, 253, 0,
	0, 213, 248, 232, 262, 277, 280, 327, 394, 403,
	432, 437, 299, 274, 246, 462, 243, 488, 522, 523,
	524, 526, 398, 269, 436, 399, 0, 379, 579, 580,
	319, 0, 0, 0, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 369,
	270, 0, 1927, 206, 508, 0, 433, 0, 205, 0,
	490, 255, 380, 377, 586, 285, 276, 272, 252, 320,
	388, 431, 521, 425, 0, 373, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 250,
	328, 204, 416, 501, 289, 0, 0, 0, 0, 0,
	510, 727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 354, 363,
	362, 342, 343, 345, 347, 353, 360, 366, 339, 348,
	0, 0, 612, 0, 0, 0, 268, 324, 275, 267,
	583, 0, 0, 0, 0, 0, 0, 599, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 405,
	260, 0, 456, 0, 0, 0, 632, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 333, 199, 227, 0,
	0, 415, 464, 476, 0, 0, 0, 256, 0, 474,
	429, 607, 235, 287, 461, 435, 472, 443, 290, 0,
	0, 473, 375, 588, 453, 604, 633, 634, 266, 409,
	618, 525, 626, 651, 228, 263, 423, 509, 610, 497,
	400, 584, 585, 332, 496, 298, 203, 372, 639, 226,
	482, 374, 244, 233, 590, 615, 302, 254, 292, 459,
	646, 215, 520, 601, 241, 486, 0, 0, 654, 249,
	507, 613, 602, 217, 597, 506, 396, 329, 330, 216,
	0, 460, 271, 296, 0, 0, 261, 418, 592, 593,
	259, 655, 230, 625, 222, 0, 624, 411, 587, 598,
	397, 386, 221, 596, 395, 385, 337, 358, 359, 283,
	310, 450, 378, 451, 309, 311, 407, 406, 408, 209,
	611, 629, 0, 210, 0, 502, 614, 656, 455, 214,
	236, 237, 239, 0, 282, 286, 294, 297, 306, 307,
	316, 370, 422, 449, 445, 454, 0, 582, 605, 619,
	631, 637, 638, 640, 641, 642, 643, 644, 647, 645,
	410, 314, 498, 336, 376, 0, 0, 428, 475, 242,
	609, 499, 201, 0, 0, 0, 0, 257, 258, 0,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 652, 511,
	517, 512, 513, 514, 515, 516, 0, 518, 0, 0,
	0, 0, 0, 401, 0, 594, 595, 675, 387, 489,
	606, 338, 352, 355, 344, 364, 0, 365, 340, 341,
	346, 349, 350, 351, 356, 357, 361, 367, 251, 212,
	393, 402, 581, 315, 218, 219, 220, 527, 528, 529,
	530, 622, 623, 627, 207, 465, 466, 467, 468, 295,
	617, 312, 471, 470, 334, 335, 382, 452, 543, 545,
	556, 560, 562, 564, 570, 573, 544, 546, 557, 561,
	563, 565, 571, 574, 533, 535, 537, 539, 552, 551,
	548, 576, 577, 554, 559, 538, 550, 555, 568, 575,
	572, 532, 536, 540, 549, 567, 566, 547, 558, 569,
	553, 541, 534, 542, 0, 198, 223, 371, 0, 457,
	291, 653, 621, 487, 616, 208, 225, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 202, 211, 224, 234, 238, 245, 264, 279, 281,
	288, 301, 313, 321, 322, 325, 331, 383, 389, 390,
	391, 392, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 439, 440, 442, 444, 446, 458,
	463, 477, 478, 479, 480, 481, 484, 485, 491, 492,
	493, 494, 495, 503, 504, 519, 589, 591, 608, 628,
	635, 483, 304, 305, 447, 448, 317, 318, 649, 650,
	303, 603, 636, 600, 648, 630, 441, 381, 0, 0,
	384, 284, 308, 323, 0, 620, 505, 229, 469, 293,
	253, 0, 0, 213, 248, 232, 262, 277, 280, 327,
	394, 403, 432, 437, 299, 274, 246, 462, 243, 488,
	522, 523, 524, 526, 398, 269, 436, 399, 0, 379,
	579, 580, 319, 0, 0, 0, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 369, 270, 0, 1925, 206, 508, 0, 433, 0,
	205, 0, 490, 255, 380, 377, 586, 285, 276, 272,
	252, 320, 388, 431, 521, 425, 0, 373, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 250, 328, 204, 416, 501, 289, 0, 0, 0,
	0, 0, 510, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	354, 363, 362, 342, 343, 345, 347, 353, 360, 366,
	339, 348, 0, 0, 612, 0, 0, 0, 268, 324,
	275, 267, 583, 0, 0, 0, 0, 0, 0, 599,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 405, 260, 0, 456, 0, 0, 0, 632, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 333, 199,
	227, 0, 0, 415, 464, 476, 0, 0, 0, 256,
	0, 474, 429, 607, 235, 287, 461, 435, 472, 443,
	290, 0, 0, 473, 375, 588, 453, 604, 633, 634,
	266, 409, 618, 525, 626, 651, 228, 263, 423, 509,
	610, 497, 400, 584, 585, 332, 496, 298, 203, 372,
	639, 226, 482, 374, 244, 233, 590, 615, 302, 254,
	292, 459, 646, 215, 520, 601, 241, 486, 0, 0,
	654, 249, 507, 613, 602, 217, 597, 506, 396, 329,
	330, 216, 0, 460, 271, 296, 0, 0, 261, 418,
	592, 593, 259, 655, 230, 625, 222, 0, 624, 411,
	587, 598, 397, 386, 221, 596, 395, 385, 337, 358,
	359, 283, 310, 450, 378, 451, 309, 311, 407, 406,
	408, 209, 611, 629, 0, 210, 0, 502, 614, 656,
	455, 214, 236, 237, 239, 0, 282, 286, 294, 297,
	306, 307, 316, 370, 422, 449, 445, 454, 0, 582,
	605, 619, 631, 637, 638, 640, 641, 642, 643, 644,
	647, 645, 410, 314, 498, 336, 376, 0, 0, 428,
	475, 242, 609, 499, 201, 0, 0, 0, 0, 257,
	258, 0, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	652, 511, 517, 512, 513, 514, 515, 516, 0, 518,
	0, 0, 0, 0, 0, 401, 0, 594, 595, 675,
	387, 489, 606, 338, 352, 355, 344, 364, 0, 365,
	340, 341, 346, 349, 350, 351, 356, 357, 361, 367,
	251, 212, 393, 402, 581, 315, 218, 219, 220, 527,
	528, 529, 530, 622, 623, 627, 207, 465, 466, 467,
	468, 295, 617, 312, 471, 470, 334, 335, 382, 452,
	543, 545, 556, 560, 562, 564, 570, 573, 544, 546,
	557, 561, 563, 565, 571, 574, 533, 535, 537, 539,
	552, 551, 548, 576, 577, 554, 559, 538, 550, 555,
	568, 575, 572, 532, 536, 540, 549, 567, 566, 547,
	558, 569, 553, 541, 534, 542, 0, 198, 223, 371,
	0, 457, 291, 653, 621, 487, 616, 208, 225, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 211, 224, 234, 238, 245, 264,
	279, 281, 288, 301, 313, 321, 322, 325, 331, 383,
	389, 390, 391, 392, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 439, 440, 442, 444,
	446, 458, 463, 477, 478, 479, 480, 481, 484, 485,
	491, 492, 493, 494, 495, 503, 504, 519, 589, 591,
	608, 628, 635, 483, 304, 305, 447, 448, 317, 318,
	649, 650, 303, 603, 636, 600, 648, 630, 441, 381,
	0, 0, 384, 284, 308, 323, 0, 620, 505, 229,
	469, 293, 253, 0, 0, 213, 248, 232, 262, 277,
	280, 327, 394, 403, 432, 437, 299, 274, 246, 462,
	243, 488, 522, 523, 524, 526, 398, 269, 436, 399,
	0, 379, 579, 580, 319, 0, 0, 0, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 369, 270, 0, 0, 206, 508, 0,
	433, 0, 205, 0, 490, 255, 380, 377, 586, 285,
	276, 272, 252, 320, 388, 431, 521, 425, 0, 373,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 250, 328, 204, 416, 501, 289, 0,
	1900, 0, 0, 0, 510, 727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 354, 363, 362, 342, 343, 345, 347, 353,
	360, 366, 339, 348, 0, 0, 612, 0, 0, 0,
	268, 324, 275, 267, 583, 0, 0, 0, 0, 0,
	0, 599, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 405, 260, 0, 456, 0, 0, 0,
	632, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	333, 199, 227, 0, 0, 415, 464, 476, 0, 0,
	0, 256, 0, 474, 429, 607, 235, 287, 461, 435,
	472, 443, 290, 0, 0, 473, 375, 588, 453, 604,
	633, 634, 266, 409, 618, 525, 626, 651, 228, 263,
	423, 509, 610, 497, 400, 584, 585, 332, 496, 298,
	203, 372, 639, 226, 482, 374, 244, 233, 590, 615,
	302, 254, 292, 459, 646, 215, 520, 601, 241, 486,
	0, 0, 654, 249, 507, 613, 602, 217, 597, 506,
	396, 329, 330, 216, 0, 460, 271, 296, 0, 0,
	261, 418, 592, 593, 259, 655, 230, 625, 222, 0,
	624, 411, 587, 598, 397, 386, 221, 596, 395, 385,
	337, 358, 359, 283, 310, 450, 378, 451, 309, 311,
	407, 406, 408, 209, 611, 629, 0, 210, 0, 502,
	614, 656, 455, 214, 236, 237, 239, 0, 282, 286,
	294, 297, 306, 307, 316, 370, 422, 449, 445, 454,
	0, 582, 605, 619, 631, 637, 638, 640, 641, 642,
	643, 644, 647, 645, 410, 314, 498, 336, 376, 0,
	0, 428, 475, 242, 609, 499, 201, 0, 0, 0,
	0, 257, 258, 0, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 652, 511, 517, 512, 513, 514, 515, 516,
	0, 518, 0, 0, 0, 0, 0, 401, 0, 594,
	595, 675, 387, 489, 606, 338, 352, 355, 344, 364,
	0, 365, 340, 341, 346, 349, 350, 351, 356, 357,
	361, 367, 251, 212, 393, 402, 581, 315, 218, 219,
	220, 527, 528, 529, 530, 622, 623, 627, 207, 465,
	466, 467, 468, 295, 617, 312, 471, 470, 334, 335,
	382, 452, 543, 545, 556, 560, 562, 564, 570, 573,
	544, 546, 557, 561, 563, 565, 571, 574, 533, 535,
	537, 539, 552, 551, 548, 576, 577, 554, 559, 538,
	550, 555, 568, 575, 572, 532, 536, 540, 549, 567,
	566, 547, 558, 569, 553, 541, 534, 542, 0, 198,
	223, 371, 0, 457, 291, 653, 621, 487, 616, 208,
	225, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 202, 211, 224, 234, 238,
	245, 264, 279, 281, 288, 301, 313, 321, 322, 325,
	331, 383, 389, 390, 391, 392, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 439, 440,
	442, 444, 446, 458, 463, 477, 478, 479, 480, 481,
	484, 485, 491, 492, 493, 494, 495, 503, 504, 519,
	589, 591, 608, 628, 635, 483, 304, 305, 447, 448,
	317, 318, 649, 650, 303, 603, 636, 600, 648, 630,
	441, 381, 0, 0, 384, 284, 308, 323, 0, 620,
	505, 229, 469, 293, 253, 0, 0, 213, 248, 232,
	262, 277, 280, 327, 394, 403, 432, 437, 299, 274,
	246, 462, 243, 488, 522, 523, 524, 526, 398, 269,
	436, 399, 0, 379, 579, 580, 319, 0, 0, 0,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 1797,
	273, 0, 0, 0, 0, 369, 270, 0, 0, 206,
	508, 0, 433, 0, 205, 0, 490, 255, 380, 377,
	586, 285, 276, 272, 252, 320, 388, 431, 521, 425,
	0, 373, 0, 0, 500, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 250, 328, 204, 416, 501,
	289, 0, 0, 0, 0, 0, 510, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 354, 363, 362, 342, 343, 345,
	347, 353, 360, 366, 339, 348, 0, 0, 612, 0,
	0, 0, 268, 324, 275, 267, 583, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 405, 260, 0, 456, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 333, 199, 227, 0, 0, 415, 464, 476,
	0, 0, 0, 256, 0, 474, 429, 607, 235, 287,
	461, 435, 472, 443, 290, 0, 0, 473, 375, 588,
	453, 604, 633, 634, 266, 409, 618, 525, 626, 651,
	228, 263, 423, 509, 610, 497, 400, 584, 585, 332,
	496, 298, 203, 372, 639, 226, 482, 374, 244, 233,
	590, 615, 302, 254, 292, 459, 646, 215, 520, 601,
	241, 486, 0, 0, 654, 249, 507, 613, 602, 217,
	597, 506, 396, 329, 330, 216, 0, 460, 271, 296,
	0, 0, 261, 418, 592, 593, 259, 655, 230, 625,
	222, 0, 624, 411, 587, 598, 397, 386, 221, 596,
	395, 385, 337, 358, 359, 283, 310, 450, 378, 451,
	309, 311, 407, 406, 408, 209, 611, 629, 0, 210,
	0, 502, 614, 656, 455, 214, 236, 237, 239, 0,
	282, 286, 294, 297, 306, 307, 316, 370, 422, 449,
	445, 454, 0, 582, 605, 619, 631, 637, 638, 640,
	641, 642, 643, 644, 647, 645, 410, 314, 498, 336,
	376, 0, 0, 428, 475, 242, 609, 499, 201, 0,
	0, 0, 0, 257, 258, 0, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 652, 511, 517, 512, 513, 514,
	515, 516, 0, 518, 0, 0, 0, 0, 0, 401,
	0, 594, 595, 675, 387, 489, 606, 338, 352, 355,
	344, 364, 0, 365, 340, 341, 346, 349, 350, 351,
	356, 357, 361, 367, 251, 212, 393, 402, 581, 315,
	218, 219, 220, 527, 528, 529, 530, 622, 623, 627,
	207, 465, 466, 467, 468, 295, 617, 312, 471, 470,
	334, 335, 382, 452, 543, 545, 556, 560, 562, 564,
	570, 573, 544, 546, 557, 561, 563, 565, 571, 574,
	533, 535, 537, 539, 552, 551, 548, 576, 577, 554,
	559, 538, 550, 555, 568, 575, 572, 532, 536, 540,
	549, 567, 566, 547, 558, 569, 553, 541, 534, 542,
	0, 198, 223, 371, 0, 457, 291, 653, 621, 487,
	616, 208, 225, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 202, 211, 224,
	234, 238, 245, 264, 279, 281, 288, 301, 313, 321,
	322, 325, 331, 383, 389, 390, 391, 392, 412, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	439, 440, 442, 444, 446, 458, 463, 477, 478, 479,
	480, 481, 484, 485, 491, 492, 493, 494, 495, 503,
	504, 519, 589, 591, 608, 628, 635, 483, 304, 305,
	447, 448, 317, 318, 649, 650, 303, 603, 636, 600,
	648, 630, 441, 381, 0, 0, 384, 284, 308, 323,
	0, 620, 505, 229, 469, 293, 253, 0, 0, 213,
	248, 232, 262, 277, 280, 327, 394, 403, 432, 437,
	299, 274, 246, 462, 243, 488, 522, 523, 524, 526,
	398, 269, 436, 399, 0, 379, 579, 580, 319, 0,
	0, 0, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 369, 270, 0,
	0, 206, 508, 0, 433, 0, 205, 0, 490, 255,
	380, 377, 586, 285, 276, 272, 252, 320, 388, 431,
	521, 425, 0, 373, 0, 0, 500, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 250, 328, 204,
	416, 501, 289, 0, 95, 0, 0, 0, 510, 962,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 354, 363, 362, 342,
	343, 345, 347, 353, 360, 366, 339, 348, 0, 0,
	612, 0, 0, 0, 268, 324, 275, 267, 583, 0,
	0, 0, 0, 0, 0, 599, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 405, 260, 0,
	456, 0, 0, 0, 632, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 333, 199, 227, 0, 0, 415,
	464, 476, 0, 0, 0, 256, 0, 474, 429, 607,
	235, 287, 461, 435, 472, 443, 290, 0, 0, 473,
	375, 588, 453, 604, 633, 634, 266, 409, 618, 525,
	626, 651, 228, 263, 423, 509, 610, 497, 400, 584,
	585, 332, 496, 298, 203, 372, 639, 226, 482, 374,
	244, 233, 590, 615, 302, 254, 292, 459, 646, 215,
	520, 601, 241, 486, 0, 0, 654, 249, 507, 613,
	602, 217, 597, 506, 396, 329, 330, 216, 0, 460,
	271, 296, 0, 0, 261, 418, 592, 593, 259, 655,
	230, 625, 222, 0, 624, 411, 587, 598, 397, 386,
	221, 596, 395, 385, 337, 358, 359, 283, 310, 450,
	378, 451, 309, 311, 407, 406, 408, 209, 611, 629,
	0, 210, 0, 502, 614, 656, 455, 214, 236, 237,
	239, 0, 282, 286, 294, 297, 306, 307, 316, 370,
	422, 449, 445, 454, 0, 582, 605, 619, 631, 637,
	638, 640, 641, 642, 643, 644, 647, 645, 410, 314,
	498, 336, 376, 0, 0, 428, 475, 242, 609, 499,
	201, 0, 0, 0, 0, 257, 258, 0, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 652, 511, 517, 512,
	513, 514, 515, 516, 0, 518, 0, 0, 0, 0,
	0, 401, 0, 594, 595, 675, 387, 489, 606, 338,
	352, 355, 344, 364, 0, 365, 340, 341, 346, 349,
	350, 351, 356, 357, 361, 367, 251, 212, 393, 402,
	581, 315, 218, 219, 220, 527, 528, 529, 530, 622,
	623, 627, 207, 465, 466, 467, 468, 295, 617, 312,
	471, 470, 334, 335, 382, 452, 543, 545, 556, 560,
	562, 564, 570, 573, 544, 546, 557, 561, 563, 565,
	571, 574, 533, 535, 537, 539, 552, 551, 548, 576,
	577, 554, 559, 538, 550, 555, 568, 575, 572, 532,
	536, 540, 549, 567, 566, 547, 558, 569, 553, 541,
	534, 542, 0, 198, 223, 371, 0, 457, 291, 653,
	621, 487, 616, 208, 225, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 264, 279, 281, 288, 301,
	313, 321, 322, 325, 331, 383, 389, 390, 391, 392,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 439, 440, 442, 444, 446, 458, 463, 477,
	478, 479, 480, 481, 484, 485, 491, 492, 493, 494,
	495, 503, 504, 519, 589, 591, 608, 628, 635, 483,
	304, 305, 447, 448, 317, 318, 649, 650, 303, 603,
	636, 600, 648, 630, 441, 381, 0, 0, 384, 284,
	308, 323, 0, 620, 505, 229, 469, 293, 253, 0,
	0, 213, 248, 232, 262, 277, 280, 327, 394, 403,
	432, 437, 299, 274, 246, 462, 243, 488, 522, 523,
	524, 526, 398, 269, 436, 399, 0, 379, 579, 580,
	319, 0, 0, 0, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 369,
	270, 0, 0, 206, 508, 0, 433, 0, 205, 0,
	490, 255, 380, 377, 586, 285, 276, 272, 252, 320,
	388, 431, 521, 425, 0, 373, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 250,
	328, 204, 416, 501, 289, 0, 0, 0, 0, 0,
	510, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 354, 363,
	362, 342, 343, 345, 347, 353, 360, 366, 339, 348,
	0, 0, 612, 0, 0, 0, 268, 324, 275, 267,
	583, 0, 0, 0, 0, 0, 0, 599, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1466, 0, 300, 0, 405,
	260, 0, 456, 0, 0, 0, 632, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 333, 199, 227, 0,
	0, 415, 464, 476, 0, 0, 0, 256, 0, 474,
	429, 607, 235, 287, 461, 435, 472, 443, 290, 0,
	0, 473, 375, 588, 453, 604, 633, 634, 266, 409,
	618, 525, 626, 651, 228, 263, 423, 509, 610, 497,
	400, 584, 585, 332, 496, 298, 203, 372, 639, 226,
	482, 374, 244, 233, 590, 615, 302, 254, 292, 459,
	646, 215, 520, 601, 241, 486, 0, 0, 654, 249,
	507, 613, 602, 217, 597, 506, 396, 329, 330, 216,
	0, 460, 271, 296, 0, 0, 261, 418, 592, 593,
	259, 655, 230, 625, 222, 0, 624, 411, 587, 598,
	397, 386, 221, 596, 395, 385, 337, 358, 359, 283,
	310, 450, 378, 451, 309, 311, 407, 406, 408, 209,
	611, 629, 0, 210, 0, 502, 614, 656, 455, 214,
	236, 237, 239, 0, 282, 286, 294, 297, 306, 307,
	316, 370, 422, 449, 445, 454, 0, 582, 605, 619,
	631, 637, 638, 640, 641, 642, 643, 644, 647, 645,
	410, 314, 498, 336, 376, 0, 0, 428, 475, 242,
	609, 499, 201, 0, 0, 0, 0, 257, 258, 0,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 652, 511,
	517, 512, 513, 514, 515, 516, 0, 518, 0, 0,
	0, 0, 0, 401, 0, 594, 595, 675, 387, 489,
	606, 338, 352, 355, 344, 364, 0, 365, 340, 341,
	346, 349, 350, 351, 356, 357, 361, 367, 251, 212,
	393, 402, 581, 315, 218, 219, 220, 527, 528, 529,
	530, 622, 623, 627, 207, 465, 466, 467, 468, 295,
	617, 312, 471, 470, 334, 335, 382, 452, 543, 545,
	556, 560, 562, 564, 570, 573, 544, 546, 557, 561,
	563, 565, 571, 574, 533, 535, 537, 539, 552, 551,
	548, 576, 577, 554, 559, 538, 550, 555, 568, 575,
	572, 532, 536, 540, 549, 567, 566, 547, 558, 569,
	553, 541, 534, 542, 0, 198, 223, 371, 0, 457,
	291, 653, 621, 487, 616, 208, 225, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 202, 211, 224, 234, 238, 245, 264, 279, 281,
	288, 301, 313, 321, 322, 325, 331, 383, 389, 390,
	391, 392, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 439, 440, 442, 444, 446, 458,
	463, 477, 478, 479, 480, 481, 484, 485, 491, 492,
	493, 494, 495, 503, 504, 519, 589, 591, 608, 628,
	635, 483, 304, 305, 447, 448, 317, 318, 649, 650,
	1465, 603, 636, 600, 648, 630, 441, 381, 0, 0,
	384, 284, 308, 323, 0, 620, 505, 229, 469, 293,
	253, 0, 0, 213, 248, 232, 262, 277, 280, 327,
	394, 403, 432, 437, 299, 274, 246, 462, 243, 488,
	522, 523, 524, 526, 398, 269, 436, 399, 0, 379,
	579, 580, 319, 0, 0, 0, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 369, 270, 0, 0, 206, 508, 0, 433, 0,
	205, 0, 490, 255, 380, 377, 586, 285, 276, 272,
	252, 320, 388, 431, 521, 425, 0, 373, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 250, 328, 204, 416, 501, 289, 0, 0, 0,
	0, 0, 510, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	354, 363, 362, 342, 343, 345, 347, 353, 360, 366,
	339, 348, 0, 0, 612, 0, 0, 0, 268, 324,
	275, 267, 583, 0, 0, 0, 0, 0, 0, 599,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 405, 260, 0, 456, 0, 0, 0, 632, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 333, 199,
	227, 0, 0, 415, 464, 476, 0, 0, 0, 256,
	0, 474, 429, 607, 235, 287, 461, 435, 472, 443,
	290, 0, 0, 473, 375, 588, 453, 604, 633, 634,
	266, 409, 618, 525, 626, 651, 228, 263, 423, 509,
	610, 497, 400, 584, 585, 332, 496, 298, 203, 372,
	639, 226, 482, 374, 244, 233, 590, 615, 302, 254,
	292, 459, 646, 215, 520, 601, 241, 486, 0, 0,
	654, 249, 507, 613, 602, 217, 597, 506, 396, 329,
	330, 216, 0, 460, 271, 296, 0, 0, 261, 418,
	592, 593, 259, 655, 230, 625, 222, 0, 624, 411,
	587, 598, 397, 386, 221, 596, 395, 385, 337, 358,
	359, 283, 310, 450, 378, 451, 309, 311, 407, 406,
	408, 209, 611, 629, 0, 210, 0, 502, 614, 656,
	455, 214, 236, 237, 239, 0, 282, 286, 294, 297,
	306, 307, 316, 370, 422, 449, 445, 454, 0, 582,
	605, 619, 631, 637, 638, 640, 641, 642, 643, 644,
	647, 645, 410, 314, 498, 336, 376, 0, 0, 428,
	475, 242, 609, 499, 201, 0, 0, 0, 0, 257,
	258, 0, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	652, 511, 517, 512, 513, 514, 515, 516, 0, 518,
	0, 0, 0, 0, 0, 401, 0, 594, 595, 675,
	387, 489, 606, 338, 352, 355, 344, 364, 0, 365,
	340, 341, 346, 349, 350, 351, 356, 357, 361, 367,
	251, 212, 393, 402, 581, 315, 218, 219, 220, 527,
	528, 529, 530, 622, 623, 627, 207, 465, 466, 467,
	468, 295, 617, 312, 471, 470, 334, 335, 382, 452,
	543, 545, 556, 560, 562, 564, 570, 573, 544, 546,
	557, 561, 563, 565, 571, 574, 533, 535, 537, 539,
	552, 551, 548, 576, 577, 554, 559, 538, 550, 555,
	568, 575, 572, 532, 536, 540, 549, 567, 566, 547,
	558, 569, 553, 541, 534, 542, 0, 198, 223, 371,
	0, 457, 291, 653, 621, 487, 616, 208, 225, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1054, 0,
	0, 0, 200, 202, 211, 224, 234, 238, 245, 264,
	279, 281, 288, 301, 313, 321, 322, 325, 331, 383,
	389, 390, 391, 392, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 439, 440, 442, 444,
	446, 458, 463, 477, 478, 479, 480, 481, 484, 485,
	491, 492, 493, 494, 495, 503, 504, 519, 589, 591,
	608, 628, 635, 483, 304, 305, 447, 448, 317, 318,
	649, 650, 303, 603, 636, 600, 648, 630, 441, 381,
	0, 0, 384, 284, 308, 323, 0, 620, 505, 229,
	469, 293, 253, 0, 0, 213, 248, 232, 262, 277,
	280, 327, 394, 403, 432, 437, 299, 274, 246, 462,
	243, 488, 522, 523, 524, 526, 398, 269, 436, 399,
	0, 379, 579, 580, 319, 0, 0, 0, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 369, 270, 0, 0, 206, 508, 0,
	433, 0, 205, 0, 490, 255, 380, 377, 586, 285,
	276, 272, 252, 320, 388, 431, 521, 425, 0, 373,
	0, 0, 500, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 250, 328, 204, 416, 501, 289, 0,
	0, 0, 0, 0, 510, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 354, 363, 362, 342, 343, 345, 347, 353,
	360, 366, 339, 348, 0, 0, 612, 0, 0, 0,
	268, 324, 275, 267, 583, 0, 0, 0, 0, 0,
	0, 599, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 405, 260, 0, 456, 0, 678, 0,
	632, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	333, 199, 227, 0, 0, 415, 464, 476, 0, 0,
	0, 256, 0, 474, 429, 607, 235, 287, 461, 435,
	472, 443, 290, 0, 0, 473, 375, 588, 453, 604,
	633, 634, 266, 409, 618, 525, 626, 651, 228, 263,
	423, 509, 610, 497, 400, 584, 585, 332, 496, 298,
	203, 372, 639, 226, 482, 374, 244, 233, 590, 615,
	302, 254, 292, 459, 646, 215, 520, 601, 241, 486,
	0, 0, 654, 249, 507, 613, 602, 217, 597, 506,
	396, 329, 330, 216, 0, 460, 271, 296, 0, 0,
	261, 418, 592, 593, 259, 655, 230, 625, 222, 0,
	624, 411, 587, 598, 397, 386, 221, 596, 395, 385,
	337, 358, 359, 283, 310, 450, 378, 451, 309, 311,
	407, 406, 408, 209, 611, 629, 0, 210, 0, 502,
	614, 656, 455, 214, 236, 237, 239, 0, 282, 286,
	294, 297, 306, 307, 316, 370, 422, 449, 445, 454,
	0, 582, 605, 619, 631, 637, 638, 640, 641, 642,
	643, 644, 647, 645, 410, 314, 498, 336, 376, 0,
	0, 428, 475, 242, 609, 499, 201, 0, 0, 0,
	0, 257, 258, 0, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 652, 511, 517, 512, 513, 514, 515, 516,
	0, 518, 0, 0, 0, 0, 0, 401, 0, 594,
	595, 675, 387, 489, 606, 338, 352, 355, 344, 364,
	0, 365, 340, 341, 346, 349, 350, 351, 356, 357,
	361, 367, 251, 212, 393, 402, 581, 315, 218, 219,
	220, 527, 528, 529, 530, 622, 623, 627, 207, 465,
	466, 467, 468, 295, 617, 312, 471, 470, 334, 335,
	382, 452, 543, 545, 556, 560, 562, 564, 570, 573,
	544, 546, 557, 561, 563, 565, 571, 574, 533, 535,
	537, 539, 552, 551, 548, 576, 577, 554, 559, 538,
	550, 555, 568, 575, 572, 532, 536, 540, 549, 567,
	566, 547, 558, 569, 553, 541, 534, 542, 0, 198,
	223, 371, 0, 457, 291, 653, 621, 487, 616, 208,
	225, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 202, 211, 224, 234, 238,
	245, 264, 279, 281, 288, 301, 313, 321, 322, 325,
	331, 383, 389, 390, 391, 392, 412, 413, 414, 417,
	420, 421, 424, 426, 427, 430, 434, 438, 439, 440,
	442, 444, 446, 458, 463, 477, 478, 479, 480, 481,
	484, 485, 491, 492, 493, 494, 495, 503, 504, 519,
	589, 591, 608, 628, 635, 483, 304, 305, 447, 448,
	317, 318, 649, 650, 303, 603, 636, 600, 648, 630,
	441, 381, 0, 0, 384, 284, 308, 323, 0, 620,
	505, 229, 469, 293, 253, 0, 0, 213, 248, 232,
	262, 277, 280, 327, 394, 403, 432, 437, 299, 274,
	246, 462, 243, 488, 522, 523, 524, 526, 398, 269,
	436, 399, 0, 379, 579, 580, 319, 0, 0, 0,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 369, 270, 0, 0, 206,
	508, 0, 433, 0, 205, 0, 490, 255, 380, 377,
	586, 285, 276, 272, 252, 320, 388, 431, 521, 425,
	0, 373, 0, 0, 500, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 250, 328, 204, 416, 501,
	289, 0, 0, 0, 0, 0, 510, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 354, 363, 362, 342, 343, 345,
	347, 353, 360, 366, 339, 348, 0, 0, 612, 0,
	0, 0, 268, 324, 275, 267, 583, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 405, 260, 0, 456, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	368, 0, 333, 199, 227, 0, 0, 415, 464, 476,
	0, 0, 0, 256, 0, 474, 429, 607, 235, 287,
	461, 435, 472, 443, 290, 0, 0, 473, 375, 588,
	453, 604, 633, 634, 266, 409, 618, 525, 626, 651,
	228, 263, 423, 509, 610, 497, 400, 584, 585, 332,
	496, 298, 203, 372, 639, 226, 482, 374, 244, 233,
	590, 615, 302, 254, 292, 459, 646, 215, 520, 601,
	241, 486, 0, 0, 654, 249, 507, 613, 602, 217,
	597, 506, 396, 329, 330, 216, 0, 460, 271, 296,
	0, 0, 261, 418, 592, 593, 259, 655, 230, 625,
	222, 0, 624, 411, 587, 598, 397, 386, 221, 596,
	395, 385, 337, 358, 359, 283, 310, 450, 378, 451,
	309, 311, 407, 406, 408, 209, 611, 629, 0, 210,
	0, 502, 614, 656, 455, 214, 236, 237, 239, 0,
	282, 286, 294, 297, 306, 307, 316, 370, 422, 449,
	445, 454, 0, 582, 605, 619, 631, 637, 638, 640,
	641, 642, 643, 644, 647, 645, 410, 314, 498, 336,
	376, 0, 0, 428, 475, 242, 609, 499, 201, 0,
	0, 0, 0, 257, 258, 0, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 652, 511, 517, 512, 513, 514,
	515, 516, 0, 518, 0, 0, 0, 0, 0, 401,
	0, 594, 595, 675, 387, 489, 606, 338, 352, 355,
	344, 364, 0, 365, 340, 341, 346, 349, 350, 351,
	356, 357, 361, 367, 251, 212, 393, 402, 581, 315,
	218, 219, 220, 527, 528, 529, 530, 622, 623, 627,
	207, 465, 466, 467, 468, 295, 617, 312, 471, 470,
	334, 335, 382, 452, 543, 545, 556, 560, 562, 564,
	570, 573, 544, 546, 557, 561, 563, 565, 571, 574,
	533, 535, 537, 539, 552, 551, 548, 576, 577, 554,
	559, 538, 550, 555, 568, 575, 572, 532, 536, 540,
	549, 567, 566, 547, 558, 569, 553, 541, 534, 542,
	0, 198, 223, 371, 0, 457, 291, 653, 621, 487,
	616, 208, 225, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 202, 211, 224,
	234, 238, 245, 264, 279, 281, 288, 301, 313, 321,
	322, 325, 331, 383, 389, 390, 391, 392, 4153, 413,
	414, 417, 420, 421, 424, 426, 427, 430, 434, 438,
	439, 440, 442, 444, 446, 458, 463, 477, 478, 479,
	480, 481, 484, 485, 491, 492, 493, 494, 495, 503,
	504, 519, 589, 591, 608, 628, 635, 483, 304, 305,
	447, 448, 317, 318, 649, 650, 303, 603, 636, 600,
	648, 630, 441, 381, 0, 0, 384, 284, 308, 323,
	0, 620, 505, 229, 469, 293, 253, 0, 0, 213,
	248, 232, 262, 277, 280, 327, 394, 403, 432, 437,
	299, 274, 246, 462, 243, 488, 522, 523, 524, 526,
	398, 269, 436, 399, 0, 379, 579, 580, 319, 0,
	0, 0, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 369, 270, 0,
	0, 206, 508, 0, 433, 0, 205, 0, 490, 255,
	380, 377, 586, 285, 276, 272, 252, 320, 388, 431,
	521, 425, 0, 373, 0, 0, 500, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 250, 328, 204,
	416, 501, 289, 0, 0, 0, 0, 0, 510, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 354, 363, 362, 342,
	343, 345, 347, 353, 360, 366, 339, 348, 0, 0,
	612, 0, 0, 0, 268, 324, 275, 267, 583, 0,
	0, 0, 0, 0, 0, 599, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 405, 260, 0,
	456, 0, 0, 0, 632, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 333, 199, 227, 0, 0, 415,
	464, 476, 0, 0, 0, 256, 0, 474, 429, 607,
	235, 287, 461, 435, 472, 443, 290, 0, 0, 473,
	375, 588, 453, 604, 633, 634, 266, 409, 618, 525,
	626, 651, 228, 263, 423, 509, 610, 497, 400, 584,
	585, 332, 496, 298, 203, 372, 639, 226, 482, 374,
	244, 233, 590, 615, 302, 254, 292, 459, 646, 215,
	520, 601, 241, 486, 0, 0, 654, 249, 507, 613,
	602, 217, 597, 506, 396, 329, 330, 216, 0, 460,
	271, 296, 0, 0, 261, 418, 592, 593, 259, 655,
	230, 625, 222, 0, 624, 411, 587, 598, 397, 386,
	221, 596, 395, 385, 337, 358, 359, 283, 310, 450,
	378, 451, 309, 311, 407, 406, 408, 209, 611, 629,
	0, 210, 0, 502, 614, 656, 455, 214, 236, 237,
	239, 0, 282, 286, 294, 297, 306, 307, 316, 370,
	422, 449, 445, 454, 0, 582, 605, 619, 631, 637,
	638, 640, 641, 642, 643, 644, 647, 645, 410, 314,
	498, 336, 376, 0, 0, 428, 475, 242, 609, 499,
	201, 0, 0, 0, 0, 257, 258, 0, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 652, 511, 517, 512,
	513, 514, 515, 516, 0, 518, 0, 0, 0, 0,
	0, 401, 0, 594, 595, 675, 387, 489, 606, 338,
	352, 355, 344, 364, 0, 365, 340, 341, 346, 349,
	350, 351, 356, 357, 361, 367, 251, 212, 393, 402,
	581, 315, 218, 219, 220, 527, 528, 529, 530, 622,
	623, 627, 207, 465, 466, 467, 468, 295, 617, 312,
	471, 470, 334, 335, 382, 452, 543, 545, 556, 560,
	562, 564, 570, 573, 544, 546, 557, 561, 563, 565,
	571, 574, 533, 535, 537, 539, 552, 551, 548, 576,
	577, 554, 559, 538, 550, 555, 568, 575, 572, 532,
	536, 540, 549, 567, 566, 547, 558, 569, 553, 541,
	534, 542, 0, 198, 223, 371, 0, 457, 291, 653,
	621, 487, 616, 208, 225, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	211, 224, 234, 238, 245, 264, 279, 281, 288, 301,
	313, 321, 322, 325, 331, 383, 389, 390, 391, 392,
	412, 413, 414, 417, 420, 421, 424, 426, 427, 430,
	434, 438, 439, 440, 442, 444, 446, 458, 463, 477,
	478, 479, 480, 481, 484, 485, 491, 492, 493, 494,
	495, 503, 504, 519, 589, 591, 608, 628, 635, 483,
	304, 305, 447, 448, 317, 318, 649, 650, 303, 603,
	636, 600, 648, 630, 441, 381, 0, 0, 384, 284,
	308, 323, 0, 620, 505, 229, 469, 293, 253, 0,
	0, 213, 248, 232, 262, 277, 280, 327, 394, 403,
	432, 437, 299, 274, 246, 462, 243, 488, 522, 523,
	524, 526, 398, 269, 436, 399, 0, 379, 579, 580,
	319, 0, 0, 0, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 369,
	270, 0, 0, 206, 508, 0, 433, 0, 205, 0,
	490, 255, 380, 377, 586, 285, 276, 272, 252, 320,
	388, 431, 521, 425, 0, 373, 0, 0, 500, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 250,
	328, 204, 416, 501, 289, 0, 0, 0, 0, 0,
	510, 962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 354, 363,
	362, 342, 343, 345, 347, 353, 360, 366, 339, 348,
	0, 0, 612, 0, 0, 0, 268, 324, 275, 267,
	583, 0, 0, 0, 0, 0, 0, 599, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 405,
	260, 0, 456, 0, 0, 0, 632, 0, 0, 0,
	0, 0, 0, 0, 368, 0, 333, 199, 227, 0,
	0, 415, 464, 476, 0, 0, 0, 256, 0, 474,
	429, 607, 235, 287, 461, 435, 472, 443, 290, 0,
	0, 473, 375, 588, 453, 604, 633, 634, 266, 409,
	618, 525, 626, 651, 228, 263, 423, 509, 610, 497,
	400, 584, 585, 332, 496, 298, 203, 372, 639, 226,
	482, 374, 244, 233, 590, 615, 302, 254, 292, 459,
	646, 215, 520, 601, 241, 486, 0, 0, 654, 249,
	507, 613, 602, 217, 597, 506, 396, 329, 330, 216,
	0, 460, 271, 296, 0, 0, 261, 418, 592, 593,
	259, 655, 230, 625, 222, 0, 624, 411, 587, 598,
	397, 386, 221, 596, 395, 385, 337, 358, 359, 283,
	310, 450, 378, 451, 309, 311, 407, 406, 408, 209,
	611, 629, 0, 210, 0, 502, 614, 656, 455, 214,
	236, 237, 239, 0, 282, 286, 294, 297, 306, 307,
	316, 370, 422, 449, 445, 454, 0, 582, 605, 619,
	631, 637, 638, 640, 641, 642, 643, 644, 647, 645,
	410, 314, 498, 336, 376, 0, 0, 428, 475, 242,
	609, 499, 201, 0, 0, 0, 0, 257, 258, 0,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 652, 511,
	517, 512, 513, 514, 515, 516, 0, 518, 0, 0,
	0, 0, 0, 401, 0, 594, 595, 675, 387, 489,
	606, 338, 352, 355, 344, 364, 0, 365, 340, 341,
	346, 349, 350, 351, 356, 357, 361, 367, 251, 212,
	393, 402, 581, 315, 218, 219, 220, 527, 528, 529,
	530, 622, 623, 627, 207, 465, 466, 467, 468, 295,
	617, 312, 471, 470, 334, 335, 382, 452, 543, 545,
	556, 560, 562, 564, 570, 573, 544, 546, 557, 561,
	563, 565, 571, 574, 533, 535, 537, 539, 552, 551,
	548, 576, 577, 554, 559, 538, 550, 555, 568, 575,
	572, 532, 536, 540, 549, 567, 566, 547, 558, 569,
	553, 541, 534, 542, 0, 198, 223, 371, 0, 457,
	291, 653, 621, 487, 616, 208, 225, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 202, 211, 224, 234, 238, 245, 264, 279, 281,
	288, 301, 313, 321, 322, 325, 331, 383, 389, 390,
	391, 392, 412, 413, 414, 417, 420, 421, 424, 426,
	427, 430, 434, 438, 439, 440, 442, 444, 446, 458,
	463, 477, 478, 479, 480, 481, 484, 485, 491, 492,
	493, 494, 495, 503, 504, 519, 589, 591, 608, 628,
	635, 483, 304, 305, 447, 448, 317, 318, 649, 650,
	303, 603, 636, 600, 648, 630, 441, 381, 0, 0,
	384, 284, 308, 323, 0, 620, 505, 229, 469, 293,
	253, 0, 0, 213, 248, 232, 262, 277, 280, 327,
	394, 403, 432, 437, 299, 274, 246, 462, 243, 488,
	522, 523, 524, 526, 398, 269, 436, 399, 0, 379,
	579, 580, 319, 0, 0, 0, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 369, 270, 0, 0, 206, 508, 0, 433, 0,
	205, 0, 490, 255, 380, 377, 586, 285, 276, 272,
	252, 320, 388, 431, 521, 425, 0, 373, 0, 0,
	500, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 250, 328, 204, 416, 501, 289, 0, 0, 0,
	0, 0, 510, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	354, 363, 362, 342, 343, 345, 347, 353, 360, 366,
	339, 348, 0, 0, 612, 0, 0, 0, 268, 324,
	275, 267, 583, 0, 0, 0, 0, 0, 0, 599,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	0, 405, 260, 0, 456, 0, 0, 0, 632, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 333, 199,
	227, 0, 0, 415, 464, 476, 0, 0, 0, 256,
	0, 474, 429, 607, 235, 287, 461, 435, 472, 443,
	290, 0, 0, 473, 375, 588, 453, 604, 633, 634,
	266, 409, 618, 525, 626, 651, 228, 263, 423, 509,
	610, 497, 400, 584, 585, 332, 496, 298, 203, 372,
	639, 226, 482, 374, 244, 233, 590, 615, 302, 254,
	292, 459, 646, 215, 520, 601, 241, 486, 0, 0,
	654, 249, 507, 613, 602, 217, 597, 506, 396, 329,
	330, 216, 0, 460, 271, 296, 0, 0, 261, 418,
	592, 593, 259, 655, 230, 625, 222, 0, 624, 411,
	587, 598, 397, 386, 221, 596, 395, 385, 337, 358,
	359, 283, 310, 450, 378, 451, 309, 311, 407, 406,
	408, 209, 611, 629, 0, 210, 0, 502, 614, 656,
	455, 214, 236, 237, 239, 0, 282, 286, 294, 297,
	306, 307, 316, 370, 422, 449, 445, 454, 0, 582,
	605, 619, 631, 637, 638, 640, 641, 642, 643, 644,
	647, 645, 410, 314, 498, 336, 376, 0, 0, 428,
	475, 242, 609, 499, 201, 0, 0, 0, 0, 257,
	258, 0, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	652, 511, 517, 512, 513, 514, 515, 516, 0, 518,
	0, 0, 0, 0, 0, 401, 0, 594, 595, 675,
	387, 489, 606, 338, 352, 355, 344, 364, 0, 365,
	340, 341, 346, 349, 350, 351, 356, 357, 361, 367,
	251, 212, 393, 402, 581, 315, 218, 219, 220, 527,
	528, 529, 530, 622, 623, 627, 207, 465, 466, 467,
	468, 295, 617, 312, 471, 470, 334, 335, 382, 452,
	543, 545, 556, 560, 562, 564, 570, 573, 544, 546,
	557, 561, 563, 565, 571, 574, 533, 535, 537, 539,
	552, 551, 548, 576, 577, 554, 559, 538, 550, 555,
	568, 575, 572, 532, 536, 540, 549, 567, 566, 547,
	558, 569, 553, 541, 534, 542, 0, 198, 223, 371,
	0, 457, 291, 653, 621, 487, 616, 208, 225, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 211, 224, 234, 238, 245, 264,
	279, 281, 288, 301, 313, 321, 322, 325, 331, 383,
	389, 390, 391, 392, 412, 413, 414, 417, 420, 421,
	424, 426, 427, 430, 434, 438, 439, 440, 442, 444,
	446, 458, 463, 477, 478, 479, 480, 481, 484, 485,
	491, 492, 493, 494, 495, 503, 504, 519, 589, 591,
	608, 628, 635, 483, 304, 305, 447, 448, 317, 318,
	649, 650, 303, 603, 636, 600, 648, 630, 441, 381,
	0, 0, 384, 284, 308, 323, 0, 620, 505, 229,
	469, 293, 253, 0, 0, 213, 248, 232, 262, 277,
	280, 327, 394, 403, 432, 437, 299, 274, 246, 462,
	243, 488, 522, 523, 524, 526, 398, 269, 436, 0,
	0, 379, 579, 580, 319,
}

var yyPact = [...]int{
	-1000, -1000, 2087, -1000, -551, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2417, 2632, -1000, -1000, -1000, -1000, 2641, -1000, 986,
	2033, -1000, 2418, 5146, -1000, 55723, 506, -1000, 52755, -458,
	867, 270, 36431, -1000, 171, -1000, 158, 54239, 180, -1000,
	-1000, -1000, -1000, -458, 22333, 2288, 1, -2, 55723, -1000,
	-1000, -1000, -1000, -375, 2571, 1994, -1000, 435, -1000, -1000,
	-1000, -1000, -1000, -1000, 52013, -1000, -1000, 205, 1090, -1000,
	-1000, 2426, 2410, 2276, 894, 2327, -1000, 2470, 1994, -1000,
	22333, 2562, 2375, 21591, 21591, 458, -1000, -1000, 276, -1000,
	-1000, 31237, 55723, 39399, 295, -1000, 2418, -1000, -1000, -1000,
	189, -1000, 364, 1930, -1000, 1921, -1000, 941, 1123, 380,
	856, 855, 379, 378, 376, 374, 372, 370, 369, 368,
	395, -1000, 922, 922, -258, -260, 1555, 466, 442, 442,
	1119, 480, 2369, 2346, -1000, -1000, 922, 922, 922, 371,
	922, 922, 922, 922, 341, 336, 922, 922, 922, 922,
	922, 922, 922, 922, 922, 922, 922, 922, 922, 922,
	922, 922, 922, 918, 2418, 280, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 55723, 321, 55723, -1000,
	819, 503, -1000, -1000, -463, 1063, 1063, 22, 1063, 1063,
	1063, 1063, 182, 953, -3, -1000, 144, 269, 139, 282,
	1056, 786, -1000, -1000, 265, 1056, 1783, -1000, 910, 277,
	125, -1000, 1063, 1063, -1000, 14889, 237, 14889, 14889, 274,
	142, -1000, 2413, -1000, -1000, -1000, -1000, -1000, 1301, -1000,
	-1000, -1000, -1000, -68, 476, -1000, -1000, -1000, -1000, 54239,
	51271, 287, -1000, -1000, 30, 1805, 1478, 22333, 1432, 900,
	-1000, -1000, 1342, 872, -1000, -1000, -1000, -1000, -1000, 523,
	-1000, 24559, 24559, 24559, 24559, -1000, -1000, 1784, 50529, 1784,
	1784, 24559, 1784, 24559, 1784, 1784, 1784, 1784, 22333, 1784,
	1784, 1784, 1784, -1000, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, -1000, -1000, -1000, -1000, 1784, 818, 1784,
	1784, 1784, 1784, 1784, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1784, 1784, 1784, 1784, 1784, 1784, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	-1000, -1000, -1000, 1729, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1659, 1559, 1557, 1550, -1000, 19365, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1784, -1000, -1000,
	-1000, 55723, -1000, 1784, 202, 54239, 54239, 388, 1284, -1000,
	-1000, 2470, 1994, -1000, 2571, 2583, 435, -1000, 3927, 1846,
	1666, 1351, 1994, 1891, 55723, -1000, 1943, -1000, 1920, -1000,
	-1000, 1784, -1000, -1000, -1000, -388, -394, 2190, 1377, 1776,
	-1000, -1000, -1000, -1000, 1828, 22333, -1000, -1000, 2637, -1000,
	29011, 814, 2633, 49787, -1000, 458, 458, 1916, 397, -23,
	-1000, -1000, -1000, -1000, 947, 35689, -1000, -1000, -1000, -1000,
	-1000, 1788, 55723, -1000, -1000, 5096, 54239, -1000, 2030, -1000,
	1775, -1000, 1970, 22333, 2040, 502, 54239, 498, 497, 496,
	464, -108, -1000, -1000, -1000, -1000, -1000, -1000, 922, 922,
	922, -1000, 382, 2554, 5146, 6324, -1000, -1000, -1000, 49045,
	2026, 54239, -1000, 2025, -1000, 1033, 879, 901, 901, 54239,
	-1000, -1000, 54981, 54239, 1018, 1016, 54239, 54239, 54239, 54239,
	-1000, 48303, -1000, 47561, 46819, 1279, 54239, 46077, 45335, 44593,
	43851, 43109, -1000, 2436, -1000, 2146, -1000, -1000, -1000, 54981,
	54239, 54239, 54981, 54239, 54981, 55723, 54239, -1000, -1000, 340,
	-1000, -1000, 1271, 1269, 1267, 922, 922, 1264, 1771, 1768,
	1767, 922, 922, 1262, 1766, 37915, 1763, 251, 1260, 1258,
	1254, 1347, 1758, 208, 1746, 1306, 1263, 1237, 54239, 2019,
	55723, -1000, 257, 966, 967, 935, 2418, 2282, 1909, 475,
	501, 54239, 456, 456, 54239, -1000, 15637, 55723, 173, -1000,
	1744, 22333, -1000, 1057, 1056, 1056, -1000, -1000, -1000, -1000,
	-1000, -1000, 1063, 55723, 1057, -1000, -1000, -1000, 1056, 1063,
	55723, 1063, 1063, 1063, 1063, 1056, 1056, 1056, 1063, 55723,
	55723, 55723, 55723, 55723, 55723, 55723, 55723, 55723, 14889, 910,
	1063, -465, -1000, 1743, -1000, -1000, -1000, 2160, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14889, 14889,
	-1000, -1000, 2469, 2465, -1000, -1000, -1000, 1908, -1000, 153,
	-31, 178, -1000, 42367, 540, 931, -1000, 540, -1000, -1000,
	-1000, -1000, -1000, 1905, 41625, -1000, -466, -470, -471, -472,
	-1000, -1000, -1000, -473, -477, -1000, -1000, -1000, 22333, 22333,
	22333, 22333, -313, -1000, 1328, 24559, 2372, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 22333, 1131, 1298, 24559, 24559, 24559,
	24559, 24559, 24559, 24559, 26043, 25301, 24559, 24559, 24559, 24559,
	24559, 24559, -1000, -1000, 33463, 7507, 7507, 872, 872, 872,
	872, -1000, -223, 1897, 54981, -1000, -1000, -1000, 813, 22333,
	22333, 872, -1000, 1314, 1151, 19365, 22333, 22333, 22333, 22333,
	965, 1478, 54981, 22333, -1000, 1351, -1000, -1000, -1000, -1000,
	1118, -1000, -1000, 1041, 2368, 2368, 2368, 2368, 22333, 22333,
	22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 2368, 22333,
	625, 625, 152, 22333, 22333, 22333, 22333, 22333, 22333, 22333,
	22333, 17881, 22333, 22333, 24559, 22333, 22333, 22333, 1351, 22333,
	22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333,
	22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333,
	22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333,
	22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333,
	22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333,
	22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333,
	22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333,
	22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 1351, 22333,
	1365, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 17133, 22333,
	22333, 22333, 22333, 22333, -1000, -1000, -1000, -1000, -1000, -1000,
	22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 1351, 22333,
	22333, 22333, 22333, 22333, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1549, 1533, 1390, 247, 22333, -1000,
	1893, -1000, -201, 30495, 22333, 1740, 2608, 2068, 54239, -1000,
	-1000, -1000, -1000, 2470, -1000, 2470, 1549, 3918, 2100, 21591,
	-1000, -1000, 3918, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1819, -1000, 55723, 1891,
	2459, 54239, -495, 20849, -1000, -370, -1000, -380, 2188, 1736,
	345, -1000, 22333, 22333, 1889, -1000, 2115, 55723, -1000, -313,
	-1000, 40883, -1000, -1000, 14141, 55723, 365, 55723, -1000, 29753,
	40141, 281, -1000, -23, 1875, -1000, -21, -35, 18623, 869,
	-1000, -1000, -1000, 1555, 26785, 1700, 869, 58, -1000, -1000,
	-1000, 1970, -1000, 1970, 1970, 1970, 1970, 345, 345, 345,
	345, -1000, -1000, -1000, -1000, -1000, 2016, 1970, 2009, -1000,
	1970, 1970, 1970, 1970, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2003, 2003, 2003, 1999, 1999, 1983, 1983, 449, -1000,
	22333, 399, 39399, 2444, 1236, 2388, 257, 464, 2066, 54239,
	54239, 54239, 55723, 977, -1000, 1414, 1410, 1364, -1000, -540,
	1884, -1000, -1000, 2548, -1000, -1000, 1040, 1050, 1048, 1161,
	54239, 210, 355, -1000, 439, -1000, 39399, 54239, 1015, 901,
	54239, -1000, 54239, -1000, -1000, -1000, -1000, -1000, 54239, -1000,
	-1000, 1880, -1000, 1902, 1100, 1046, 1092, 1019, 1880, -1000,
	-1000, -230, 1880, -1000, 1880, -1000, 1880, -1000, 1880, -1000,
	1880, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1007, 121, -390, 54239, 210, 472, -1000, 471, 33463, -1000,
	-1000, -1000, 33463, 33463, -1000, -1000, -1000, -1000, 1735, 1733,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -522,
	55723, -1000, 248, 930, 337, 356, 292, 55723, 854, 2385,
	2378, 2370, 2364, 2362, 2341, 2336, 332, 333, 55723, 55723,
	456, 2128, 55723, 2451, 55723, -1000, -1000, -1000, -1000, -1000,
	1732, 1731, -1000, 1478, 55723, -1000, -1000, 1063, 1063, -1000,
	-1000, 55723, 1063, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1063, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 55723, -1000, -1000,
	-1000, -1000, 1730, -1000, 55723, -68, 154, -1000, -1000, 54239,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -122,
	-1000, 304, -32, 396, -1000, -1000, -1000, -1000, -1000, 2463,
	-1000, 1478, 973, 992, -1000, 1784, -1000, -1000, 1193, -1000,
	-1000, -1000, -1000, -1000, 1784, 1784, 1784, -1000, -1000, -1000,
	-1000, -1000, 1131, 24559, 24559, 24559, 1353, 495, 1596, 1369,
	1606, 1165, 1165, 1259, 24559, 1259, 24559, 876, 876, 876,
	876, 876, -1000, -1000, -1000, -1000, -1000, -1000, 1729, -1000,
	1719, -1000, 1784, 54981, 1723, 17133, 1554, 1484, 1351, 888,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3928, 1351, 1805, 1351, 1924, 3922, 964, -1000, 22333, 1351,
	3626, -1000, -1000, 1351, 1351, 22333, -1000, -1000, 22333, 22333,
	22333, 22333, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388,
	2388, 2388, 22333, 2388, 1878, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1877, 2593, 1350, 2388, 2388, 2388, 2388,
	3597, 2388, 2388, 22333, 2670, -1000, -1000, -1000, 1482, 3592,
	1539, 3576, 2388, 2388, -1000, 2388, 3572, 3550, 1351, 2724,
	2718, 2388, 2388, 2388, 2388, 2388, 2709, 2704, 2388, 2388,
	2688, 2388, 3531, 2388, 2682, 2640, 2627, 2604, 2556, 2543,
	2522, 2507, 2493, 2468, 2461, 2457, 2443, 2431, 2420, 2406,
	2382, 2366, 2388, 2388, 2388, 3520, 2388, 3514, 2388, 3502,
	2388, 2388, 3497, 2359, 2354, 1351, 1876, -1000, 3488, 2388,
	3470, 3444, 3435, 2343, 3426, 3416, 3409, 2388, 2388, 2388,
	2337, 3404, 3395, 3388, 3377, 3373, 3360, 3282, 3106, 3096,
	2388, 1390, 1390, 1390, 1390, 1390, 3081, -324, 2388, 1351,
	-1000, -1000, -1000, -1000, -1000, 3068, 2304, 3061, 3053, 3019,
	3015, 1351, 1784, 804, -1000, -1000, 1390, 1351, 1351, 1390,
	1390, 2974, 2967, 2948, 2898, 2890, 2885, 2388, 2388, -1000,
	2388, 2881, 2849, 2272, 2243, 1351, -1000, 1390, 55723, -1000,
	-455, -1000, -51, 962, 1784, -1000, 37915, 1351, -1000, 6400,
	-1000, 1112, -1000, -1000, -1000, -1000, -1000, 34947, 1803, -1000,
	-1000, -1000, -1000, 1784, 1716, -1000, -1000, -1000, -1000, -1000,
	-1000, 345, 14, 34205, 866, 866, 111, 1478, 1478, 22333,
	-1000, -1000, -1000, -1000, -1000, -1000, 797, 2582, 451, 1784,
	-1000, 1869, 3016, -1000, -1000, -1000, 2458, 27527, -1000, -1000,
	1784, 1784, 55723, 1841, 1781, -1000, 775, -1000, 1319, 1875,
	-23, -49, -1000, -1000, -1000, -1000, 1478, -1000, 1308, 367,
	392, -1000, 457, -1000, -1000, -1000, -1000, 2306, 35, -1000,
	-1000, -1000, 162, 345, -1000, -1000, -1000, -1000, -1000, -1000,
	1668, -1000, 1668, -1000, -1000, -1000, -1000, -1000, 1222, -1000,
	-1000, -1000, -1000, 1211, -1000, -1000, 1209, -1000, -1000, 2843,
	2104, 399, -1000, -1000, 922, 1658, -1000, -1000, 2331, 922,
	922, 54239, -1000, -1000, 1667, 2444, 248, 55723, 2114, -1000,
	2066, 2066, 2066, -1000, 2448, -1000, -1000, -1000, -1000, -1000,
	-1000, -529, 168, 323, -1000, -1000, -1000, 6243, 54239, 1711,
	-1000, 207, -1000, 1646, -1000, 54239, -1000, 1672, 1996, 54239,
	54239, -1000, -1000, -1000, 54239, 1784, -1000, -1000, -1000, -1000,
	500, 2411, 335, -1000, -1000, -352, -1000, -1000, 210, 207,
	54981, 54239, 869, -1000, -1000, -1000, -1000, -1000, -525, 1656,
	494, 226, 294, 55723, 55723, 55723, 55723, 55723, 55723, 518,
	-1000, -1000, -14, -1000, -1000, 181, -1000, -1000, 1653, -1000,
	-1000, -1000, -1000, 181, -1000, -1000, -1000, -1000, -1000, 285,
	467, -1000, 55723, 55723, 914, -1000, -1000, -1000, -1000, -1000,
	1056, -1000, -1000, 1056, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2408, 55723, -41, -492,
	-1000, -489, 22333, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1253, 469, 1596, 24559, 24559, 1151, 1151, 24559, -1000, -1000,
	-1000, 1005, 1005, 33463, -1000, 24559, 22333, -1000, -1000, 22333,
	22333, 22333, 949, -1000, 22333, 1241, -1000, 22333, -1000, -324,
	1390, 2388, 2388, 2388, 2388, -324, -324, -324, -324, -324,
	-324, -324, -324, -324, -324, 1900, -1000, 22333, 22333, 22333,
	1351, 289, -1000, -1000, -1000, -324, 22333, -1000, -1000, 2591,
	-1000, 22333, -1000, 33463, 22333, 22333, 22333, -1000, -1000, -1000,
	22333, 22333, -1000, -1000, 22333, -1000, 22333, -1000, -1000, -1000,
	-1000, -1000, -1000, 22333, -1000, 22333, -1000, -1000, -1000, 22333,
	-1000, 22333, -1000, -1000, 22333, -1000, 22333, -1000, 22333, -1000,
	22333, -1000, 22333, -1000, 22333, -1000, 22333, -1000, 22333, -1000,
	22333, -1000, 22333, -1000, 22333, -1000, 22333, -1000, 22333, -1000,
	22333, -1000, 22333, -1000, 22333, -1000, 22333, -1000, 22333, -1000,
	-1000, -1000, 22333, -1000, 22333, -1000, 22333, -1000, -1000, 22333,
	-1000, 22333, -1000, 22333, -1000, 22333, 22333, -1000, 22333, 22333,
	22333, -1000, 22333, 22333, 22333, 22333, -1000, -1000, -1000, -1000,
	22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333, 22333,
	-1000, -1000, -1000, -1000, -1000, -1000, 22333, -1000, 39399, -1,
	-324, 1365, -1, 1365, 23817, 822, 821, 23075, -1000, 22333,
	16385, -1000, -1000, -1000, -1000, -1000, 22333, 22333, 22333, 22333,
	22333, 22333, -1000, -1000, -1000, 22333, 22333, -1000, 22333, -1000,
	22333, -1000, -1000, -1000, -1000, -1000, 962, -1000, 887, 847,
	901, 54239, -1000, -1000, -1000, -1000, 1874, -1000, 2482, -1000,
	2237, 2228, 2588, 2582, 21591, -1000, 29753, -1000, -1000, 54239,
	-445, -1000, 2268, 2250, 866, 866, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 13393, 2470, 22333, 2113, 54981, 247, -1000,
	28269, 54239, 54981, 29753, 29753, 29753, 29753, 29753, -1000, 2142,
	2098, -1000, 2231, 2185, 2197, 55723, -1000, 1549, 1645, -1000,
	22333, 31979, 1866, 29753, -1000, -1000, 29753, 55723, 12645, -1000,
	-1000, -45, -40, -1000, -1000, -1000, -1000, 1555, -1000, -1000,
	1127, 2455, 2298, -1000, -1000, -1000, -1000, -1000, 1642, -1000,
	1639, 1858, 1636, 1633, 121, -1000, 2039, 2401, 922, 922,
	-1000, 1202, -1000, 1314, 1616, 1614, -1000, -1000, -1000, 482,
	-1000, 55723, 2107, 2106, 2103, -1000, -538, 1201, 1995, 1962,
	22333, 1991, 2547, 1842, 54239, -1000, -1000, 54981, -1000, 197,
	-1000, 399, 54239, -1000, -1000, -1000, 355, 55723, -1000, 7010,
	-1000, -1000, -1000, 207, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 55723, 256, -1000, 1990, 1300, -1000, -1000, 2046, -1000,
	-1000, -1000, -1000, -1000, 245, 209, 1608, 188, 1607, -1000,
	188, -1000, 55723, 893, 2104, 55723, -1000, -1000, -1000, 1063,
	1063, -1000, -1000, 2396, -1000, 1314, 2388, 24559, 24559, -1000,
	872, -1000, -1000, 410, -278, 1970, 1970, -1000, 1970, 1983,
	-1000, 1970, 110, 1970, 90, 1970, -1000, -1000, 1351, 1351,
	-1000, 1390, 2225, 2238, 2814, -1000, 1478, 22333, 2808, -1000,
	-1000, -324, -324, -324, -324, -324, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -119, 2800, 2786, 2388,
	-1000, 1965, 1963, -1000, 2388, 22333, 2388, 1351, 2201, 2388,
	2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388,
	2388, 2170, 2162, 2154, 2099, 2093, 2088, 2080, 2072, 2067,
	2063, 2059, 2051, 2047, 1986, 1978, 1957, 2388, 2388, 1952,
	2388, 1940, 1917, -1000, 1478, 1390, 2737, 1390, 2388, 2388,
	2618, 279, 2388, 1603, 1603, 1603, 1603, 1603, 1390, 1390,
	1390, 1390, 2388, 54239, -1000, -324, -1000, -1000, -379, -387,
	-1000, 1351, -324, 1850, 24559, 2388, 24559, 24559, 24559, 2388,
	1351, -1000, 1906, 1872, 2587, 1854, 2388, 2551, 2388, 2388,
	2388, 1844, -1000, 2462, 1784, 2462, 1784, 2462, 1594, 1112,
	55723, -1000, -1000, -1000, -1000, 2582, 2568, -1000, 1843, -1000,
	14, 619, -1000, 2318, 2250, -1000, 2544, 2264, 2540, -1000,
	-1000, -1000, -1000, -1000, 1478, -1000, 2421, 1868, -1000, 926,
	1797, -1000, -1000, 20849, 1599, 2210, 764, 1594, 1883, 3016,
	2076, 2102, 3400, -1000, -1000, -1000, -1000, 2097, -1000, 2006,
	-1000, -1000, 1943, -1000, 2538, 365, 29753, 1867, 1867, -1000,
	543, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1068, 7010,
	2650, -1000, 1575, -1000, 1295, 239, 1194, -1000, -1000, 922,
	922, -1000, 1013, 1012, -1000, 55723, 1961, -1000, 345, 1562,
	345, 1178, -1000, -1000, 1177, -1000, -1000, -1000, -1000, 2117,
	2300, -1000, -1000, -1000, -1000, 55723, -1000, 55723, 55723, 55723,
	1955, 2529, -1000, 22333, 1947, 925, 2804, 54239, 54239, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	408, 922, -506, 309, 288, 922, 922, 922, -545, -1000,
	-1000, 1591, 1573, -1000, -242, -1000, 22333, -1000, -1000, -1000,
	-1000, -1000, 1214, 1214, 1559, 1557, 1550, -1000, 1943, -1000,
	-1000, -1000, 1600, -1000, -1000, -234, 54239, 54239, 54239, 54239,
	-1000, -1000, -1000, 1115, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 872, 1351, 334, -237,
	1351, -1000, -1000, 345, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 22333, -1000, 22333, -1000, 22333, 1478,
	22333, -1000, -1000, -1000, -1000, -1000, 2470, 1547, 22333, 22333,
	-1000, 1168, 1156, -324, 2388, -1000, -1000, -1000, 22333, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 22333, -1000, 22333, -1000, 22333, -1000, 22333, -1000,
	22333, -1000, 22333, -1000, 22333, -1000, 22333, -1000, 22333, -1000,
	22333, -1000, 22333, -1000, 22333, -1000, 22333, -1000, 22333, -1000,
	22333, -1000, 22333, -1000, -1000, 22333, -1000, -1000, -1000, 22333,
	-1000, 22333, -1000, 22333, -1000, -1000, -1000, 22333, 260, 1005,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1351, 358, -1000, -1000, -1000, 2584, -1000, 1351, 22333,
	1151, -1000, 1151, 1151, 1151, -1000, -1000, -1000, 22333, -1000,
	22333, 22333, -1000, 22333, -1000, 22333, -1000, -1000, -1000, -1000,
	22333, 1784, 2322, 38657, 1784, 38657, 1784, 31979, -1000, -1000,
	2568, 2545, 2525, 2254, 2256, 2256, 2318, -1000, 2513, 2508,
	-1000, 1540, 2506, 1531, 1011, -1000, 54981, 22333, -1000, 1784,
	37915, -1000, 438, 54239, 1784, 54239, -1000, 2483, -1000, -1000,
	22333, 1946, -1000, 22333, -1000, -1000, -1000, -1000, 7507, 2582,
	1867, -1000, -1000, 884, -1000, 22333, -1000, 10620, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1485, 1469, -1000, -1000,
	1945, 22333, -1000, -1000, -1000, 1574, 1495, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1943, -1000, -1000, -1000, -1000,
	355, -533, 2579, 54239, 1155, -1000, 1570, 1842, 350, 1784,
	1463, 922, 922, 922, 1146, 1122, 37915, 1567, -1000, 54239,
	413, -1000, 355, -1000, -266, -267, 2388, -1000, -1000, 2454,
	-1000, -1000, 16385, -1000, -1000, 1939, 2050, -1000, -1000, -1000,
	-1000, 2156, -228, -246, -1000, -1000, 2388, 2388, 2388, 2193,
	1351, -1000, 2388, 2388, 1491, 1370, -1000, -1000, 2388, 2388,
	2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388,
	2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 1390, 1839,
	-1000, 260, 1351, 2096, -1000, -1000, 7507, -1000, -1000, 2483,
	2497, -1, -1000, -1000, 228, -1, 1478, 975, 1351, 1351,
	975, 1822, 2388, 1750, 1727, 2388, 2388, 32721, -1000, 2495,
	2478, 1510, -1000, -1000, 38657, 1510, 38657, 962, 2545, -335,
	22333, 22333, 2242, 1210, -1000, -1000, -1000, -1000, 1415, 1406,
	-1000, 1402, -1000, 2649, -1000, 1478, -1000, 1784, 247, -1000,
	530, 1797, -1000, 2470, 1478, 54239, 1478, 23, 2483, -1000,
	2388, -1000, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
	1784, 1784, 1784, -1000, -1000, 54239, 2574, -1000, -1000, 2453,
	1512, 166, -1000, 1366, 1842, -1000, -1000, 895, -1000, 22333,
	-1000, 37915, 1399, 1330, -1000, -1000, -1000, -1000, -545, -1000,
	-1000, -1000, -1000, -1000, -1000, 435, 1835, -1000, 921, 54239,
	55723, -1000, 2153, -1000, -1000, -1000, -1000, 22333, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 22333, -1000, 1351, 2094, -1000,
	-381, -1000, -512, 22333, -324, -1000, -1000, -324, -1000, -1000,
	-1000, -1000, -1000, 22333, -1000, -1000, 22333, -1000, 22333, -1000,
	-1000, 1510, -1000, -1000, -1000, 37173, -1000, 1510, -1000, 1510,
	-1000, -335, -1000, 1830, -1000, 54239, 1478, 331, -1000, 1108,
	-1000, -1000, -1000, -1000, -1000, 54981, 54239, 1797, 54239, -1000,
	-1000, 1490, 1351, 1784, 2470, -1000, 1467, -1000, 435, -1000,
	1937, 1962, -1000, -1000, -1000, 20107, -1000, -1000, -1000, -1000,
	-1000, 236, -233, 16385, 11897, 1397, -1000, -232, 2388, 1390,
	-1000, -479, -1000, -1000, -1000, -1000, 290, -1000, -1000, 1805,
	-1000, -1000, 1707, 1699, 1498, -1000, -1000, -1000, -1000, -1000,
	-1000, -335, -1000, -1000, 2445, -1000, -270, -1000, -1000, 1709,
	1384, -1000, -1000, -1000, 31979, 53497, -1000, -220, 377, -233,
	22333, 1936, 1351, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -54, -1000, -1000, 529, -1000, -1000, -1000, 2046, -239,
	-1000, -1000, -1000, 301, -496, -318, -334, 24559, -1000, 22333,
	-1000, 22333, -1000, 22333, -1000, 54239, 1784, -1000, -1000, -1000,
	1357, -1000, 4281, -400, 2090, -1000, -150, -1000, -1000, -1000,
	1062, 1329, -1000, -1000, -1000, -1000, -1000, -1000, 2472, 54239,
	-1000, 425, -1000, -1000, 15637, -234, -254, 990, -1000, -1000,
	-1000, -1000, -1000, 1151, 1494, 1488, 2388, -1000, 54239, -1000,
	53497, -395, 869, 7507, -1000, 2082, 2064, 2625, -1000, -1000,
	-1000, -1000, -1000, -1000, -547, 1326, 254, -1000, -1000, -1000,
	301, -369, -1000, 22333, -1000, 22333, -1000, 1351, -1000, -1000,
	2439, 23, -1000, 2645, -1000, 2642, 1026, 1026, -1000, 1109,
	-547, -1000, -1000, -1000, -1000, 2388, 2388, -1000, -401, -1000,
	-1000, -1000, -1000, -1000, 422, 1183, -1000, -1000, -1000, -1000,
	-1000, 7507, -1000, -1000, -1000, 230, 230, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3379, 3366, 30, 8, 37, 36, 3294, 3293, 3291,
	168, 3288, 3287, 3277, 3271, 3269, 3268, 2702, 2687, 2679,
	3266, 3265, 3264, 3263, 3260, 3255, 3254, 3238, 3233, 40,
	102, 191, 96, 202, 200, 3232, 3229, 167, 161, 192,
	3227, 3225, 3222, 112, 175, 80, 82, 187, 3219, 3215,
	69, 3213, 3212, 3211, 186, 183, 178, 1076, 3210, 177,
	111, 47, 3204, 3201, 3200, 3199, 3198, 3197, 3196, 3194,
	3193, 3190, 3188, 3187, 3186, 3184, 3183, 3182, 3181, 3180,
	269, 3179, 3178, 12, 3176, 72, 3173, 3169, 3167, 3166,
	3165, 5, 3163, 3162, 25, 52, 60, 3161, 3160, 48,
	3159, 3158, 3151, 3150, 3148, 73, 3147, 29, 3145, 39,
	3143, 3141, 120, 3140, 3138, 3135, 41, 3134, 3133, 3132,
	13, 163, 3126, 3121, 134, 3117, 3112, 3099, 181, 196,
	3096, 2231, 3090, 99, 3088, 3087, 3086, 162, 188, 3083,
	116, 3082, 3076, 3074, 144, 3071, 3332, 3069, 3068, 63,
	68, 164, 3067, 3066, 199, 67, 10, 3064, 18, 19,
	3062, 3061, 65, 66, 3060, 104, 3059, 3058, 100, 92,
	3055, 98, 93, 3050, 3047, 7, 9, 3042, 1, 4,
	2, 81, 3039, 3035, 108, 3031, 3030, 3028, 91, 3025,
	3024, 3344, 3022, 83, 125, 101, 64, 3020, 174, 149,
	3014, 3003, 3001, 2997, 2995, 2991, 50, 2987, 2985, 2980,
	130, 1253, 110, 2976, 2975, 148, 344, 147, 51, 159,
	2974, 146, 2973, 205, 75, 2972, 166, 2965, 2962, 129,
	128, 2951, 2949, 58, 172, 195, 2948, 90, 126, 114,
	179, 89, 150, 2935, 2933, 56, 62, 2932, 2925, 2924,
	2913, 182, 2907, 2905, 57, 2903, 54, 2900, 165, 2898,
	333, 76, 2888, 180, 155, 2886, 74, 2884, 2878, 95,
	94, 71, 31, 2876, 154, 158, 121, 153, 2875, 2870,
	53, 2869, 2867, 2866, 189, 291, 2863, 2861, 312, 171,
	136, 140, 87, 2858, 297, 2856, 2855, 2852, 15, 4488,
	6763, 173, 27, 156, 2851, 2850, 7793, 45, 44, 26,
	2849, 210, 2848, 185, 2845, 2842, 2840, 197, 212, 105,
	157, 55, 2839, 2836, 2832, 2828, 38, 2827, 2824, 2817,
	2816, 2813, 2811, 35, 34, 33, 70, 217, 59, 22,
	97, 160, 145, 61, 2809, 2807, 2802, 117, 85, 2794,
	152, 151, 118, 119, 2789, 169, 137, 122, 2788, 287,
	32, 2787, 2786, 2781, 2777, 84, 2775, 2772, 2770, 2768,
	142, 138, 113, 77, 2765, 79, 115, 141, 139, 49,
	2764, 42, 2761, 2758, 28, 176, 24, 2756, 17, 103,
	107, 2744, 6413, 2739, 11, 290, 143, 2738, 2733, 6,
	14, 21, 2731, 2726, 2725, 2719, 127, 2717, 2716, 2703,
	2697, 23, 46, 20, 16, 106, 131, 78, 2695, 2689,
	135, 2685, 2681, 2668, 0, 1036, 123, 2667, 198,
}

//line sql.y:8805
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 422, 423, 423, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 266, 392, 264, 264, 28, 75, 37, 37, 36,
	36, 39, 39, 38, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 35,
	35, 15, 16, 34, 34, 34, 17, 17, 110, 110,
	18, 19, 19, 19, 19, 426, 426, 186, 186, 184,
	184, 185, 185, 269, 269, 20, 273, 273, 275, 275,
	275, 275, 265, 265, 265, 21, 21, 274, 274, 276,
	276, 276, 279, 279, 279, 279, 320, 320, 320, 22,
	22, 22, 22, 22, 130, 130, 394, 394, 393, 388,
	388, 387, 387, 386, 391, 391, 390, 390, 389, 41,
	42, 51, 51, 51, 51, 52, 53, 395, 395, 361,
	58, 58, 57, 57, 57, 57, 57, 57, 59, 59,
	55, 55, 54, 54, 56, 56, 363, 363, 349, 349,
	362, 362, 362, 362, 362, 362, 362, 348, 348, 141,
	141, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 410, 410,
	410, 409, 409, 244, 244, 244, 244, 244, 244, 244,
	244, 150, 150, 162, 162, 162, 162, 162, 162, 148,
	148, 149, 147, 147, 147, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 161, 161, 156, 156, 156, 158, 158,
	157, 157, 157, 159, 159, 411, 411, 411, 411, 326,
	326, 326, 326, 329, 329, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 328, 328, 328, 328, 328, 328,
	328, 330, 330, 330, 330, 330, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 332, 332, 332, 332, 332, 332, 332,
	332, 347, 347, 336, 336, 341, 341, 342, 342, 343,
	343, 343, 344, 344, 344, 345, 345, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 340, 340, 339, 339,
	339, 350, 375, 375, 374, 374, 372, 372, 372, 372,
	372, 372, 372, 372, 359, 359, 369, 369, 369, 369,
	369, 358, 358, 354, 354, 354, 355, 355, 356, 356,
	353, 353, 357, 357, 371, 371, 370, 370, 351, 351,
	352, 352, 377, 412, 412, 412, 412, 412, 413, 413,
	378, 402, 404, 404, 404, 403, 403, 400, 401, 399,
	399, 399, 399, 399, 85, 85, 85, 292, 292, 293,
	293, 367, 367, 366, 366, 366, 368, 368, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 287,
	287, 287, 398, 398, 398, 398, 398, 398, 397, 397,
	397, 364, 364, 364, 364, 396, 396, 60, 60, 224,
	224, 415, 415, 417, 417, 417, 48, 48, 48, 48,
	48, 48, 47, 47, 47, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 49, 49, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 112, 112, 113, 113, 113, 113, 115, 115,
	115, 380, 380, 61, 61, 3, 3, 174, 176, 177,
	177, 175, 175, 175, 175, 175, 175, 63, 63, 62,
	62, 179, 178, 180, 180, 180, 1, 1, 2, 2,
	4, 4, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 346, 346, 346, 379, 379, 381,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	118, 117, 117, 116, 119, 119, 119, 119, 119, 119,
	119, 119, 383, 383, 383, 64, 64, 384, 333, 334,
	335, 5, 6, 360, 382, 126, 126, 24, 40, 40,
	25, 25, 25, 25, 26, 26, 65, 68, 68, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 297, 297, 286, 286, 295,
	295, 285, 285, 311, 311, 311, 288, 288, 288, 289,
	289, 408, 408, 408, 282, 282, 67, 67, 67, 312,
	312, 312, 312, 70, 70, 418, 418, 419, 419, 420,
	420, 420, 71, 72, 72, 315, 315, 316, 316, 73,
	74, 86, 86, 86, 86, 86, 87, 87, 87, 87,
	87, 87, 111, 111, 111, 10, 10, 10, 10, 82,
	82, 82, 9, 9, 11, 69, 69, 76, 405, 405,
	406, 407, 407, 407, 407, 77, 79, 27, 27, 27,
	27, 27, 27, 136, 136, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 131, 131, 131,
	125, 125, 427, 80, 81, 81, 129, 129, 129, 122,
	122, 122, 128, 128, 128, 12, 12, 13, 268, 268,
	14, 14, 135, 135, 134, 134, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 132, 132, 133,
	133, 133, 133, 304, 304, 304, 303, 303, 168, 168,
	170, 169, 169, 171, 171, 172, 172, 172, 172, 222,
	222, 194, 194, 261, 261, 262, 262, 260, 260, 267,
	267, 263, 263, 263, 263, 270, 270, 173, 173, 173,
	173, 181, 181, 182, 182, 183, 183, 314, 314, 309,
	309, 309, 308, 308, 187, 187, 187, 189, 188, 188,
	188, 188, 190, 190, 192, 192, 191, 191, 193, 198,
	198, 197, 197, 195, 195, 195, 195, 195, 195, 196,
	196, 196, 196, 199, 199, 146, 146, 146, 146, 146,
	146, 146, 146, 416, 416, 160, 160, 160, 160, 160,
	160, 160, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 251, 251, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 227, 227, 226, 226, 88,
	88, 88, 89, 89, 90, 90, 90, 90, 90, 91,
	91, 91, 91, 91, 91, 91, 93, 93, 92, 92,
	213, 213, 301, 301, 94, 95, 95, 96, 96, 99,
	99, 98, 97, 97, 103, 103, 100, 100, 102, 102,
	101, 104, 104, 105, 106, 106, 283, 283, 200, 200,
	209, 209, 209, 209, 201, 201, 202, 202, 202, 202,
	202, 202, 210, 210, 210, 221, 211, 211, 207, 207,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 165, 165, 165, 165, 232, 232,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 153, 153, 166, 166, 166,
	166, 167, 167, 167, 167, 167, 167, 167, 322, 322,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 428, 428,
	337, 337, 337, 208, 208, 208, 208, 208, 127, 127,
	127, 127, 127, 319, 319, 319, 323, 323, 323, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 324, 324, 230, 230, 123, 123,
	228, 228, 229, 231, 231, 223, 223, 223, 223, 225,
	225, 204, 204, 204, 233, 233, 325, 325, 234, 234,
	107, 108, 108, 109, 109, 235, 235, 237, 236, 236,
	238, 239, 239, 239, 240, 240, 241, 241, 241, 50,
	50, 50, 50, 50, 45, 45, 45, 45, 46, 46,
	46, 46, 138, 138, 138, 138, 140, 140, 139, 139,
	83, 83, 84, 84, 84, 144, 144, 145, 145, 145,
	142, 142, 143, 143, 258, 258, 258, 258, 258, 258,
	258, 242, 242, 242, 249, 249, 249, 245, 245, 247,
	247, 247, 248, 248, 248, 246, 255, 255, 257, 257,
	256, 256, 252, 252, 253, 253, 254, 254, 254, 250,
	250, 203, 203, 203, 203, 203, 259, 259, 259, 259,
	313, 313, 313, 271, 271, 214, 214, 215, 215, 219,
	219, 218, 218, 216, 217, 220, 220, 164, 272, 272,
	280, 277, 277, 278, 278, 305, 305, 305, 281, 281,
	294, 294, 290, 290, 291, 291, 284, 284, 296, 296,
	296, 78, 212, 212, 376, 376, 373, 300, 300, 302,
	302, 306, 306, 310, 310, 307, 307, 8, 421, 421,
	421, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 424, 425, 317, 318, 318, 318,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 2,
	2, 5, 7, 10, 9, 1, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 6, 12, 2, 0, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 0, 1, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 5, 3, 1, 1, 5,
	0, 1, 1, 1, 1, 2, 2, 2, 0, 1,
	4, 4, 4, 4, 4, 4, 2, 4, 1, 3,
	1, 1, 3, 4, 3, 3, 3, 5, 10, 0,
	2, 0, 2, 3, 5, 3, 4, 2, 3, 2,
	3, 3, 3, 3, 2, 2, 4, 4, 1, 1,
	1, 1, 1, 0, 2, 2, 3, 3, 2, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	5, 2, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 1, 3, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 3, 3,
	2, 2, 2, 1, 2, 2, 0, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 1,
	1, 3, 3, 3, 0, 1, 4, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 4, 3, 1,
	3, 1, 7, 6, 7, 7, 8, 8, 0, 1,
	5, 2, 1, 1, 1, 0, 1, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 1, 2, 0,
	1, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 0, 1, 0, 1, 0,
	2, 0, 2, 0, 2, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 8, 5, 5, 4, 4, 4, 6,
	5, 5, 5, 2, 2, 2, 2, 3, 3, 3,
	4, 3, 3, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 6, 10, 7, 5, 5, 5, 5, 7,
	5, 5, 5, 5, 5, 7, 7, 5, 5, 5,
	5, 6, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 4, 5, 5, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 5, 3, 5, 0, 1, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 1, 1, 2, 1, 3, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 3,
	2, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 4, 4, 4, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 5, 5, 4, 0, 2,
	4, 4, 0, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 3, 1, 1,
	2, 3, 7, 0, 3, 0, 1, 1, 3, 1,
	3, 1, 1, 3, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	1, 1, 2, 6, 5, 6, 6, 5, 5, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 3, 6, 1, 1, 3, 4, 3, 4, 4,
	4, 1, 3, 4, 5, 6, 3, 4, 5, 6,
	3, 4, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 5, 5, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 7, 7, 6, 6, 2,
	2, 5, 6, 3, 3, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 4, 2, 4, 0, 1, 2, 5,
	0, 3, 0, 1, 4, 4, 2, 1, 0, 0,
	1, 1, 2, 2, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 5, 1, 3, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 4, 8, 8, 6, 8, 6, 5, 4, 10,
	2, 2, 1, 2, 2, 2, 2, 2, 5, 6,
	6, 6, 6, 6, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 8, 4, 8, 8, 6, 5,
	4, 4, 4, 5, 7, 4, 4, 7, 4, 4,
	6, 6, 6, 8, 6, 6, 4, 4, 3, 4,
	6, 6, 4, 4, 6, 4, 6, 4, 4, 4,
	4, 4, 4, 6, 4, 6, 4, 4, 4, 6,
	4, 6, 4, 4, 6, 4, 6, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 4, 4, 6, 4,
	6, 4, 8, 6, 4, 4, 6, 4, 6, 8,
	4, 6, 8, 4, 4, 6, 8, 6, 4, 6,
	6, 8, 10, 7, 8, 8, 9, 4, 4, 4,
	4, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 4, 4, 4, 4, 4, 4, 6, 4, 6,
	5, 9, 6, 9, 8, 6, 8, 8, 8, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	6, 8, 10, 12, 14, 6, 8, 8, 10, 12,
	14, 6, 8, 10, 12, 6, 8, 4, 4, 3,
	4, 6, 6, 4, 6, 4, 6, 8, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 1, 3, 5, 1,
	1, 1, 2, 2, 0, 4, 0, 2, 0, 2,
	2, 1, 3, 0, 1, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 3, 4, 2, 3, 4,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 3, 1, 6, 5, 4, 1, 3, 3, 5,
	0, 2, 5, 0, 5, 1, 3, 1, 3, 1,
	3, 1, 2, 3, 4, 1, 1, 1, 1, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -422, -80, -427, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -65, -68,
	-66, -67, -70, -71, -72, -73, -74, -9, -11, -69,
	-27, -28, -75, -76, -77, -78, -79, -12, -13, -14,
	-8, -32, -31, -30, 13, 14, -110, -36, 35, -41,
	-51, 240, -52, -42, 241, -53, 243, 242, 280, 244,
	397, 273, 83, 330, 331, 333, 334, 335, 336, -111,
	704, 278, 279, 246, 39, 51, 36, 37, 40, 250,
	286, 287, 249, 145, -33, -37, 12, -424, 15, 487,
	275, 274, 31, -34, 597, 95, -35, 63, -81, -423,
	752, -258, -242, 26, 36, 32, -241, -237, -129, -242,
	24, 22, 11, -80, -80, -80, 16, 17, -80, -361,
	-363, 95, 173, 95, -80, -58, -57, -55, -54, -56,
	-59, 34, -48, -49, -385, -47, -44, 245, 242, 290,
	135, 136, 280, 281, 282, 244, 264, 279, 283, 278,
	299, -43, 90, 36, 597, 600, -368, 241, 247, 248,
	243, 488, 138, 137, 84, -365, 392, 631, 722, -59,
	724, 110, 113, 723, 50, 254, 725, 726, 727, 638,
	728, 263, 729, 730, 731, 732, 738, 679, 739, 740,
	741, 139, 11, -80, -310, -306, 100, -299, 594, 266,
	629, 441, 630, 315, 90, 47, 42, 533, 604, 388,
	392, 631, 518, 722, 398, 330, 348, 342, 523, 524,
	525, 371, 363, 595, 632, 605, 318, 267, 303, 716,
	361, 149, 724, 322, 633, 281, 399, 400, 634, 401,
	110, 333, 438, 737, 321, 635, 735, 113, 723, 338,
	88, 517, 57, 719, 326, 50, 276, 446, 447, 359,
	249, 355, 725, 304, 636, 607, 297, 138, 135, 744,
	39, 351, 56, 33, 734, 137, 55, 726, 164, 637,
	727, 638, 403, 378, 710, 54, 404, 282, 639, 93,
	287, 599, 327, 718, 405, 538, 352, 406, 314, 733,
	246, 640, 325, 699, 691, 692, 407, 408, 711, 383,
	379, 384, 540, 641, 430, 522, 409, 695, 696, 751,
	58, 642, 643, 712, 136, 644, 87, 728, 89, 346,
	347, 645, 312, 265, 543, 544, 432, 375, 500, 127,
	507, 508, 120, 121, 503, 122, 509, 123, 128, 510,
	511, 512, 501, 124, 117, 502, 513, 514, 376, 377,
	125, 515, 119, 118, 504, 506, 126, 516, 263, 38,
	410, 596, 316, 64, 320, 291, 433, 52, 381, 748,
	51, 706, 545, 646, 709, 374, 370, 497, 59, 647,
	648, 649, 650, 519, 729, 373, 345, 369, 743, 4,
	309, 492, 520, 730, 68, 248, 386, 385, 387, 298,
	429, 366, 651, 652, 653, 270, 91, 654, 356, 25,
	655, 656, 411, 305, 657, 62, 658, 659, 436, 279,
	660, 60, 731, 45, 661, 284, 745, 732, 662, 663,
	664, 705, 665, 286, 666, 413, 667, 693, 694, 412,
	380, 382, 546, 293, 414, 397, 251, 598, 668, 328,
	350, 283, 736, 669, 271, 534, 535, 536, 537, 717,
	542, 541, 285, 290, 278, 437, 272, 670, 671, 672,
	673, 674, 319, 690, 675, 676, 334, 602, 738, 498,
	49, 677, 678, 679, 680, 681, 313, 308, 431, 440,
	67, 92, 394, 682, 683, 715, 344, 339, 43, 306,
	99, 478, 480, 481, 482, 483, 484, 479, 486, 684,
	331, 61, 739, 740, 741, 300, 742, 526, 527, 528,
	529, 13, 580, 563, 591, 564, 581, 565, 574, 566,
	582, 590, 592, 547, 555, 548, 556, 586, 569, 583,
	575, 568, 567, 589, 572, 576, 549, 557, 587, 573,
	550, 558, 551, 559, 552, 560, 585, 584, 577, 588,
	553, 561, 579, 554, 562, 578, 570, 571, 449, 749,
	750, 521, 416, 139, 310, 311, 53, 367, 292, 685,
	323, 686, 357, 358, 494, 495, 372, 343, 368, 146,
	702, 332, 341, 700, 294, 417, 499, 280, 687, 439,
	307, 389, 131, 340, 395, 324, 603, 539, 299, 418,
	714, 601, 530, 531, 365, 362, 301, 532, 688, 390,
	704, 419, 255, 295, 296, 689, 701, 420, 421, 317,
	422, 423, 424, 425, 426, 428, 329, 427, 703, 697,
	698, 302, 477, 600, 337, 360, 396, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 496, 253, -80, 253, -191,
	-306, -131, 706, 708, 192, -277, 400, -295, 402, 415,
	410, 420, 408, -286, 411, 413, 293, -408, 430, 253,
	417, 240, 403, 412, 421, 422, 317, 428, 423, 329,
	427, 302, 424, 425, 426, -392, 192, 727, 742, 332,
	340, 149, 364, 407, 405, 431, 706, 100, -312, 100,
	101, 102, -299, 332, -315, 337, -300, -392, -299, 335,
	-80, -80, -317, -317, -131, -211, -146, 157, -160, -266,
	-163, 101, -151, -154, -205, -206, -207, -208, -161, -225,
	-264, 181, 182, 189, 158, -221, -164, 29, 593, 489,
	488, 192, 34, 235, 77, 78, 491, 492, 160, 63,
	15, 454, 455, -162, 444, 445, 456, 450, 451, 517,
	519, 520, 521, 518, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 522, 533, 494, 495, 129, 496,
	117, 119, 118, 127, 128, 497, 498, 499, 361, 545,
	546, 540, 543, 544, 542, 541, 376, 377, 500, 563,
	564, 568, 567, 565, 566, 569, 572, 573, 574, 575,
	576, 577, 579, 578, 570, 571, 548, 547, 549, 550,
	551, 552, 553, 554, 556, 555, 557, 558, 559, 560,
	561, 562, 580, 581, 582, 583, 584, 586, 585, 590,
	589, 587, 588, 592, 591, 501, 502, 120, 121, 122,
	123, 124, 125, 126, 503, 506, 504, 505, 507, 508,
	509, 514, 515, 510, 511, 512, 513, 516, 387, 385,
	386, 382, 381, 380, -90, -103, 620, 619, -104, 441,
	446, 447, 449, -152, -153, -166, -167, -300, -306, 258,
	443, 252, 187, 487, -155, -149, -223, 116, 102, -31,
	-220, 442, 452, 453, 457, 448, 458, 606, 608, 623,
	624, 626, 611, 616, 615, 618, 534, 535, 536, 537,
	538, 539, 691, 692, 693, 694, 695, 696, 697, 698,
	-392, -299, 100, -158, -156, -200, 103, 108, 111, 112,
	114, -414, 276, 357, 358, 130, -424, -216, -217, -157,
	105, 106, 107, 132, 133, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 720, 98, 104,
	50, 416, 416, -191, -80, -80, -80, -80, -421, 723,
	598, -235, -129, -237, -33, -31, -424, 12, -80, -31,
	-32, -30, -37, -39, 625, -38, -306, 115, -214, -219,
	-217, 720, 109, -242, -258, 16, 67, 176, 48, 56,
	-240, -241, -34, -31, -146, 23, 41, 27, -133, 183,
	-146, -306, -133, -284, 257, -80, -80, -273, -320, 332,
	-275, 431, 706, 430, -265, -278, 100, -264, -277, 429,
	101, -362, 173, -348, -352, -300, 268, -378, 264, -191,
	-371, -370, -300, -424, -130, -294, 254, 262, 261, 150,
	-395, 153, 310, 443, 252, -54, -55, -56, -277, 191,
	726, -112, 285, 289, 96, 96, -352, -351, -350, -396,
	289, 268, -377, -369, 260, 269, -358, 261, 262, -353,
	254, 151, -396, -353, 259, 269, 264, 268, 289, 289,
	139, 289, 139, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 284, -359, 165, -359, 601, 601, -365, -396,
	264, 254, -396, -396, 260, -296, -353, 256, 28, 256,
	38, 38, -359, -359, -359, -277, 191, -359, -359, -359,
	-359, 297, 297, -359, -359, -359, -359, -359, -359, -359,
	-359, -359, -359, -359, -359, -359, -359, -359, -359, -359,
	253, -395, -138, 427, 317, 90, -57, 299, -40, -191,
	-294, 254, 255, -395, 286, -191, 236, 253, 709, -288,
	173, 19, -288, -285, 416, 414, 401, 406, -288, -288,
	-288, -288, 300, 399, -354, 254, 38, 265, 416, 300,
	399, 300, 301, 300, 301, 409, 419, 300, -311, 18,
	176, 443, 404, 408, 293, 253, 294, 255, 418, 301,
	-311, 98, -289, 173, 300, 416, 410, 296, -288, -288,
	-318, -424, -302, -300, -298, 245, 41, 156, 28, 30,
	159, 192, 142, 23, 160, 40, 247, 364, 264, 191,
	260, 488, 240, 81, 606, 444, 451, 442, 450, 454,
	490, 491, 443, 402, 34, 17, 608, 31, 274, 27,
	44, 185, 242, 163, 609, 277, 29, 275, 129, 133,
	611, 26, 84, 269, 18, 262, 46, 20, 612, 613,
	21, 74, 258, 257, 176, 254, 79, 15, 235, 32,
	172, 75, 614, 151, 145, 615, 616, 617, 618, 143,
	77, 173, 24, 746, 452, 453, 36, 707, 593, 288,
	187, 82, 65, 708, 157, 448, 619, 620, 130, 621,
	134, 85, 713, 153, 22, 80, 48, 622, 289, 623,
	259, 747, 624, 434, 625, 174, 243, 487, 78, 175,
	720, 626, 721, 252, 415, 12, 493, 35, 273, 261,
	73, 72, 141, 76, 458, 627, 253, 162, 256, 144,
	132, 11, 150, 37, 16, 83, 86, 455, 456, 457,
	63, 140, 597, 161, 19, 628, 435, 155, -392, 709,
	-318, -318, 300, 341, 35, 101, -418, -419, -420, 597,
	434, 256, -300, -191, -86, 699, 244, -87, 705, 41,
	251, 146, 38, -136, 416, -124, 192, 727, 710, 711,
	712, 709, 413, 717, 715, 713, 300, 714, 96, 153,
	155, 156, 4, -146, 172, -201, -202, 171, 165, 166,
	167, 168, 169, 170, 177, 176, 157, 159, 173, -251,
	154, 178, 179, 180, 181, 182, 183, 184, 186, 185,
	187, 188, 174, 175, 191, 238, 239, -154, -154, -154,
	-154, -221, -227, -226, -424, -223, -392, -299, -306, -424,
	-424, -154, -283, -424, -151, -424, -424, -424, -424, -424,
	-230, -146, -424, -424, -428, -424, -428, -428, -428, -337,
	-424, -337, -337, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, -424, -424, -424, -424, 236, -424,
	-424, -424, -424, -424, -337, -337, -337, -337, -337, -337,
	-424, -424, -424, -424, -424, -424, -424, -424, -424, -424,
	-424, -424, -424, -424, 98, 112, 108, 111, 103, 114,
	98, 98, 98, 98, -31, -32, -211, 63, -424, -317,
	-405, -406, -194, -191, -424, 317, -300, -300, 286, 105,
	-240, -34, -31, -235, -241, -237, -31, -80, -122, -135,
	69, 70, -134, -137, 27, 44, 74, 76, 99, 72,
	73, 71, 41, -425, 97, -425, -258, -425, 96, -39,
	-261, 95, 96, -424, 653, 683, 653, 683, 67, 49,
	98, 98, 96, 25, -236, -238, -146, 18, -304, 4,
	-303, 28, -300, 98, 236, 18, -192, 32, -191, -284,
	-284, 96, 100, 332, -274, -276, 432, 434, 165, -305,
	-300, 98, 34, 97, 96, -191, -326, -329, -331, -330,
	-332, -327, -328, 361, 362, 192, 365, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 378, 390, 35, 276,
	357, 358, 359, 360, 379, 380, 381, 382, 384, 385,
	386, 387, 342, 363, 595, 343, 344, 345, 346, 347,
	348, 350, 351, 354, 352, 353, 355, 356, -301, -300,
	95, 97, 96, -336, 95, -146, -138, 253, -300, 254,
	254, 254, -291, 258, 487, -359, -359, -359, 284, 23,
	-47, -44, -385, 22, -43, -44, 245, 135, 136, 242,
	95, -348, 95, -357, -301, -300, 95, 151, 259, 150,
	-356, -353, -356, -357, -300, -223, -300, 151, 151, -300,
	-300, -270, -300, -270, -270, 41, -270, 41, -270, 41,
	105, -300, -270, 41, -270, 41, -270, 41, -270, 41,
	-270, 41, 34, 87, 88, 89, 34, 91, 92, 93,
	-223, -300, -300, -223, -348, -223, -191, -300, -277, 105,
	105, 105, -359, -359, 105, 98, 98, 98, -359, -359,
	105, 98, -308, -306, 98, 98, -397, 270, 314, 316,
	105, 105, 105, 105, 34, 98, -398, 34, 734, 733,
	735, 736, 737, 98, 105, 34, 105, 34, 105, -300,
	95, -191, -144, 304, 240, 242, 245, 85, 98, 322,
	320, 321, 318, 323, 324, 325, 165, 50, 96, 256,
	253, -300, -290, 258, -290, -300, -307, -306, -298, -191,
	256, 398, 98, -146, -355, 18, 176, -311, -311, -288,
	-191, -355, -311, -288, -191, -288, -288, -288, -288, -311,
	-311, -311, -288, -306, -306, -191, -191, -191, -191, -191,
	-191, -191, -318, -289, -288, 709, 98, -282, 18, 85,
	-318, -318, -297, 26, 26, 96, 338, 435, 436, -316,
	335, -82, -300, 98, -10, -29, -18, -17, -19, 165,
	-10, 96, 597, -184, -191, 709, 709, 709, 709, 709,
	709, -146, -146, -146, -146, 621, -209, -416, 157, 132,
	133, 130, 131, -163, 42, 43, 41, -146, -210, -216,
	-221, 115, 176, 159, 173, -251, -151, -154, -151, -151,
	-151, -151, -151, -151, 235, -151, 235, -151, -151, -151,
	-151, -151, -151, -319, -300, 98, 192, -159, -158, 114,
	-414, -159, 594, 96, -226, 236, -146, -146, -392, -120,
	460, 461, 462, 463, 465, 466, 467, 470, 471, 475,
	476, 459, 477, 464, 469, 472, 473, 474, 468, 360,
	-146, -212, -211, -212, -146, -146, -228, -229, 161, -223,
	-146, -425, -425, 105, 183, -128, 27, 44, -128, -128,
	-128, -128, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -128, -146, -121, 459, 477, 464, 469, 472,
	473, 474, 468, 360, 478, 479, 480, 481, 482, 483,
	484, 485, 486, -121, -120, -146, -146, -146, -146, -146,
	-146, -146, -146, -88, -146, 142, 143, 144, -211, -146,
	-151, -146, -146, -146, -425, -146, -146, -146, -212, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -391, -390, -389, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -211, -211, -211, -211, -211, -146, -425, -146, -165,
	-149, 105, -266, 114, 101, -146, -146, -146, -146, -146,
	-146, -212, -302, -307, -298, -299, -211, -212, -212, -211,
	-211, -146, -146, -146, -146, -146, -146, -146, -146, -425,
	-146, -146, -146, -146, -146, -258, -425, -211, 96, -407,
	434, 435, 707, -309, 289, -308, 28, -212, 98, 18,
	-268, 86, -300, -240, -240, 69, 70, 65, -132, -133,
	-137, -425, -38, 28, -260, -300, -219, -425, 646, 646,
	68, 98, -338, -277, 388, 389, 192, -146, -146, 96,
	-239, 30, 31, -191, -303, 183, -307, -191, -269, 289,
	-191, -169, -171, -172, -173, -194, -222, -424, -174, -31,
	617, 614, 18, -184, -185, -193, -306, -275, -320, -274,
	96, 433, 435, 436, 85, 134, -146, -339, 191, -367,
	-366, -365, -348, -350, -351, -352, 97, -339, -344, 395,
	394, -336, -336, -336, -336, -336, -338, -338, -338, -338,
	95, -336, 95, -336, -336, -336, -336, -341, 95, -341,
	-341, -342, -341, 95, -342, -343, 95, -343, -378, -146,
	-375, -374, -372, -373, 263, 110, 689, 645, 597, 638,
	679, 86, -370, -239, 105, -425, -144, -291, -376, -373,
	-300, -300, -300, -306, 157, 100, 98, 100, 98, 100,
	98, -113, -61, -1, 746, 747, 748, 96, 23, -349,
	-348, -60, 314, -381, -382, 289, -377, -371, -357, 151,
	-356, -357, -357, -300, 96, 32, 139, 139, 139, 139,
	597, 242, 35, -292, 637, 157, 689, 645, -348, -60,
	256, 256, -319, -319, -319, 98, 98, -287, 742, -184,
	-140, 306, 165, 295, 295, 253, 308, 253, 308, -191,
	319, 322, 320, 321, 318, 323, 324, 325, 326, 41,
	41, 41, 41, 41, 41, 41, 307, 309, 311, 297,
	-191, -191, -290, 85, -186, -191, 29, -306, 98, 98,
	-191, -288, -288, -191, -288, -288, -191, 98, -306, -420,
	339, -300, 375, 700, 702, -124, 434, 96, 597, 26,
	-125, 26, -424, -416, 132, 133, -221, -221, -221, -210,
	-151, -154, -151, 156, 277, -151, -151, -424, -223, -425,
	-302, 28, 96, 86, -425, 181, 96, -425, -425, 96,
	18, 96, -231, -229, 163, -146, -425, 96, -425, -425,
	-211, -146, -146, -146, -146, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -211, -425, 96, 96, 18,
	-323, 28, -425, -425, -425, -425, 96, -425, -425, -230,
	-425, 18, -425, 86, 96, 176, 96, -425, -425, -425,
	96, 96, -425, -425, 96, -425, 96, -425, -425, -425,
	-425, -425, -425, 96, -425, 96, -425, -425, -425, 96,
	-425, 96, -425, -425, 96, -425, 96, -425, 96, -425,
	96, -425, 96, -425, 96, -425, 96, -425, 96, -425,
	96, -425, 96, -425, 96, -425, 96, -425, 96, -425,
	96, -425, 96, -425, 96, -425, 96, -425, 96, -425,
	-425, -425, 96, -425, 96, -425, 96, -425, -425, 96,
	-425, 96, -425, 96, -425, 96, 96, -425, 96, 96,
	96, -425, 96, 96, 96, 96, -425, -425, -425, -425,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	-425, -425, -425, -425, -425, -425, 96, -95, 622, -425,
	-425, 96, -425, 96, 96, 96, 96, 96, -425, -424,
	236, -425, -425, -425, -425, -425, 96, 96, 96, 96,
	96, 96, -425, -425, -425, 96, 96, -425, 96, -425,
	96, -425, -406, 706, 435, -198, -197, -195, 83, 257,
	84, -424, -308, -425, -159, -266, -267, -266, -204, -300,
	105, 114, -242, -168, 96, -170, 18, -221, 97, 96,
	-338, -246, -252, -285, -300, 98, 192, -340, 192, -340,
	388, 389, -238, 236, -199, 19, -203, 35, 63, -29,
	-424, -424, 35, 96, -187, -189, -188, -190, 75, 79,
	81, 76, 77, 78, 82, -314, 28, -31, -169, -31,
	-424, -191, -184, -426, 18, 86, -426, 96, 236, -276,
	-279, 437, 434, 440, -392, 98, -112, 96, -365, -352,
	-243, -141, 46, -345, 396, -338, 605, -338, -347, 98,
	-347, 105, 105, 105, 97, -50, -45, -46, 36, 90,
	-372, -359, 98, 45, -359, -359, -300, 97, -239, -140,
	-191, 85, -376, -376, -376, 29, -2, 745, 751, 151,
	95, 401, 22, -260, 96, 97, -224, 315, 97, -114,
	-300, 97, 95, -357, -357, -300, -424, 253, 34, 34,
	689, 645, 637, -60, -224, -223, -300, -339, 744, 743,
	97, 255, 313, -145, 454, -142, 98, 100, -191, -191,
	-191, -191, -191, -191, 245, 242, 424, -415, 327, 98,
	-415, 298, 256, -184, -191, 96, -85, 272, 267, -311,
	-311, 36, -191, 434, 718, 716, -146, 156, 277, -163,
	-154, -120, -120, -151, -321, 192, 361, 276, 359, 355,
	375, 366, 394, 357, 395, 352, 351, 350, -321, -319,
	-151, -211, -146, -146, -146, 164, -146, 162, -146, -96,
	-95, -425, -425, -425, -425, -425, -96, -96, -96, -96,
	-96, -96, -96, -96, -96, -96, -235, -146, -146, -146,
	-425, 192, 361, -96, -146, 18, -146, -319, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -389, -146, -211, -146, -211, -146, -146,
	-146, -146, -146, -390, -390, -390, -390, -390, -211, -211,
	-211, -211, -146, -424, -300, -99, -98, -97, 672, 257,
	-95, -165, -99, -165, 235, -146, 235, 235, 235, -146,
	-212, -302, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -195, -353, 295, -353, 295, -353, -270, 96,
	-281, 26, 18, 63, 63, -168, -199, -133, -169, -300,
	-249, 699, -255, 52, -253, -254, 53, -250, 54, 62,
	-340, -340, 183, -240, -146, -271, 85, -272, -280, -223,
	-215, -218, -216, -424, -259, -425, -300, -270, -272, -171,
	-172, -172, -171, -172, 75, 75, 75, 80, 75, 80,
	75, -188, -306, -425, -146, -309, 86, -169, -169, -193,
	-306, 183, 434, 438, 439, -365, -413, 130, 157, 34,
	85, 392, 110, -411, 191, 634, 684, 689, 645, 638,
	679, -412, 259, 150, 151, 271, 28, 47, 97, 96,
	97, 96, 97, 97, 96, -293, -292, -46, -45, -359,
	-359, 105, -392, 98, 98, 255, -191, 85, 85, 85,
	-115, 749, 105, 95, -3, 90, -146, 95, 23, -348,
	-223, -383, -333, -384, -334, -335, -5, -6, -360, -118,
	63, 110, -64, 50, 254, 729, 730, 139, -424, 742,
	-375, -260, -379, -381, -191, -150, -424, -162, -148, -147,
	-149, -155, 181, 182, 276, 357, 358, -224, -191, -139,
	304, 312, 95, -143, 101, -394, 86, 295, 392, 295,
	392, 98, -417, 328, 98, -417, -191, -85, -50, -191,
	-288, -288, 36, -392, -425, -163, -154, -127, 176, 597,
	-324, 604, -336, -336, -336, -343, -336, 347, -336, 347,
	-336, -425, -425, -425, 96, -425, 26, -425, 96, -146,
	96, -96, -96, -96, -96, -96, -123, 493, 96, 96,
	-425, 95, 95, -425, -146, -425, -425, -425, 96, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, 96, -425, 96, -425, 96, -425, 96, -425,
	96, -425, 96, -425, 96, -425, 96, -425, 96, -425,
	96, -425, 96, -425, 96, -425, 96, -425, 96, -425,
	96, -425, 96, -425, -425, 96, -425, -425, -425, 96,
	-425, 96, -425, 96, -425, -425, -425, 96, -322, 690,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -94, -301, -95, 654, 654, -425, -95, -232, 96,
	-151, -425, -151, -151, -151, -425, -425, -425, 96, -425,
	96, 96, -425, 96, -425, 96, -425, -425, -425, -425,
	96, -196, 26, -424, -196, -424, -196, -425, -266, -191,
	-199, -233, 20, -246, 57, 367, -257, -256, 61, 53,
	-254, 23, 55, 23, 33, -271, 96, 165, -313, 96,
	28, -425, -425, 96, 63, 236, -425, -199, -182, -181,
	85, 86, -183, 85, -181, 75, 75, -261, 96, -269,
	-169, -199, -199, 236, 130, -424, -150, 16, 98, 98,
	-392, -410, 733, 734, 34, 105, -359, -359, 151, 151,
	-191, 95, -338, 98, -338, 105, 105, 34, 91, 92,
	93, 34, 87, 88, 89, -191, -191, -191, -191, -380,
	95, 23, -146, 95, 165, 97, -260, -260, 291, 176,
	-359, 727, 297, 297, -359, -359, -359, -117, -116, 749,
	97, -425, 96, -346, 597, 600, -146, -156, -156, -261,
	97, -388, 597, -393, -300, -300, -300, -300, 105, 107,
	-425, 595, 82, 598, -425, -338, -146, -146, -146, -146,
	-240, 98, -146, -146, 105, 105, -96, -425, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -211, -146,
	-425, -179, -178, -180, 710, 130, 34, -321, -425, -213,
	289, -102, -101, -100, 18, -425, -146, -120, -120, -120,
	-120, -146, -146, -146, -146, -146, -146, -424, 75, 22,
	20, -263, -300, 259, -424, -263, -424, -309, -233, -234,
	21, 23, -247, 59, -245, 58, -245, -256, 23, 23,
	98, 23, 98, 151, -280, -146, -218, -308, 63, -29,
	-300, -215, -300, -235, -146, 95, -146, -159, -199, -199,
	-146, -206, 517, 519, 520, 521, 518, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 522, 533, 494,
	495, 496, 117, 119, 118, 127, 128, 497, 498, 499,
	361, 545, 546, 540, 543, 544, 542, 541, 376, 377,
	500, 563, 564, 568, 567, 565, 566, 569, 572, 573,
	574, 575, 576, 577, 579, 578, 570, 571, 548, 547,
	549, 550, 551, 552, 553, 554, 556, 555, 557, 558,
	559, 560, 561, 562, 580, 581, 582, 583, 584, 586,
	585, 590, 589, 587, 588, 592, 591, 501, 502, 120,
	121, 122, 123, 124, 125, 126, 503, 506, 504, 507,
	508, 509, 514, 515, 510, 511, 512, 513, 516, 387,
	385, 386, 382, 381, 380, 441, 446, 447, 449, 534,
	535, 536, 537, 538, 539, 691, 692, 693, 694, 695,
	696, 697, 698, 98, 98, 95, -146, 97, 97, -261,
	-379, -61, 97, -262, -260, 105, 97, 292, -216, -424,
	98, -359, -359, -359, 105, 105, -308, -425, 96, -300,
	-412, -381, 601, 601, -425, 28, -387, -386, -302, 95,
	86, 68, 596, 599, -425, -425, -425, 96, -425, -425,
	-425, 97, 97, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, -425, -425, -425, -425, -425,
	-425, -425, -425, -425, -425, 96, -425, -178, -180, -425,
	85, -159, -235, 23, -99, 314, 316, -99, -425, -425,
	-425, -425, -425, 96, -425, -425, 96, -425, 96, -425,
	-425, -263, -425, 23, 23, 96, -425, -263, -425, -263,
	-198, -234, -109, -108, -107, 628, -146, -211, -248, 60,
	85, 134, 98, 98, 98, 16, -424, -215, 236, -313,
	-240, -260, -176, 401, -235, -425, -260, 97, 28, 97,
	751, 151, 97, -216, -126, -424, 288, -308, 98, 98,
	-116, -119, -29, 96, 165, -260, -191, 68, -146, -211,
	-425, 85, 609, 710, -93, -92, -89, 721, 747, -211,
	-95, -95, -146, -146, -146, -425, -300, 259, -425, -425,
	-109, 96, -106, -105, -300, -325, 597, 85, 134, -272,
	-260, -313, -300, 97, -425, -424, -240, 97, -244, -29,
	95, -3, 288, -333, -384, -334, -335, -5, -6, -360,
	-83, 597, -386, -364, -306, -302, 98, 105, 97, 597,
	-425, -425, -91, 159, 719, 687, -156, 235, -425, 96,
	-425, 96, -425, 96, -107, 96, 28, 602, -425, -309,
	-177, -175, -300, 651, -403, -402, 593, -413, -409, 130,
	157, 110, -411, 689, 645, 140, 141, -83, -146, 95,
	-425, -84, 303, 706, 236, -394, 598, -91, 720, 665,
	640, 665, 640, -151, -146, -146, -146, -105, -424, -425,
	96, 26, -326, -63, 662, -400, -401, 85, -404, 407,
	661, 682, 130, 98, 97, -260, 264, -307, -388, 599,
	156, -120, -425, 96, -425, 96, -425, -94, -175, 658,
	-339, -159, -401, 85, -400, 85, 17, 16, -4, 750,
	97, 305, -91, 665, 640, -146, -146, -425, -62, 29,
	-176, -399, 272, 267, 270, 35, -399, 105, -4, -425,
	-425, 662, 266, 34, 130, -159, -179, -178, -178,
}

var yyDef = [...]int{
	892, -2, -2, 894, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 892, 892, 892, 0, 892, 0,
	0, 892, -2, -2, 892, 1653, 0, 892, 0, 887,
	0, -2, 807, 813, 0, 822, -2, 0, 0, 892,
	892, 2294, 2294, 887, 0, 0, 0, 0, 0, 892,
	892, 892, 892, 1658, 1505, 50, 892, 0, 88, 89,
	842, 843, 844, 65, 0, 2292, 85, 0, 893, 1,
	3, 71, 75, 0, 0, 0, 58, 1514, 0, 78,
	0, 0, 896, 0, 0, 1636, 892, 892, 0, 129,
	130, 0, 0, 0, -2, 133, -2, 162, 163, 164,
	0, 169, 612, 529, 581, 527, 566, -2, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 404, 404, 0, 0, -2, 515, 515, 515,
	1638, 0, 0, 0, 563, 466, 404, 404, 404, 0,
	404, 404, 404, 404, 0, 0, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 1532, 168, 1654, 1651, 1652, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825,
	1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835,
	1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
	1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895,
	1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945,
	1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955,
	1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965,
	1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975,
	1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
	1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
	2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
	2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025,
	2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045,
	2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085,
	2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105,
	2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 0, 1630, 0, 725,
	996, 0, 888, 889, 0, 796, 796, 0, 796, 796,
	796, 796, 0, 0, 0, 739, 0, 0, 0, 0,
	793, 0, 755, 756, 0, 793, 0, 762, 799, 0,
	0, 769, 796, 796, 772, 2295, 0, 2295, 2295, 0,
	0, 1621, 0, 790, 788, 802, 803, 42, 806, 809,
	810, 811, 812, 815, 0, 826, 829, 1647, 1648, 0,
	831, 836, 855, 856, 0, 45, 1156, 0, 1020, 0,
	1031, -2, 1042, 1059, 1060, 1061, 1062, 1063, 1065, 1066,
	1067, 0, 0, 0, 0, 1072, 1073, 0, 0, 0,
	0, 0, 1136, 0, 0, 0, 0, 2017, 1476, 0,
	0, 1438, 1438, 1172, 1438, 1438, 1440, 1440, 1440, 1867,
	2009, 2018, 2197, 1828, 1834, 1835, 1836, 2143, 2144, 2145,
	2146, 2238, 2239, 2243, 1931, 1823, 2210, 2211, 0, 2291,
	1970, 1978, 1979, 1955, 1964, 2003, 2105, 2222, 1846, 1998,
	2068, 1928, 1950, 1951, 2086, 2087, 1974, 1975, 1954, 2149,
	2151, 2167, 2168, 2153, 2155, 2164, 2170, 2175, 2154, 2166,
	2171, 2184, 2188, 2191, 2192, 2193, 2161, 2159, 2172, 2176,
	2178, 2180, 2186, 2189, 2162, 2160, 2173, 2177, 2179, 2181,
	2187, 2190, 2148, 2152, 2156, 2165, 2183, 2163, 2182, 2157,
	2169, 2174, 2185, 2158, 2150, 1968, 1971, 1958, 1959, 1961,
	1963, 1969, 1976, 1982, 1960, 1981, 1980, 0, 1956, 1957,
	1962, 1973, 1977, 1965, 1966, 1967, 1972, 1983, 2024, 2023,
	2022, 2067, 1994, 2066, 0, 0, 0, 0, 0, 1817,
	1873, 1874, 2194, 1360, 1361, 1362, 1363, 0, 0, 0,
	0, 0, 0, 0, 293, 294, 1489, 1490, 44, 1155,
	1617, 1440, 1440, 1440, 1440, 1440, 1440, 1094, 1095, 1096,
	1097, 1098, 1124, 1125, 1131, 1132, 2081, 2082, 2083, 2084,
	1911, 2233, 1920, 1921, 2063, 2064, 1933, 1934, 2265, 2266,
	-2, -2, -2, 235, 236, 237, 238, 239, 240, 241,
	242, 0, 1872, 2208, 2209, 231, 0, 1615, 1616, 298,
	295, 296, 297, 1138, 1139, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
	286, 287, 288, 289, 290, 291, 292, 0, 300, 301,
	2294, 0, 865, 0, 0, 0, 0, 0, 0, 1659,
	1660, 1514, 0, 1506, 1505, 63, 0, 892, -2, 0,
	0, 0, 0, 47, 0, 52, 953, 79, 80, 1605,
	1609, 0, 895, 77, 76, 1554, 1557, 0, 0, 0,
	59, 1515, 67, 69, 1516, 0, 897, 898, 0, 929,
	933, 0, 0, 0, 1637, 1636, 1636, 105, 0, 0,
	106, 126, 127, 128, 0, 0, 112, 113, 1623, 1624,
	43, 0, 0, 180, 181, 0, 1112, 431, 0, 176,
	0, 424, 363, 0, 1532, 0, 0, 0, 0, 0,
	1634, 0, 1631, 157, 158, 165, 166, 167, 404, 404,
	404, 578, 0, 0, 168, 168, 536, 537, 538, 0,
	0, -2, 429, 0, 516, 0, 0, 418, 418, 422,
	420, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 673, 0, 405, 0, 576, 577, 467, 0,
	0, 0, 0, 0, 0, 0, 0, 1639, 1640, 0,
	553, 554, 0, 0, 0, 404, 404, 0, 0, 0,
	0, 404, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 1545, 0, 0, 0, -2, 0, 717, 0,
	0, 0, 1632, 1632, 0, 724, 0, 0, 0, 729,
	0, 0, 730, 0, 793, 793, 791, 792, 732, 733,
	734, 735, 796, 0, 0, 413, 414, 415, 793, 796,
	0, 796, 796, 796, 796, 793, 793, 793, 796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2295, 799,
	796, 0, 763, 0, 764, 765, 766, 767, 770, 771,
	773, 2296, 2297, 1649, 1650, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 2295, 2295,
	777, 781, 785, 783, 1622, 808, 814, 816, 817, 0,
	0, 827, 830, 849, 49, 1919, 835, 49, 837, 838,
	839, 840, 841, 867, 868, 873, 0, 0, 0, 0,
	879, 880, 881, 0, 0, 884, 885, 886, 0, 0,
	0, 0, 0, 1018, 0, 0, 1144, 1145, 1146, 1147,
	1148, 1149, 1150, 1151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1043, 1044, 0, 0, 0, 1068, 1069, 1070,
	1071, 1074, 0, 1085, 0, 1087, 1485, -2, 0, 0,
	0, 1079, 1080, 0, 0, 0, 1642, 1642, 0, 0,
	0, 1477, 0, 0, 1170, 0, 1171, 1173, 1174, 1175,
	0, 1176, 1177, 902, 902, 902, 902, 902, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 902, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1642, 0, 0,
	1642, 1642, 0, 0, 223, 224, 225, 226, 227, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 243, 244, 245, 246, 247,
	302, 248, 249, 250, 1155, 0, 0, 0, 0, 46,
	857, 858, 0, 979, 1642, 0, 0, 908, 0, 1657,
	57, 66, 68, 1514, 61, 1514, 0, 912, 0, 0,
	-2, -2, 913, 914, 918, 919, 920, 921, 922, 923,
	924, 925, 926, 54, 2293, 55, 0, 74, 0, 48,
	0, 0, 0, 0, 1555, 0, 1558, 0, 0, 0,
	377, 1562, 0, 0, 1507, 1508, 1511, 0, 930, 2015,
	934, 0, 936, 937, 0, 0, 103, 0, 995, 0,
	0, 0, 114, 0, 116, 117, 0, 0, 0, 388,
	1625, 1626, 1627, -2, 411, 0, 388, 372, 310, 311,
	312, 363, 314, 363, 363, 363, 363, 377, 377, 377,
	377, 345, 346, 347, 348, 349, 0, 363, 0, 331,
	363, 363, 363, 363, 353, 354, 355, 356, 357, 358,
	359, 360, 315, 316, 317, 318, 319, 320, 321, 322,
	323, 365, 365, 365, 365, 365, 369, 369, 0, 1113,
	0, 392, 0, 1511, 0, 0, 1545, 1634, 1644, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 579, 623,
	530, 567, 580, 0, 533, 534, -2, 0, 0, 515,
	0, 517, 0, 412, 0, -2, 0, 422, 0, 418,
	422, 419, 422, 410, 423, 557, 558, 559, 0, 561,
	562, 653, 965, 0, 0, 0, 0, 0, 659, 660,
	661, 0, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 0, 0, 0, 517, 0, 564, 0, 0, 468,
	469, 470, 0, 0, 473, 474, 475, 476, 0, 0,
	479, 480, 481, 982, 983, 482, 483, 508, 509, 510,
	484, 485, 486, 487, 488, 489, 490, 502, 503, 504,
	505, 506, 507, 491, 492, 493, 494, 495, 496, 499,
	0, 150, 1536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1632, 0, 0, 0, 0, 911, 997, 1655, 1656, 726,
	0, 0, 797, 798, 0, 416, 417, 796, 796, 736,
	778, 0, 796, 740, 779, 741, 743, 742, 744, 757,
	758, 796, 747, 794, 795, 748, 749, 750, 751, 752,
	753, 754, 774, 759, 760, 761, 800, 0, 804, 805,
	775, 776, 0, 786, 0, 0, 0, 820, 821, 0,
	828, 852, 850, 851, 853, 845, 846, 847, 848, 0,
	854, 0, 0, 870, 99, 875, 876, 877, 878, 890,
	883, 1157, 1015, 1016, 1017, 0, 1019, 1025, 0, 1140,
	1142, 1023, 1024, 1027, 0, 0, 0, 1021, 1032, 1152,
	1153, 1154, 0, 0, 0, 0, 0, 1036, 1040, 1045,
	1046, 1047, 1048, 1049, 0, 1050, 0, 1053, 1054, 1055,
	1056, 1057, 1058, 1064, 1453, 1454, 1455, 1083, 303, 304,
	0, 1084, 0, 0, 0, 0, 0, 0, 0, 0,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1156, 0, 1643, 0, 0, 0, 1483, 1480, 0, 0,
	0, 1439, 1441, 0, 0, 0, 903, 904, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 0, 0, 1456, 0, 0, 0, 0,
	0, 0, 0, 1476, 0, 1089, 1090, 1091, 0, 0,
	0, 0, 0, 0, 1218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1364, 1365, 1366, 1367, 41, 0, 0, 0, 0, 0,
	0, 0, 1487, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1389,
	0, 0, 0, 0, 0, 0, 1613, 0, 0, 860,
	861, 863, 0, 999, 0, 980, 0, 0, 866, 0,
	907, 0, 910, 60, 62, 916, 917, 0, 938, 927,
	915, 56, 51, 0, 0, 957, 1606, 1610, 1556, 1559,
	1560, 377, 1582, 0, 386, 386, 383, 1517, 1518, 0,
	1510, 1512, 1513, 81, 935, 931, 0, 1013, 0, 0,
	994, 0, 941, 943, 944, 945, 977, 0, 948, 949,
	0, 0, 0, 0, 0, 101, 996, 107, 0, 115,
	0, 0, 120, 121, 108, 109, 110, 111, 0, 612,
	-2, 463, 182, 184, 185, 186, 177, -2, 375, 373,
	374, 313, 377, 377, 339, 340, 341, 342, 343, 344,
	0, 351, 0, 332, 333, 334, 335, 324, 0, 325,
	326, 327, 367, 0, 328, 329, 0, 330, 430, 0,
	1519, 393, 394, 396, 404, 0, 399, 400, 0, 404,
	404, 0, 425, 426, 0, 1511, 1536, 0, 0, 1645,
	1644, 1644, 1644, 155, 0, 170, 171, 172, 173, 174,
	175, 648, 0, 0, 624, 646, 647, 168, 0, 0,
	178, 519, 518, 0, 680, 0, 428, 0, 0, 422,
	422, 407, 408, 560, 0, 0, 655, 656, 657, 658,
	0, 0, 0, 546, 457, 0, 547, 548, 517, 519,
	0, 0, 388, 471, 472, 477, 478, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	595, 596, 598, 601, 603, 521, 607, 609, 0, 597,
	600, 602, 604, 521, 608, 610, 1533, 1534, 1535, 0,
	0, 718, 0, 0, 454, 97, 1633, 723, 727, 728,
	793, 746, 780, 793, 738, 745, 768, 782, 784, 818,
	819, 824, 832, 833, 834, 874, 0, 0, 0, 0,
	882, 0, 0, 1026, 1141, 1143, 1028, 1029, 1030, 1033,
	0, 1037, 1041, 0, 0, 0, 0, 0, 1088, 1086,
	1487, 0, 0, 0, 1137, 0, 0, 1160, 1161, 0,
	0, 0, 0, 1481, 0, 0, 1168, 0, 1442, 1118,
	0, 0, 0, 0, 0, 1118, 1118, 1118, 1118, 1118,
	1118, 1118, 1118, 1118, 1118, 1505, 1195, 0, 0, 0,
	0, 0, 1200, 1201, 1202, 1118, 0, 1205, 1206, 0,
	1208, 0, 1209, 0, 0, 0, 0, 1216, 1217, 1219,
	0, 0, 1222, 1223, 0, 1225, 0, 1227, 1228, 1229,
	1230, 1231, 1232, 0, 1234, 0, 1236, 1237, 1238, 0,
	1240, 0, 1242, 1243, 0, 1245, 0, 1247, 0, 1250,
	0, 1253, 0, 1256, 0, 1259, 0, 1262, 0, 1265,
	0, 1268, 0, 1271, 0, 1274, 0, 1277, 0, 1280,
	0, 1283, 0, 1286, 0, 1289, 0, 1292, 0, 1295,
	1296, 1297, 0, 1299, 0, 1301, 0, 1304, 1305, 0,
	1307, 0, 1310, 0, 1313, 0, 0, 1314, 0, 0,
	0, 1318, 0, 0, 0, 0, 1327, 1328, 1329, 1330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1341, 1342, 1343, 1344, 1345, 1346, 0, 1348, 0, 1119,
	0, 0, 1119, 0, 0, 0, 0, 0, 1158, 1642,
	0, 1443, 1444, 1445, 1446, 1447, 0, 0, 0, 0,
	0, 0, 1387, 1388, 1390, 0, 0, 1393, 0, 1395,
	0, 1614, 859, 862, 864, 951, 1000, 1001, 0, 0,
	0, 0, 981, 1641, 905, 906, 909, 959, 0, 1491,
	0, 0, 938, 1013, 0, 939, 0, 53, 954, 0,
	1564, 1563, 1576, 1589, 386, 386, 380, 381, 387, 382,
	384, 385, 1509, 0, 1514, 0, 1603, 0, 0, 1592,
	0, 0, 0, 0, 0, 0, 0, 0, 984, 0,
	0, 987, 0, 0, 0, 0, 978, 949, 0, 950,
	0, -2, 0, 0, 95, 96, 0, 0, 0, 118,
	119, 0, 0, 125, 389, 390, 159, 168, 465, 183,
	438, 0, 0, 309, 376, 336, 337, 338, 0, 361,
	0, 0, 0, 0, 459, 131, 1523, 1522, 404, 404,
	395, 0, 398, 0, 0, 0, 1646, 364, 427, 0,
	149, 0, 0, 0, 0, 1635, 618, 0, 0, 625,
	0, 0, 0, 528, 0, 539, 540, 0, 652, -2,
	714, 392, 0, 406, 409, 966, 0, 0, 541, 0,
	544, 545, 458, 519, 550, 551, 565, 552, 500, 501,
	498, 0, 0, 1546, 1547, 1552, 1550, 1551, 136, 586,
	588, 592, 587, 591, 0, 0, 0, 523, 0, 611,
	523, 584, 0, 454, 1519, 0, 722, 455, 456, 796,
	796, 869, 100, 0, 872, 0, 0, 0, 0, 1034,
	1038, 1051, 1052, 1448, 1474, 363, 363, 1461, 363, 369,
	1464, 363, 1466, 363, 1469, 363, 1472, 1473, 0, 0,
	1081, 0, 0, 0, 0, 1167, 1484, 0, 0, 1178,
	1117, 1118, 1118, 1118, 1118, 1118, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1478, 0, 0, 0,
	1199, 0, 0, 1203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 148, 0, 0, 0, 0, 0,
	0, 1398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1112, 1116, 0, 1120, 1121, 0, 0,
	1350, 0, 0, 1368, 0, 0, 0, 0, 0, 0,
	0, 1488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1002, 1009, 0, 1009, 0, 1009, 0, 0,
	0, 1628, 1629, 1492, 1493, 1013, 1494, 928, 940, 958,
	1582, 0, 1575, 0, -2, 1584, 0, 0, 0, 1590,
	378, 379, 932, 82, 1014, 86, 0, 1603, 1618, 0,
	1600, 1607, 1611, 0, 0, 0, 1596, 0, 1013, 942,
	973, 975, 0, 970, 985, 986, 988, 0, 990, 0,
	992, 993, 953, 947, 0, 103, 0, 1013, 1013, 102,
	0, 998, 122, 123, 124, 464, 187, 192, 0, 0,
	0, 197, 0, 199, 0, 0, 0, 204, 205, 404,
	404, 439, 0, 306, 308, 0, 0, 190, 377, 0,
	377, 0, 368, 370, 0, 440, 460, 1520, 1521, 0,
	0, 397, 401, 402, 403, 0, 151, 0, 0, 0,
	621, 0, 649, 0, 0, 0, 0, 0, 0, 179,
	520, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	0, 404, 0, 0, 0, 404, 404, 404, 0, 706,
	391, 0, 0, 677, 674, 542, 0, 221, 222, 229,
	230, 232, 0, 0, 0, 0, 0, 549, 953, 1537,
	1538, 1539, 0, 1549, 1553, 139, 0, 0, 0, 0,
	594, 599, 605, 0, 522, 606, 719, 720, 721, 98,
	731, 737, 871, 891, 1022, 1035, 1039, 0, 0, 0,
	0, 1475, 1459, 377, 1462, 1463, 1465, 1467, 1468, 1470,
	1471, 1077, 1078, 1082, 0, 1164, 0, 1166, 0, 1482,
	0, 1179, 1180, 1181, 1182, 1183, 1514, 0, 0, 0,
	1198, 0, 0, 1118, 0, 1211, 1210, 1212, 0, 1214,
	1215, 1220, 1221, 1224, 1226, 1233, 1235, 1239, 1241, 1244,
	1246, 1248, 0, 1251, 0, 1254, 0, 1257, 0, 1260,
	0, 1263, 0, 1266, 0, 1269, 0, 1272, 0, 1275,
	0, 1278, 0, 1281, 0, 1284, 0, 1287, 0, 1290,
	0, 1293, 0, 1298, 1300, 0, 1303, 1306, 1308, 0,
	1311, 0, 1315, 0, 1317, 1319, 1320, 0, 0, 0,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1347, 0, 1110, 1349, 1122, 1123, 1128, 1352, 0, 0,
	0, 1355, 0, 0, 0, 1359, 1159, 1370, 0, 1375,
	0, 0, 1381, 0, 1385, 0, 1391, 1392, 1394, 1396,
	0, 0, 0, 0, 0, 0, 0, 979, 960, 64,
	1494, 1498, 0, 1569, 1567, 1567, 1577, 1578, 0, 0,
	1585, 0, 0, 0, 0, 87, 0, 0, 1591, 0,
	0, 1612, 0, 0, 0, 0, 104, 1505, 967, 974,
	0, 0, 968, 0, 969, 989, 991, 946, 0, 1013,
	1013, 93, 94, 0, 193, 0, 195, 0, 198, 200,
	201, 202, 208, 209, 210, 203, 0, 0, 305, 307,
	0, 0, 350, 362, 352, 0, 0, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 953, 152, 153, 154, 613,
	0, 623, 0, 955, 0, 616, 0, 531, 0, 0,
	0, 404, 404, 404, 0, 0, 0, 0, 691, 0,
	0, 654, 0, 662, 0, 0, 0, 233, 234, 0,
	1548, 585, 0, 137, 138, 0, 0, 590, 524, 525,
	1075, 0, 0, 0, 1076, 1460, 0, 0, 0, 0,
	0, 1479, 0, 0, 0, 0, 1204, 1207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1323, 0, 0, 0, 643, 644, 0, 1399, 1115, 1505,
	0, 1119, 1129, 1130, 0, 1119, 1369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1010, 0,
	0, 0, 961, 962, 0, 0, 0, 999, 1498, 1503,
	0, 0, 1572, 0, 1565, 1568, 1566, 1579, 0, 0,
	1586, 0, 1588, 0, 1619, 1620, 1608, 1601, 0, 1595,
	1598, 1600, 1597, 1514, 971, 0, 976, 0, 1505, 92,
	0, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 207, 0, 0, 366, 371, 0,
	0, 0, 614, 0, 956, 626, 617, 0, 704, 0,
	708, 0, 0, 0, 711, 712, 713, 690, 0, 694,
	432, 678, 675, 676, 543, 0, 140, 141, 0, 0,
	0, 1449, 0, 1452, 1162, 1165, 1163, 0, 1194, 1196,
	1197, 1457, 1458, 1213, 1249, 1252, 1255, 1258, 1261, 1264,
	1267, 1270, 1273, 1276, 1279, 1282, 1285, 1288, 1291, 1294,
	1302, 1309, 1312, 1316, 1321, 0, 1324, 0, 0, 1325,
	0, 645, 1106, 0, 0, 1126, 1127, 0, 1354, 1356,
	1357, 1358, 1371, 0, 1376, 1377, 0, 1382, 0, 1386,
	1397, 0, 1004, 1011, 1012, 0, 1007, 0, 1008, 0,
	952, 1503, 84, 1504, 1501, 0, 1499, 1496, 1561, 0,
	1570, 1571, 1580, 1581, 1587, 0, 0, 1600, 0, 1594,
	90, 0, 0, 0, 1514, 194, 0, 213, 0, 622,
	0, 625, 615, 702, 703, 0, 715, 707, 709, 710,
	692, -2, 1540, 0, 0, 0, 593, 1450, 0, 0,
	1326, 0, 641, 642, 1114, 1107, 0, 1092, 1093, 1111,
	1351, 1353, 0, 0, 0, 1003, 963, 964, 1005, 1006,
	83, 0, 1500, 1134, 0, 1495, 0, 1573, 1574, 1604,
	0, 1593, 1599, 972, 979, 0, 91, 445, 438, 1540,
	0, 0, 0, 695, 696, 697, 698, 699, 700, 701,
	582, 1542, 142, 143, 0, 512, 513, 514, 136, 0,
	1169, 1322, 1108, 0, 0, 0, 0, 0, 1372, 0,
	1378, 0, 1383, 0, 1502, 0, 0, 1497, 1602, 627,
	0, 629, 0, -2, 433, 446, 0, 188, 214, 215,
	0, 0, 218, 219, 220, 211, 212, 132, 0, 0,
	716, 0, 1543, 1544, 0, 139, 0, 0, 1099, 1100,
	1101, 1102, 1104, 0, 0, 0, 0, 1135, 1112, 628,
	0, 0, 388, 0, 638, 434, 435, 0, 441, 442,
	443, 444, 216, 217, 650, 0, 0, 511, 589, 1451,
	0, 0, 1373, 0, 1379, 0, 1384, 0, 630, 631,
	639, 0, 436, 0, 437, 0, 0, 0, 619, 0,
	650, 1541, 1109, 1103, 1105, 0, 0, 1133, 0, 640,
	636, 447, 449, 450, 0, 0, 448, 651, 620, 1374,
	1380, 0, 451, 452, 453, 632, 633, 634, 635,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 3, 3, 3, 186, 178, 3,
	95, 97, 183, 181, 96, 182, 236, 184, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 752,
	166, 165, 167, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 188, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 154, 3, 189,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 155,
	156, 157, 159, 160, 161, 162, 163, 164, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 179, 180,
	185, 187, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:631
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:644
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:649
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:688
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:694
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:700
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:706
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:710
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:716
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:722
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:728
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:732
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:737
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:741
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:747
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:751
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:757
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:794
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:805
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:831
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:845
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:849
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:872
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:876
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:886
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:891
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:897
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:903
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:910
		{
			yyLOCAL = &ValuesStatement{ListArg: ListArg(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:914
		{
			yyLOCAL = &ValuesStatement{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:926
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:934
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:938
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:942
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:948
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:960
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:972
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:976
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:982
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:988
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:992
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:996
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1000
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1005
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1006
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1010
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1014
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1020
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1024
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1030
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1034
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1039
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1043
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1049
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1055
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1059
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1065
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1069
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1073
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1077
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1083
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1087
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1091
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1097
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1101
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1107
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1111
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1117
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1121
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1125
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1131
		{
			yyVAL.str = RepeatableReadStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1135
		{
			yyVAL.str = ReadCommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1139
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1143
		{
			yyVAL.str = SerializableStr
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1149
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1153
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1157
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1163
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1169
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1176
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1185
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1189
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1196
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1200
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1205
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1215
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1220
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1225
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1231
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1236
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1242
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1247
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1251
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1257
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1261
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1273
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1280
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1287
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1292
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1297
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1302
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1309
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1316
		{
			yyLOCAL = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1327
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1338
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1344
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1348
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1352
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1356
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1360
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1364
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1370
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1374
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1380
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1384
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1390
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1394
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1400
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1404
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1410
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1414
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1420
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1430
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1435
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1440
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1444
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1453
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1457
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1468
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1477
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1490
		{
			yyVAL.str = ""
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1499
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1503
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1508
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1518
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1524
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1544
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1548
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1553
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1557
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1562
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1567
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1572
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1576
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1582
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1586
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1590
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1596
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1600
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1605
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1609
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1614
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1619
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1624
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1629
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1634
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1639
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1646
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1653
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1690
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1724
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1728
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1732
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1736
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1740
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1744
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1748
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1753
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1757
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1761
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Armscii8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = ASCIIStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Big5Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = UBinaryStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Cp1250Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Cp1251Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = Cp1256Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = Cp1257Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Cp850Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Cp852Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = Cp866Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = Cp932Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = Dec8Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = EucjpmsStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = EuckrStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = Gb18030Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = Gb2312Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = GbkStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = Geostd8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = GreekStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = HebrewStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = Hp8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = Keybcs2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = Koi8rStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = Koi8uStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = Latin1Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = Latin2Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = Latin5Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = Latin7Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = MacceStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = MacromanStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = SjisStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = Swe7Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = Tis620Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = Ucs2Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.str = UjisStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.str = Utf16Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.str = Utf16leStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.str = Utf32Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.str = Utf8mb3Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.str = Utf8mb4Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.str = Utf8mb3Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1941
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1945
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1949
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1955
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1959
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1965
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1969
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1973
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1979
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1983
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1989
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1993
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1997
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2001
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2073
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2079
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2085
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2091
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2097
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2119
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2133
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2137
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2200
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2240
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2245
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2254
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2259
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2263
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2272
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2276
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2283
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2287
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2293
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2301
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2305
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2309
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2314
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2318
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2323
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2327
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2331
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2335
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2344
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2349
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2354
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2359
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2365
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2369
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2374
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2378
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2382
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2388
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2397
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2403
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2407
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2413
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2417
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2422
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2426
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2430
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2434
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2438
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2442
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2448
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2452
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2458
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2462
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2466
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2470
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2474
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2479
		{
			yyVAL.str = ""
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = yyDollar[2].str
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2497
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2507
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = ""
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = yyDollar[1].str
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2522
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2526
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2531
		{
			yyVAL.str = ""
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2535
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2541
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2545
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2551
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2555
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2561
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2565
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2571
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2575
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2581
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2587
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2591
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2595
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2599
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2603
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2608
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2612
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2618
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2624
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2630
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2634
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2638
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2643
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2647
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2653
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2659
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2665
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2669
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2673
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2677
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2681
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2686
		{
			yyVAL.str = ""
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2700
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2704
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2709
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2713
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2718
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2722
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2728
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2732
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2736
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2742
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2746
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2752
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2768
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2784
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2788
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2792
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2844
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2848
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2852
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2856
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2860
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2864
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2868
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2872
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = ""
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2916
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2921
		{
			yyVAL.str = ""
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2927
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2931
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2936
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2940
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2945
		{
			yyVAL.str = ""
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2949
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2958
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2962
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2971
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2975
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2979
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2983
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 531:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2987
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2993
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2997
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3001
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3011
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3019
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3023
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3027
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3031
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3035
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3039
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3043
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3047
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3051
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3055
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3059
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3063
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3067
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3071
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3075
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3079
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3083
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3087
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3091
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3095
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3099
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3103
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3107
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3111
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3115
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3119
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3123
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3127
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3133
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3137
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3143
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3147
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3151
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3155
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3159
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3163
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3167
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3171
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3175
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3179
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3185
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3192
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3212
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3222
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3236
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3248
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3258
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3262
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3308
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3315
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3322
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3329
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3335
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3342
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3350
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3356
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3363
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3369
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3376
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3382
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3391
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3399
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3406
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3412
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3419
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3425
		{
			yyLOCAL = &AlterMigration{
				Type:      SetCutOverThresholdMigrationType,
				UUID:      string(yyDollar[4].str),
				Threshold: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3434
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3438
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3447
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3455
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3464
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3471
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3479
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3483
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3492
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3507
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3512
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3521
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3525
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3531
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3537
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3543
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3547
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3553
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3557
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3563
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3569
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3575
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3581
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3587
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3591
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3595
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3599
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3605
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3611
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3617
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3621
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3625
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3631
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3635
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3640
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3644
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3649
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3653
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3659
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3663
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3667
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3671
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3675
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3679
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3683
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3687
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3691
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3695
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3699
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3703
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3707
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3711
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3715
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3719
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3723
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3727
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3731
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3735
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3739
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3743
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3748
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3752
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3756
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3762
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3766
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3772
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3777
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3781
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3786
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3791
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3796
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3801
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3806
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3811
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3816
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3821
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3827
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3833
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3837
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3843
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3848
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3852
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3857
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3862
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3867
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3872
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3877
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3882
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3889
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3896
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3903
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3911
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3915
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3921
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3927
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3933
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3939
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3945
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3951
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3957
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3963
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3969
		{
			yyVAL.str = ""
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3973
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3985
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3989
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 720:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3995
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3999
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4018
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4022
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4028
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4034
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4038
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4076
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4172
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4212
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4216
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4223
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4227
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4231
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4235
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4239
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4243
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4247
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4251
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4255
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4259
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4263
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4267
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4272
		{
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4274
		{
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4278
		{
			yyVAL.str = ""
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4282
		{
			yyVAL.str = "extended "
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4288
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4292
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4298
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4308
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4312
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4316
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4326
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4330
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4336
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4340
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4346
		{
			yyVAL.empty = struct{}{}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.empty = struct{}{}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4364
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4370
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4374
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4378
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4385
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4389
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4393
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4404
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4408
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4413
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4417
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4423
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4427
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4433
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4437
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4441
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4448
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4454
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4458
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4463
		{
			yyVAL.empty = struct{}{}
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.empty = struct{}{}
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4468
		{
			yyVAL.empty = struct{}{}
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4470
		{
			yyVAL.empty = struct{}{}
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4474
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4480
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4485
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4489
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4493
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4497
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4501
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4506
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4510
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4514
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4518
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4522
		{
			yyLOCAL = TraceVExplainType
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4526
		{
			yyLOCAL = KeysVExplainType
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.str = yyDollar[1].str
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4536
		{
			yyVAL.str = yyDollar[1].str
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4540
		{
			yyVAL.str = yyDollar[1].str
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4546
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4550
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4554
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4558
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4563
		{
			yyVAL.str = ""
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4567
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4571
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4577
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4581
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4587
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4593
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4597
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4603
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4609
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4613
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4619
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4625
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4629
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4633
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4637
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4643
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4649
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4655
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4659
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4663
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4667
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4671
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4675
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4681
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4685
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4695
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4699
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4703
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4707
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4711
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4715
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4719
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4723
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4727
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4731
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4735
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4740
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4744
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4748
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4753
		{
			yyVAL.str = ""
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4757
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4762
		{
			setAllowComments(yylex, true)
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4766
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4772
		{
			yyVAL.strs = nil
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4776
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4782
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4786
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4790
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4795
		{
			yyVAL.str = ""
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4799
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4803
		{
			yyVAL.str = SQLCacheStr
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4808
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4812
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4816
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4822
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4826
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4836
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4841
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4845
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4851
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4855
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4860
		{
			yyVAL.strs = nil
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4864
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4870
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4874
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4880
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4884
		{
			yyVAL.str = SQLCacheStr
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4888
		{
			yyVAL.str = DistinctStr
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4892
		{
			yyVAL.str = DistinctStr
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4896
		{
			yyVAL.str = HighPriorityStr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4900
		{
			yyVAL.str = StraightJoinHint
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4904
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4908
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4912
		{
			yyVAL.str = SQLBigResultStr
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4916
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4920
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4926
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4930
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4936
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4940
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4944
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4948
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4953
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4957
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4961
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4968
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4973
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4977
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4983
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4989
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4993
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5003
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5007
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5011
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5015
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5021
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5025
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5031
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5035
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5044
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5053
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5059
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5063
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5069
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5073
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5079
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5083
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5087
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5091
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5097
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5101
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5114
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5118
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5122
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5126
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5132
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5134
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5138
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5140
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5144
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5146
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5149
		{
			yyVAL.empty = struct{}{}
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5151
		{
			yyVAL.empty = struct{}{}
		}
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5154
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5158
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5162
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5169
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5175
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5179
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5183
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5189
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5195
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5199
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5203
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5207
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5213
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5217
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5227
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5231
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5237
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5241
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5247
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5252
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5256
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5262
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5266
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5272
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5276
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5280
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5284
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5288
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5292
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5297
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5301
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5305
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5309
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5346
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5350
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5360
		{
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5363
		{
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5368
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5384
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5388
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5392
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5444
		{
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5447
		{
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5493
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5497
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5501
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5505
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5509
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5515
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5519
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5523
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5527
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5531
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5535
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5539
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5543
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5547
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5555
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5559
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5563
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5567
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5575
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5579
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5583
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5587
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5591
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5599
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5603
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5607
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5611
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5615
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5621
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5625
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5631
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5635
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5641
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5645
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5649
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5655
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5659
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5666
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5670
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5674
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5678
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5682
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5688
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5692
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5696
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5700
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5704
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5708
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5712
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5717
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5721
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5727
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5731
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5740
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5745
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5749
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5755
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5761
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5765
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5771
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5775
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5780
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5787
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5793
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5797
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5803
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5807
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5813
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5817
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5822
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5829
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5835
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5839
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5845
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5851
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5855
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5861
		{
			yyVAL.str = ""
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5865
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5871
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5875
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5882
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5886
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5890
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5894
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5900
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5904
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5910
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5914
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5918
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5922
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5926
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5930
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5936
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5940
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5944
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5951
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5957
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5961
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5971
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5975
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5997
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6017
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6036
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6059
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6148
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6152
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6156
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6172
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6176
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6180
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6184
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6188
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6192
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6208
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6212
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6216
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6220
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6224
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6228
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6244
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6248
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6260
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6264
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6268
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6272
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6276
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6280
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6292
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6296
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6300
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6304
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6308
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6336
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6348
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6352
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6356
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6360
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6364
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6368
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6372
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6376
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6380
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6384
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6388
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6392
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6396
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6400
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6404
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6408
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6412
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6424
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6432
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6436
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6440
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6444
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6448
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6452
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6456
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6460
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6464
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6468
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6472
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6476
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6480
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6484
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6488
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6492
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6496
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6500
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6504
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6508
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6512
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6516
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6520
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6524
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6528
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6532
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6536
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6540
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6544
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6548
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6552
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6556
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6560
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6564
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6568
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6572
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6576
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6580
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6584
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6588
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6592
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6596
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6600
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6604
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6608
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6612
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6616
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6620
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6624
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6628
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6632
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6636
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6640
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6644
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6648
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6652
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6656
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6660
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6664
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6668
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6672
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6676
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6680
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6684
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6688
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6692
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6696
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6700
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6704
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6708
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6712
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6716
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6720
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6728
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6732
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6736
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6740
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6744
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6748
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6752
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6756
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6760
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6764
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6768
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6776
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6780
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6784
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6788
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6792
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6802
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6806
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6810
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6814
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6819
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6823
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6829
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6833
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6837
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6841
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6845
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6850
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6854
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6858
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6862
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6866
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6870
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6875
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6879
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6883
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6887
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6894
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6898
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6904
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6908
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6912
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6916
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6922
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6926
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6930
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6934
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6938
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6942
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6946
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6955
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6961
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6965
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6969
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6973
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6977
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6981
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6985
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6989
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6993
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6997
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7001
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7005
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7009
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7013
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7017
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7021
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7025
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7029
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7033
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7037
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7043
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7047
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7051
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7055
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7059
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7063
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7067
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7071
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7075
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7079
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7083
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7087
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7091
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7095
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7099
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7103
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7107
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7111
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7121
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7125
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7129
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7139
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7143
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7147
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7151
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7155
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7161
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7165
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7169
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7173
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7177
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7183
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7187
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7191
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7201
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7205
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7211
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7215
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7219
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7223
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7227
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7233
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7237
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7241
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7245
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7249
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7253
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7257
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7261
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7265
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7269
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7275
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7279
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7284
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7288
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7293
		{
			yyVAL.str = string("")
		}
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7297
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7303
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7307
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7313
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7322
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7328
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7332
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7336
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7340
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7346
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7350
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7356
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7365
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7369
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7374
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7378
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7383
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7387
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7397
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7403
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7409
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7413
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7418
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7422
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7431
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7437
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7443
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7447
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7453
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7458
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7462
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7466
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7471
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7475
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7481
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7485
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7489
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7494
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7498
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7502
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7506
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7510
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7517
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7521
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7525
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7529
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7535
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7539
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7543
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7547
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7552
		{
			yyVAL.str = ""
		}
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7556
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7560
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7564
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7569
		{
			yyVAL.str = ""
		}
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7573
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7579
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7583
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7588
		{
			yyVAL.str = ""
		}
	case 1541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7592
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7597
		{
			yyVAL.str = "cascaded"
		}
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7601
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7605
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7614
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7620
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7626
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7632
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7641
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7645
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7650
		{
			yyVAL.str = ""
		}
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7654
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7660
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7664
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7668
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7672
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7676
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7680
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7684
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7690
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7694
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7698
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7703
		{
			yyVAL.str = ""
		}
	case 1565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7707
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7711
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7716
		{
			yyVAL.str = ""
		}
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7720
		{
			yyVAL.str = " header"
		}
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7725
		{
			yyVAL.str = ""
		}
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7729
		{
			yyVAL.str = " manifest on"
		}
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7733
		{
			yyVAL.str = " manifest off"
		}
	case 1572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7738
		{
			yyVAL.str = ""
		}
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7742
		{
			yyVAL.str = " overwrite on"
		}
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7746
		{
			yyVAL.str = " overwrite off"
		}
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7752
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7757
		{
			yyVAL.str = ""
		}
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7761
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7767
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7771
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7777
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7781
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7786
		{
			yyVAL.str = ""
		}
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7790
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7796
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7800
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7806
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7810
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7814
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7819
		{
			yyVAL.str = ""
		}
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7823
		{
			yyVAL.str = " optionally"
		}
	case 1591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7836
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7840
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7844
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7848
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7852
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7858
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7862
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7866
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1599:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7870
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7875
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7879
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7883
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7892
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7898
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7902
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7908
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7912
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7918
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7922
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7928
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7932
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7938
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7944
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7954
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7964
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7968
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7974
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7981
		{
			yyVAL.str = "charset"
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7991
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7995
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7999
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8008
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8010
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8013
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8015
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8018
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8020
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8023
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8025
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8028
		{
			yyVAL.empty = struct{}{}
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8030
		{
			yyVAL.empty = struct{}{}
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8032
		{
			yyVAL.empty = struct{}{}
		}
	case 1641:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8036
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8045
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8052
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8056
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8062
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8066
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8073
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8079
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8083
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8089
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8093
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8100
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8106
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8112
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8116
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8120
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8780
		{
		}
	case 2293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8785
		{
		}
	case 2294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8789
		{
			skipToEnd(yylex)
		}
	case 2295:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8794
		{
			skipToEnd(yylex)
		}
	case 2296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8798
		{
			skipToEnd(yylex)
		}
	case 2297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8802
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
