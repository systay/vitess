// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const INTEGRAL = 57430
const FLOAT = 57431
const HEXNUM = 57432
const VALUE_ARG = 57433
const LIST_ARG = 57434
const COMMENT = 57435
const COMMENT_KEYWORD = 57436
const BIT_LITERAL = 57437
const COMPRESSION = 57438
const NULL = 57439
const TRUE = 57440
const FALSE = 57441
const OFF = 57442
const DISCARD = 57443
const IMPORT = 57444
const ENABLE = 57445
const DISABLE = 57446
const TABLESPACE = 57447
const VIRTUAL = 57448
const STORED = 57449
const EMPTY_FROM_CLAUSE = 57450
const LOWER_THAN_CHARSET = 57451
const CHARSET = 57452
const UNIQUE = 57453
const KEY = 57454
const OR = 57455
const XOR = 57456
const AND = 57457
const NOT = 57458
const BETWEEN = 57459
const CASE = 57460
const WHEN = 57461
const THEN = 57462
const ELSE = 57463
const END = 57464
const LE = 57465
const GE = 57466
const NE = 57467
const NULL_SAFE_EQUAL = 57468
const IS = 57469
const LIKE = 57470
const REGEXP = 57471
const IN = 57472
const SHIFT_LEFT = 57473
const SHIFT_RIGHT = 57474
const DIV = 57475
const MOD = 57476
const UNARY = 57477
const COLLATE = 57478
const BINARY = 57479
const UNDERSCORE_BINARY = 57480
const UNDERSCORE_UTF8MB4 = 57481
const UNDERSCORE_UTF8 = 57482
const UNDERSCORE_LATIN1 = 57483
const INTERVAL = 57484
const JSON_EXTRACT_OP = 57485
const JSON_UNQUOTE_EXTRACT_OP = 57486
const CREATE = 57487
const ALTER = 57488
const DROP = 57489
const RENAME = 57490
const ANALYZE = 57491
const ADD = 57492
const FLUSH = 57493
const CHANGE = 57494
const MODIFY = 57495
const REVERT = 57496
const SCHEMA = 57497
const TABLE = 57498
const INDEX = 57499
const VIEW = 57500
const TO = 57501
const IGNORE = 57502
const IF = 57503
const PRIMARY = 57504
const COLUMN = 57505
const SPATIAL = 57506
const FULLTEXT = 57507
const KEY_BLOCK_SIZE = 57508
const CHECK = 57509
const INDEXES = 57510
const ACTION = 57511
const CASCADE = 57512
const CONSTRAINT = 57513
const FOREIGN = 57514
const NO = 57515
const REFERENCES = 57516
const RESTRICT = 57517
const SHOW = 57518
const DESCRIBE = 57519
const EXPLAIN = 57520
const DATE = 57521
const ESCAPE = 57522
const REPAIR = 57523
const OPTIMIZE = 57524
const TRUNCATE = 57525
const COALESCE = 57526
const EXCHANGE = 57527
const REBUILD = 57528
const PARTITIONING = 57529
const REMOVE = 57530
const MAXVALUE = 57531
const PARTITION = 57532
const REORGANIZE = 57533
const LESS = 57534
const THAN = 57535
const PROCEDURE = 57536
const TRIGGER = 57537
const VINDEX = 57538
const VINDEXES = 57539
const DIRECTORY = 57540
const NAME = 57541
const UPGRADE = 57542
const STATUS = 57543
const VARIABLES = 57544
const WARNINGS = 57545
const CASCADED = 57546
const DEFINER = 57547
const OPTION = 57548
const SQL = 57549
const UNDEFINED = 57550
const SEQUENCE = 57551
const MERGE = 57552
const TEMPORARY = 57553
const TEMPTABLE = 57554
const INVOKER = 57555
const SECURITY = 57556
const FIRST = 57557
const AFTER = 57558
const LAST = 57559
const VITESS_MIGRATION = 57560
const CANCEL = 57561
const RETRY = 57562
const COMPLETE = 57563
const BEGIN = 57564
const START = 57565
const TRANSACTION = 57566
const COMMIT = 57567
const ROLLBACK = 57568
const SAVEPOINT = 57569
const RELEASE = 57570
const WORK = 57571
const BIT = 57572
const TINYINT = 57573
const SMALLINT = 57574
const MEDIUMINT = 57575
const INT = 57576
const INTEGER = 57577
const BIGINT = 57578
const INTNUM = 57579
const REAL = 57580
const DOUBLE = 57581
const FLOAT_TYPE = 57582
const DECIMAL = 57583
const NUMERIC = 57584
const TIME = 57585
const TIMESTAMP = 57586
const DATETIME = 57587
const YEAR = 57588
const CHAR = 57589
const VARCHAR = 57590
const BOOL = 57591
const CHARACTER = 57592
const VARBINARY = 57593
const NCHAR = 57594
const TEXT = 57595
const TINYTEXT = 57596
const MEDIUMTEXT = 57597
const LONGTEXT = 57598
const BLOB = 57599
const TINYBLOB = 57600
const MEDIUMBLOB = 57601
const LONGBLOB = 57602
const JSON = 57603
const ENUM = 57604
const GEOMETRY = 57605
const POINT = 57606
const LINESTRING = 57607
const POLYGON = 57608
const GEOMETRYCOLLECTION = 57609
const MULTIPOINT = 57610
const MULTILINESTRING = 57611
const MULTIPOLYGON = 57612
const NULLX = 57613
const AUTO_INCREMENT = 57614
const APPROXNUM = 57615
const SIGNED = 57616
const UNSIGNED = 57617
const ZEROFILL = 57618
const CODE = 57619
const COLLATION = 57620
const COLUMNS = 57621
const DATABASES = 57622
const ENGINES = 57623
const EVENT = 57624
const EXTENDED = 57625
const FIELDS = 57626
const FULL = 57627
const FUNCTION = 57628
const GTID_EXECUTED = 57629
const KEYSPACES = 57630
const OPEN = 57631
const PLUGINS = 57632
const PRIVILEGES = 57633
const PROCESSLIST = 57634
const SCHEMAS = 57635
const TABLES = 57636
const TRIGGERS = 57637
const USER = 57638
const VGTID_EXECUTED = 57639
const VITESS_KEYSPACES = 57640
const VITESS_METADATA = 57641
const VITESS_MIGRATIONS = 57642
const VITESS_REPLICATION_STATUS = 57643
const VITESS_SHARDS = 57644
const VITESS_TABLETS = 57645
const VSCHEMA = 57646
const NAMES = 57647
const GLOBAL = 57648
const SESSION = 57649
const ISOLATION = 57650
const LEVEL = 57651
const READ = 57652
const WRITE = 57653
const ONLY = 57654
const REPEATABLE = 57655
const COMMITTED = 57656
const UNCOMMITTED = 57657
const SERIALIZABLE = 57658
const CURRENT_TIMESTAMP = 57659
const DATABASE = 57660
const CURRENT_DATE = 57661
const CURRENT_TIME = 57662
const LOCALTIME = 57663
const LOCALTIMESTAMP = 57664
const CURRENT_USER = 57665
const UTC_DATE = 57666
const UTC_TIME = 57667
const UTC_TIMESTAMP = 57668
const REPLACE = 57669
const CONVERT = 57670
const CAST = 57671
const SUBSTR = 57672
const SUBSTRING = 57673
const GROUP_CONCAT = 57674
const SEPARATOR = 57675
const TIMESTAMPADD = 57676
const TIMESTAMPDIFF = 57677
const MATCH = 57678
const AGAINST = 57679
const BOOLEAN = 57680
const LANGUAGE = 57681
const WITH = 57682
const QUERY = 57683
const EXPANSION = 57684
const WITHOUT = 57685
const VALIDATION = 57686
const UNUSED = 57687
const ARRAY = 57688
const CUME_DIST = 57689
const DESCRIPTION = 57690
const DENSE_RANK = 57691
const EMPTY = 57692
const EXCEPT = 57693
const FIRST_VALUE = 57694
const GROUPING = 57695
const GROUPS = 57696
const JSON_TABLE = 57697
const LAG = 57698
const LAST_VALUE = 57699
const LATERAL = 57700
const LEAD = 57701
const MEMBER = 57702
const NTH_VALUE = 57703
const NTILE = 57704
const OF = 57705
const OVER = 57706
const PERCENT_RANK = 57707
const RANK = 57708
const RECURSIVE = 57709
const ROW_NUMBER = 57710
const SYSTEM = 57711
const WINDOW = 57712
const ACTIVE = 57713
const ADMIN = 57714
const BUCKETS = 57715
const CLONE = 57716
const COMPONENT = 57717
const DEFINITION = 57718
const ENFORCED = 57719
const EXCLUDE = 57720
const FOLLOWING = 57721
const GEOMCOLLECTION = 57722
const GET_MASTER_PUBLIC_KEY = 57723
const HISTOGRAM = 57724
const HISTORY = 57725
const INACTIVE = 57726
const INVISIBLE = 57727
const LOCKED = 57728
const MASTER_COMPRESSION_ALGORITHMS = 57729
const MASTER_PUBLIC_KEY_PATH = 57730
const MASTER_TLS_CIPHERSUITES = 57731
const MASTER_ZSTD_COMPRESSION_LEVEL = 57732
const NESTED = 57733
const NETWORK_NAMESPACE = 57734
const NOWAIT = 57735
const NULLS = 57736
const OJ = 57737
const OLD = 57738
const OPTIONAL = 57739
const ORDINALITY = 57740
const ORGANIZATION = 57741
const OTHERS = 57742
const PATH = 57743
const PERSIST = 57744
const PERSIST_ONLY = 57745
const PRECEDING = 57746
const PRIVILEGE_CHECKS_USER = 57747
const PROCESS = 57748
const RANDOM = 57749
const REFERENCE = 57750
const REQUIRE_ROW_FORMAT = 57751
const RESOURCE = 57752
const RESPECT = 57753
const RESTART = 57754
const RETAIN = 57755
const REUSE = 57756
const ROLE = 57757
const SECONDARY = 57758
const SECONDARY_ENGINE = 57759
const SECONDARY_LOAD = 57760
const SECONDARY_UNLOAD = 57761
const SKIP = 57762
const SRID = 57763
const THREAD_PRIORITY = 57764
const TIES = 57765
const UNBOUNDED = 57766
const VCPU = 57767
const VISIBLE = 57768
const FORMAT = 57769
const TREE = 57770
const VITESS = 57771
const TRADITIONAL = 57772
const LOCAL = 57773
const LOW_PRIORITY = 57774
const NO_WRITE_TO_BINLOG = 57775
const LOGS = 57776
const ERROR = 57777
const GENERAL = 57778
const HOSTS = 57779
const OPTIMIZER_COSTS = 57780
const USER_RESOURCES = 57781
const SLOW = 57782
const CHANNEL = 57783
const RELAY = 57784
const EXPORT = 57785
const AVG_ROW_LENGTH = 57786
const CONNECTION = 57787
const CHECKSUM = 57788
const DELAY_KEY_WRITE = 57789
const ENCRYPTION = 57790
const ENGINE = 57791
const INSERT_METHOD = 57792
const MAX_ROWS = 57793
const MIN_ROWS = 57794
const PACK_KEYS = 57795
const PASSWORD = 57796
const FIXED = 57797
const DYNAMIC = 57798
const COMPRESSED = 57799
const REDUNDANT = 57800
const COMPACT = 57801
const ROW_FORMAT = 57802
const STATS_AUTO_RECALC = 57803
const STATS_PERSISTENT = 57804
const STATS_SAMPLE_PAGES = 57805
const STORAGE = 57806
const MEMORY = 57807
const DISK = 57808

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 45,
	1, 126,
	484, 126,
	-2, 132,
	-1, 46,
	113, 132,
	152, 132,
	267, 132,
	-2, 355,
	-1, 53,
	33, 505,
	174, 505,
	185, 505,
	218, 519,
	219, 519,
	-2, 507,
	-1, 58,
	176, 529,
	-2, 527,
	-1, 107,
	173, 972,
	-2, 105,
	-1, 109,
	1, 127,
	484, 127,
	-2, 132,
	-1, 119,
	114, 258,
	179, 258,
	-2, 349,
	-1, 138,
	113, 132,
	152, 132,
	267, 132,
	-2, 364,
	-1, 582,
	159, 993,
	-2, 989,
	-1, 583,
	159, 994,
	-2, 990,
	-1, 593,
	57, 597,
	-2, 605,
	-1, 627,
	127, 1345,
	-2, 98,
	-1, 628,
	127, 1225,
	-2, 99,
	-1, 634,
	127, 1276,
	-2, 966,
	-1, 774,
	127, 1159,
	-2, 963,
	-1, 810,
	184, 38,
	189, 38,
	-2, 269,
	-1, 887,
	1, 402,
	484, 402,
	-2, 132,
	-1, 1078,
	57, 598,
	-2, 610,
	-1, 1079,
	57, 599,
	-2, 611,
	-1, 1140,
	1, 299,
	484, 299,
	-2, 132,
	-1, 1143,
	23, 151,
	-2, 153,
	-1, 1216,
	114, 258,
	179, 258,
	-2, 349,
	-1, 1225,
	184, 39,
	189, 39,
	-2, 270,
	-1, 1436,
	159, 998,
	-2, 992,
	-1, 1521,
	75, 80,
	84, 80,
	-2, 84,
	-1, 1542,
	1, 300,
	484, 300,
	-2, 132,
	-1, 1948,
	47, 934,
	-2, 928,
	-1, 1980,
	5, 43,
	16, 43,
	18, 43,
	85, 43,
	-2, 638,
}

const yyPrivate = 57344

const yyLast = 30075

var yyAct = [...]int{
	582, 2143, 2300, 2039, 2208, 2275, 1960, 1759, 525, 554,
	948, 1797, 555, 34, 1846, 1065, 2169, 2262, 3, 1805,
	1804, 1726, 1609, 2140, 1961, 2087, 603, 2161, 2081, 2174,
	590, 1486, 1539, 540, 1751, 1957, 89, 1471, 1760, 1949,
	1743, 1826, 1574, 1850, 1889, 523, 1594, 1579, 1827, 175,
	1828, 777, 175, 1972, 488, 175, 1517, 33, 147, 35,
	504, 1738, 175, 1080, 1907, 1433, 927, 1687, 1421, 1122,
	175, 1223, 1607, 133, 1332, 1429, 632, 1640, 898, 1132,
	1241, 516, 840, 1593, 1581, 1820, 594, 805, 1125, 1506,
	1100, 1499, 1116, 1118, 1197, 1473, 1068, 1452, 1398, 1329,
	966, 784, 504, 606, 1230, 504, 175, 504, 592, 818,
	604, 84, 629, 1591, 1491, 1115, 1315, 781, 615, 1570,
	527, 785, 1129, 811, 806, 807, 1104, 95, 946, 1131,
	1337, 595, 1192, 596, 808, 1523, 883, 511, 79, 1039,
	1215, 116, 117, 1464, 8, 88, 91, 1042, 150, 110,
	7, 111, 6, 1869, 1868, 1487, 82, 1638, 1896, 1897,
	1387, 613, 520, 618, 1301, 97, 98, 99, 100, 101,
	1745, 793, 107, 788, 967, 172, 1386, 83, 456, 1468,
	1469, 1385, 1384, 1383, 517, 1382, 1371, 118, 177, 178,
	179, 514, 778, 515, 112, 597, 1375, 845, 589, 967,
	593, 512, 2296, 1724, 1945, 2119, 2008, 2204, 2203, 461,
	2138, 609, 844, 2139, 2314, 843, 2285, 1677, 842, 2313,
	2254, 2308, 1432, 2144, 626, 2276, 1626, 2284, 598, 605,
	822, 856, 857, 2253, 860, 861, 862, 863, 1924, 977,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 821, 853, 633, 112, 799,
	1586, 798, 2071, 1206, 977, 1876, 1725, 886, 800, 1875,
	797, 1986, 892, 893, 846, 847, 848, 1790, 1987, 1988,
	1789, 1524, 1584, 1791, 171, 567, 1895, 573, 574, 571,
	572, 1675, 570, 569, 568, 1845, 1133, 934, 1134, 936,
	1533, 1470, 575, 576, 1534, 1535, 858, 917, 113, 944,
	135, 72, 905, 587, 74, 39, 40, 906, 586, 922,
	923, 155, 112, 905, 1813, 904, 795, 903, 906, 973,
	1554, 1553, 965, 2062, 918, 933, 935, 911, 2041, 491,
	2084, 491, 171, 2060, 882, 177, 178, 179, 1374, 502,
	506, 792, 145, 794, 973, 500, 1072, 134, 1651, 1649,
	1650, 797, 881, 1376, 1377, 1378, 113, 1321, 1583, 491,
	1851, 1608, 491, 2035, 1872, 2312, 152, 1641, 153, 155,
	859, 2036, 1646, 1217, 1218, 144, 143, 170, 80, 1316,
	920, 921, 2217, 992, 991, 1001, 1002, 994, 995, 996,
	997, 998, 999, 1000, 993, 924, 943, 1003, 801, 797,
	919, 789, 940, 912, 2042, 925, 926, 888, 791, 790,
	1884, 1794, 1291, 931, 885, 1656, 1653, 932, 1654, 2297,
	1655, 865, 864, 796, 152, 1647, 153, 937, 2043, 2200,
	1643, 829, 139, 1219, 146, 170, 1216, 2133, 140, 141,
	1610, 1908, 1500, 156, 838, 837, 175, 836, 175, 930,
	827, 175, 161, 820, 1292, 795, 1293, 835, 834, 1645,
	833, 832, 972, 969, 970, 971, 976, 978, 975, 938,
	974, 2007, 831, 826, 2304, 802, 1209, 968, 839, 504,
	504, 504, 1524, 492, 1910, 492, 2309, 972, 969, 970,
	971, 976, 978, 975, 1809, 974, 1800, 504, 504, 1644,
	884, 156, 968, 1322, 820, 2306, 782, 2252, 1229, 1874,
	161, 34, 819, 492, 796, 813, 492, 959, 813, 816,
	817, 782, 782, 782, 1330, 780, 810, 814, 814, 1592,
	830, 901, 1585, 907, 908, 909, 910, 1888, 620, 941,
	1885, 1801, 1632, 939, 1676, 809, 1912, 1326, 1916, 828,
	1911, 2085, 1909, 915, 953, 849, 945, 1914, 148, 1727,
	1729, 2015, 796, 819, 1803, 855, 1913, 1798, 823, 813,
	1871, 2268, 1861, 1228, 2266, 1933, 820, 175, 824, 1915,
	1917, 1807, 1808, 2270, 2271, 1891, 1799, 1063, 1807, 1808,
	1890, 1932, 1931, 2267, 1075, 820, 825, 1303, 1302, 1304,
	1305, 1306, 2218, 1204, 1203, 1202, 504, 1073, 950, 951,
	175, 1096, 175, 175, 142, 504, 148, 2239, 894, 1327,
	891, 504, 1200, 460, 902, 629, 136, 455, 984, 137,
	1628, 2302, 1064, 1013, 2303, 819, 2301, 109, 1705, 75,
	1891, 1883, 2101, 962, 1882, 1890, 1806, 1985, 1750, 960,
	1696, 961, 1618, 1806, 819, 1529, 1064, 820, 1809, 823,
	813, 1108, 1320, 1027, 1728, 1809, 1702, 896, 1114, 824,
	1069, 1014, 1015, 1037, 1540, 177, 178, 179, 1003, 1423,
	1786, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 600, 820, 517, 914, 88, 91, 1041, 1044, 1046,
	1048, 1049, 1051, 1053, 1054, 916, 1045, 1047, 993, 1050,
	1052, 1003, 1055, 1066, 900, 1369, 819, 983, 854, 1101,
	1074, 2248, 928, 1338, 841, 1095, 981, 982, 980, 1089,
	149, 154, 151, 157, 158, 159, 160, 162, 163, 164,
	165, 1970, 1424, 1098, 983, 1642, 166, 167, 168, 169,
	1317, 819, 1318, 1839, 1323, 1319, 1802, 813, 816, 817,
	104, 782, 1135, 963, 1627, 810, 814, 175, 1926, 1405,
	633, 1193, 994, 995, 996, 997, 998, 999, 1000, 993,
	1201, 1453, 1003, 1403, 1404, 1402, 1014, 1015, 149, 154,
	151, 157, 158, 159, 160, 162, 163, 164, 165, 504,
	2183, 1225, 980, 1995, 166, 167, 168, 169, 1097, 1234,
	1994, 887, 105, 1238, 1014, 1015, 504, 504, 983, 504,
	1235, 504, 504, 1614, 504, 504, 504, 504, 504, 504,
	996, 997, 998, 999, 1000, 993, 899, 1240, 1003, 504,
	981, 982, 980, 175, 1274, 1269, 1270, 929, 1339, 1239,
	1221, 177, 178, 179, 1453, 1747, 1712, 1227, 983, 175,
	1620, 981, 982, 980, 982, 980, 1492, 1493, 1214, 1928,
	504, 1620, 175, 1207, 1208, 1625, 1086, 1623, 829, 983,
	1233, 983, 827, 1328, 1624, 2290, 2257, 175, 1990, 1109,
	1271, 1680, 1681, 1682, 2118, 1622, 2117, 1243, 2013, 1244,
	1130, 1246, 1248, 175, 619, 1252, 1254, 1256, 1258, 1260,
	175, 1205, 1232, 1701, 1199, 2258, 1231, 1231, 1748, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 504, 504,
	504, 1277, 1278, 1224, 1211, 1212, 1210, 1283, 1284, 992,
	991, 1001, 1002, 994, 995, 996, 997, 998, 999, 1000,
	993, 1824, 2310, 1003, 1287, 1823, 175, 981, 982, 980,
	1340, 1341, 1589, 1334, 1001, 1002, 994, 995, 996, 997,
	998, 999, 1000, 993, 1345, 983, 1003, 1311, 1296, 1700,
	1342, 1352, 1353, 1354, 1331, 2232, 1399, 1346, 1699, 1348,
	1349, 1350, 1351, 1310, 1422, 1272, 1355, 1308, 1688, 1393,
	1395, 1396, 624, 1425, 621, 622, 981, 982, 980, 1336,
	1370, 1087, 1295, 1825, 2233, 1294, 504, 2291, 1394, 2236,
	981, 982, 980, 2311, 983, 1381, 112, 799, 1434, 798,
	80, 1441, 1444, 1298, 1344, 1285, 1279, 1454, 983, 177,
	178, 179, 1401, 1793, 981, 982, 980, 504, 504, 1276,
	1426, 1427, 1275, 1250, 2038, 1309, 1365, 1366, 1367, 1307,
	2235, 175, 983, 2234, 992, 991, 1001, 1002, 994, 995,
	996, 997, 998, 999, 1000, 993, 2182, 1476, 1003, 177,
	178, 179, 2180, 1602, 1092, 2158, 2115, 1993, 1388, 1389,
	1390, 1391, 1435, 175, 1436, 1297, 504, 1400, 177, 178,
	179, 175, 1600, 175, 177, 178, 179, 1833, 2040, 1434,
	1821, 175, 175, 1671, 1636, 1635, 1485, 1477, 504, 1335,
	1299, 504, 1286, 1519, 1282, 1460, 1461, 1281, 629, 1280,
	1094, 629, 504, 1093, 1480, 942, 2022, 2282, 1397, 1439,
	1440, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 2022, 2246, 87, 2068,
	85, 2022, 2241, 1087, 88, 2022, 2240, 87, 1518, 2222,
	1087, 86, 2198, 1497, 85, 1436, 1560, 1561, 1562, 1563,
	517, 1522, 2197, 1544, 2142, 86, 1852, 504, 1836, 1543,
	94, 597, 1958, 1595, 1596, 1597, 1456, 88, 1599, 1601,
	1548, 93, 1969, 92, 2136, 1087, 1488, 1489, 2022, 2134,
	1969, 504, 87, 1620, 1087, 94, 1087, 504, 1234, 1547,
	2096, 1234, 1495, 1234, 1576, 1087, 93, 979, 92, 2099,
	1087, 1619, 1582, 1555, 1752, 1556, 1557, 1558, 1559, 1087,
	1530, 1437, 1438, 2247, 1538, 1443, 1446, 1447, 1531, 1527,
	1621, 1566, 1567, 1568, 1569, 2022, 1546, 1545, 2005, 2004,
	1503, 504, 1606, 1422, 2001, 2002, 2001, 2000, 1422, 1422,
	1087, 1459, 2003, 633, 1462, 1463, 633, 992, 991, 1001,
	1002, 994, 995, 996, 997, 998, 999, 1000, 993, 1613,
	1479, 1003, 1616, 2194, 1617, 1087, 1694, 1087, 1572, 1573,
	1577, 1752, 1588, 1578, 175, 1503, 1590, 1620, 1587, 1598,
	1532, 175, 1629, 1524, 1870, 93, 175, 175, 1612, 822,
	175, 1525, 175, 1525, 1615, 1196, 1854, 583, 175, 1231,
	72, 1631, 1577, 1717, 1630, 175, 1633, 1634, 1611, 1848,
	1849, 1503, 1087, 1740, 821, 1716, 992, 991, 1001, 1002,
	994, 995, 996, 997, 998, 999, 1000, 993, 87, 1502,
	1003, 1830, 1694, 175, 504, 1780, 543, 542, 545, 546,
	547, 548, 1969, 1639, 1524, 544, 176, 549, 72, 176,
	1620, 2074, 176, 1694, 1526, 1603, 1526, 505, 1490, 176,
	979, 1087, 1466, 1528, 1379, 1524, 1325, 176, 72, 1196,
	1195, 1127, 1399, 1141, 1140, 804, 803, 80, 2120, 1666,
	1667, 1265, 886, 1503, 1669, 1694, 80, 1659, 2210, 2141,
	2112, 2107, 1754, 1670, 1829, 2073, 607, 2185, 1198, 505,
	1575, 2037, 505, 176, 505, 992, 991, 1001, 1002, 994,
	995, 996, 997, 998, 999, 1000, 993, 1755, 1997, 1003,
	1855, 1571, 1565, 1564, 1313, 80, 1226, 175, 2121, 2122,
	2123, 1266, 1267, 1268, 1222, 175, 1194, 106, 2287, 504,
	1674, 1830, 1088, 1090, 2124, 80, 2211, 1262, 1746, 992,
	991, 1001, 1002, 994, 995, 996, 997, 998, 999, 1000,
	993, 1683, 1586, 1003, 175, 175, 175, 175, 175, 1973,
	1974, 1761, 34, 80, 2263, 2020, 175, 1742, 1756, 2019,
	2018, 175, 1976, 1400, 175, 175, 1958, 1840, 175, 175,
	175, 2125, 2126, 1096, 1263, 1264, 1508, 1511, 1512, 1513,
	1509, 1792, 1510, 1514, 1741, 1660, 1973, 1974, 1372, 1711,
	1508, 1511, 1512, 1513, 1509, 1979, 1510, 1514, 1978, 90,
	1069, 1768, 1767, 1723, 1771, 2299, 1684, 1685, 1686, 1772,
	1731, 1769, 1713, 2283, 1484, 1091, 1770, 1478, 1778, 2100,
	1781, 1749, 2025, 1773, 1783, 1512, 1513, 504, 1814, 1815,
	2067, 1737, 175, 1816, 1817, 1818, 1819, 1763, 1764, 175,
	1766, 1795, 1939, 1938, 1774, 504, 1334, 2231, 2173, 1101,
	2089, 504, 1787, 1779, 2175, 1234, 1234, 1784, 2088, 1762,
	2092, 504, 1765, 1947, 1324, 1950, 1952, 1582, 601, 1858,
	88, 591, 1796, 1867, 1953, 585, 602, 1811, 1551, 1834,
	851, 1449, 850, 2050, 175, 175, 175, 175, 175, 1829,
	952, 1822, 85, 1692, 1693, 1450, 85, 1894, 1863, 87,
	175, 175, 1862, 86, 1866, 1831, 1832, 86, 1837, 113,
	2094, 1709, 1492, 1493, 1865, 87, 2016, 1214, 94, 1841,
	1842, 1843, 1663, 1085, 1081, 1652, 1856, 1857, 2243, 93,
	2205, 92, 1810, 1435, 1516, 1436, 1679, 504, 1082, 92,
	87, 1422, 1864, 611, 612, 2181, 2179, 1906, 992, 991,
	1001, 1002, 994, 995, 996, 997, 998, 999, 1000, 993,
	1937, 2178, 1003, 1481, 1482, 1084, 2171, 1083, 1936, 1886,
	2093, 504, 1892, 2091, 94, 1893, 2021, 1604, 94, 610,
	1925, 175, 1085, 1081, 93, 93, 592, 92, 2082, 93,
	2170, 504, 1898, 1752, 2289, 2288, 2289, 1082, 504, 504,
	1904, 1906, 1959, 1761, 1740, 1962, 1919, 1706, 1703, 1918,
	594, 1905, 1110, 1941, 1102, 2237, 1992, 599, 1955, 96,
	81, 175, 1078, 1079, 1084, 1, 1083, 2265, 473, 1467,
	1067, 487, 2261, 176, 1968, 176, 1300, 1942, 176, 1940,
	1290, 2145, 2207, 2028, 1580, 1943, 812, 138, 1541, 1542,
	175, 1934, 2278, 103, 1981, 595, 1983, 596, 1984, 1977,
	775, 102, 815, 913, 1605, 2137, 505, 505, 505, 1812,
	1552, 1927, 1147, 1145, 1146, 2014, 1144, 1982, 1149, 1967,
	1148, 175, 1143, 1373, 505, 505, 501, 1998, 1999, 504,
	1515, 1900, 1901, 1989, 173, 1136, 504, 1103, 852, 463,
	2024, 2006, 175, 1368, 1637, 1920, 1921, 469, 1922, 1923,
	2027, 1956, 175, 1011, 1935, 1788, 630, 2010, 2009, 1929,
	1930, 623, 1964, 2029, 2086, 1946, 175, 1948, 1744, 175,
	1951, 1944, 2230, 2172, 2242, 1549, 1099, 1710, 2051, 1036,
	2023, 1582, 2026, 1451, 1119, 526, 1475, 1392, 2032, 2031,
	541, 538, 2011, 2012, 539, 1733, 1753, 985, 524, 518,
	1111, 1507, 1505, 1504, 176, 1661, 1123, 1455, 1975, 2046,
	1455, 2045, 1971, 1117, 1739, 1550, 175, 991, 1001, 1002,
	994, 995, 996, 997, 998, 999, 1000, 993, 1873, 2034,
	1003, 1088, 1465, 505, 964, 2058, 1077, 176, 513, 176,
	176, 787, 505, 1991, 1448, 2216, 1678, 2070, 505, 1076,
	61, 2048, 2049, 38, 508, 2080, 1483, 2295, 1761, 955,
	617, 32, 31, 30, 29, 2083, 28, 23, 2090, 22,
	21, 20, 19, 25, 18, 2095, 17, 16, 108, 2103,
	48, 45, 43, 2055, 2056, 592, 2057, 115, 2104, 2059,
	114, 2061, 2109, 46, 42, 889, 175, 2110, 592, 175,
	175, 175, 504, 504, 27, 26, 2111, 15, 14, 13,
	12, 11, 2114, 10, 2116, 9, 2131, 5, 4, 958,
	24, 2146, 504, 504, 504, 71, 2, 2072, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2151, 0, 0,
	0, 0, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 504, 504, 504, 175,
	0, 0, 517, 0, 0, 0, 0, 0, 2150, 2105,
	0, 0, 2106, 0, 0, 2108, 0, 2157, 0, 0,
	504, 0, 504, 0, 2165, 2166, 1962, 2188, 504, 2168,
	1962, 34, 2177, 504, 176, 2176, 2167, 2186, 0, 0,
	0, 2184, 2191, 0, 0, 0, 0, 2193, 0, 0,
	2190, 0, 0, 0, 0, 0, 2192, 0, 0, 0,
	0, 0, 504, 0, 0, 504, 505, 2195, 0, 2196,
	0, 2199, 0, 0, 2201, 2209, 2206, 0, 0, 2202,
	2113, 0, 0, 505, 505, 0, 505, 0, 505, 505,
	0, 505, 505, 505, 505, 505, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 2227, 505, 2229, 0, 2226,
	176, 0, 2238, 0, 0, 1962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 504, 175, 0, 0, 0, 0, 505, 34, 176,
	0, 0, 0, 504, 2245, 2249, 0, 0, 2152, 2153,
	2154, 2155, 2156, 0, 176, 0, 2159, 2160, 0, 0,
	504, 0, 0, 0, 0, 2259, 1761, 0, 504, 504,
	176, 0, 2277, 0, 2264, 0, 34, 176, 2209, 2279,
	0, 0, 2272, 2269, 0, 0, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 505, 505, 505, 2292, 2286,
	0, 0, 0, 553, 0, 0, 2298, 0, 0, 2228,
	517, 0, 2305, 2066, 171, 0, 0, 0, 0, 0,
	2307, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	2065, 0, 1690, 0, 0, 0, 1691, 0, 113, 0,
	0, 0, 0, 0, 1697, 1698, 0, 0, 0, 0,
	1704, 155, 174, 1707, 1708, 459, 0, 0, 499, 0,
	0, 1714, 0, 1715, 1899, 459, 1718, 1719, 1720, 1721,
	1722, 1483, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 505, 992, 991, 1001, 1002, 994, 995,
	996, 997, 998, 999, 1000, 993, 0, 0, 1003, 616,
	0, 616, 0, 0, 0, 0, 152, 0, 153, 459,
	0, 0, 0, 0, 505, 505, 0, 170, 0, 0,
	0, 0, 0, 0, 1776, 1777, 0, 2273, 176, 0,
	0, 992, 991, 1001, 1002, 994, 995, 996, 997, 998,
	999, 1000, 993, 171, 0, 1003, 0, 0, 992, 991,
	1001, 1002, 994, 995, 996, 997, 998, 999, 1000, 993,
	176, 0, 1003, 505, 0, 0, 0, 113, 176, 135,
	176, 0, 0, 0, 0, 0, 0, 0, 176, 176,
	155, 0, 0, 156, 0, 505, 0, 0, 505, 0,
	0, 0, 161, 0, 0, 0, 0, 1689, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 134, 992, 991, 1001,
	1002, 994, 995, 996, 997, 998, 999, 1000, 993, 0,
	0, 1003, 0, 0, 0, 152, 0, 153, 0, 987,
	0, 990, 122, 123, 144, 143, 170, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 505, 988, 989, 986, 992, 991,
	1001, 1002, 994, 995, 996, 997, 998, 999, 1000, 993,
	0, 0, 1003, 0, 0, 0, 0, 0, 505, 0,
	0, 0, 0, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 1902,
	1903, 139, 120, 146, 127, 119, 0, 140, 141, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 128, 0, 0, 0, 0, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 131, 129, 124, 125,
	126, 130, 0, 0, 0, 552, 121, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 1965, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 176, 176, 1980, 0, 176, 0, 176,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 503, 992, 991, 1001, 1002,
	994, 995, 996, 997, 998, 999, 1000, 993, 0, 0,
	1003, 0, 0, 0, 0, 0, 0, 148, 0, 0,
	176, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 631, 0, 0,
	779, 0, 786, 0, 0, 0, 0, 0, 0, 459,
	0, 459, 0, 0, 459, 0, 0, 0, 0, 0,
	149, 154, 151, 157, 158, 159, 160, 162, 163, 164,
	165, 0, 0, 142, 0, 0, 166, 167, 168, 169,
	0, 0, 0, 0, 0, 136, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2053, 0, 2054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 2063, 2064, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 505, 0, 0, 0,
	0, 2078, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 176, 176, 176, 176, 0, 0, 0, 0,
	2097, 2098, 0, 176, 2102, 0, 0, 0, 176, 0,
	0, 176, 176, 0, 0, 176, 176, 176, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	154, 151, 157, 158, 159, 160, 162, 163, 164, 165,
	0, 0, 0, 0, 0, 166, 167, 168, 169, 0,
	0, 0, 0, 459, 0, 459, 1126, 0, 0, 0,
	0, 0, 0, 0, 0, 2135, 0, 0, 0, 0,
	0, 0, 0, 0, 505, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 505, 0,
	0, 0, 2162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 176, 176, 176, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 505, 0, 0, 1070, 0, 2212,
	2213, 2214, 2215, 0, 2219, 0, 2220, 2221, 2223, 0,
	0, 0, 2224, 2225, 0, 0, 0, 0, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 505, 458,
	0, 0, 0, 0, 0, 505, 505, 0, 0, 507,
	0, 0, 0, 2251, 0, 1237, 0, 588, 0, 0,
	0, 0, 0, 0, 631, 631, 631, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1237, 1237, 954, 956, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 783, 0, 0, 0, 176, 0, 0,
	0, 0, 1288, 0, 0, 0, 0, 0, 0, 0,
	2293, 2294, 0, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	1333, 0, 0, 0, 0, 0, 505, 0, 0, 0,
	0, 0, 0, 505, 0, 0, 459, 0, 0, 176,
	0, 0, 0, 459, 0, 0, 0, 0, 0, 176,
	0, 0, 1356, 1357, 459, 459, 459, 459, 459, 459,
	459, 0, 0, 176, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1106, 0, 0, 0, 0, 0, 0, 0, 459,
	631, 0, 0, 0, 0, 0, 1137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	616, 1333, 616, 616, 0, 0, 616, 616, 616, 0,
	0, 0, 1237, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 616, 616, 616, 616, 616, 0, 0, 0,
	0, 0, 0, 176, 1288, 0, 176, 176, 176, 505,
	505, 616, 0, 0, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 505,
	505, 505, 0, 0, 475, 0, 459, 0, 0, 0,
	0, 0, 1333, 0, 459, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 459, 459, 0, 0, 0, 0,
	0, 0, 0, 505, 505, 505, 176, 0, 0, 0,
	0, 0, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 486, 0, 0, 779, 0, 0, 505, 0, 505,
	0, 0, 0, 0, 0, 505, 483, 1236, 0, 0,
	505, 1242, 1242, 0, 1242, 0, 1242, 1242, 0, 1251,
	1242, 1242, 1242, 1242, 1242, 0, 0, 0, 0, 0,
	0, 0, 1236, 1236, 779, 0, 0, 0, 492, 505,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 890, 0, 895, 0, 0, 897, 584,
	73, 0, 0, 0, 0, 1312, 462, 0, 464, 479,
	0, 494, 0, 493, 468, 0, 466, 470, 480, 471,
	0, 465, 0, 476, 0, 0, 467, 481, 482, 484,
	498, 497, 485, 0, 474, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 505, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	505, 0, 0, 631, 631, 631, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 505, 505, 0, 0, 0,
	608, 0, 0, 0, 0, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 459, 0, 0, 0, 0, 459,
	459, 0, 0, 459, 0, 1664, 0, 0, 0, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1428, 0, 631, 0, 0, 459, 1113, 0, 496,
	1124, 0, 0, 0, 1236, 0, 0, 0, 0, 0,
	0, 72, 36, 37, 74, 39, 40, 489, 0, 0,
	0, 0, 1457, 1458, 0, 0, 0, 0, 0, 0,
	0, 78, 490, 0, 0, 41, 67, 68, 0, 65,
	69, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 0, 0, 0, 616, 616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1106, 616, 0, 631, 0, 0, 54, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	459, 0, 0, 631, 0, 0, 631, 0, 1288, 0,
	0, 0, 0, 0, 0, 0, 0, 779, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1237, 459, 459, 459,
	459, 459, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 459, 0, 0, 459, 459, 0,
	0, 459, 1785, 1333, 1142, 0, 0, 0, 0, 0,
	0, 0, 786, 0, 0, 0, 0, 44, 47, 50,
	49, 52, 0, 64, 0, 0, 70, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 779, 0, 0, 0,
	0, 0, 786, 0, 0, 0, 0, 0, 53, 77,
	76, 0, 0, 62, 63, 51, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	1273, 0, 0, 0, 0, 0, 779, 0, 0, 0,
	0, 0, 1333, 0, 55, 56, 0, 57, 58, 59,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 1314,
	0, 0, 0, 0, 0, 0, 0, 459, 459, 459,
	459, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 459, 459, 0, 0, 0, 0, 0,
	1343, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 0, 0, 0, 616, 616,
	0, 0, 0, 0, 0, 0, 0, 0, 947, 947,
	947, 0, 0, 0, 0, 0, 0, 0, 0, 1673,
	0, 0, 0, 1124, 0, 0, 0, 0, 73, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1012, 608, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1026, 0, 0, 0, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 459, 1038, 1040, 1043, 1043, 1043,
	1040, 1043, 1043, 1040, 1043, 1056, 1057, 1058, 1059, 1060,
	1061, 1062, 0, 0, 0, 0, 0, 0, 1071, 0,
	0, 608, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1734, 0, 0, 171, 608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1213, 0,
	0, 1120, 0, 0, 459, 0, 0, 0, 1236, 0,
	0, 113, 0, 135, 0, 1237, 0, 0, 0, 0,
	1494, 0, 0, 0, 155, 459, 0, 0, 1498, 0,
	1501, 0, 0, 0, 0, 459, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 459,
	0, 0, 459, 0, 0, 145, 0, 0, 0, 0,
	134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 153, 0, 0, 0, 0, 1217, 1218, 144, 143,
	170, 0, 1835, 0, 0, 0, 0, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 631, 0, 1859, 0, 0, 0,
	0, 0, 0, 1237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 139, 1219, 146, 0, 1216,
	0, 140, 141, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 1164, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 459,
	0, 0, 459, 459, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1124, 0, 0, 0, 0, 1242, 0, 1648, 0,
	0, 0, 1288, 1657, 1658, 0, 0, 1662, 0, 0,
	0, 0, 0, 0, 0, 1665, 631, 0, 0, 0,
	1236, 0, 1668, 1966, 1242, 0, 0, 0, 0, 0,
	0, 148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1152, 0, 0, 0, 0,
	1672, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 947, 947, 947,
	0, 0, 0, 0, 0, 0, 0, 142, 1165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 779, 0, 0, 1236, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 459, 0, 0, 0, 1178,
	1181, 1182, 1183, 1184, 1185, 1186, 0, 1187, 1188, 1189,
	1190, 1191, 1166, 1167, 1168, 1169, 1150, 1151, 1179, 0,
	1153, 1237, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
	1162, 1163, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 149, 154, 151, 157, 158, 159, 160,
	162, 163, 164, 165, 0, 0, 0, 0, 0, 166,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 2132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2147, 2148, 2149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1877, 1878, 1879, 1880, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1124, 1887, 0,
	0, 2163, 2163, 2163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2187, 0, 2189, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1996, 2255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1236, 0, 2260, 0, 0, 0, 0,
	0, 0, 0, 631, 631, 0, 0, 0, 2017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2033,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2044, 0, 0, 2047, 0, 0, 0,
	0, 0, 0, 0, 1695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1730, 2079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1757,
	1758, 0, 0, 1120, 1120, 1120, 1120, 1120, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 0, 1120, 0, 0, 0, 1120, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2127, 0, 0, 2128, 2129, 2130, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 285, 231, 0, 0,
	341, 1860, 186, 0, 380, 219, 294, 292, 409, 245,
	237, 233, 218, 269, 300, 339, 398, 333, 0, 289,
	0, 0, 389, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	217, 185, 324, 390, 249, 0, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 215, 0, 0, 0, 0, 229, 273, 236,
	228, 406, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 992, 991, 1001, 1002, 994, 995, 996, 997, 998,
	999, 1000, 993, 0, 0, 1003, 0, 0, 0, 0,
	1120, 0, 0, 0, 0, 0, 0, 0, 0, 2250,
	0, 257, 0, 313, 0, 1963, 0, 73, 438, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 181,
	197, 0, 0, 323, 362, 369, 0, 0, 0, 220,
	1120, 366, 337, 423, 204, 247, 359, 342, 364, 0,
	0, 365, 290, 411, 354, 421, 439, 440, 227, 317,
	429, 402, 435, 450, 198, 224, 331, 395, 426, 386,
	310, 407, 408, 280, 385, 255, 184, 288, 447, 196,
	375, 212, 189, 397, 419, 209, 378, 0, 0, 452,
	191, 417, 394, 307, 277, 278, 190, 0, 358, 232,
	253, 222, 326, 414, 415, 221, 453, 200, 434, 193,
	0, 433, 319, 410, 418, 308, 299, 192, 416, 306,
	298, 283, 243, 264, 352, 293, 353, 265, 315, 314,
	316, 0, 187, 0, 391, 427, 454, 205, 206, 207,
	0, 242, 246, 252, 254, 260, 261, 268, 286, 330,
	351, 349, 355, 0, 405, 422, 430, 437, 443, 444,
	448, 368, 445, 446, 449, 318, 267, 387, 282, 291,
	0, 0, 336, 367, 210, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 2069, 0, 0, 0, 0, 0,
	0, 2075, 2076, 2077, 0, 0, 0, 180, 194, 287,
	0, 356, 250, 451, 432, 428, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 183, 195, 203, 213, 225, 240, 248, 258,
	263, 266, 270, 271, 274, 279, 296, 301, 302, 303,
	304, 320, 321, 322, 325, 328, 329, 332, 334, 335,
	338, 344, 345, 346, 347, 348, 350, 357, 361, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 259, 420, 442,
	0, 295, 0, 0, 297, 244, 262, 272, 0, 431,
	393, 199, 363, 251, 188, 216, 202, 223, 238, 241,
	276, 305, 311, 340, 343, 256, 235, 214, 360, 211,
	379, 399, 400, 401, 403, 309, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 73, 0,
	1963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2244, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 757, 743, 404,
	0, 692, 760, 663, 680, 770, 683, 686, 726, 642,
	705, 327, 677, 73, 667, 638, 673, 639, 665, 694,
	234, 662, 745, 708, 759, 285, 231, 644, 668, 341,
	682, 186, 728, 380, 219, 294, 292, 409, 245, 237,
	233, 218, 269, 300, 339, 398, 333, 766, 289, 715,
	0, 389, 312, 0, 0, 0, 696, 749, 703, 739,
	691, 727, 652, 714, 761, 678, 723, 762, 275, 217,
	185, 324, 390, 249, 0, 0, 0, 0, 177, 178,
	179, 0, 2280, 2281, 0, 0, 0, 0, 0, 208,
	0, 215, 720, 756, 675, 722, 229, 273, 236, 228,
	406, 767, 748, 0, 0, 201, 758, 698, 725, 773,
	637, 717, 0, 640, 643, 769, 752, 671, 239, 0,
	0, 0, 0, 0, 0, 0, 695, 704, 736, 689,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 0,
	713, 0, 0, 0, 648, 641, 0, 0, 0, 0,
	693, 0, 0, 0, 651, 0, 670, 737, 0, 635,
	257, 645, 313, 0, 741, 751, 690, 438, 755, 688,
	687, 732, 649, 747, 681, 284, 647, 281, 181, 197,
	0, 679, 323, 362, 369, 746, 666, 674, 220, 672,
	366, 337, 423, 204, 247, 359, 342, 364, 712, 730,
	365, 290, 411, 354, 421, 439, 440, 227, 317, 429,
	402, 435, 450, 198, 224, 331, 395, 426, 386, 310,
	407, 408, 280, 385, 255, 184, 288, 447, 196, 375,
	212, 189, 397, 419, 209, 378, 0, 0, 452, 191,
	417, 394, 307, 277, 278, 190, 0, 358, 232, 253,
	222, 326, 414, 415, 221, 453, 200, 434, 193, 949,
	433, 319, 410, 418, 308, 299, 192, 416, 306, 298,
	283, 243, 264, 352, 293, 353, 265, 315, 314, 316,
	0, 187, 0, 391, 427, 454, 205, 206, 207, 661,
	242, 246, 252, 254, 260, 261, 268, 286, 330, 351,
	349, 355, 742, 405, 422, 430, 437, 443, 444, 448,
	368, 445, 446, 449, 318, 267, 387, 282, 291, 734,
	772, 336, 367, 210, 425, 388, 656, 660, 654, 655,
	706, 707, 657, 763, 764, 765, 738, 650, 0, 658,
	659, 0, 744, 753, 754, 711, 180, 194, 287, 768,
	356, 250, 451, 432, 428, 636, 653, 226, 664, 0,
	0, 676, 684, 685, 697, 699, 700, 701, 702, 710,
	718, 719, 721, 729, 731, 733, 735, 740, 750, 771,
	182, 183, 195, 203, 213, 225, 240, 248, 258, 263,
	266, 270, 271, 274, 279, 296, 301, 302, 303, 304,
	320, 321, 322, 325, 328, 329, 332, 334, 335, 338,
	344, 345, 346, 347, 348, 350, 357, 361, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 259, 420, 442, 0,
	295, 709, 716, 297, 244, 262, 272, 724, 431, 393,
	199, 363, 251, 188, 216, 202, 223, 238, 241, 276,
	305, 311, 340, 343, 256, 235, 214, 360, 211, 379,
	399, 400, 401, 403, 309, 230, 757, 743, 404, 0,
	692, 760, 663, 680, 770, 683, 686, 726, 642, 705,
	327, 677, 0, 667, 638, 673, 639, 665, 694, 234,
	662, 745, 708, 759, 285, 231, 644, 668, 341, 682,
	186, 728, 380, 219, 294, 292, 409, 245, 237, 233,
	218, 269, 300, 339, 398, 333, 766, 289, 715, 0,
	389, 312, 0, 0, 0, 696, 749, 703, 739, 691,
	727, 652, 714, 761, 678, 723, 762, 275, 217, 185,
	324, 390, 249, 0, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	215, 720, 756, 675, 722, 229, 273, 236, 228, 406,
	767, 748, 0, 0, 201, 758, 698, 725, 773, 637,
	717, 0, 640, 643, 769, 752, 671, 239, 0, 0,
	0, 0, 0, 0, 0, 695, 704, 736, 689, 0,
	0, 0, 0, 0, 0, 1954, 0, 669, 0, 713,
	0, 0, 0, 648, 641, 0, 0, 0, 0, 693,
	0, 0, 0, 651, 0, 670, 737, 0, 635, 257,
	645, 313, 0, 741, 751, 690, 438, 755, 688, 687,
	732, 649, 747, 681, 284, 647, 281, 181, 197, 0,
	679, 323, 362, 369, 746, 666, 674, 220, 672, 366,
	337, 423, 204, 247, 359, 342, 364, 712, 730, 365,
	290, 411, 354, 421, 439, 440, 227, 317, 429, 402,
	435, 450, 198, 224, 331, 395, 426, 386, 310, 407,
	408, 280, 385, 255, 184, 288, 447, 196, 375, 212,
	189, 397, 419, 209, 378, 0, 0, 452, 191, 417,
	394, 307, 277, 278, 190, 0, 358, 232, 253, 222,
	326, 414, 415, 221, 453, 200, 434, 193, 949, 433,
	319, 410, 418, 308, 299, 192, 416, 306, 298, 283,
	243, 264, 352, 293, 353, 265, 315, 314, 316, 0,
	187, 0, 391, 427, 454, 205, 206, 207, 661, 242,
	246, 252, 254, 260, 261, 268, 286, 330, 351, 349,
	355, 742, 405, 422, 430, 437, 443, 444, 448, 368,
	445, 446, 449, 318, 267, 387, 282, 291, 734, 772,
	336, 367, 210, 425, 388, 656, 660, 654, 655, 706,
	707, 657, 763, 764, 765, 738, 650, 0, 658, 659,
	0, 744, 753, 754, 711, 180, 194, 287, 768, 356,
	250, 451, 432, 428, 636, 653, 226, 664, 0, 0,
	676, 684, 685, 697, 699, 700, 701, 702, 710, 718,
	719, 721, 729, 731, 733, 735, 740, 750, 771, 182,
	183, 195, 203, 213, 225, 240, 248, 258, 263, 266,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 259, 420, 442, 0, 295,
	709, 716, 297, 244, 262, 272, 724, 431, 393, 199,
	363, 251, 188, 216, 202, 223, 238, 241, 276, 305,
	311, 340, 343, 256, 235, 214, 360, 211, 379, 399,
	400, 401, 403, 309, 230, 757, 743, 404, 0, 692,
	760, 663, 680, 770, 683, 686, 726, 642, 705, 327,
	677, 0, 667, 638, 673, 639, 665, 694, 234, 662,
	745, 708, 759, 285, 231, 644, 668, 341, 682, 186,
	728, 380, 219, 294, 292, 409, 245, 237, 233, 218,
	269, 300, 339, 398, 333, 766, 289, 715, 0, 389,
	312, 0, 0, 0, 696, 749, 703, 739, 691, 727,
	652, 714, 761, 678, 723, 762, 275, 217, 185, 324,
	390, 249, 0, 0, 0, 0, 177, 178, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 215,
	720, 756, 675, 722, 229, 273, 236, 228, 406, 767,
	748, 0, 0, 201, 758, 698, 725, 773, 637, 717,
	0, 640, 643, 769, 752, 671, 239, 0, 0, 0,
	0, 0, 0, 0, 695, 704, 736, 689, 0, 0,
	0, 0, 0, 0, 1786, 0, 669, 0, 713, 0,
	0, 0, 648, 641, 0, 0, 0, 0, 693, 0,
	0, 0, 651, 0, 670, 737, 0, 635, 257, 645,
	313, 0, 741, 751, 690, 438, 755, 688, 687, 732,
	649, 747, 681, 284, 647, 281, 181, 197, 0, 679,
	323, 362, 369, 746, 666, 674, 220, 672, 366, 337,
	423, 204, 247, 359, 342, 364, 712, 730, 365, 290,
	411, 354, 421, 439, 440, 227, 317, 429, 402, 435,
	450, 198, 224, 331, 395, 426, 386, 310, 407, 408,
	280, 385, 255, 184, 288, 447, 196, 375, 212, 189,
	397, 419, 209, 378, 0, 0, 452, 191, 417, 394,
	307, 277, 278, 190, 0, 358, 232, 253, 222, 326,
	414, 415, 221, 453, 200, 434, 193, 949, 433, 319,
	410, 418, 308, 299, 192, 416, 306, 298, 283, 243,
	264, 352, 293, 353, 265, 315, 314, 316, 0, 187,
	0, 391, 427, 454, 205, 206, 207, 661, 242, 246,
	252, 254, 260, 261, 268, 286, 330, 351, 349, 355,
	742, 405, 422, 430, 437, 443, 444, 448, 368, 445,
	446, 449, 318, 267, 387, 282, 291, 734, 772, 336,
	367, 210, 425, 388, 656, 660, 654, 655, 706, 707,
	657, 763, 764, 765, 738, 650, 0, 658, 659, 0,
	744, 753, 754, 711, 180, 194, 287, 768, 356, 250,
	451, 432, 428, 636, 653, 226, 664, 0, 0, 676,
	684, 685, 697, 699, 700, 701, 702, 710, 718, 719,
	721, 729, 731, 733, 735, 740, 750, 771, 182, 183,
	195, 203, 213, 225, 240, 248, 258, 263, 266, 270,
	271, 274, 279, 296, 301, 302, 303, 304, 320, 321,
	322, 325, 328, 329, 332, 334, 335, 338, 344, 345,
	346, 347, 348, 350, 357, 361, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 259, 420, 442, 0, 295, 709,
	716, 297, 244, 262, 272, 724, 431, 393, 199, 363,
	251, 188, 216, 202, 223, 238, 241, 276, 305, 311,
	340, 343, 256, 235, 214, 360, 211, 379, 399, 400,
	401, 403, 309, 230, 757, 743, 404, 0, 692, 760,
	663, 680, 770, 683, 686, 726, 642, 705, 327, 677,
	0, 667, 638, 673, 639, 665, 694, 234, 662, 745,
	708, 759, 285, 231, 644, 668, 341, 682, 186, 728,
	380, 219, 294, 292, 409, 245, 237, 233, 218, 269,
	300, 339, 398, 333, 766, 289, 715, 0, 389, 312,
	0, 0, 0, 696, 749, 703, 739, 691, 727, 652,
	714, 761, 678, 723, 762, 275, 217, 185, 324, 390,
	249, 0, 0, 0, 0, 177, 178, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 215, 720,
	756, 675, 722, 229, 273, 236, 228, 406, 767, 748,
	0, 0, 201, 758, 698, 725, 773, 637, 717, 0,
	640, 643, 769, 752, 671, 239, 0, 0, 0, 0,
	0, 0, 0, 695, 704, 736, 689, 0, 0, 0,
	0, 0, 0, 1496, 0, 669, 0, 713, 0, 0,
	0, 648, 641, 0, 0, 0, 0, 693, 0, 0,
	0, 651, 0, 670, 737, 0, 635, 257, 645, 313,
	0, 741, 751, 690, 438, 755, 688, 687, 732, 649,
	747, 681, 284, 647, 281, 181, 197, 0, 679, 323,
	362, 369, 746, 666, 674, 220, 672, 366, 337, 423,
	204, 247, 359, 342, 364, 712, 730, 365, 290, 411,
	354, 421, 439, 440, 227, 317, 429, 402, 435, 450,
	198, 224, 331, 395, 426, 386, 310, 407, 408, 280,
	385, 255, 184, 288, 447, 196, 375, 212, 189, 397,
	419, 209, 378, 0, 0, 452, 191, 417, 394, 307,
	277, 278, 190, 0, 358, 232, 253, 222, 326, 414,
	415, 221, 453, 200, 434, 193, 949, 433, 319, 410,
	418, 308, 299, 192, 416, 306, 298, 283, 243, 264,
	352, 293, 353, 265, 315, 314, 316, 0, 187, 0,
	391, 427, 454, 205, 206, 207, 661, 242, 246, 252,
	254, 260, 261, 268, 286, 330, 351, 349, 355, 742,
	405, 422, 430, 437, 443, 444, 448, 368, 445, 446,
	449, 318, 267, 387, 282, 291, 734, 772, 336, 367,
	210, 425, 388, 656, 660, 654, 655, 706, 707, 657,
	763, 764, 765, 738, 650, 0, 658, 659, 0, 744,
	753, 754, 711, 180, 194, 287, 768, 356, 250, 451,
	432, 428, 636, 653, 226, 664, 0, 0, 676, 684,
	685, 697, 699, 700, 701, 702, 710, 718, 719, 721,
	729, 731, 733, 735, 740, 750, 771, 182, 183, 195,
	203, 213, 225, 240, 248, 258, 263, 266, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 259, 420, 442, 0, 295, 709, 716,
	297, 244, 262, 272, 724, 431, 393, 199, 363, 251,
	188, 216, 202, 223, 238, 241, 276, 305, 311, 340,
	343, 256, 235, 214, 360, 211, 379, 399, 400, 401,
	403, 309, 230, 757, 743, 404, 0, 692, 760, 663,
	680, 770, 683, 686, 726, 642, 705, 327, 677, 0,
	667, 638, 673, 639, 665, 694, 234, 662, 745, 708,
	759, 285, 231, 644, 668, 341, 682, 186, 728, 380,
	219, 294, 292, 409, 245, 237, 233, 218, 269, 300,
	339, 398, 333, 766, 289, 715, 0, 389, 312, 0,
	0, 0, 696, 749, 703, 739, 691, 727, 652, 714,
	761, 678, 723, 762, 275, 217, 185, 324, 390, 249,
	0, 80, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 215, 720, 756,
	675, 722, 229, 273, 236, 228, 406, 767, 748, 0,
	0, 201, 758, 698, 725, 773, 637, 717, 0, 640,
	643, 769, 752, 671, 239, 0, 0, 0, 0, 0,
	0, 0, 695, 704, 736, 689, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 0, 713, 0, 0, 0,
	648, 641, 0, 0, 0, 0, 693, 0, 0, 0,
	651, 0, 670, 737, 0, 635, 257, 645, 313, 0,
	741, 751, 690, 438, 755, 688, 687, 732, 649, 747,
	681, 284, 647, 281, 181, 197, 0, 679, 323, 362,
	369, 746, 666, 674, 220, 672, 366, 337, 423, 204,
	247, 359, 342, 364, 712, 730, 365, 290, 411, 354,
	421, 439, 440, 227, 317, 429, 402, 435, 450, 198,
	224, 331, 395, 426, 386, 310, 407, 408, 280, 385,
	255, 184, 288, 447, 196, 375, 212, 189, 397, 419,
	209, 378, 0, 0, 452, 191, 417, 394, 307, 277,
	278, 190, 0, 358, 232, 253, 222, 326, 414, 415,
	221, 453, 200, 434, 193, 949, 433, 319, 410, 418,
	308, 299, 192, 416, 306, 298, 283, 243, 264, 352,
	293, 353, 265, 315, 314, 316, 0, 187, 0, 391,
	427, 454, 205, 206, 207, 661, 242, 246, 252, 254,
	260, 261, 268, 286, 330, 351, 349, 355, 742, 405,
	422, 430, 437, 443, 444, 448, 368, 445, 446, 449,
	318, 267, 387, 282, 291, 734, 772, 336, 367, 210,
	425, 388, 656, 660, 654, 655, 706, 707, 657, 763,
	764, 765, 738, 650, 0, 658, 659, 0, 744, 753,
	754, 711, 180, 194, 287, 768, 356, 250, 451, 432,
	428, 636, 653, 226, 664, 0, 0, 676, 684, 685,
	697, 699, 700, 701, 702, 710, 718, 719, 721, 729,
	731, 733, 735, 740, 750, 771, 182, 183, 195, 203,
	213, 225, 240, 248, 258, 263, 266, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 259, 420, 442, 0, 295, 709, 716, 297,
	244, 262, 272, 724, 431, 393, 199, 363, 251, 188,
	216, 202, 223, 238, 241, 276, 305, 311, 340, 343,
	256, 235, 214, 360, 211, 379, 399, 400, 401, 403,
	309, 230, 757, 743, 404, 0, 692, 760, 663, 680,
	770, 683, 686, 726, 642, 705, 327, 677, 0, 667,
	638, 673, 639, 665, 694, 234, 662, 745, 708, 759,
	285, 231, 644, 668, 341, 682, 186, 728, 380, 219,
	294, 292, 409, 245, 237, 233, 218, 269, 300, 339,
	398, 333, 766, 289, 715, 0, 389, 312, 0, 0,
	0, 696, 749, 703, 739, 691, 727, 652, 714, 761,
	678, 723, 762, 275, 217, 185, 324, 390, 249, 0,
	0, 0, 0, 177, 178, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 215, 720, 756, 675,
	722, 229, 273, 236, 228, 406, 767, 748, 0, 0,
	201, 758, 698, 725, 773, 637, 717, 0, 640, 643,
	769, 752, 671, 239, 0, 0, 0, 0, 0, 0,
	0, 695, 704, 736, 689, 0, 0, 0, 0, 0,
	0, 0, 0, 669, 0, 713, 0, 0, 0, 648,
	641, 0, 0, 0, 0, 693, 0, 0, 0, 651,
	0, 670, 737, 0, 635, 257, 645, 313, 0, 741,
	751, 690, 438, 755, 688, 687, 732, 649, 747, 681,
	284, 647, 281, 181, 197, 0, 679, 323, 362, 369,
	746, 666, 674, 220, 672, 366, 337, 423, 204, 247,
	359, 342, 364, 712, 730, 365, 290, 411, 354, 421,
	439, 440, 227, 317, 429, 402, 435, 450, 198, 224,
	331, 395, 426, 386, 310, 407, 408, 280, 385, 255,
	184, 288, 447, 196, 375, 212, 189, 397, 419, 209,
	378, 0, 0, 452, 191, 417, 394, 307, 277, 278,
	190, 0, 358, 232, 253, 222, 326, 414, 415, 221,
	453, 200, 434, 193, 949, 433, 319, 410, 418, 308,
	299, 192, 416, 306, 298, 283, 243, 264, 352, 293,
	353, 265, 315, 314, 316, 0, 187, 0, 391, 427,
	454, 205, 206, 207, 661, 242, 246, 252, 254, 260,
	261, 268, 286, 330, 351, 349, 355, 742, 405, 422,
	430, 437, 443, 444, 448, 368, 445, 446, 449, 318,
	267, 387, 282, 291, 734, 772, 336, 367, 210, 425,
	388, 656, 660, 654, 655, 706, 707, 657, 763, 764,
	765, 738, 650, 0, 658, 659, 0, 744, 753, 754,
	711, 180, 194, 287, 768, 356, 250, 451, 432, 428,
	636, 653, 226, 664, 0, 0, 676, 684, 685, 697,
	699, 700, 701, 702, 710, 718, 719, 721, 729, 731,
	733, 735, 740, 750, 771, 182, 183, 195, 203, 213,
	225, 240, 248, 258, 263, 266, 270, 271, 274, 279,
	296, 301, 302, 303, 304, 320, 321, 322, 325, 328,
	329, 332, 334, 335, 338, 344, 345, 346, 347, 348,
	350, 357, 361, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 259, 420, 442, 0, 295, 709, 716, 297, 244,
	262, 272, 724, 431, 393, 199, 363, 251, 188, 216,
	202, 223, 238, 241, 276, 305, 311, 340, 343, 256,
	235, 214, 360, 211, 379, 399, 400, 401, 403, 309,
	230, 757, 743, 404, 0, 692, 760, 663, 680, 770,
	683, 686, 726, 642, 705, 327, 677, 0, 667, 638,
	673, 639, 665, 694, 234, 662, 745, 708, 759, 285,
	231, 644, 668, 341, 682, 186, 728, 380, 219, 294,
	292, 409, 245, 237, 233, 218, 269, 300, 339, 398,
	333, 766, 289, 715, 0, 389, 312, 0, 0, 0,
	696, 749, 703, 739, 691, 727, 652, 714, 761, 678,
	723, 762, 275, 217, 185, 324, 390, 249, 0, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 215, 720, 756, 675, 722,
	229, 273, 236, 228, 406, 767, 748, 0, 0, 774,
	758, 698, 725, 773, 637, 717, 0, 640, 643, 769,
	752, 671, 239, 0, 0, 0, 0, 0, 0, 0,
	695, 704, 736, 689, 0, 0, 0, 0, 0, 0,
	0, 0, 669, 0, 713, 0, 0, 0, 648, 641,
	0, 0, 0, 0, 693, 0, 0, 0, 651, 0,
	670, 737, 0, 635, 257, 645, 313, 0, 741, 751,
	690, 438, 755, 688, 687, 732, 649, 747, 681, 284,
	647, 281, 181, 197, 0, 679, 323, 362, 369, 746,
	666, 674, 220, 672, 366, 337, 423, 204, 247, 359,
	342, 364, 712, 730, 365, 290, 411, 354, 421, 439,
	440, 227, 317, 429, 402, 435, 450, 198, 224, 331,
	395, 426, 386, 310, 407, 408, 280, 385, 255, 184,
	288, 447, 196, 375, 212, 189, 397, 419, 209, 378,
	0, 0, 452, 191, 417, 394, 307, 277, 278, 190,
	0, 358, 232, 253, 222, 326, 414, 415, 221, 453,
	200, 434, 193, 646, 433, 319, 410, 418, 308, 299,
	192, 416, 306, 298, 283, 243, 264, 352, 293, 353,
	265, 315, 314, 316, 0, 187, 0, 391, 427, 454,
	205, 206, 207, 661, 242, 246, 252, 254, 260, 261,
	268, 286, 330, 351, 349, 355, 742, 405, 422, 430,
	437, 443, 444, 448, 368, 445, 446, 449, 634, 628,
	627, 282, 291, 734, 772, 336, 367, 210, 425, 388,
	656, 660, 654, 655, 706, 707, 657, 763, 764, 765,
	738, 650, 0, 658, 659, 0, 744, 753, 754, 711,
	180, 194, 287, 768, 356, 250, 451, 432, 428, 636,
	653, 226, 664, 0, 0, 676, 684, 685, 697, 699,
	700, 701, 702, 710, 718, 719, 721, 729, 731, 733,
	735, 740, 750, 771, 182, 183, 195, 203, 213, 225,
	240, 248, 258, 263, 266, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	259, 420, 442, 0, 295, 709, 716, 297, 244, 262,
	272, 724, 431, 393, 199, 363, 251, 188, 216, 202,
	223, 238, 241, 276, 305, 311, 340, 343, 256, 235,
	214, 360, 211, 379, 399, 400, 401, 403, 309, 230,
	757, 743, 404, 0, 692, 760, 663, 680, 770, 683,
	686, 726, 642, 705, 327, 677, 0, 667, 638, 673,
	639, 665, 694, 234, 662, 745, 708, 759, 285, 231,
	644, 668, 341, 682, 186, 728, 380, 219, 294, 292,
	409, 245, 237, 233, 218, 269, 300, 339, 398, 333,
	766, 289, 715, 0, 389, 312, 0, 0, 0, 696,
	749, 703, 739, 691, 727, 652, 714, 761, 678, 723,
	762, 275, 217, 185, 324, 390, 249, 0, 0, 0,
	0, 177, 178, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 215, 720, 756, 675, 722, 229,
	273, 236, 228, 406, 767, 748, 0, 0, 774, 758,
	698, 725, 773, 637, 717, 0, 640, 643, 769, 752,
	671, 239, 0, 0, 0, 0, 0, 0, 0, 695,
	704, 736, 689, 0, 0, 0, 0, 0, 0, 0,
	0, 669, 0, 713, 0, 0, 0, 648, 641, 0,
	0, 0, 0, 693, 0, 0, 0, 651, 0, 670,
	737, 0, 635, 257, 645, 313, 0, 741, 751, 690,
	438, 755, 688, 687, 732, 649, 747, 681, 284, 647,
	281, 181, 197, 0, 679, 323, 362, 369, 746, 666,
	674, 220, 672, 366, 337, 423, 204, 247, 359, 342,
	364, 712, 730, 365, 290, 411, 354, 421, 439, 440,
	227, 317, 429, 402, 435, 450, 198, 224, 331, 395,
	426, 386, 310, 407, 408, 280, 385, 255, 184, 288,
	447, 196, 375, 212, 189, 397, 1128, 209, 378, 0,
	0, 452, 191, 417, 394, 307, 277, 278, 190, 0,
	358, 232, 253, 222, 326, 414, 415, 221, 453, 200,
	434, 193, 646, 433, 319, 410, 418, 308, 299, 192,
	416, 306, 298, 283, 243, 264, 352, 293, 353, 265,
	315, 314, 316, 0, 187, 0, 391, 427, 454, 205,
	206, 207, 661, 242, 246, 252, 254, 260, 261, 268,
	286, 330, 351, 349, 355, 742, 405, 422, 430, 437,
	443, 444, 448, 368, 445, 446, 449, 634, 628, 627,
	282, 291, 734, 772, 336, 367, 210, 425, 388, 656,
	660, 654, 655, 706, 707, 657, 763, 764, 765, 738,
	650, 0, 658, 659, 0, 744, 753, 754, 711, 180,
	194, 287, 768, 356, 250, 451, 432, 428, 636, 653,
	226, 664, 0, 0, 676, 684, 685, 697, 699, 700,
	701, 702, 710, 718, 719, 721, 729, 731, 733, 735,
	740, 750, 771, 182, 183, 195, 203, 213, 225, 240,
	248, 258, 263, 266, 270, 271, 274, 279, 296, 301,
	302, 303, 304, 320, 321, 322, 325, 328, 329, 332,
	334, 335, 338, 344, 345, 346, 347, 348, 350, 357,
	361, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 259,
	420, 442, 0, 295, 709, 716, 297, 244, 262, 272,
	724, 431, 393, 199, 363, 251, 188, 216, 202, 223,
	238, 241, 276, 305, 311, 340, 343, 256, 235, 214,
	360, 211, 379, 399, 400, 401, 403, 309, 230, 757,
	743, 404, 0, 692, 760, 663, 680, 770, 683, 686,
	726, 642, 705, 327, 677, 0, 667, 638, 673, 639,
	665, 694, 234, 662, 745, 708, 759, 285, 231, 644,
	668, 341, 682, 186, 728, 380, 219, 294, 292, 409,
	245, 237, 233, 218, 269, 300, 339, 398, 333, 766,
	289, 715, 0, 389, 312, 0, 0, 0, 696, 749,
	703, 739, 691, 727, 652, 714, 761, 678, 723, 762,
	275, 217, 185, 324, 390, 249, 0, 0, 0, 0,
	177, 178, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 215, 720, 756, 675, 722, 229, 273,
	236, 228, 406, 767, 748, 0, 0, 774, 758, 698,
	725, 773, 637, 717, 0, 640, 643, 769, 752, 671,
	239, 0, 0, 0, 0, 0, 0, 0, 695, 704,
	736, 689, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 713, 0, 0, 0, 648, 641, 0, 0,
	0, 0, 693, 0, 0, 0, 651, 0, 670, 737,
	0, 635, 257, 645, 313, 0, 741, 751, 690, 438,
	755, 688, 687, 732, 649, 747, 681, 284, 647, 281,
	181, 197, 0, 679, 323, 362, 369, 746, 666, 674,
	220, 672, 366, 337, 423, 204, 247, 359, 342, 364,
	712, 730, 365, 290, 411, 354, 421, 439, 440, 227,
	317, 429, 402, 435, 450, 198, 224, 331, 395, 426,
	386, 310, 407, 408, 280, 385, 255, 184, 288, 447,
	196, 375, 212, 189, 397, 625, 209, 378, 0, 0,
	452, 191, 417, 394, 307, 277, 278, 190, 0, 358,
	232, 253, 222, 326, 414, 415, 221, 453, 200, 434,
	193, 646, 433, 319, 410, 418, 308, 299, 192, 416,
	306, 298, 283, 243, 264, 352, 293, 353, 265, 315,
	314, 316, 0, 187, 0, 391, 427, 454, 205, 206,
	207, 661, 242, 246, 252, 254, 260, 261, 268, 286,
	330, 351, 349, 355, 742, 405, 422, 430, 437, 443,
	444, 448, 368, 445, 446, 449, 634, 628, 627, 282,
	291, 734, 772, 336, 367, 210, 425, 388, 656, 660,
	654, 655, 706, 707, 657, 763, 764, 765, 738, 650,
	0, 658, 659, 0, 744, 753, 754, 711, 180, 194,
	287, 768, 356, 250, 451, 432, 428, 636, 653, 226,
	664, 0, 0, 676, 684, 685, 697, 699, 700, 701,
	702, 710, 718, 719, 721, 729, 731, 733, 735, 740,
	750, 771, 182, 183, 195, 203, 213, 225, 240, 248,
	258, 263, 266, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 259, 420,
	442, 0, 295, 709, 716, 297, 244, 262, 272, 724,
	431, 393, 199, 363, 251, 188, 216, 202, 223, 238,
	241, 276, 305, 311, 340, 343, 256, 235, 214, 360,
	211, 379, 399, 400, 401, 403, 309, 230, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 1430, 0, 522, 0, 0, 0, 234,
	521, 0, 0, 0, 285, 231, 0, 1431, 341, 0,
	186, 0, 380, 219, 294, 292, 409, 245, 237, 233,
	218, 269, 300, 339, 398, 333, 565, 289, 0, 0,
	389, 312, 0, 0, 0, 0, 0, 556, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 217, 185,
	324, 390, 249, 0, 80, 0, 0, 177, 178, 179,
	543, 542, 545, 546, 547, 548, 0, 0, 208, 544,
	215, 549, 550, 551, 0, 229, 273, 236, 228, 406,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	519, 536, 0, 564, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 533, 534, 614, 0, 0, 0, 580,
	0, 535, 0, 0, 528, 529, 531, 530, 532, 537,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 313, 0, 579, 0, 0, 438, 0, 0, 577,
	0, 0, 0, 0, 284, 0, 281, 181, 197, 0,
	0, 323, 362, 369, 0, 0, 0, 220, 0, 366,
	337, 423, 204, 247, 359, 342, 364, 0, 0, 365,
	290, 411, 354, 421, 439, 440, 227, 317, 429, 402,
	435, 450, 198, 224, 331, 395, 426, 386, 310, 407,
	408, 280, 385, 255, 184, 288, 447, 196, 375, 212,
	189, 397, 419, 209, 378, 0, 0, 452, 191, 417,
	394, 307, 277, 278, 190, 0, 358, 232, 253, 222,
	326, 414, 415, 221, 453, 200, 434, 193, 0, 433,
	319, 410, 418, 308, 299, 192, 416, 306, 298, 283,
	243, 264, 352, 293, 353, 265, 315, 314, 316, 0,
	187, 0, 391, 427, 454, 205, 206, 207, 0, 242,
	246, 252, 254, 260, 261, 268, 286, 330, 351, 349,
	355, 0, 405, 422, 430, 437, 443, 444, 448, 368,
	445, 446, 449, 318, 267, 387, 282, 291, 0, 0,
	336, 367, 210, 425, 388, 567, 578, 573, 574, 571,
	572, 566, 570, 569, 568, 581, 558, 559, 560, 561,
	563, 0, 575, 576, 562, 180, 194, 287, 0, 356,
	250, 451, 432, 428, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	183, 195, 203, 213, 225, 240, 248, 258, 263, 266,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 259, 420, 442, 0, 295,
	0, 0, 297, 244, 262, 272, 0, 431, 393, 199,
	363, 251, 188, 216, 202, 223, 238, 241, 276, 305,
	311, 340, 343, 256, 235, 214, 360, 211, 379, 399,
	400, 401, 403, 309, 230, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 0, 522, 0, 0, 0, 234, 521, 0, 0,
	0, 285, 231, 0, 0, 341, 0, 186, 0, 380,
	219, 294, 292, 409, 245, 237, 233, 218, 269, 300,
	339, 398, 333, 565, 289, 0, 0, 389, 312, 0,
	0, 0, 0, 0, 556, 557, 0, 0, 0, 0,
	0, 0, 1536, 0, 275, 217, 185, 324, 390, 249,
	0, 80, 0, 0, 177, 178, 179, 543, 542, 545,
	546, 547, 548, 0, 0, 208, 544, 215, 549, 550,
	551, 1537, 229, 273, 236, 228, 406, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 519, 536, 0,
	564, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 534, 0, 0, 0, 0, 580, 0, 535, 0,
	0, 528, 529, 531, 530, 532, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 313, 0,
	579, 0, 0, 438, 0, 0, 577, 0, 0, 0,
	0, 284, 0, 281, 181, 197, 0, 0, 323, 362,
	369, 0, 0, 0, 220, 0, 366, 337, 423, 204,
	247, 359, 342, 364, 0, 0, 365, 290, 411, 354,
	421, 439, 440, 227, 317, 429, 402, 435, 450, 198,
	224, 331, 395, 426, 386, 310, 407, 408, 280, 385,
	255, 184, 288, 447, 196, 375, 212, 189, 397, 419,
	209, 378, 0, 0, 452, 191, 417, 394, 307, 277,
	278, 190, 0, 358, 232, 253, 222, 326, 414, 415,
	221, 453, 200, 434, 193, 0, 433, 319, 410, 418,
	308, 299, 192, 416, 306, 298, 283, 243, 264, 352,
	293, 353, 265, 315, 314, 316, 0, 187, 0, 391,
	427, 454, 205, 206, 207, 0, 242, 246, 252, 254,
	260, 261, 268, 286, 330, 351, 349, 355, 0, 405,
	422, 430, 437, 443, 444, 448, 368, 445, 446, 449,
	318, 267, 387, 282, 291, 0, 0, 336, 367, 210,
	425, 388, 567, 578, 573, 574, 571, 572, 566, 570,
	569, 568, 581, 558, 559, 560, 561, 563, 0, 575,
	576, 562, 180, 194, 287, 0, 356, 250, 451, 432,
	428, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 183, 195, 203,
	213, 225, 240, 248, 258, 263, 266, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 259, 420, 442, 0, 295, 0, 0, 297,
	244, 262, 272, 0, 431, 393, 199, 363, 251, 188,
	216, 202, 223, 238, 241, 276, 305, 311, 340, 343,
	256, 235, 214, 360, 211, 379, 399, 400, 401, 403,
	309, 230, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 522,
	0, 0, 0, 234, 521, 0, 0, 0, 285, 231,
	0, 0, 341, 0, 186, 0, 380, 219, 294, 292,
	409, 245, 237, 233, 218, 269, 300, 339, 398, 333,
	565, 289, 0, 0, 389, 312, 0, 0, 0, 0,
	0, 556, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 217, 185, 324, 390, 249, 0, 80, 0,
	1087, 177, 178, 179, 543, 542, 545, 546, 547, 548,
	0, 0, 208, 544, 215, 549, 550, 551, 0, 229,
	273, 236, 228, 406, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 519, 536, 0, 564, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 533, 534, 0,
	0, 0, 0, 580, 0, 535, 0, 0, 528, 529,
	531, 530, 532, 537, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 313, 0, 579, 0, 0,
	438, 0, 0, 577, 0, 0, 0, 0, 284, 0,
	281, 181, 197, 0, 0, 323, 362, 369, 0, 0,
	0, 220, 0, 366, 337, 423, 204, 247, 359, 342,
	364, 0, 0, 365, 290, 411, 354, 421, 439, 440,
	227, 317, 429, 402, 435, 450, 198, 224, 331, 395,
	426, 386, 310, 407, 408, 280, 385, 255, 184, 288,
	447, 196, 375, 212, 189, 397, 419, 209, 378, 0,
	0, 452, 191, 417, 394, 307, 277, 278, 190, 0,
	358, 232, 253, 222, 326, 414, 415, 221, 453, 200,
	434, 193, 0, 433, 319, 410, 418, 308, 299, 192,
	416, 306, 298, 283, 243, 264, 352, 293, 353, 265,
	315, 314, 316, 0, 187, 0, 391, 427, 454, 205,
	206, 207, 0, 242, 246, 252, 254, 260, 261, 268,
	286, 330, 351, 349, 355, 0, 405, 422, 430, 437,
	443, 444, 448, 368, 445, 446, 449, 318, 267, 387,
	282, 291, 0, 0, 336, 367, 210, 425, 388, 567,
	578, 573, 574, 571, 572, 566, 570, 569, 568, 581,
	558, 559, 560, 561, 563, 0, 575, 576, 562, 180,
	194, 287, 0, 356, 250, 451, 432, 428, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 183, 195, 203, 213, 225, 240,
	248, 258, 263, 266, 270, 271, 274, 279, 296, 301,
	302, 303, 304, 320, 321, 322, 325, 328, 329, 332,
	334, 335, 338, 344, 345, 346, 347, 348, 350, 357,
	361, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 259,
	420, 442, 0, 295, 0, 0, 297, 244, 262, 272,
	0, 431, 393, 199, 363, 251, 188, 216, 202, 223,
	238, 241, 276, 305, 311, 340, 343, 256, 235, 214,
	360, 211, 379, 399, 400, 401, 403, 309, 230, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 0, 522, 0, 0, 0,
	234, 521, 0, 0, 0, 285, 231, 0, 0, 341,
	0, 186, 0, 380, 219, 294, 292, 409, 245, 237,
	233, 218, 269, 300, 339, 398, 333, 565, 289, 0,
	0, 389, 312, 0, 0, 0, 0, 0, 556, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 217,
	185, 324, 390, 249, 0, 80, 0, 0, 177, 178,
	179, 543, 542, 545, 546, 547, 548, 0, 0, 208,
	544, 215, 549, 550, 551, 0, 229, 273, 236, 228,
	406, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	0, 519, 536, 0, 564, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 534, 614, 0, 0, 0,
	580, 0, 535, 0, 0, 528, 529, 531, 530, 532,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 313, 0, 579, 0, 0, 438, 0, 0,
	577, 0, 0, 0, 0, 284, 0, 281, 181, 197,
	0, 0, 323, 362, 369, 0, 0, 0, 220, 0,
	366, 337, 423, 204, 247, 359, 342, 364, 0, 0,
	365, 290, 411, 354, 421, 439, 440, 227, 317, 429,
	402, 435, 450, 198, 224, 331, 395, 426, 386, 310,
	407, 408, 280, 385, 255, 184, 288, 447, 196, 375,
	212, 189, 397, 419, 209, 378, 0, 0, 452, 191,
	417, 394, 307, 277, 278, 190, 0, 358, 232, 253,
	222, 326, 414, 415, 221, 453, 200, 434, 193, 0,
	433, 319, 410, 418, 308, 299, 192, 416, 306, 298,
	283, 243, 264, 352, 293, 353, 265, 315, 314, 316,
	0, 187, 0, 391, 427, 454, 205, 206, 207, 0,
	242, 246, 252, 254, 260, 261, 268, 286, 330, 351,
	349, 355, 0, 405, 422, 430, 437, 443, 444, 448,
	368, 445, 446, 449, 318, 267, 387, 282, 291, 0,
	0, 336, 367, 210, 425, 388, 567, 578, 573, 574,
	571, 572, 566, 570, 569, 568, 581, 558, 559, 560,
	561, 563, 0, 575, 576, 562, 180, 194, 287, 0,
	356, 250, 451, 432, 428, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 183, 195, 203, 213, 225, 240, 248, 258, 263,
	266, 270, 271, 274, 279, 296, 301, 302, 303, 304,
	320, 321, 322, 325, 328, 329, 332, 334, 335, 338,
	344, 345, 346, 347, 348, 350, 357, 361, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 259, 420, 442, 0,
	295, 0, 0, 297, 244, 262, 272, 0, 431, 393,
	199, 363, 251, 188, 216, 202, 223, 238, 241, 276,
	305, 311, 340, 343, 256, 235, 214, 360, 211, 379,
	399, 400, 401, 403, 309, 230, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 522, 0, 0, 0, 234, 521, 0,
	0, 0, 285, 231, 0, 0, 341, 0, 186, 0,
	380, 219, 294, 292, 409, 245, 237, 233, 218, 269,
	300, 339, 398, 333, 565, 289, 0, 0, 389, 312,
	0, 0, 0, 0, 0, 556, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 217, 185, 324, 390,
	249, 0, 80, 0, 0, 177, 178, 179, 543, 1445,
	545, 546, 547, 548, 0, 0, 208, 544, 215, 549,
	550, 551, 0, 229, 273, 236, 228, 406, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 519, 536,
	0, 564, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 534, 614, 0, 0, 0, 580, 0, 535,
	0, 0, 528, 529, 531, 530, 532, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 313,
	0, 579, 0, 0, 438, 0, 0, 577, 0, 0,
	0, 0, 284, 0, 281, 181, 197, 0, 0, 323,
	362, 369, 0, 0, 0, 220, 0, 366, 337, 423,
	204, 247, 359, 342, 364, 0, 0, 365, 290, 411,
	354, 421, 439, 440, 227, 317, 429, 402, 435, 450,
	198, 224, 331, 395, 426, 386, 310, 407, 408, 280,
	385, 255, 184, 288, 447, 196, 375, 212, 189, 397,
	419, 209, 378, 0, 0, 452, 191, 417, 394, 307,
	277, 278, 190, 0, 358, 232, 253, 222, 326, 414,
	415, 221, 453, 200, 434, 193, 0, 433, 319, 410,
	418, 308, 299, 192, 416, 306, 298, 283, 243, 264,
	352, 293, 353, 265, 315, 314, 316, 0, 187, 0,
	391, 427, 454, 205, 206, 207, 0, 242, 246, 252,
	254, 260, 261, 268, 286, 330, 351, 349, 355, 0,
	405, 422, 430, 437, 443, 444, 448, 368, 445, 446,
	449, 318, 267, 387, 282, 291, 0, 0, 336, 367,
	210, 425, 388, 567, 578, 573, 574, 571, 572, 566,
	570, 569, 568, 581, 558, 559, 560, 561, 563, 0,
	575, 576, 562, 180, 194, 287, 0, 356, 250, 451,
	432, 428, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 183, 195,
	203, 213, 225, 240, 248, 258, 263, 266, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 259, 420, 442, 0, 295, 0, 0,
	297, 244, 262, 272, 0, 431, 393, 199, 363, 251,
	188, 216, 202, 223, 238, 241, 276, 305, 311, 340,
	343, 256, 235, 214, 360, 211, 379, 399, 400, 401,
	403, 309, 230, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 0,
	522, 0, 0, 0, 234, 521, 0, 0, 0, 285,
	231, 0, 0, 341, 0, 186, 0, 380, 219, 294,
	292, 409, 245, 237, 233, 218, 269, 300, 339, 398,
	333, 565, 289, 0, 0, 389, 312, 0, 0, 0,
	0, 0, 556, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 217, 185, 324, 390, 249, 0, 80,
	0, 0, 177, 178, 179, 543, 1442, 545, 546, 547,
	548, 0, 0, 208, 544, 215, 549, 550, 551, 0,
	229, 273, 236, 228, 406, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 519, 536, 0, 564, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	614, 0, 0, 0, 580, 0, 535, 0, 0, 528,
	529, 531, 530, 532, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 313, 0, 579, 0,
	0, 438, 0, 0, 577, 0, 0, 0, 0, 284,
	0, 281, 181, 197, 0, 0, 323, 362, 369, 0,
	0, 0, 220, 0, 366, 337, 423, 204, 247, 359,
	342, 364, 0, 0, 365, 290, 411, 354, 421, 439,
	440, 227, 317, 429, 402, 435, 450, 198, 224, 331,
	395, 426, 386, 310, 407, 408, 280, 385, 255, 184,
	288, 447, 196, 375, 212, 189, 397, 419, 209, 378,
	0, 0, 452, 191, 417, 394, 307, 277, 278, 190,
	0, 358, 232, 253, 222, 326, 414, 415, 221, 453,
	200, 434, 193, 0, 433, 319, 410, 418, 308, 299,
	192, 416, 306, 298, 283, 243, 264, 352, 293, 353,
	265, 315, 314, 316, 0, 187, 0, 391, 427, 454,
	205, 206, 207, 0, 242, 246, 252, 254, 260, 261,
	268, 286, 330, 351, 349, 355, 0, 405, 422, 430,
	437, 443, 444, 448, 368, 445, 446, 449, 318, 267,
	387, 282, 291, 0, 0, 336, 367, 210, 425, 388,
	567, 578, 573, 574, 571, 572, 566, 570, 569, 568,
	581, 558, 559, 560, 561, 563, 0, 575, 576, 562,
	180, 194, 287, 0, 356, 250, 451, 432, 428, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 183, 195, 203, 213, 225,
	240, 248, 258, 263, 266, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	259, 420, 442, 0, 295, 0, 0, 297, 244, 262,
	272, 0, 431, 393, 199, 363, 251, 188, 216, 202,
	223, 238, 241, 276, 305, 311, 340, 343, 256, 235,
	214, 360, 211, 379, 399, 400, 401, 403, 309, 230,
	72, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 0, 522, 0,
	0, 0, 234, 521, 0, 0, 0, 285, 231, 0,
	0, 341, 0, 186, 0, 380, 219, 294, 292, 409,
	245, 237, 233, 218, 269, 300, 339, 398, 333, 565,
	289, 0, 0, 389, 312, 0, 0, 0, 0, 0,
	556, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 217, 185, 324, 390, 249, 0, 80, 0, 0,
	177, 178, 179, 543, 542, 545, 546, 547, 548, 0,
	0, 208, 544, 215, 549, 550, 551, 0, 229, 273,
	236, 228, 406, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 0, 519, 536, 0, 564, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 0, 0,
	0, 0, 580, 0, 535, 0, 0, 528, 529, 531,
	530, 532, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 313, 0, 579, 0, 0, 438,
	0, 0, 577, 0, 0, 0, 0, 284, 0, 281,
	181, 197, 0, 0, 323, 362, 369, 0, 0, 0,
	220, 0, 366, 337, 423, 204, 247, 359, 342, 364,
	0, 0, 365, 290, 411, 354, 421, 439, 440, 227,
	317, 429, 402, 435, 450, 198, 224, 331, 395, 426,
	386, 310, 407, 408, 280, 385, 255, 184, 288, 447,
	196, 375, 212, 189, 397, 419, 209, 378, 0, 0,
	452, 191, 417, 394, 307, 277, 278, 190, 0, 358,
	232, 253, 222, 326, 414, 415, 221, 453, 200, 434,
	193, 0, 433, 319, 410, 418, 308, 299, 192, 416,
	306, 298, 283, 243, 264, 352, 293, 353, 265, 315,
	314, 316, 0, 187, 0, 391, 427, 454, 205, 206,
	207, 0, 242, 246, 252, 254, 260, 261, 268, 286,
	330, 351, 349, 355, 0, 405, 422, 430, 437, 443,
	444, 448, 368, 445, 446, 449, 318, 267, 387, 282,
	291, 0, 0, 336, 367, 210, 425, 388, 567, 578,
	573, 574, 571, 572, 566, 570, 569, 568, 581, 558,
	559, 560, 561, 563, 0, 575, 576, 562, 180, 194,
	287, 0, 356, 250, 451, 432, 428, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 183, 195, 203, 213, 225, 240, 248,
	258, 263, 266, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 259, 420,
	442, 0, 295, 0, 0, 297, 244, 262, 272, 0,
	431, 393, 199, 363, 251, 188, 216, 202, 223, 238,
	241, 276, 305, 311, 340, 343, 256, 235, 214, 360,
	211, 379, 399, 400, 401, 403, 309, 230, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 522, 0, 0, 0, 234,
	521, 0, 0, 0, 285, 231, 0, 0, 341, 0,
	186, 0, 380, 219, 294, 292, 409, 245, 237, 233,
	218, 269, 300, 339, 398, 333, 565, 289, 0, 0,
	389, 312, 0, 0, 0, 0, 0, 556, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 217, 185,
	324, 390, 249, 0, 80, 0, 0, 177, 178, 179,
	543, 542, 545, 546, 547, 548, 0, 0, 208, 544,
	215, 549, 550, 551, 0, 229, 273, 236, 228, 406,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	519, 536, 0, 564, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 533, 534, 0, 0, 0, 0, 580,
	0, 535, 0, 0, 528, 529, 531, 530, 532, 537,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 313, 0, 579, 0, 0, 438, 0, 0, 577,
	0, 0, 0, 0, 284, 0, 281, 181, 197, 0,
	0, 323, 362, 369, 0, 0, 0, 220, 0, 366,
	337, 423, 204, 247, 359, 342, 364, 0, 0, 365,
	290, 411, 354, 421, 439, 440, 227, 317, 429, 402,
	435, 450, 198, 224, 331, 395, 426, 386, 310, 407,
	408, 280, 385, 255, 184, 288, 447, 196, 375, 212,
	189, 397, 419, 209, 378, 0, 0, 452, 191, 417,
	394, 307, 277, 278, 190, 0, 358, 232, 253, 222,
	326, 414, 415, 221, 453, 200, 434, 193, 0, 433,
	319, 410, 418, 308, 299, 192, 416, 306, 298, 283,
	243, 264, 352, 293, 353, 265, 315, 314, 316, 0,
	187, 0, 391, 427, 454, 205, 206, 207, 0, 242,
	246, 252, 254, 260, 261, 268, 286, 330, 351, 349,
	355, 0, 405, 422, 430, 437, 443, 444, 448, 368,
	445, 446, 449, 318, 267, 387, 282, 291, 0, 0,
	336, 367, 210, 425, 388, 567, 578, 573, 574, 571,
	572, 566, 570, 569, 568, 581, 558, 559, 560, 561,
	563, 0, 575, 576, 562, 180, 194, 287, 0, 356,
	250, 451, 432, 428, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	183, 195, 203, 213, 225, 240, 248, 258, 263, 266,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 259, 420, 442, 0, 295,
	0, 0, 297, 244, 262, 272, 0, 431, 393, 199,
	363, 251, 188, 216, 202, 223, 238, 241, 276, 305,
	311, 340, 343, 256, 235, 214, 360, 211, 379, 399,
	400, 401, 403, 309, 230, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 285, 231, 0, 0, 341, 0, 186, 0, 380,
	219, 294, 292, 409, 245, 237, 233, 218, 269, 300,
	339, 398, 333, 565, 289, 0, 0, 389, 312, 0,
	0, 0, 0, 0, 556, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 217, 185, 324, 390, 249,
	0, 80, 0, 0, 177, 178, 179, 543, 542, 545,
	546, 547, 548, 0, 0, 208, 544, 215, 549, 550,
	551, 0, 229, 273, 236, 228, 406, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 536, 0,
	564, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 534, 0, 0, 0, 0, 580, 0, 535, 0,
	0, 528, 529, 531, 530, 532, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 313, 0,
	579, 0, 0, 438, 0, 0, 577, 0, 0, 0,
	0, 284, 0, 281, 181, 197, 0, 0, 323, 362,
	369, 0, 0, 0, 220, 0, 366, 337, 423, 204,
	247, 359, 342, 364, 2274, 0, 365, 290, 411, 354,
	421, 439, 440, 227, 317, 429, 402, 435, 450, 198,
	224, 331, 395, 426, 386, 310, 407, 408, 280, 385,
	255, 184, 288, 447, 196, 375, 212, 189, 397, 419,
	209, 378, 0, 0, 452, 191, 417, 394, 307, 277,
	278, 190, 0, 358, 232, 253, 222, 326, 414, 415,
	221, 453, 200, 434, 193, 0, 433, 319, 410, 418,
	308, 299, 192, 416, 306, 298, 283, 243, 264, 352,
	293, 353, 265, 315, 314, 316, 0, 187, 0, 391,
	427, 454, 205, 206, 207, 0, 242, 246, 252, 254,
	260, 261, 268, 286, 330, 351, 349, 355, 0, 405,
	422, 430, 437, 443, 444, 448, 368, 445, 446, 449,
	318, 267, 387, 282, 291, 0, 0, 336, 367, 210,
	425, 388, 567, 578, 573, 574, 571, 572, 566, 570,
	569, 568, 581, 558, 559, 560, 561, 563, 0, 575,
	576, 562, 180, 194, 287, 0, 356, 250, 451, 432,
	428, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 183, 195, 203,
	213, 225, 240, 248, 258, 263, 266, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 259, 420, 442, 0, 295, 0, 0, 297,
	244, 262, 272, 0, 431, 393, 199, 363, 251, 188,
	216, 202, 223, 238, 241, 276, 305, 311, 340, 343,
	256, 235, 214, 360, 211, 379, 399, 400, 401, 403,
	309, 230, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 285, 231,
	0, 0, 341, 0, 186, 0, 380, 219, 294, 292,
	409, 245, 237, 233, 218, 269, 300, 339, 398, 333,
	565, 289, 0, 0, 389, 312, 0, 0, 0, 0,
	0, 556, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 217, 185, 324, 390, 249, 0, 80, 0,
	1087, 177, 178, 179, 543, 542, 545, 546, 547, 548,
	0, 0, 208, 544, 215, 549, 550, 551, 0, 229,
	273, 236, 228, 406, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 536, 0, 564, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 533, 534, 0,
	0, 0, 0, 580, 0, 535, 0, 0, 528, 529,
	531, 530, 532, 537, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 313, 0, 579, 0, 0,
	438, 0, 0, 577, 0, 0, 0, 0, 284, 0,
	281, 181, 197, 0, 0, 323, 362, 369, 0, 0,
	0, 220, 0, 366, 337, 423, 204, 247, 359, 342,
	364, 0, 0, 365, 290, 411, 354, 421, 439, 440,
	227, 317, 429, 402, 435, 450, 198, 224, 331, 395,
	426, 386, 310, 407, 408, 280, 385, 255, 184, 288,
	447, 196, 375, 212, 189, 397, 419, 209, 378, 0,
	0, 452, 191, 417, 394, 307, 277, 278, 190, 0,
	358, 232, 253, 222, 326, 414, 415, 221, 453, 200,
	434, 193, 0, 433, 319, 410, 418, 308, 299, 192,
	416, 306, 298, 283, 243, 264, 352, 293, 353, 265,
	315, 314, 316, 0, 187, 0, 391, 427, 454, 205,
	206, 207, 0, 242, 246, 252, 254, 260, 261, 268,
	286, 330, 351, 349, 355, 0, 405, 422, 430, 437,
	443, 444, 448, 368, 445, 446, 449, 318, 267, 387,
	282, 291, 0, 0, 336, 367, 210, 425, 388, 567,
	578, 573, 574, 571, 572, 566, 570, 569, 568, 581,
	558, 559, 560, 561, 563, 0, 575, 576, 562, 180,
	194, 287, 0, 356, 250, 451, 432, 428, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 183, 195, 203, 213, 225, 240,
	248, 258, 263, 266, 270, 271, 274, 279, 296, 301,
	302, 303, 304, 320, 321, 322, 325, 328, 329, 332,
	334, 335, 338, 344, 345, 346, 347, 348, 350, 357,
	361, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 259,
	420, 442, 0, 295, 0, 0, 297, 244, 262, 272,
	0, 431, 393, 199, 363, 251, 188, 216, 202, 223,
	238, 241, 276, 305, 311, 340, 343, 256, 235, 214,
	360, 211, 379, 399, 400, 401, 403, 309, 230, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 285, 231, 0, 0, 341,
	0, 186, 0, 380, 219, 294, 292, 409, 245, 237,
	233, 218, 269, 300, 339, 398, 333, 565, 289, 0,
	0, 389, 312, 0, 0, 0, 0, 0, 556, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 217,
	185, 324, 390, 249, 0, 80, 0, 0, 177, 178,
	179, 543, 542, 545, 546, 547, 548, 0, 0, 208,
	544, 215, 549, 550, 551, 0, 229, 273, 236, 228,
	406, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	0, 0, 536, 0, 564, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 534, 0, 0, 0, 0,
	580, 0, 535, 0, 0, 528, 529, 531, 530, 532,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 313, 0, 579, 0, 0, 438, 0, 0,
	577, 0, 0, 0, 0, 284, 0, 281, 181, 197,
	0, 0, 323, 362, 369, 0, 0, 0, 220, 0,
	366, 337, 423, 204, 247, 359, 342, 364, 0, 0,
	365, 290, 411, 354, 421, 439, 440, 227, 317, 429,
	402, 435, 450, 198, 224, 331, 395, 426, 386, 310,
	407, 408, 280, 385, 255, 184, 288, 447, 196, 375,
	212, 189, 397, 419, 209, 378, 0, 0, 452, 191,
	417, 394, 307, 277, 278, 190, 0, 358, 232, 253,
	222, 326, 414, 415, 221, 453, 200, 434, 193, 0,
	433, 319, 410, 418, 308, 299, 192, 416, 306, 298,
	283, 243, 264, 352, 293, 353, 265, 315, 314, 316,
	0, 187, 0, 391, 427, 454, 205, 206, 207, 0,
	242, 246, 252, 254, 260, 261, 268, 286, 330, 351,
	349, 355, 0, 405, 422, 430, 437, 443, 444, 448,
	368, 445, 446, 449, 318, 267, 387, 282, 291, 0,
	0, 336, 367, 210, 425, 388, 567, 578, 573, 574,
	571, 572, 566, 570, 569, 568, 581, 558, 559, 560,
	561, 563, 0, 575, 576, 562, 180, 194, 287, 0,
	356, 250, 451, 432, 428, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 183, 195, 203, 213, 225, 240, 248, 258, 263,
	266, 270, 271, 274, 279, 296, 301, 302, 303, 304,
	320, 321, 322, 325, 328, 329, 332, 334, 335, 338,
	344, 345, 346, 347, 348, 350, 357, 361, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 259, 420, 442, 0,
	295, 0, 0, 297, 244, 262, 272, 0, 431, 393,
	199, 363, 251, 188, 216, 202, 223, 238, 241, 276,
	305, 311, 340, 343, 256, 235, 214, 360, 211, 379,
	399, 400, 401, 403, 309, 230, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 285, 231, 0, 0, 341, 0, 186, 0,
	380, 219, 294, 292, 409, 245, 237, 233, 218, 269,
	300, 339, 398, 333, 0, 289, 0, 0, 389, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 217, 185, 324, 390,
	249, 0, 0, 0, 0, 177, 178, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 215, 0,
	0, 0, 0, 229, 273, 236, 228, 406, 0, 0,
	0, 0, 201, 0, 820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 313,
	0, 0, 0, 819, 438, 0, 0, 0, 0, 0,
	816, 817, 284, 782, 281, 181, 197, 810, 814, 323,
	362, 369, 0, 0, 0, 220, 0, 366, 337, 423,
	204, 247, 359, 342, 364, 0, 0, 365, 290, 411,
	354, 421, 439, 440, 227, 317, 429, 402, 435, 450,
	198, 224, 331, 395, 426, 386, 310, 407, 408, 280,
	385, 255, 184, 288, 447, 196, 375, 212, 189, 397,
	419, 209, 378, 0, 0, 452, 191, 417, 394, 307,
	277, 278, 190, 0, 358, 232, 253, 222, 326, 414,
	415, 221, 453, 200, 434, 193, 0, 433, 319, 410,
	418, 308, 299, 192, 416, 306, 298, 283, 243, 264,
	352, 293, 353, 265, 315, 314, 316, 0, 187, 0,
	391, 427, 454, 205, 206, 207, 0, 242, 246, 252,
	254, 260, 261, 268, 286, 330, 351, 349, 355, 0,
	405, 422, 430, 437, 443, 444, 448, 368, 445, 446,
	449, 318, 267, 387, 282, 291, 0, 0, 336, 367,
	210, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 194, 287, 0, 356, 250, 451,
	432, 428, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 183, 195,
	203, 213, 225, 240, 248, 258, 263, 266, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 259, 420, 442, 0, 295, 0, 0,
	297, 244, 262, 272, 0, 431, 393, 199, 363, 251,
	188, 216, 202, 223, 238, 241, 276, 305, 311, 340,
	343, 256, 235, 214, 360, 211, 379, 399, 400, 401,
	403, 309, 230, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 1105,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 285,
	231, 0, 0, 341, 0, 186, 0, 380, 219, 294,
	292, 409, 245, 237, 233, 218, 269, 300, 339, 398,
	333, 0, 289, 0, 0, 389, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 217, 185, 324, 390, 249, 0, 0,
	0, 0, 177, 178, 179, 0, 1107, 0, 0, 0,
	0, 0, 0, 208, 0, 215, 0, 0, 0, 0,
	229, 273, 236, 228, 406, 0, 0, 0, 0, 201,
	0, 0, 981, 982, 980, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 313, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 181, 197, 0, 0, 323, 362, 369, 0,
	0, 0, 220, 0, 366, 337, 423, 204, 247, 359,
	342, 364, 0, 0, 365, 290, 411, 354, 421, 439,
	440, 227, 317, 429, 402, 435, 450, 198, 224, 331,
	395, 426, 386, 310, 407, 408, 280, 385, 255, 184,
	288, 447, 196, 375, 212, 189, 397, 419, 209, 378,
	0, 0, 452, 191, 417, 394, 307, 277, 278, 190,
	0, 358, 232, 253, 222, 326, 414, 415, 221, 453,
	200, 434, 193, 0, 433, 319, 410, 418, 308, 299,
	192, 416, 306, 298, 283, 243, 264, 352, 293, 353,
	265, 315, 314, 316, 0, 187, 0, 391, 427, 454,
	205, 206, 207, 0, 242, 246, 252, 254, 260, 261,
	268, 286, 330, 351, 349, 355, 0, 405, 422, 430,
	437, 443, 444, 448, 368, 445, 446, 449, 318, 267,
	387, 282, 291, 0, 0, 336, 367, 210, 425, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 194, 287, 0, 356, 250, 451, 432, 428, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 183, 195, 203, 213, 225,
	240, 248, 258, 263, 266, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	259, 420, 442, 0, 295, 0, 0, 297, 244, 262,
	272, 0, 431, 393, 199, 363, 251, 188, 216, 202,
	223, 238, 241, 276, 305, 311, 340, 343, 256, 235,
	214, 360, 211, 379, 399, 400, 401, 403, 309, 230,
	72, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 285, 231, 0,
	0, 341, 0, 186, 0, 380, 219, 294, 292, 409,
	245, 237, 233, 218, 269, 300, 339, 398, 333, 0,
	289, 0, 0, 389, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 217, 185, 324, 390, 249, 0, 80, 0, 1087,
	177, 178, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 215, 0, 0, 0, 0, 229, 273,
	236, 228, 406, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 313, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 281,
	181, 197, 0, 0, 323, 362, 369, 0, 0, 0,
	220, 0, 366, 337, 423, 204, 247, 359, 342, 364,
	0, 0, 365, 290, 411, 354, 421, 439, 440, 227,
	317, 429, 402, 435, 450, 198, 224, 331, 395, 426,
	386, 310, 407, 408, 280, 385, 255, 184, 288, 447,
	196, 375, 212, 189, 397, 419, 209, 378, 0, 0,
	452, 191, 417, 394, 307, 277, 278, 190, 0, 358,
	232, 253, 222, 326, 414, 415, 221, 453, 200, 434,
	193, 0, 433, 319, 410, 418, 308, 299, 192, 416,
	306, 298, 283, 243, 264, 352, 293, 353, 265, 315,
	314, 316, 0, 187, 0, 391, 427, 454, 205, 206,
	207, 0, 242, 246, 252, 254, 260, 261, 268, 286,
	330, 351, 349, 355, 0, 405, 422, 430, 437, 443,
	444, 448, 368, 445, 446, 449, 318, 267, 387, 282,
	291, 0, 0, 336, 367, 210, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 194,
	287, 0, 356, 250, 451, 432, 428, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 183, 195, 203, 213, 225, 240, 248,
	258, 263, 266, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 259, 420,
	442, 0, 295, 0, 0, 297, 244, 262, 272, 0,
	431, 393, 199, 363, 251, 188, 216, 202, 223, 238,
	241, 276, 305, 311, 340, 343, 256, 235, 214, 360,
	211, 379, 399, 400, 401, 403, 309, 230, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 1474, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 285, 231, 0, 0, 341, 0,
	186, 0, 380, 219, 294, 292, 409, 245, 237, 233,
	218, 269, 300, 339, 398, 333, 0, 289, 0, 0,
	389, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 217, 185,
	324, 390, 249, 0, 0, 0, 0, 177, 178, 179,
	0, 1289, 0, 0, 0, 0, 0, 0, 208, 0,
	215, 0, 0, 0, 0, 229, 273, 236, 228, 406,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 313, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 181, 197, 0,
	0, 323, 362, 369, 0, 0, 0, 220, 0, 366,
	337, 423, 204, 247, 359, 342, 364, 0, 1472, 365,
	290, 411, 354, 421, 439, 440, 227, 317, 429, 402,
	435, 450, 198, 224, 331, 395, 426, 386, 310, 407,
	408, 280, 385, 255, 184, 288, 447, 196, 375, 212,
	189, 397, 419, 209, 378, 0, 0, 452, 191, 417,
	394, 307, 277, 278, 190, 0, 358, 232, 253, 222,
	326, 414, 415, 221, 453, 200, 434, 193, 0, 433,
	319, 410, 418, 308, 299, 192, 416, 306, 298, 283,
	243, 264, 352, 293, 353, 265, 315, 314, 316, 0,
	187, 0, 391, 427, 454, 205, 206, 207, 0, 242,
	246, 252, 254, 260, 261, 268, 286, 330, 351, 349,
	355, 0, 405, 422, 430, 437, 443, 444, 448, 368,
	445, 446, 449, 318, 267, 387, 282, 291, 0, 0,
	336, 367, 210, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 194, 287, 0, 356,
	250, 451, 432, 428, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	183, 195, 203, 213, 225, 240, 248, 258, 263, 266,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 259, 420, 442, 0, 295,
	0, 0, 297, 244, 262, 272, 0, 431, 393, 199,
	363, 251, 188, 216, 202, 223, 238, 241, 276, 305,
	311, 340, 343, 256, 235, 214, 360, 211, 379, 399,
	400, 401, 403, 309, 230, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 285, 231, 0, 0, 341, 0, 186, 0, 380,
	219, 294, 292, 409, 245, 237, 233, 218, 269, 300,
	339, 398, 333, 0, 289, 0, 0, 389, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 217, 185, 324, 390, 249,
	0, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 215, 0, 0,
	0, 0, 229, 273, 236, 228, 406, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 313, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 284, 782, 281, 181, 197, 780, 0, 323, 362,
	369, 0, 0, 0, 220, 0, 366, 337, 423, 204,
	247, 359, 342, 364, 0, 0, 365, 290, 411, 354,
	421, 439, 440, 227, 317, 429, 402, 435, 450, 198,
	224, 331, 395, 426, 386, 310, 407, 408, 280, 385,
	255, 184, 288, 447, 196, 375, 212, 189, 397, 419,
	209, 378, 0, 0, 452, 191, 417, 394, 307, 277,
	278, 190, 0, 358, 232, 253, 222, 326, 414, 415,
	221, 453, 200, 434, 193, 0, 433, 319, 410, 418,
	308, 299, 192, 416, 306, 298, 283, 243, 264, 352,
	293, 353, 265, 315, 314, 316, 0, 187, 0, 391,
	427, 454, 205, 206, 207, 0, 242, 246, 252, 254,
	260, 261, 268, 286, 330, 351, 349, 355, 0, 405,
	422, 430, 437, 443, 444, 448, 368, 445, 446, 449,
	318, 267, 387, 282, 291, 0, 0, 336, 367, 210,
	425, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 194, 287, 0, 356, 250, 451, 432,
	428, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 183, 195, 203,
	213, 225, 240, 248, 258, 263, 266, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 259, 420, 442, 0, 295, 0, 0, 297,
	244, 262, 272, 0, 431, 393, 199, 363, 251, 188,
	216, 202, 223, 238, 241, 276, 305, 311, 340, 343,
	256, 235, 214, 360, 211, 379, 399, 400, 401, 403,
	309, 230, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 1474, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 285, 231,
	0, 0, 341, 0, 186, 0, 380, 219, 294, 292,
	409, 245, 237, 233, 218, 269, 300, 339, 398, 333,
	0, 289, 0, 0, 389, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 217, 185, 324, 390, 249, 0, 0, 0,
	0, 177, 178, 179, 0, 1289, 0, 0, 0, 0,
	0, 0, 208, 0, 215, 0, 0, 0, 0, 229,
	273, 236, 228, 406, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 313, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 181, 197, 0, 0, 323, 362, 369, 0, 0,
	0, 220, 0, 366, 337, 423, 204, 247, 359, 342,
	364, 0, 0, 365, 290, 411, 354, 421, 439, 440,
	227, 317, 429, 402, 435, 450, 198, 224, 331, 395,
	426, 386, 310, 407, 408, 280, 385, 255, 184, 288,
	447, 196, 375, 212, 189, 397, 419, 209, 378, 0,
	0, 452, 191, 417, 394, 307, 277, 278, 190, 0,
	358, 232, 253, 222, 326, 414, 415, 221, 453, 200,
	434, 193, 0, 433, 319, 410, 418, 308, 299, 192,
	416, 306, 298, 283, 243, 264, 352, 293, 353, 265,
	315, 314, 316, 0, 187, 0, 391, 427, 454, 205,
	206, 207, 0, 242, 246, 252, 254, 260, 261, 268,
	286, 330, 351, 349, 355, 0, 405, 422, 430, 437,
	443, 444, 448, 368, 445, 446, 449, 318, 267, 387,
	282, 291, 0, 0, 336, 367, 210, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	194, 287, 0, 356, 250, 451, 432, 428, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 183, 195, 203, 213, 225, 240,
	248, 258, 263, 266, 270, 271, 274, 279, 296, 301,
	302, 303, 304, 320, 321, 322, 325, 328, 329, 332,
	334, 335, 338, 344, 345, 346, 347, 348, 350, 357,
	361, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 259,
	420, 442, 0, 295, 0, 0, 297, 244, 262, 272,
	0, 431, 393, 199, 363, 251, 188, 216, 202, 223,
	238, 241, 276, 305, 311, 340, 343, 256, 235, 214,
	360, 211, 379, 399, 400, 401, 403, 309, 230, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 285, 231, 0, 0, 341,
	0, 186, 0, 380, 219, 294, 292, 409, 245, 237,
	233, 218, 269, 300, 339, 398, 333, 0, 289, 0,
	0, 389, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 217,
	185, 324, 390, 249, 0, 0, 0, 1087, 177, 178,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 215, 0, 0, 0, 0, 229, 273, 236, 228,
	406, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 313, 0, 0, 0, 0, 438, 0, 0,
	0, 2164, 0, 0, 0, 284, 0, 281, 181, 197,
	0, 0, 323, 362, 369, 0, 0, 0, 220, 0,
	366, 337, 423, 204, 247, 359, 342, 364, 0, 0,
	365, 290, 411, 354, 421, 439, 440, 227, 317, 429,
	402, 435, 450, 198, 224, 331, 395, 426, 386, 310,
	407, 408, 280, 385, 255, 184, 288, 447, 196, 375,
	212, 189, 397, 419, 209, 378, 0, 0, 452, 191,
	417, 394, 307, 277, 278, 190, 0, 358, 232, 253,
	222, 326, 414, 415, 221, 453, 200, 434, 193, 0,
	433, 319, 410, 418, 308, 299, 192, 416, 306, 298,
	283, 243, 264, 352, 293, 353, 265, 315, 314, 316,
	0, 187, 0, 391, 427, 454, 205, 206, 207, 0,
	242, 246, 252, 254, 260, 261, 268, 286, 330, 351,
	349, 355, 0, 405, 422, 430, 437, 443, 444, 448,
	368, 445, 446, 449, 318, 267, 387, 282, 291, 0,
	0, 336, 367, 210, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 194, 287, 0,
	356, 250, 451, 432, 428, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 183, 195, 203, 213, 225, 240, 248, 258, 263,
	266, 270, 271, 274, 279, 296, 301, 302, 303, 304,
	320, 321, 322, 325, 328, 329, 332, 334, 335, 338,
	344, 345, 346, 347, 348, 350, 357, 361, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 259, 420, 442, 0,
	295, 0, 0, 297, 244, 262, 272, 0, 431, 393,
	199, 363, 251, 188, 216, 202, 223, 238, 241, 276,
	305, 311, 340, 343, 256, 235, 214, 360, 211, 379,
	399, 400, 401, 403, 309, 230, 72, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 285, 231, 0, 0, 341, 0, 186,
	0, 380, 219, 294, 292, 409, 245, 237, 233, 218,
	269, 300, 339, 398, 333, 0, 289, 0, 0, 389,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 217, 185, 324,
	390, 249, 0, 80, 0, 0, 177, 178, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 215,
	0, 0, 0, 0, 229, 273, 236, 228, 406, 0,
	0, 0, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	313, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 281, 181, 197, 0, 0,
	323, 362, 369, 0, 0, 0, 220, 0, 366, 337,
	423, 204, 247, 359, 342, 364, 0, 0, 365, 290,
	411, 354, 421, 439, 440, 227, 317, 429, 402, 435,
	450, 198, 224, 331, 395, 426, 386, 310, 407, 408,
	280, 385, 255, 184, 288, 447, 196, 375, 212, 189,
	397, 419, 209, 378, 0, 0, 452, 191, 417, 394,
	307, 277, 278, 190, 0, 358, 232, 253, 222, 326,
	414, 415, 221, 453, 200, 434, 193, 0, 433, 319,
	410, 418, 308, 299, 192, 416, 306, 298, 283, 243,
	264, 352, 293, 353, 265, 315, 314, 316, 0, 187,
	0, 391, 427, 454, 205, 206, 207, 0, 242, 246,
	252, 254, 260, 261, 268, 286, 330, 351, 349, 355,
	0, 405, 422, 430, 437, 443, 444, 448, 368, 445,
	446, 449, 318, 267, 387, 282, 291, 0, 0, 336,
	367, 210, 425, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 194, 287, 0, 356, 250,
	451, 432, 428, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 183,
	195, 203, 213, 225, 240, 248, 258, 263, 266, 270,
	271, 274, 279, 296, 301, 302, 303, 304, 320, 321,
	322, 325, 328, 329, 332, 334, 335, 338, 344, 345,
	346, 347, 348, 350, 357, 361, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 259, 420, 442, 0, 295, 0,
	0, 297, 244, 262, 272, 0, 431, 393, 199, 363,
	251, 188, 216, 202, 223, 238, 241, 276, 305, 311,
	340, 343, 256, 235, 214, 360, 211, 379, 399, 400,
	401, 403, 309, 230, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	285, 231, 0, 0, 341, 0, 186, 0, 380, 219,
	294, 292, 409, 245, 237, 233, 218, 269, 300, 339,
	398, 333, 0, 289, 0, 0, 389, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 217, 185, 324, 390, 249, 0,
	0, 0, 0, 177, 178, 179, 0, 0, 1735, 0,
	0, 1736, 0, 0, 208, 0, 215, 0, 0, 0,
	0, 229, 273, 236, 228, 406, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 313, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 181, 197, 0, 0, 323, 362, 369,
	0, 0, 0, 220, 0, 366, 337, 423, 204, 247,
	359, 342, 364, 0, 0, 365, 290, 411, 354, 421,
	439, 440, 227, 317, 429, 402, 435, 450, 198, 224,
	331, 395, 426, 386, 310, 407, 408, 280, 385, 255,
	184, 288, 447, 196, 375, 212, 189, 397, 419, 209,
	378, 0, 0, 452, 191, 417, 394, 307, 277, 278,
	190, 0, 358, 232, 253, 222, 326, 414, 415, 221,
	453, 200, 434, 193, 0, 433, 319, 410, 418, 308,
	299, 192, 416, 306, 298, 283, 243, 264, 352, 293,
	353, 265, 315, 314, 316, 0, 187, 0, 391, 427,
	454, 205, 206, 207, 0, 242, 246, 252, 254, 260,
	261, 268, 286, 330, 351, 349, 355, 0, 405, 422,
	430, 437, 443, 444, 448, 368, 445, 446, 449, 318,
	267, 387, 282, 291, 0, 0, 336, 367, 210, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 194, 287, 0, 356, 250, 451, 432, 428,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 183, 195, 203, 213,
	225, 240, 248, 258, 263, 266, 270, 271, 274, 279,
	296, 301, 302, 303, 304, 320, 321, 322, 325, 328,
	329, 332, 334, 335, 338, 344, 345, 346, 347, 348,
	350, 357, 361, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 259, 420, 442, 0, 295, 0, 0, 297, 244,
	262, 272, 0, 431, 393, 199, 363, 251, 188, 216,
	202, 223, 238, 241, 276, 305, 311, 340, 343, 256,
	235, 214, 360, 211, 379, 399, 400, 401, 403, 309,
	230, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 1139, 0, 0, 0, 285, 231, 0,
	0, 341, 0, 186, 0, 380, 219, 294, 292, 409,
	245, 237, 233, 218, 269, 300, 339, 398, 333, 0,
	289, 0, 0, 389, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 217, 185, 324, 390, 249, 0, 0, 0, 0,
	177, 178, 179, 0, 1138, 0, 0, 0, 0, 0,
	0, 208, 0, 215, 0, 0, 0, 0, 229, 273,
	236, 228, 406, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 313, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 281,
	181, 197, 0, 0, 323, 362, 369, 0, 0, 0,
	220, 0, 366, 337, 423, 204, 247, 359, 342, 364,
	0, 0, 365, 290, 411, 354, 421, 439, 440, 227,
	317, 429, 402, 435, 450, 198, 224, 331, 395, 426,
	386, 310, 407, 408, 280, 385, 255, 184, 288, 447,
	196, 375, 212, 189, 397, 419, 209, 378, 0, 0,
	452, 191, 417, 394, 307, 277, 278, 190, 0, 358,
	232, 253, 222, 326, 414, 415, 221, 453, 200, 434,
	193, 0, 433, 319, 410, 418, 308, 299, 192, 416,
	306, 298, 283, 243, 264, 352, 293, 353, 265, 315,
	314, 316, 0, 187, 0, 391, 427, 454, 205, 206,
	207, 0, 242, 246, 252, 254, 260, 261, 268, 286,
	330, 351, 349, 355, 0, 405, 422, 430, 437, 443,
	444, 448, 368, 445, 446, 449, 318, 267, 387, 282,
	291, 0, 0, 336, 367, 210, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 194,
	287, 0, 356, 250, 451, 432, 428, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 183, 195, 203, 213, 225, 240, 248,
	258, 263, 266, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 259, 420,
	442, 0, 295, 0, 0, 297, 244, 262, 272, 0,
	431, 393, 199, 363, 251, 188, 216, 202, 223, 238,
	241, 276, 305, 311, 340, 343, 256, 235, 214, 360,
	211, 379, 399, 400, 401, 403, 309, 230, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 285, 231, 0, 0, 341, 0,
	186, 0, 380, 219, 294, 292, 409, 245, 237, 233,
	218, 269, 300, 339, 398, 333, 0, 289, 0, 0,
	389, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 217, 185,
	324, 390, 249, 0, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	215, 0, 0, 0, 0, 229, 273, 236, 228, 406,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 313, 0, 0, 0, 0, 438, 0, 0, 0,
	2256, 0, 0, 0, 284, 0, 281, 181, 197, 0,
	0, 323, 362, 369, 0, 0, 0, 220, 0, 366,
	337, 423, 204, 247, 359, 342, 364, 0, 0, 365,
	290, 411, 354, 421, 439, 440, 227, 317, 429, 402,
	435, 450, 198, 224, 331, 395, 426, 386, 310, 407,
	408, 280, 385, 255, 184, 288, 447, 196, 375, 212,
	189, 397, 419, 209, 378, 0, 0, 452, 191, 417,
	394, 307, 277, 278, 190, 0, 358, 232, 253, 222,
	326, 414, 415, 221, 453, 200, 434, 193, 0, 433,
	319, 410, 418, 308, 299, 192, 416, 306, 298, 283,
	243, 264, 352, 293, 353, 265, 315, 314, 316, 0,
	187, 0, 391, 427, 454, 205, 206, 207, 0, 242,
	246, 252, 254, 260, 261, 268, 286, 330, 351, 349,
	355, 0, 405, 422, 430, 437, 443, 444, 448, 368,
	445, 446, 449, 318, 267, 387, 282, 291, 0, 0,
	336, 367, 210, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 194, 287, 0, 356,
	250, 451, 432, 428, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	183, 195, 203, 213, 225, 240, 248, 258, 263, 266,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 259, 420, 442, 0, 295,
	0, 0, 297, 244, 262, 272, 0, 431, 393, 199,
	363, 251, 188, 216, 202, 223, 238, 241, 276, 305,
	311, 340, 343, 256, 235, 214, 360, 211, 379, 399,
	400, 401, 403, 309, 230, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 285, 231, 0, 0, 341, 0, 186, 0, 380,
	219, 294, 292, 409, 245, 237, 233, 218, 269, 300,
	339, 398, 333, 0, 289, 0, 0, 389, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 217, 185, 324, 390, 249,
	0, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 215, 0, 0,
	0, 0, 229, 273, 236, 228, 406, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 313, 0,
	0, 0, 0, 438, 0, 0, 0, 2164, 0, 0,
	0, 284, 0, 281, 181, 197, 0, 0, 323, 362,
	369, 0, 0, 0, 220, 0, 366, 337, 423, 204,
	247, 359, 342, 364, 0, 0, 365, 290, 411, 354,
	421, 439, 440, 227, 317, 429, 402, 435, 450, 198,
	224, 331, 395, 426, 386, 310, 407, 408, 280, 385,
	255, 184, 288, 447, 196, 375, 212, 189, 397, 419,
	209, 378, 0, 0, 452, 191, 417, 394, 307, 277,
	278, 190, 0, 358, 232, 253, 222, 326, 414, 415,
	221, 453, 200, 434, 193, 0, 433, 319, 410, 418,
	308, 299, 192, 416, 306, 298, 283, 243, 264, 352,
	293, 353, 265, 315, 314, 316, 0, 187, 0, 391,
	427, 454, 205, 206, 207, 0, 242, 246, 252, 254,
	260, 261, 268, 286, 330, 351, 349, 355, 0, 405,
	422, 430, 437, 443, 444, 448, 368, 445, 446, 449,
	318, 267, 387, 282, 291, 0, 0, 336, 367, 210,
	425, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 194, 287, 0, 356, 250, 451, 432,
	428, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 183, 195, 203,
	213, 225, 240, 248, 258, 263, 266, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 259, 420, 442, 0, 295, 0, 0, 297,
	244, 262, 272, 0, 431, 393, 199, 363, 251, 188,
	216, 202, 223, 238, 241, 276, 305, 311, 340, 343,
	256, 235, 214, 360, 211, 379, 399, 400, 401, 403,
	309, 230, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 285, 231,
	0, 0, 341, 0, 186, 0, 380, 219, 294, 292,
	409, 245, 237, 233, 218, 269, 300, 339, 398, 333,
	0, 289, 0, 0, 389, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 217, 185, 324, 390, 249, 0, 80, 0,
	0, 177, 178, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 215, 0, 0, 0, 0, 229,
	273, 236, 228, 406, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 313, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 181, 197, 0, 0, 323, 362, 369, 0, 0,
	0, 220, 0, 366, 337, 423, 204, 247, 359, 342,
	364, 0, 0, 365, 290, 411, 354, 421, 439, 440,
	227, 317, 429, 402, 435, 450, 198, 224, 331, 395,
	426, 386, 310, 407, 408, 280, 385, 255, 184, 288,
	447, 196, 375, 212, 189, 397, 419, 209, 378, 0,
	0, 452, 191, 417, 394, 307, 277, 278, 190, 0,
	358, 232, 253, 222, 326, 414, 415, 221, 453, 200,
	434, 193, 0, 433, 319, 410, 418, 308, 299, 192,
	416, 306, 298, 283, 243, 264, 352, 293, 353, 265,
	315, 314, 316, 0, 187, 0, 391, 427, 454, 205,
	206, 207, 0, 242, 246, 252, 254, 260, 261, 268,
	286, 330, 351, 349, 355, 0, 405, 422, 430, 437,
	443, 444, 448, 368, 445, 446, 449, 318, 267, 387,
	282, 291, 0, 0, 336, 367, 210, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	194, 287, 0, 356, 250, 451, 432, 428, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 183, 195, 203, 213, 225, 240,
	248, 258, 263, 266, 270, 271, 274, 279, 296, 301,
	302, 303, 304, 320, 321, 322, 325, 328, 329, 332,
	334, 335, 338, 344, 345, 346, 347, 348, 350, 357,
	361, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 259,
	420, 442, 0, 295, 0, 0, 297, 244, 262, 272,
	0, 431, 393, 199, 363, 251, 188, 216, 202, 223,
	238, 241, 276, 305, 311, 340, 343, 256, 235, 214,
	360, 211, 379, 399, 400, 401, 403, 309, 230, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 285, 231, 0, 0, 341,
	0, 186, 0, 380, 219, 294, 292, 409, 245, 237,
	233, 218, 269, 300, 339, 398, 333, 0, 289, 0,
	0, 389, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 217,
	185, 324, 390, 249, 0, 0, 0, 0, 177, 178,
	179, 0, 1289, 0, 0, 0, 0, 0, 0, 208,
	0, 215, 0, 0, 0, 0, 229, 273, 236, 228,
	406, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 313, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 181, 197,
	0, 0, 323, 362, 369, 0, 0, 0, 220, 0,
	366, 337, 423, 204, 247, 359, 342, 364, 0, 0,
	365, 290, 411, 354, 421, 439, 440, 227, 317, 429,
	402, 435, 450, 198, 224, 331, 395, 426, 386, 310,
	407, 408, 280, 385, 255, 184, 288, 447, 196, 375,
	212, 189, 397, 419, 209, 378, 0, 0, 452, 191,
	417, 394, 307, 277, 278, 190, 0, 358, 232, 253,
	222, 326, 414, 415, 221, 453, 200, 434, 193, 0,
	433, 319, 410, 418, 308, 299, 192, 416, 306, 298,
	283, 243, 264, 352, 293, 353, 265, 315, 314, 316,
	0, 187, 0, 391, 427, 454, 205, 206, 207, 0,
	242, 246, 252, 254, 260, 261, 268, 286, 330, 351,
	349, 355, 0, 405, 422, 430, 437, 443, 444, 448,
	368, 445, 446, 449, 318, 267, 387, 282, 291, 0,
	0, 336, 367, 210, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 194, 287, 0,
	356, 250, 451, 432, 428, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 183, 195, 203, 213, 225, 240, 248, 258, 263,
	266, 270, 271, 274, 279, 296, 301, 302, 303, 304,
	320, 321, 322, 325, 328, 329, 332, 334, 335, 338,
	344, 345, 346, 347, 348, 350, 357, 361, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 259, 420, 442, 0,
	295, 0, 0, 297, 244, 262, 272, 0, 431, 393,
	199, 363, 251, 188, 216, 202, 223, 238, 241, 276,
	305, 311, 340, 343, 256, 235, 214, 360, 211, 379,
	399, 400, 401, 403, 309, 230, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 285, 231, 0, 0, 341, 0, 186, 0,
	380, 219, 294, 292, 409, 245, 237, 233, 218, 269,
	300, 339, 398, 333, 0, 289, 0, 0, 389, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 217, 185, 324, 390,
	249, 0, 0, 0, 0, 177, 178, 179, 0, 1107,
	0, 0, 0, 0, 0, 0, 208, 0, 215, 0,
	0, 0, 0, 229, 273, 236, 228, 406, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 313,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 181, 197, 0, 0, 323,
	362, 369, 0, 0, 0, 220, 0, 366, 337, 423,
	204, 247, 359, 342, 364, 0, 0, 365, 290, 411,
	354, 421, 439, 440, 227, 317, 429, 402, 435, 450,
	198, 224, 331, 395, 426, 386, 310, 407, 408, 280,
	385, 255, 184, 288, 447, 196, 375, 212, 189, 397,
	419, 209, 378, 0, 0, 452, 191, 417, 394, 307,
	277, 278, 190, 0, 358, 232, 253, 222, 326, 414,
	415, 221, 453, 200, 434, 193, 0, 433, 319, 410,
	418, 308, 299, 192, 416, 306, 298, 283, 243, 264,
	352, 293, 353, 265, 315, 314, 316, 0, 187, 0,
	391, 427, 454, 205, 206, 207, 0, 242, 246, 252,
	254, 260, 261, 268, 286, 330, 351, 349, 355, 0,
	405, 422, 430, 437, 443, 444, 448, 368, 445, 446,
	449, 318, 267, 387, 282, 291, 0, 0, 336, 367,
	210, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 194, 287, 0, 356, 250, 451,
	432, 428, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 183, 195,
	203, 213, 225, 240, 248, 258, 263, 266, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 259, 420, 442, 0, 295, 0, 0,
	297, 244, 262, 272, 0, 431, 393, 199, 363, 251,
	188, 216, 202, 223, 238, 241, 276, 305, 311, 340,
	343, 256, 235, 214, 360, 211, 379, 399, 400, 401,
	403, 309, 230, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 285,
	231, 0, 0, 341, 0, 186, 0, 380, 219, 294,
	292, 409, 245, 237, 233, 218, 269, 300, 339, 398,
	333, 0, 289, 0, 0, 389, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 217, 185, 324, 390, 249, 0, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 215, 0, 0, 0, 0,
	229, 273, 236, 228, 406, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 313, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 181, 197, 0, 0, 323, 362, 369, 0,
	0, 0, 220, 0, 366, 337, 423, 204, 247, 359,
	342, 364, 0, 0, 365, 290, 411, 354, 421, 439,
	440, 227, 317, 429, 402, 435, 450, 198, 224, 331,
	395, 426, 386, 310, 407, 408, 280, 385, 255, 184,
	288, 447, 196, 375, 212, 189, 397, 419, 209, 378,
	0, 0, 452, 191, 417, 394, 307, 277, 278, 190,
	0, 358, 232, 253, 222, 326, 414, 415, 221, 453,
	200, 434, 193, 0, 433, 319, 410, 418, 308, 299,
	192, 416, 306, 298, 283, 243, 264, 352, 293, 353,
	265, 315, 314, 316, 0, 187, 0, 391, 427, 454,
	205, 206, 207, 0, 242, 246, 252, 254, 260, 261,
	268, 286, 330, 351, 349, 355, 0, 405, 422, 430,
	437, 443, 444, 448, 368, 445, 446, 449, 318, 267,
	387, 282, 291, 0, 0, 336, 367, 210, 425, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 194, 287, 1380, 356, 250, 451, 432, 428, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 183, 195, 203, 213, 225,
	240, 248, 258, 263, 266, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	259, 420, 442, 0, 295, 0, 0, 297, 244, 262,
	272, 0, 431, 393, 199, 363, 251, 188, 216, 202,
	223, 238, 241, 276, 305, 311, 340, 343, 256, 235,
	214, 360, 211, 379, 399, 400, 401, 403, 309, 230,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 1261, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 285, 231, 0, 0,
	341, 0, 186, 0, 380, 219, 294, 292, 409, 245,
	237, 233, 218, 269, 300, 339, 398, 333, 0, 289,
	0, 0, 389, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	217, 185, 324, 390, 249, 0, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 215, 0, 0, 0, 0, 229, 273, 236,
	228, 406, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 313, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 181,
	197, 0, 0, 323, 362, 369, 0, 0, 0, 220,
	0, 366, 337, 423, 204, 247, 359, 342, 364, 0,
	0, 365, 290, 411, 354, 421, 439, 440, 227, 317,
	429, 402, 435, 450, 198, 224, 331, 395, 426, 386,
	310, 407, 408, 280, 385, 255, 184, 288, 447, 196,
	375, 212, 189, 397, 419, 209, 378, 0, 0, 452,
	191, 417, 394, 307, 277, 278, 190, 0, 358, 232,
	253, 222, 326, 414, 415, 221, 453, 200, 434, 193,
	0, 433, 319, 410, 418, 308, 299, 192, 416, 306,
	298, 283, 243, 264, 352, 293, 353, 265, 315, 314,
	316, 0, 187, 0, 391, 427, 454, 205, 206, 207,
	0, 242, 246, 252, 254, 260, 261, 268, 286, 330,
	351, 349, 355, 0, 405, 422, 430, 437, 443, 444,
	448, 368, 445, 446, 449, 318, 267, 387, 282, 291,
	0, 0, 336, 367, 210, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 194, 287,
	0, 356, 250, 451, 432, 428, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 183, 195, 203, 213, 225, 240, 248, 258,
	263, 266, 270, 271, 274, 279, 296, 301, 302, 303,
	304, 320, 321, 322, 325, 328, 329, 332, 334, 335,
	338, 344, 345, 346, 347, 348, 350, 357, 361, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 259, 420, 442,
	0, 295, 0, 0, 297, 244, 262, 272, 0, 431,
	393, 199, 363, 251, 188, 216, 202, 223, 238, 241,
	276, 305, 311, 340, 343, 256, 235, 214, 360, 211,
	379, 399, 400, 401, 403, 309, 230, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 1259, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 285, 231, 0, 0, 341, 0, 186,
	0, 380, 219, 294, 292, 409, 245, 237, 233, 218,
	269, 300, 339, 398, 333, 0, 289, 0, 0, 389,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 217, 185, 324,
	390, 249, 0, 0, 0, 0, 177, 178, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 215,
	0, 0, 0, 0, 229, 273, 236, 228, 406, 0,
	0, 0, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	313, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 281, 181, 197, 0, 0,
	323, 362, 369, 0, 0, 0, 220, 0, 366, 337,
	423, 204, 247, 359, 342, 364, 0, 0, 365, 290,
	411, 354, 421, 439, 440, 227, 317, 429, 402, 435,
	450, 198, 224, 331, 395, 426, 386, 310, 407, 408,
	280, 385, 255, 184, 288, 447, 196, 375, 212, 189,
	397, 419, 209, 378, 0, 0, 452, 191, 417, 394,
	307, 277, 278, 190, 0, 358, 232, 253, 222, 326,
	414, 415, 221, 453, 200, 434, 193, 0, 433, 319,
	410, 418, 308, 299, 192, 416, 306, 298, 283, 243,
	264, 352, 293, 353, 265, 315, 314, 316, 0, 187,
	0, 391, 427, 454, 205, 206, 207, 0, 242, 246,
	252, 254, 260, 261, 268, 286, 330, 351, 349, 355,
	0, 405, 422, 430, 437, 443, 444, 448, 368, 445,
	446, 449, 318, 267, 387, 282, 291, 0, 0, 336,
	367, 210, 425, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 194, 287, 0, 356, 250,
	451, 432, 428, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 183,
	195, 203, 213, 225, 240, 248, 258, 263, 266, 270,
	271, 274, 279, 296, 301, 302, 303, 304, 320, 321,
	322, 325, 328, 329, 332, 334, 335, 338, 344, 345,
	346, 347, 348, 350, 357, 361, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 259, 420, 442, 0, 295, 0,
	0, 297, 244, 262, 272, 0, 431, 393, 199, 363,
	251, 188, 216, 202, 223, 238, 241, 276, 305, 311,
	340, 343, 256, 235, 214, 360, 211, 379, 399, 400,
	401, 403, 309, 230, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 1257, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	285, 231, 0, 0, 341, 0, 186, 0, 380, 219,
	294, 292, 409, 245, 237, 233, 218, 269, 300, 339,
	398, 333, 0, 289, 0, 0, 389, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 217, 185, 324, 390, 249, 0,
	0, 0, 0, 177, 178, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 215, 0, 0, 0,
	0, 229, 273, 236, 228, 406, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 313, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 181, 197, 0, 0, 323, 362, 369,
	0, 0, 0, 220, 0, 366, 337, 423, 204, 247,
	359, 342, 364, 0, 0, 365, 290, 411, 354, 421,
	439, 440, 227, 317, 429, 402, 435, 450, 198, 224,
	331, 395, 426, 386, 310, 407, 408, 280, 385, 255,
	184, 288, 447, 196, 375, 212, 189, 397, 419, 209,
	378, 0, 0, 452, 191, 417, 394, 307, 277, 278,
	190, 0, 358, 232, 253, 222, 326, 414, 415, 221,
	453, 200, 434, 193, 0, 433, 319, 410, 418, 308,
	299, 192, 416, 306, 298, 283, 243, 264, 352, 293,
	353, 265, 315, 314, 316, 0, 187, 0, 391, 427,
	454, 205, 206, 207, 0, 242, 246, 252, 254, 260,
	261, 268, 286, 330, 351, 349, 355, 0, 405, 422,
	430, 437, 443, 444, 448, 368, 445, 446, 449, 318,
	267, 387, 282, 291, 0, 0, 336, 367, 210, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 194, 287, 0, 356, 250, 451, 432, 428,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 183, 195, 203, 213,
	225, 240, 248, 258, 263, 266, 270, 271, 274, 279,
	296, 301, 302, 303, 304, 320, 321, 322, 325, 328,
	329, 332, 334, 335, 338, 344, 345, 346, 347, 348,
	350, 357, 361, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 259, 420, 442, 0, 295, 0, 0, 297, 244,
	262, 272, 0, 431, 393, 199, 363, 251, 188, 216,
	202, 223, 238, 241, 276, 305, 311, 340, 343, 256,
	235, 214, 360, 211, 379, 399, 400, 401, 403, 309,
	230, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 1255, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 285, 231, 0,
	0, 341, 0, 186, 0, 380, 219, 294, 292, 409,
	245, 237, 233, 218, 269, 300, 339, 398, 333, 0,
	289, 0, 0, 389, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 217, 185, 324, 390, 249, 0, 0, 0, 0,
	177, 178, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 215, 0, 0, 0, 0, 229, 273,
	236, 228, 406, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 313, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 281,
	181, 197, 0, 0, 323, 362, 369, 0, 0, 0,
	220, 0, 366, 337, 423, 204, 247, 359, 342, 364,
	0, 0, 365, 290, 411, 354, 421, 439, 440, 227,
	317, 429, 402, 435, 450, 198, 224, 331, 395, 426,
	386, 310, 407, 408, 280, 385, 255, 184, 288, 447,
	196, 375, 212, 189, 397, 419, 209, 378, 0, 0,
	452, 191, 417, 394, 307, 277, 278, 190, 0, 358,
	232, 253, 222, 326, 414, 415, 221, 453, 200, 434,
	193, 0, 433, 319, 410, 418, 308, 299, 192, 416,
	306, 298, 283, 243, 264, 352, 293, 353, 265, 315,
	314, 316, 0, 187, 0, 391, 427, 454, 205, 206,
	207, 0, 242, 246, 252, 254, 260, 261, 268, 286,
	330, 351, 349, 355, 0, 405, 422, 430, 437, 443,
	444, 448, 368, 445, 446, 449, 318, 267, 387, 282,
	291, 0, 0, 336, 367, 210, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 194,
	287, 0, 356, 250, 451, 432, 428, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 183, 195, 203, 213, 225, 240, 248,
	258, 263, 266, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 259, 420,
	442, 0, 295, 0, 0, 297, 244, 262, 272, 0,
	431, 393, 199, 363, 251, 188, 216, 202, 223, 238,
	241, 276, 305, 311, 340, 343, 256, 235, 214, 360,
	211, 379, 399, 400, 401, 403, 309, 230, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 1253, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 285, 231, 0, 0, 341, 0,
	186, 0, 380, 219, 294, 292, 409, 245, 237, 233,
	218, 269, 300, 339, 398, 333, 0, 289, 0, 0,
	389, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 217, 185,
	324, 390, 249, 0, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	215, 0, 0, 0, 0, 229, 273, 236, 228, 406,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 313, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 181, 197, 0,
	0, 323, 362, 369, 0, 0, 0, 220, 0, 366,
	337, 423, 204, 247, 359, 342, 364, 0, 0, 365,
	290, 411, 354, 421, 439, 440, 227, 317, 429, 402,
	435, 450, 198, 224, 331, 395, 426, 386, 310, 407,
	408, 280, 385, 255, 184, 288, 447, 196, 375, 212,
	189, 397, 419, 209, 378, 0, 0, 452, 191, 417,
	394, 307, 277, 278, 190, 0, 358, 232, 253, 222,
	326, 414, 415, 221, 453, 200, 434, 193, 0, 433,
	319, 410, 418, 308, 299, 192, 416, 306, 298, 283,
	243, 264, 352, 293, 353, 265, 315, 314, 316, 0,
	187, 0, 391, 427, 454, 205, 206, 207, 0, 242,
	246, 252, 254, 260, 261, 268, 286, 330, 351, 349,
	355, 0, 405, 422, 430, 437, 443, 444, 448, 368,
	445, 446, 449, 318, 267, 387, 282, 291, 0, 0,
	336, 367, 210, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 194, 287, 0, 356,
	250, 451, 432, 428, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	183, 195, 203, 213, 225, 240, 248, 258, 263, 266,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 259, 420, 442, 0, 295,
	0, 0, 297, 244, 262, 272, 0, 431, 393, 199,
	363, 251, 188, 216, 202, 223, 238, 241, 276, 305,
	311, 340, 343, 256, 235, 214, 360, 211, 379, 399,
	400, 401, 403, 309, 230, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 1249,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 285, 231, 0, 0, 341, 0, 186, 0, 380,
	219, 294, 292, 409, 245, 237, 233, 218, 269, 300,
	339, 398, 333, 0, 289, 0, 0, 389, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 217, 185, 324, 390, 249,
	0, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 215, 0, 0,
	0, 0, 229, 273, 236, 228, 406, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 313, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 181, 197, 0, 0, 323, 362,
	369, 0, 0, 0, 220, 0, 366, 337, 423, 204,
	247, 359, 342, 364, 0, 0, 365, 290, 411, 354,
	421, 439, 440, 227, 317, 429, 402, 435, 450, 198,
	224, 331, 395, 426, 386, 310, 407, 408, 280, 385,
	255, 184, 288, 447, 196, 375, 212, 189, 397, 419,
	209, 378, 0, 0, 452, 191, 417, 394, 307, 277,
	278, 190, 0, 358, 232, 253, 222, 326, 414, 415,
	221, 453, 200, 434, 193, 0, 433, 319, 410, 418,
	308, 299, 192, 416, 306, 298, 283, 243, 264, 352,
	293, 353, 265, 315, 314, 316, 0, 187, 0, 391,
	427, 454, 205, 206, 207, 0, 242, 246, 252, 254,
	260, 261, 268, 286, 330, 351, 349, 355, 0, 405,
	422, 430, 437, 443, 444, 448, 368, 445, 446, 449,
	318, 267, 387, 282, 291, 0, 0, 336, 367, 210,
	425, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 194, 287, 0, 356, 250, 451, 432,
	428, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 183, 195, 203,
	213, 225, 240, 248, 258, 263, 266, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 370, 371, 372, 373, 374, 376,
	377, 381, 382, 383, 384, 392, 396, 412, 413, 424,
	436, 441, 259, 420, 442, 0, 295, 0, 0, 297,
	244, 262, 272, 0, 431, 393, 199, 363, 251, 188,
	216, 202, 223, 238, 241, 276, 305, 311, 340, 343,
	256, 235, 214, 360, 211, 379, 399, 400, 401, 403,
	309, 230, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 1247, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 285, 231,
	0, 0, 341, 0, 186, 0, 380, 219, 294, 292,
	409, 245, 237, 233, 218, 269, 300, 339, 398, 333,
	0, 289, 0, 0, 389, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 217, 185, 324, 390, 249, 0, 0, 0,
	0, 177, 178, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 215, 0, 0, 0, 0, 229,
	273, 236, 228, 406, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 313, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 181, 197, 0, 0, 323, 362, 369, 0, 0,
	0, 220, 0, 366, 337, 423, 204, 247, 359, 342,
	364, 0, 0, 365, 290, 411, 354, 421, 439, 440,
	227, 317, 429, 402, 435, 450, 198, 224, 331, 395,
	426, 386, 310, 407, 408, 280, 385, 255, 184, 288,
	447, 196, 375, 212, 189, 397, 419, 209, 378, 0,
	0, 452, 191, 417, 394, 307, 277, 278, 190, 0,
	358, 232, 253, 222, 326, 414, 415, 221, 453, 200,
	434, 193, 0, 433, 319, 410, 418, 308, 299, 192,
	416, 306, 298, 283, 243, 264, 352, 293, 353, 265,
	315, 314, 316, 0, 187, 0, 391, 427, 454, 205,
	206, 207, 0, 242, 246, 252, 254, 260, 261, 268,
	286, 330, 351, 349, 355, 0, 405, 422, 430, 437,
	443, 444, 448, 368, 445, 446, 449, 318, 267, 387,
	282, 291, 0, 0, 336, 367, 210, 425, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	194, 287, 0, 356, 250, 451, 432, 428, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 183, 195, 203, 213, 225, 240,
	248, 258, 263, 266, 270, 271, 274, 279, 296, 301,
	302, 303, 304, 320, 321, 322, 325, 328, 329, 332,
	334, 335, 338, 344, 345, 346, 347, 348, 350, 357,
	361, 370, 371, 372, 373, 374, 376, 377, 381, 382,
	383, 384, 392, 396, 412, 413, 424, 436, 441, 259,
	420, 442, 0, 295, 0, 0, 297, 244, 262, 272,
	0, 431, 393, 199, 363, 251, 188, 216, 202, 223,
	238, 241, 276, 305, 311, 340, 343, 256, 235, 214,
	360, 211, 379, 399, 400, 401, 403, 309, 230, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 1245, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 285, 231, 0, 0, 341,
	0, 186, 0, 380, 219, 294, 292, 409, 245, 237,
	233, 218, 269, 300, 339, 398, 333, 0, 289, 0,
	0, 389, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 217,
	185, 324, 390, 249, 0, 0, 0, 0, 177, 178,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 215, 0, 0, 0, 0, 229, 273, 236, 228,
	406, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 313, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 181, 197,
	0, 0, 323, 362, 369, 0, 0, 0, 220, 0,
	366, 337, 423, 204, 247, 359, 342, 364, 0, 0,
	365, 290, 411, 354, 421, 439, 440, 227, 317, 429,
	402, 435, 450, 198, 224, 331, 395, 426, 386, 310,
	407, 408, 280, 385, 255, 184, 288, 447, 196, 375,
	212, 189, 397, 419, 209, 378, 0, 0, 452, 191,
	417, 394, 307, 277, 278, 190, 0, 358, 232, 253,
	222, 326, 414, 415, 221, 453, 200, 434, 193, 0,
	433, 319, 410, 418, 308, 299, 192, 416, 306, 298,
	283, 243, 264, 352, 293, 353, 265, 315, 314, 316,
	0, 187, 0, 391, 427, 454, 205, 206, 207, 0,
	242, 246, 252, 254, 260, 261, 268, 286, 330, 351,
	349, 355, 0, 405, 422, 430, 437, 443, 444, 448,
	368, 445, 446, 449, 318, 267, 387, 282, 291, 0,
	0, 336, 367, 210, 425, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 194, 287, 0,
	356, 250, 451, 432, 428, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 183, 195, 203, 213, 225, 240, 248, 258, 263,
	266, 270, 271, 274, 279, 296, 301, 302, 303, 304,
	320, 321, 322, 325, 328, 329, 332, 334, 335, 338,
	344, 345, 346, 347, 348, 350, 357, 361, 370, 371,
	372, 373, 374, 376, 377, 381, 382, 383, 384, 392,
	396, 412, 413, 424, 436, 441, 259, 420, 442, 0,
	295, 0, 0, 297, 244, 262, 272, 0, 431, 393,
	199, 363, 251, 188, 216, 202, 223, 238, 241, 276,
	305, 311, 340, 343, 256, 235, 214, 360, 211, 379,
	399, 400, 401, 403, 309, 230, 404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 285, 231, 0, 0, 341, 0, 186, 0,
	380, 219, 294, 292, 409, 245, 237, 233, 218, 269,
	300, 339, 398, 333, 0, 289, 0, 0, 389, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 217, 185, 324, 390,
	249, 0, 1220, 0, 0, 177, 178, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 215, 0,
	0, 0, 0, 229, 273, 236, 228, 406, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 313,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 181, 197, 0, 0, 323,
	362, 369, 0, 0, 0, 220, 0, 366, 337, 423,
	204, 247, 359, 342, 364, 0, 0, 365, 290, 411,
	354, 421, 439, 440, 227, 317, 429, 402, 435, 450,
	198, 224, 331, 395, 426, 386, 310, 407, 408, 280,
	385, 255, 184, 288, 447, 196, 375, 212, 189, 397,
	419, 209, 378, 0, 0, 452, 191, 417, 394, 307,
	277, 278, 190, 0, 358, 232, 253, 222, 326, 414,
	415, 221, 453, 200, 434, 193, 0, 433, 319, 410,
	418, 308, 299, 192, 416, 306, 298, 283, 243, 264,
	352, 293, 353, 265, 315, 314, 316, 0, 187, 0,
	391, 427, 454, 205, 206, 207, 0, 242, 246, 252,
	254, 260, 261, 268, 286, 330, 351, 349, 355, 0,
	405, 422, 430, 437, 443, 444, 448, 368, 445, 446,
	449, 318, 267, 387, 282, 291, 0, 0, 336, 367,
	210, 425, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 194, 287, 0, 356, 250, 451,
	432, 428, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 183, 195,
	203, 213, 225, 240, 248, 258, 263, 266, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 370, 371, 372, 373, 374,
	376, 377, 381, 382, 383, 384, 392, 396, 412, 413,
	424, 436, 441, 259, 420, 442, 0, 295, 0, 0,
	297, 244, 262, 272, 0, 431, 393, 199, 363, 251,
	188, 216, 202, 223, 238, 241, 276, 305, 311, 340,
	343, 256, 235, 214, 360, 211, 379, 399, 400, 401,
	403, 309, 230, 404, 0, 0, 0, 0, 1121, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 285,
	231, 0, 0, 341, 0, 186, 0, 380, 219, 294,
	292, 409, 245, 237, 233, 218, 269, 300, 339, 398,
	333, 0, 289, 0, 0, 389, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 217, 185, 324, 390, 249, 0, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 215, 0, 0, 0, 0,
	229, 273, 236, 228, 406, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 313, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 181, 197, 0, 0, 323, 362, 369, 0,
	0, 0, 220, 0, 366, 337, 423, 204, 247, 359,
	342, 364, 0, 0, 365, 290, 411, 354, 421, 439,
	440, 227, 317, 429, 402, 435, 450, 198, 224, 331,
	395, 426, 386, 310, 407, 408, 280, 385, 255, 184,
	288, 447, 196, 375, 212, 189, 397, 419, 209, 378,
	0, 0, 452, 191, 417, 394, 307, 277, 278, 190,
	0, 358, 232, 253, 222, 326, 414, 415, 221, 453,
	200, 434, 193, 0, 433, 319, 410, 418, 308, 299,
	192, 416, 306, 298, 283, 243, 264, 352, 293, 353,
	265, 315, 314, 316, 0, 187, 0, 391, 427, 454,
	205, 206, 207, 0, 242, 246, 252, 254, 260, 261,
	268, 286, 330, 351, 349, 355, 0, 405, 422, 430,
	437, 443, 444, 448, 368, 445, 446, 449, 318, 267,
	387, 282, 291, 0, 0, 336, 367, 210, 425, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 194, 287, 0, 356, 250, 451, 432, 428, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 183, 195, 203, 213, 225,
	240, 248, 258, 263, 266, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 370, 371, 372, 373, 374, 376, 377, 381,
	382, 383, 384, 392, 396, 412, 413, 424, 436, 441,
	259, 420, 442, 0, 295, 0, 0, 297, 244, 262,
	272, 0, 431, 393, 199, 363, 251, 188, 216, 202,
	223, 238, 241, 276, 305, 311, 340, 343, 256, 235,
	214, 360, 211, 379, 399, 400, 401, 403, 309, 230,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	1112, 234, 0, 0, 0, 0, 285, 231, 0, 0,
	341, 0, 186, 0, 380, 219, 294, 292, 409, 245,
	237, 233, 218, 269, 300, 339, 398, 333, 0, 289,
	0, 0, 389, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	217, 185, 324, 390, 249, 0, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 215, 0, 0, 0, 0, 229, 273, 236,
	228, 406, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 313, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 181,
	197, 0, 0, 323, 362, 369, 0, 0, 0, 220,
	0, 366, 337, 423, 204, 247, 359, 342, 364, 0,
	0, 365, 290, 411, 354, 421, 439, 440, 227, 317,
	429, 402, 435, 450, 198, 224, 331, 395, 426, 386,
	310, 407, 408, 280, 385, 255, 184, 288, 447, 196,
	375, 212, 189, 397, 419, 209, 378, 0, 0, 452,
	191, 417, 394, 307, 277, 278, 190, 0, 358, 232,
	253, 222, 326, 414, 415, 221, 453, 200, 434, 193,
	0, 433, 319, 410, 418, 308, 299, 192, 416, 306,
	298, 283, 243, 264, 352, 293, 353, 265, 315, 314,
	316, 0, 187, 0, 391, 427, 454, 205, 206, 207,
	0, 242, 246, 252, 254, 260, 261, 268, 286, 330,
	351, 349, 355, 0, 405, 422, 430, 437, 443, 444,
	448, 368, 445, 446, 449, 318, 267, 387, 282, 291,
	0, 0, 336, 367, 210, 425, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 194, 287,
	0, 356, 250, 451, 432, 428, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 183, 195, 203, 213, 225, 240, 248, 258,
	263, 266, 270, 271, 274, 279, 296, 301, 302, 303,
	304, 320, 321, 322, 325, 328, 329, 332, 334, 335,
	338, 344, 345, 346, 347, 348, 350, 357, 361, 370,
	371, 372, 373, 374, 376, 377, 381, 382, 383, 384,
	392, 396, 412, 413, 424, 436, 441, 259, 420, 442,
	0, 295, 0, 0, 297, 244, 262, 272, 0, 431,
	393, 199, 363, 251, 188, 216, 202, 223, 238, 241,
	276, 305, 311, 340, 343, 256, 235, 214, 360, 211,
	379, 399, 400, 401, 403, 309, 230, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 285, 231, 0, 0, 341, 0, 186,
	0, 380, 219, 294, 292, 409, 245, 237, 233, 218,
	269, 300, 339, 398, 333, 0, 289, 0, 0, 389,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 217, 185, 324,
	390, 249, 0, 0, 0, 0, 177, 178, 179, 0,
	957, 0, 0, 0, 0, 0, 0, 208, 0, 215,
	0, 0, 0, 0, 229, 273, 236, 228, 406, 0,
	0, 0, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	313, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 281, 181, 197, 0, 0,
	323, 362, 369, 0, 0, 0, 220, 0, 366, 337,
	423, 204, 247, 359, 342, 364, 0, 0, 365, 290,
	411, 354, 421, 439, 440, 227, 317, 429, 402, 435,
	450, 198, 224, 331, 395, 426, 386, 310, 407, 408,
	280, 385, 255, 184, 288, 447, 196, 375, 212, 189,
	397, 419, 209, 378, 0, 0, 452, 191, 417, 394,
	307, 277, 278, 190, 0, 358, 232, 253, 222, 326,
	414, 415, 221, 453, 200, 434, 193, 0, 433, 319,
	410, 418, 308, 299, 192, 416, 306, 298, 283, 243,
	264, 352, 293, 353, 265, 315, 314, 316, 0, 187,
	0, 391, 427, 454, 205, 206, 207, 0, 242, 246,
	252, 254, 260, 261, 268, 286, 330, 351, 349, 355,
	0, 405, 422, 430, 437, 443, 444, 448, 368, 445,
	446, 449, 318, 267, 387, 282, 291, 0, 0, 336,
	367, 210, 425, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 194, 287, 0, 356, 250,
	451, 432, 428, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 183,
	195, 203, 213, 225, 240, 248, 258, 263, 266, 270,
	271, 274, 279, 296, 301, 302, 303, 304, 320, 321,
	322, 325, 328, 329, 332, 334, 335, 338, 344, 345,
	346, 347, 348, 350, 357, 361, 370, 371, 372, 373,
	374, 376, 377, 381, 382, 383, 384, 392, 396, 412,
	413, 424, 436, 441, 259, 420, 442, 0, 295, 0,
	0, 297, 244, 262, 272, 0, 431, 393, 199, 363,
	251, 188, 216, 202, 223, 238, 241, 276, 305, 311,
	340, 343, 256, 235, 214, 360, 211, 379, 399, 400,
	401, 403, 309, 230, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	285, 231, 0, 0, 341, 0, 186, 0, 380, 219,
	294, 292, 409, 245, 237, 233, 218, 269, 300, 339,
	398, 333, 0, 289, 0, 0, 389, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 217, 185, 324, 390, 249, 0,
	0, 0, 0, 177, 178, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 215, 0, 0, 0,
	0, 229, 273, 236, 228, 406, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 0, 257, 0, 313, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 181, 197, 0, 0, 323, 362, 369,
	0, 0, 0, 220, 0, 366, 337, 423, 204, 247,
	359, 342, 364, 0, 0, 365, 290, 411, 354, 421,
	439, 440, 227, 317, 429, 402, 435, 450, 198, 224,
	331, 395, 426, 386, 310, 407, 408, 280, 385, 255,
	184, 288, 447, 196, 375, 212, 189, 397, 419, 209,
	378, 0, 0, 452, 191, 417, 394, 307, 277, 278,
	190, 0, 358, 232, 253, 222, 326, 414, 415, 221,
	453, 200, 434, 193, 0, 433, 319, 410, 418, 308,
	299, 192, 416, 306, 298, 283, 243, 264, 352, 293,
	353, 265, 315, 314, 316, 0, 187, 0, 391, 427,
	454, 205, 206, 207, 0, 242, 246, 252, 254, 260,
	261, 268, 286, 330, 351, 349, 355, 0, 405, 422,
	430, 437, 443, 444, 448, 368, 445, 446, 449, 318,
	267, 387, 282, 291, 0, 0, 336, 367, 210, 425,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 194, 287, 0, 356, 250, 451, 432, 428,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 183, 195, 203, 213,
	225, 240, 248, 258, 263, 266, 270, 271, 274, 279,
	296, 301, 302, 303, 304, 320, 321, 322, 325, 328,
	329, 332, 334, 335, 338, 344, 345, 346, 347, 348,
	350, 357, 361, 370, 371, 372, 373, 374, 376, 377,
	381, 382, 383, 384, 392, 396, 412, 413, 424, 436,
	441, 509, 420, 442, 0, 295, 0, 0, 297, 244,
	262, 272, 0, 431, 393, 199, 363, 251, 188, 216,
	202, 223, 238, 241, 276, 305, 311, 340, 343, 256,
	235, 214, 360, 211, 379, 399, 400, 401, 403, 309,
	230, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 285, 231, 0,
	0, 341, 0, 186, 0, 380, 219, 294, 292, 409,
	245, 237, 233, 218, 269, 300, 339, 398, 333, 0,
	289, 0, 0, 389, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 217, 185, 324, 390, 249, 0, 0, 0, 0,
	177, 178, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 215, 0, 0, 0, 0, 229, 273,
	236, 228, 406, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 313, 0, 0, 457, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 281,
	181, 197, 0, 0, 323, 362, 369, 0, 0, 0,
	220, 0, 366, 337, 423, 204, 247, 359, 342, 364,
	0, 0, 365, 290, 411, 354, 421, 439, 440, 227,
	317, 429, 402, 435, 450, 198, 224, 331, 395, 426,
	386, 310, 407, 408, 280, 385, 255, 184, 288, 447,
	196, 375, 212, 189, 397, 419, 209, 378, 0, 0,
	452, 191, 417, 394, 307, 277, 278, 190, 0, 358,
	232, 253, 222, 326, 414, 415, 221, 453, 200, 434,
	193, 0, 433, 319, 410, 418, 308, 299, 192, 416,
	306, 298, 283, 243, 264, 352, 293, 353, 265, 315,
	314, 316, 0, 187, 0, 391, 427, 454, 205, 206,
	207, 0, 242, 246, 252, 254, 260, 261, 268, 286,
	330, 351, 349, 355, 0, 405, 422, 430, 437, 443,
	444, 448, 368, 445, 446, 449, 318, 267, 387, 282,
	291, 0, 0, 336, 367, 210, 425, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 194,
	287, 0, 356, 250, 451, 432, 428, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 183, 195, 203, 213, 225, 240, 248,
	258, 263, 266, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	370, 371, 372, 373, 374, 376, 377, 381, 382, 383,
	384, 392, 396, 412, 413, 424, 436, 441, 259, 420,
	442, 0, 295, 0, 0, 297, 244, 262, 272, 0,
	431, 393, 199, 363, 251, 188, 216, 202, 223, 238,
	241, 276, 305, 311, 340, 343, 256, 235, 214, 360,
	211, 379, 399, 400, 401, 403, 309, 230, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 285, 231, 0, 0, 341, 0,
	186, 0, 380, 219, 294, 292, 409, 245, 237, 233,
	218, 269, 300, 339, 398, 333, 0, 289, 0, 0,
	389, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 217, 185,
	324, 390, 249, 0, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	215, 0, 0, 0, 0, 229, 273, 236, 228, 406,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 313, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 181, 197, 0,
	0, 323, 362, 369, 0, 0, 0, 220, 0, 366,
	337, 423, 204, 247, 359, 342, 364, 0, 0, 365,
	290, 411, 354, 421, 439, 440, 227, 317, 429, 402,
	435, 450, 198, 224, 331, 395, 426, 386, 310, 407,
	408, 280, 385, 255, 184, 288, 447, 196, 375, 212,
	189, 397, 419, 209, 378, 0, 0, 452, 191, 417,
	394, 307, 277, 278, 190, 0, 358, 232, 253, 222,
	326, 414, 415, 221, 453, 200, 434, 193, 0, 433,
	319, 410, 418, 308, 299, 192, 416, 306, 298, 283,
	243, 264, 352, 293, 353, 265, 315, 314, 316, 0,
	187, 0, 391, 427, 454, 205, 206, 207, 0, 242,
	246, 252, 254, 260, 261, 268, 286, 330, 351, 349,
	355, 0, 405, 422, 430, 437, 443, 444, 448, 368,
	445, 446, 449, 318, 267, 387, 282, 291, 0, 0,
	336, 367, 210, 425, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 194, 287, 0, 356,
	250, 451, 432, 428, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	183, 195, 203, 213, 225, 240, 248, 258, 263, 266,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 370, 371, 372,
	373, 374, 376, 377, 381, 382, 383, 384, 392, 396,
	412, 413, 424, 436, 441, 259, 420, 442, 0, 295,
	0, 0, 297, 244, 262, 272, 0, 431, 393, 199,
	363, 251, 188, 216, 202, 223, 238, 241, 276, 305,
	311, 340, 343, 256, 235, 214, 360, 211, 379, 399,
	400, 401, 403, 309, 230,
}

var yyPact = [...]int{
	3665, -1000, -328, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1632, 1673, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 687, 1394, -1000, 1640, 2418, -1000, 29591, 464,
	-1000, 29114, 460, 3211, 29591, -1000, 114, -1000, 103, 29591,
	106, 28637, -1000, -1000, -257, 13371, 1593, 7, 2, 29591,
	-1000, 1733, -1000, 1334, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1648, 1636, 1767, 564, 1588, -1000, 1681,
	1430, -1000, 13371, 1722, 1682, 11462, -1000, 11462, 371, 371,
	371, 9554, -1000, -1000, 17188, 29591, 29591, 237, -1000, 1640,
	-1000, -1000, 256, -1000, 280, 1332, -1000, 1331, -1000, 348,
	399, 276, 352, 333, 275, 264, 263, 261, 260, 250,
	248, 247, 284, -1000, 607, 607, -146, -149, 2289, 345,
	345, 345, 389, 1609, 1607, -1000, 552, -1000, 607, 607,
	228, 607, 607, 607, 607, 217, 216, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 189, 1640, 200, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 29591, 98, 29591, -1000, 518,
	29591, 711, 711, 16, 711, 711, 711, 711, 119, 530,
	-4, -1000, 116, 172, 101, 198, 720, 124, 102, -1000,
	-1000, 193, 720, 1055, -1000, 95, -1000, 711, 7638, 7638,
	7638, -1000, 1620, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 388, -1000, -1000, -1000, -1000, 29591, 28160, 305, 646,
	-1000, -1000, -1000, 21, -1000, -1000, 1153, 620, -1000, 13371,
	2400, 1343, 1343, -1000, -1000, 521, -1000, -1000, 14802, 14802,
	14802, 14802, 14802, 14802, 14802, 14802, 14802, 14802, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1343, 514, -1000, -1000, 1343, 1343, 1343, 1343,
	1343, 1343, 1343, 1343, 13371, 1343, 1343, 1343, 1343, 1343,
	1343, 1343, 1343, 1343, 1343, 1343, 1343, 1343, 1343, 1343,
	1343, 1343, -1000, -1000, 12894, -1000, 29591, -1000, 1343, 121,
	1681, 1430, -1000, 1721, 1195, 1150, 1088, -1000, -1000, -1000,
	1516, 1053, 1050, -1000, -1000, -1000, -1000, -1000, 1334, 734,
	13371, -1000, -1000, 1762, -1000, 15756, 512, 803, 1760, 27683,
	-1000, 21005, 27206, 1327, 9075, -29, -1000, -1000, -1000, 645,
	19574, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1620, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1329, 29591, -1000, -1000, 4252,
	1028, -1000, 1393, -1000, 1325, -1000, 1355, 1344, 459, 1028,
	441, 440, 439, -1000, -81, -1000, -1000, -1000, -1000, -1000,
	607, 607, 282, 2418, 4102, -1000, -1000, -1000, 26729, 1391,
	1028, -1000, 1383, -1000, 752, 404, 471, 471, 1028, -1000,
	-1000, 29591, 1028, 744, 732, 29591, 29591, -1000, 26252, -1000,
	25775, 25298, 972, 29591, 24821, 24344, 23867, 23390, 22913, -1000,
	1458, -1000, 1392, -1000, -1000, -1000, 29591, 29591, 29591, 226,
	-1000, -1000, 29591, 1028, -1000, -1000, 971, 968, 607, 607,
	955, 1049, 1047, 1044, 607, 607, 954, 1042, 21482, 232,
	934, 931, 897, 1014, 1040, 135, 978, 974, 896, 29591,
	1381, 29591, -1000, 167, 598, 277, 637, 1640, 1582, 1322,
	381, 456, 1028, 356, 356, -1000, 8117, -1000, -1000, 1039,
	13371, -1000, 721, 720, 720, -1000, -1000, -1000, -1000, -1000,
	-1000, 711, 29591, 721, -1000, -1000, -1000, 720, 711, 29591,
	711, 711, 711, 711, 720, 720, 720, 711, 29591, 29591,
	29591, 29591, 29591, 29591, 29591, 29591, 29591, 7638, 7638, 7638,
	590, 711, -265, -1000, 1474, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 104, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -82, 1320, 22436, -1000, -266, -268, -269,
	-270, -1000, -1000, -1000, -275, -291, -1000, -1000, -1000, 13371,
	13371, 13371, 13371, 909, 593, 14802, 957, 658, 14802, 14802,
	14802, 14802, 14802, 14802, 14802, 14802, 14802, 14802, 14802, 14802,
	14802, 14802, 14802, 599, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1028, -1000, 1287, 1287, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 5083, 10031, 8117, 11462, 11462,
	13371, 13371, 12416, 11939, 11462, 1619, 668, 620, 29591, -1000,
	1088, -1000, -1000, 14325, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 29591, 29591, 11462, 11462,
	11462, 11462, 11462, 1220, 1164, 1316, -1000, 1318, -1000, -148,
	16711, 13371, 1037, -1000, -1000, -1000, 1520, 11462, -1000, -1000,
	1662, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1141,
	-1000, 1514, 1036, 226, -1000, 1662, 1220, 13371, 13371, 1314,
	-1000, 851, 29591, -1000, -1000, 21959, -1000, -1000, 7159, -1000,
	29591, 245, 29591, -1000, 1339, 1486, -1000, -1000, -1000, 1671,
	18620, 29591, 1321, 1319, -1000, -1000, 506, 8596, -29, -1000,
	8596, 1236, -1000, -26, -24, 10508, 532, -1000, -1000, -1000,
	2289, 15279, 1125, 1600, 39, -1000, -1000, -1000, 1355, -1000,
	1355, 1355, 1355, 1355, 226, 226, 226, 226, -1000, -1000,
	-1000, -1000, -1000, 1380, 1379, -1000, 1355, 1355, 1355, 1355,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1378, 1378, 1378,
	1357, 1357, 332, -1000, 13371, 185, 29591, 1647, 881, 167,
	361, 1427, 1028, 1028, 1028, 361, -1000, 1022, 1003, -1000,
	1311, -1000, -1000, 1720, -1000, -1000, 587, 784, 780, 490,
	29591, 139, 243, -1000, 349, -1000, 29591, 1028, 718, 471,
	1028, -1000, 1028, -1000, -1000, -1000, -1000, 503, -1000, -1000,
	1028, 1306, -1000, 1233, 797, 779, 786, 777, 1306, -1000,
	-1000, -131, 1306, -1000, 1306, -1000, 1306, -1000, 1306, -1000,
	1306, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 610,
	29591, 139, 599, -1000, 376, -1000, -1000, 599, 599, -1000,
	-1000, -1000, -1000, 1035, 1034, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -324, 29591, -1000, 153, 628, 227, 296, 209,
	29591, 122, 1664, 201, 210, 29591, 29591, 356, 1471, 29591,
	1658, 29591, -1000, -1000, -1000, -1000, 620, 29591, -1000, -1000,
	711, 711, -1000, -1000, 29591, 711, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 711, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1033,
	-1000, -1000, 29591, 29591, -1000, -1000, -1000, -1000, -1000, 46,
	-36, 197, -1000, -1000, -1000, -1000, 1676, -1000, 620, 593,
	757, 694, -1000, -1000, 801, -1000, -1000, 2548, -1000, -1000,
	-1000, -1000, 957, 14802, 14802, 14802, 811, 2548, 2359, 834,
	1798, 536, 696, 696, 569, 569, 569, 569, 569, 640,
	640, -1000, -1000, -1000, -1000, 1088, -1000, -1000, -1000, 1088,
	11462, 11462, 1288, -1000, 1343, 501, -1000, 1222, 1222, 914,
	900, 664, 1756, 1222, 636, 1755, 1222, 1222, 11462, -1000,
	-1000, 741, -1000, 13371, 1088, -1000, 936, 1271, 1259, 1222,
	1088, 1088, 1222, 1222, 1088, -1000, 29591, -1000, -245, -1000,
	-62, 497, 1343, -1000, 21482, 1088, 1153, -1000, 19097, 1341,
	1662, -1000, -1000, -1000, -1000, 226, 27, 775, 620, 620,
	13371, -1000, -1000, -1000, -1000, -1000, -1000, 499, 1740, 1402,
	1343, -1000, 29591, 21005, 21005, 21005, 21005, 21005, -1000, 1498,
	1497, -1000, 1507, 1500, 1519, 29591, -1000, 1267, 1088, 1729,
	18620, 245, 1300, 21005, 29591, -1000, -1000, 21005, 29591, 6680,
	-1000, 1236, -29, -50, -1000, -1000, -1000, -1000, 620, -1000,
	963, -1000, 337, -1000, 347, -1000, -1000, -1000, -1000, 477,
	1669, 1598, 31, -1000, -1000, -1000, 226, 226, -1000, -1000,
	532, 532, 532, 532, 1030, 1030, -1000, -1000, -1000, -1000,
	-1000, 874, -1000, -1000, -1000, 870, -1000, -1000, 938, 1403,
	185, -1000, -1000, 607, 1027, 1602, 29591, -1000, -1000, 1113,
	153, 29591, 644, 1453, -1000, 1427, 1427, 1427, 29591, -1000,
	-1000, -1000, -1000, 279, 29591, 1265, -1000, 137, -1000, 1111,
	29591, -1000, 1251, 1377, 1028, 1028, -1000, -1000, 8117, -1000,
	29591, 1343, -1000, -1000, -1000, -1000, 409, 1633, 1629, 139,
	137, 532, 1028, -1000, -1000, -1000, -1000, -1000, -329, 1239,
	405, 143, 179, 29591, 29591, 29591, 29591, 29591, 487, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 204, 374, -1000, 29591,
	29591, 463, -1000, -1000, -1000, 720, -1000, -1000, 720, -1000,
	-1000, -1000, -1000, -1000, -1000, 1626, -41, -302, -1000, -299,
	-1000, -1000, -1000, -1000, 811, 2548, 2226, -1000, 14802, 14802,
	-1000, -1000, 1222, 1222, 11462, 11462, 8117, -1000, -1000, 298,
	599, 298, 14802, 14802, -1000, 14802, 14802, -1000, -116, 1309,
	652, -1000, 13371, 755, -1000, -1000, 14802, 14802, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 428, 427, 411,
	29591, -1000, -1000, 1708, -1000, 1548, 1547, 1752, 1740, -1000,
	21005, 1662, -240, -1000, 1579, 1580, -1000, -1000, -1000, -1000,
	6201, 1681, 13371, 1452, 29591, 1343, -1000, 16234, 29591, 1298,
	-1000, 624, 1486, 1435, 1448, 1472, -1000, -1000, -1000, -1000,
	1494, -1000, 1491, -1000, -1000, -1000, -1000, -1000, 1164, 1740,
	21005, 1231, -1000, 1231, -1000, 498, -1000, -1000, -1000, -56,
	-53, -1000, -1000, -1000, 2289, -1000, -1000, -1000, -1000, 798,
	14802, 1766, -1000, 1007, -1000, -1000, 705, 698, -1000, 29591,
	1375, -1000, -1000, -1000, 532, 532, -1000, -1000, -1000, -1000,
	1192, -1000, 1190, 1198, 1184, 87, -1000, 1293, 1618, 607,
	607, -1000, 817, -1000, 1028, -1000, -1000, 396, -1000, 1652,
	29591, 1446, 1445, 1441, -1000, 1719, 1181, -1000, 29591, -1000,
	-1000, 29591, -1000, 1527, 185, 29591, -1000, -1000, -1000, -1000,
	243, 29591, -1000, 1287, 137, -1000, -1000, -1000, -1000, -1000,
	-1000, 29591, 151, -1000, 1358, 977, -1000, 1043, -1000, -1000,
	-1000, -1000, 125, 225, -1000, 29591, 408, 1403, 29591, -1000,
	-1000, -1000, 711, 711, -1000, 1612, -1000, 1028, -1000, 14802,
	2548, 2548, -1000, -1000, -1000, 1088, -1000, 1088, 1355, 1355,
	-1000, 1355, 1357, -1000, 1355, 91, 1355, 81, 1088, 1088,
	2290, 2273, 1570, 1149, 1343, -88, -1000, 620, 13371, 1351,
	1307, 1343, 1343, 1343, 1139, 29591, -1000, -1000, -1000, -1000,
	1740, 1734, 1186, -1000, 27, 291, -1000, 1565, 1580, -1000,
	1716, 1573, 1713, -1000, -1000, -1000, 620, -1000, 1642, 1128,
	1146, -1000, -1000, 10985, 1155, 1524, 493, 1139, 1728, 29591,
	13371, -1000, -1000, 13371, 1348, -1000, 13371, -1000, -1000, -1000,
	-1000, 1728, 1231, -1000, -1000, 546, -1000, -1000, -1000, -1000,
	-1000, 2548, -49, -1000, -1000, -1000, 1347, 14802, -1000, -1000,
	226, 1006, 226, 815, -1000, 813, -1000, -1000, -189, -1000,
	-1000, 1389, 1455, -1000, -1000, 29591, -1000, -1000, 29591, 29591,
	29591, 29591, 29591, -1000, -1000, 238, -1000, 1134, 1130, -1000,
	-147, -1000, -1000, 1346, -1000, -1000, -1000, 1109, -1000, -134,
	1028, 29591, 29591, 29591, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2548, -1000, -1000, -1000, 259, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 14802, 14802, 14802, 14802, 14802,
	1681, 1005, 620, 14802, 14802, 18142, 20528, 20528, 17665, -1000,
	1734, 1735, 1709, 1557, 1564, 1564, 1565, -1000, 1704, 1689,
	-1000, 1002, 1688, 996, 695, -1000, 1343, -1000, 1382, 29591,
	1343, 29591, -1000, 1681, -1000, 620, 620, 29591, 620, 1681,
	-1000, -1000, 29591, 1218, 532, -1000, 532, 1107, 1097, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1346, -1000, -1000,
	-1000, 1181, -1000, 229, 313, -1000, 243, -1000, -153, -154,
	1667, 29591, -1000, -1000, 8117, -1000, -1000, 1345, 1411, -1000,
	-1000, -1000, 936, 936, 936, 936, 255, 1088, -1000, 936,
	936, 1095, -1000, -1000, -1000, 1095, 1095, 497, 1735, -1000,
	13371, 13371, 1555, 921, -1000, -1000, -1000, -1000, 983, 980,
	-1000, 939, -1000, 1765, -1000, 1343, -1000, 468, 1146, -1000,
	-1000, 1091, -1000, 1087, -1000, -1000, -1000, -1000, -1000, 1665,
	1343, -1000, -1000, -1000, -1000, 1334, 1082, 1169, -1000, 604,
	29591, 29591, -1000, -1000, -1000, -1000, 1088, 162, -138, -1000,
	-1000, -1000, 20051, -1000, -1000, -1000, -1000, -1000, 620, 1153,
	-1000, 822, -1000, -1000, -1000, -1000, -1000, 29591, 1146, 29591,
	-1000, 1440, 484, 1334, 13848, -132, -1000, 8117, 5722, 1062,
	-1000, -1000, 1513, -129, -143, -1000, -1000, -1000, -1000, 1136,
	-1000, 1404, -1000, 1744, -1000, -1000, -1000, 795, 937, -1000,
	-1000, -1000, -132, 936, 1088, -1000, -19, -1000, -1000, -1000,
	-1000, -1000, 1043, -1000, 1505, -1000, -1000, 1746, 454, 454,
	-1000, -1000, -1000, -1000, -1000, 331, -1000, -1000, -134, -136,
	-1000, -1000, -1000, 310, 933, -1000, 152, -1000, -139, -1000,
	-1000, -1000, -1000, -145, -1000,
}

var yyPgo = [...]int{
	0, 2046, 12, 57, 2045, 18, 138, 59, 2040, 2039,
	2038, 2037, 152, 150, 144, 2035, 2033, 2031, 2030, 2029,
	2028, 2027, 2025, 2024, 2015, 2014, 2013, 73, 140, 48,
	50, 142, 2010, 2007, 41, 2002, 2001, 2000, 151, 149,
	647, 1998, 148, 72, 1997, 1996, 1994, 1993, 1992, 1991,
	1990, 1989, 1987, 1986, 1984, 1983, 1982, 1981, 127, 1980,
	1979, 5, 1977, 44, 1974, 1973, 1970, 1969, 1967, 100,
	1966, 1965, 1964, 1559, 1961, 1958, 67, 222, 75, 65,
	1956, 1954, 63, 136, 1949, 77, 116, 1948, 1935, 118,
	61, 56, 1934, 115, 92, 1933, 53, 1932, 1928, 69,
	1926, 1925, 1923, 89, 1922, 1921, 3037, 1920, 88, 93,
	21, 34, 1919, 1918, 1917, 1916, 45, 162, 1915, 1914,
	33, 1911, 1910, 147, 1907, 98, 15, 1906, 6, 9,
	24, 1905, 120, 1904, 8, 43, 1903, 97, 1899, 1897,
	28, 16, 30, 1896, 36, 90, 114, 26, 110, 111,
	1895, 1894, 29, 40, 1893, 1892, 1891, 1890, 1888, 1887,
	39, 1885, 25, 1884, 143, 1882, 14, 23, 27, 91,
	80, 35, 7, 1881, 155, 1876, 38, 122, 79, 129,
	1875, 1874, 1873, 914, 170, 1867, 1864, 78, 1863, 99,
	113, 1861, 173, 1859, 1858, 76, 1337, 2625, 10, 126,
	1857, 1855, 2283, 74, 95, 37, 1854, 66, 1850, 1846,
	1843, 137, 128, 68, 910, 64, 1842, 1840, 1838, 1836,
	1834, 1833, 1832, 94, 31, 32, 119, 42, 1830, 1829,
	1825, 85, 51, 1824, 125, 124, 87, 109, 1823, 130,
	104, 71, 1822, 82, 1821, 1820, 1813, 1812, 58, 1809,
	1808, 1807, 1806, 121, 101, 84, 46, 1804, 47, 83,
	123, 117, 1803, 22, 141, 4, 1802, 1, 0, 1801,
	3, 132, 171, 134, 1800, 1796, 2, 1792, 17, 1791,
	1790, 96, 1789, 1788, 1787, 20, 19, 11, 1785, 1780,
	3499, 886, 135, 1779, 139,
}

//line sql.y:5414
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

var yyR1 = [...]int{
	0, 288, 289, 289, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 268, 268, 268, 271, 271,
	23, 53, 2, 2, 2, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 7, 7,
	7, 7, 7, 10, 11, 6, 6, 12, 12, 65,
	65, 13, 14, 14, 14, 14, 292, 292, 101, 101,
	99, 99, 100, 100, 169, 169, 15, 16, 16, 179,
	179, 178, 178, 178, 180, 180, 180, 180, 214, 214,
	17, 17, 17, 17, 17, 74, 74, 270, 270, 269,
	267, 267, 266, 266, 265, 25, 26, 35, 35, 35,
	35, 36, 37, 272, 272, 244, 41, 41, 40, 40,
	40, 40, 42, 42, 39, 39, 38, 38, 246, 246,
	233, 233, 245, 245, 245, 245, 245, 245, 245, 232,
	232, 88, 88, 150, 150, 150, 150, 150, 150, 150,
	150, 284, 284, 151, 151, 151, 151, 151, 151, 285,
	285, 285, 285, 216, 216, 216, 216, 219, 219, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 218, 218,
	218, 218, 218, 220, 220, 220, 220, 220, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 222, 222, 222, 222, 222, 222, 222,
	222, 231, 231, 223, 223, 226, 226, 227, 227, 227,
	228, 228, 228, 229, 229, 224, 224, 224, 224, 225,
	225, 225, 234, 258, 258, 257, 257, 255, 255, 255,
	255, 243, 243, 252, 252, 252, 252, 252, 242, 242,
	238, 238, 238, 239, 239, 240, 240, 237, 237, 241,
	241, 254, 254, 253, 235, 235, 236, 236, 260, 286,
	286, 286, 286, 287, 287, 261, 277, 278, 276, 276,
	276, 276, 276, 63, 63, 63, 191, 191, 191, 250,
	250, 249, 249, 249, 251, 251, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 186, 186, 186, 275, 275, 275,
	275, 275, 275, 274, 274, 274, 247, 247, 247, 273,
	273, 43, 43, 135, 135, 32, 32, 32, 32, 32,
	32, 31, 31, 31, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 33, 33, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 230, 230,
	230, 262, 262, 263, 263, 19, 24, 24, 20, 20,
	20, 20, 21, 21, 44, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 279, 279, 185, 185, 193, 193, 184,
	184, 207, 207, 207, 187, 187, 187, 188, 188, 283,
	283, 283, 46, 46, 48, 48, 49, 50, 50, 209,
	209, 210, 210, 51, 52, 64, 64, 64, 64, 64,
	64, 66, 66, 66, 9, 9, 9, 9, 60, 60,
	60, 8, 8, 47, 47, 54, 280, 280, 281, 282,
	282, 282, 282, 55, 57, 22, 22, 22, 22, 22,
	22, 81, 81, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 75, 75, 75, 70, 70,
	293, 58, 59, 59, 73, 73, 73, 67, 67, 67,
	72, 72, 72, 78, 78, 80, 80, 80, 80, 80,
	82, 82, 82, 82, 82, 82, 82, 77, 77, 79,
	79, 79, 79, 200, 200, 200, 199, 199, 90, 90,
	92, 91, 91, 93, 93, 94, 94, 94, 133, 109,
	109, 167, 167, 166, 166, 168, 168, 168, 168, 170,
	170, 95, 95, 95, 95, 96, 96, 97, 97, 98,
	98, 208, 208, 205, 205, 205, 204, 204, 102, 102,
	102, 104, 103, 103, 103, 103, 105, 105, 107, 107,
	106, 106, 108, 110, 110, 110, 110, 110, 111, 111,
	89, 89, 89, 89, 89, 89, 89, 89, 182, 182,
	113, 113, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 124, 124, 124, 124, 124, 124, 114, 114,
	114, 114, 114, 114, 114, 76, 76, 125, 125, 125,
	132, 126, 126, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 121, 121, 121,
	121, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 294, 294, 123, 122, 122, 122, 122, 122, 122,
	122, 71, 71, 71, 71, 71, 213, 213, 213, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 138, 138, 68, 68, 136, 136, 137, 139,
	139, 134, 134, 134, 116, 116, 116, 116, 116, 116,
	116, 116, 118, 118, 118, 140, 140, 141, 141, 142,
	142, 144, 143, 143, 145, 146, 146, 146, 147, 147,
	148, 148, 148, 34, 34, 34, 34, 34, 29, 29,
	29, 29, 30, 30, 30, 83, 83, 83, 83, 85,
	85, 84, 84, 61, 61, 62, 62, 62, 86, 86,
	87, 87, 87, 87, 164, 164, 149, 149, 149, 156,
	156, 156, 152, 152, 154, 154, 154, 155, 155, 155,
	153, 161, 161, 163, 163, 162, 162, 158, 158, 159,
	159, 160, 160, 160, 157, 157, 115, 115, 115, 115,
	115, 165, 165, 165, 165, 171, 171, 128, 128, 130,
	130, 129, 131, 172, 172, 176, 173, 173, 177, 177,
	177, 177, 177, 174, 174, 175, 175, 201, 201, 201,
	181, 181, 192, 192, 189, 189, 190, 190, 183, 183,
	194, 194, 194, 56, 127, 127, 259, 259, 256, 197,
	197, 198, 198, 202, 202, 206, 206, 203, 203, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 290, 291, 211, 212, 212, 212,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 3, 3, 4, 3, 2, 3, 7, 1,
	3, 3, 3, 3, 1, 2, 1, 1, 3, 2,
	3, 3, 2, 5, 7, 9, 8, 7, 8, 1,
	1, 9, 9, 8, 7, 7, 1, 1, 1, 3,
	1, 3, 1, 3, 0, 4, 3, 5, 4, 1,
	3, 3, 2, 2, 2, 2, 2, 1, 1, 1,
	2, 2, 6, 12, 2, 0, 2, 0, 2, 1,
	0, 2, 1, 3, 3, 6, 4, 7, 8, 8,
	8, 6, 3, 1, 1, 4, 0, 1, 1, 1,
	2, 2, 0, 1, 4, 4, 4, 4, 2, 4,
	1, 3, 1, 1, 3, 4, 3, 3, 3, 4,
	9, 0, 2, 0, 2, 3, 3, 4, 2, 3,
	2, 1, 1, 0, 2, 2, 3, 3, 2, 2,
	1, 2, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 4, 4,
	2, 2, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 2, 2, 2, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 7, 5,
	6, 6, 7, 0, 1, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 8, 8, 3, 3, 5, 7, 7,
	6, 5, 3, 2, 3, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 4, 2, 4, 5, 4,
	4, 4, 4, 4, 2, 3, 3, 5, 2, 3,
	3, 3, 3, 1, 1, 0, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 2, 1, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 3, 1, 1, 1, 3, 3, 3, 3,
	7, 0, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 5, 4, 5, 5, 0, 2,
	1, 3, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 1, 4, 5, 5,
	6, 4, 4, 6, 6, 6, 8, 8, 8, 8,
	9, 8, 5, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 8,
	8, 0, 2, 3, 4, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 0, 2, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -288, -1, -5, -10, -11, -12, -13, -14, -15,
	-16, -17, -18, -19, -20, -21, -44, -45, -46, -48,
	-49, -50, -51, -52, -8, -47, -22, -23, -53, -54,
	-55, -56, -57, -3, -2, -7, 7, 8, -65, 10,
	11, 30, -25, -35, 162, -36, -26, 163, -37, 165,
	164, 200, 166, 193, 72, 239, 240, 242, 243, 244,
	245, -66, 198, 199, 168, 34, 43, 31, 32, 35,
	171, -4, 6, -290, 9, 344, 195, 194, 26, -6,
	83, -289, 484, -164, -149, 20, 31, 27, -148, -144,
	-73, -149, 18, 16, 5, -58, -293, -58, -58, -58,
	-58, -58, -244, -246, 83, 135, 83, -58, -41, -40,
	-39, -38, -42, 29, -32, -33, -264, -31, -28, 167,
	164, 208, 104, 105, 200, 201, 202, 166, 184, 199,
	203, 198, 217, -27, 78, 31, 357, 360, -251, 163,
	169, 170, 345, 107, 106, 73, 165, -248, 289, 461,
	-42, 463, 97, 99, 462, 42, 174, 464, 465, 466,
	467, 183, 468, 469, 470, 471, 477, 478, 479, 480,
	108, 5, -58, -206, -202, -268, -196, 86, 87, 88,
	354, 186, 388, 389, 233, 78, 39, 289, 461, 239,
	253, 247, 274, 266, 355, 390, 236, 187, 221, 458,
	264, 113, 463, 391, 201, 294, 295, 296, 97, 242,
	331, 476, 238, 392, 474, 99, 462, 77, 49, 42,
	196, 262, 258, 464, 222, 393, 365, 215, 107, 104,
	483, 34, 256, 48, 28, 473, 106, 47, 465, 126,
	394, 466, 298, 279, 452, 46, 299, 202, 395, 81,
	359, 460, 300, 257, 301, 232, 472, 168, 396, 444,
	302, 303, 453, 397, 280, 284, 398, 323, 304, 50,
	399, 400, 454, 105, 401, 76, 467, 251, 252, 402,
	230, 185, 325, 278, 183, 33, 305, 356, 234, 56,
	209, 326, 44, 282, 43, 448, 403, 451, 277, 273,
	51, 404, 405, 406, 407, 468, 276, 250, 272, 482,
	227, 469, 60, 170, 286, 285, 287, 216, 322, 269,
	408, 409, 410, 190, 79, 411, 259, 19, 412, 413,
	306, 223, 414, 54, 415, 416, 329, 199, 417, 52,
	470, 37, 204, 471, 418, 419, 420, 421, 422, 308,
	423, 307, 281, 283, 211, 309, 358, 424, 255, 203,
	475, 425, 191, 459, 205, 208, 198, 330, 318, 192,
	426, 427, 428, 429, 430, 237, 431, 432, 243, 477,
	41, 433, 434, 435, 436, 231, 226, 324, 333, 59,
	80, 291, 437, 457, 249, 224, 438, 240, 53, 478,
	479, 480, 218, 481, 7, 311, 108, 228, 229, 45,
	270, 210, 439, 440, 260, 261, 275, 248, 271, 241,
	445, 212, 312, 200, 441, 332, 225, 292, 362, 217,
	313, 456, 361, 268, 265, 219, 442, 314, 175, 213,
	214, 443, 446, 315, 316, 319, 320, 235, 317, 321,
	220, 360, 246, 263, 293, 173, -58, 173, -106, -202,
	173, -174, 295, -193, 297, 310, 305, 315, 303, -185,
	306, 308, 211, -283, 323, 173, 312, 162, 153, 298,
	307, 316, 317, 235, 318, 321, 220, -279, -268, 466,
	481, 113, 267, 302, 300, 324, 448, 320, 319, -202,
	241, -209, 246, -197, -268, -196, 244, -106, -64, 444,
	166, -211, -211, -75, 448, 450, -126, -89, -112, 119,
	-117, 29, 24, -116, -113, -134, -131, -132, 153, 154,
	156, 155, 157, 142, 143, 150, 120, 158, -121, -119,
	-120, -122, 90, 89, 98, 91, 92, 93, 94, 100,
	101, 102, -197, -202, -129, -2, 66, 67, 345, 346,
	347, 348, 353, 349, 122, 55, 340, 334, 343, 342,
	341, 338, 339, 336, 337, 351, 352, 178, 335, 172,
	148, 344, -268, -196, -290, 42, 311, 311, -106, -58,
	-142, -73, -144, -58, -2, -3, -7, -149, -164, 10,
	137, 40, 48, -147, -148, -6, -2, 6, -290, -89,
	17, 21, 22, -79, 144, -89, -202, -59, -79, -183,
	177, -183, -183, -173, -214, 241, -177, 324, 323, -198,
	-175, -197, -195, -174, 322, 167, 363, 118, 23, 25,
	121, 153, 17, 122, 35, 169, 267, 184, 152, 180,
	345, 162, 70, 364, 336, 337, 334, 340, 347, 348,
	335, 297, 29, 11, 366, 26, 194, 22, 36, 146,
	164, 125, 197, 24, 195, 102, 369, 20, 73, 189,
	12, 182, 38, 14, 370, 371, 15, 178, 177, 137,
	174, 68, 9, 158, 27, 134, 64, 372, 115, 373,
	374, 375, 376, 66, 135, 18, 338, 339, 31, 449,
	377, 353, 206, 148, 71, 57, 450, 119, 378, 379,
	100, 380, 103, 74, 455, 116, 16, 69, 40, 381,
	207, 382, 179, 383, 327, 384, 136, 165, 344, 67,
	385, 172, 310, 6, 350, 30, 193, 181, 110, 65,
	386, 173, 124, 351, 352, 176, 101, 5, 114, 32,
	10, 72, 75, 341, 342, 343, 55, 109, 357, 123,
	13, 387, 328, 117, 113, -245, 135, -232, -236, -197,
	188, -261, 184, -106, -254, -253, -197, -74, -192, 174,
	182, 181, 114, -272, 116, 228, 335, 172, -38, -39,
	-174, 152, 205, 84, 84, -236, -235, -234, -273, 207,
	188, -260, -252, 180, 189, -242, 181, 182, -237, 174,
	115, -273, -237, 179, 189, 207, 207, 108, 207, 108,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 204,
	-243, 127, -243, 361, 361, -248, -273, -273, -273, 176,
	33, 33, -194, -237, 176, 23, -243, -243, -174, 152,
	-243, -243, -243, -243, 215, 215, -243, -243, -243, -243,
	-243, -243, -243, -243, -243, -243, -243, -243, -243, -243,
	-243, 173, -272, -83, 321, 235, 78, -40, 217, -24,
	-106, -192, 174, 175, -272, -106, 159, -106, -187, 135,
	13, -187, -184, 311, 309, 296, 301, -187, -187, -187,
	-187, 218, 294, -238, 174, 33, 185, 311, 218, 294,
	218, 219, 218, 219, 304, 314, 218, -207, 12, 137,
	335, 299, 303, 211, 173, 212, 175, 313, -268, 451,
	219, -207, 90, 311, 214, -187, -212, -290, -198, 267,
	-212, -212, 30, 176, -197, -60, -197, 90, -9, -5,
	-13, -12, -14, 127, -81, 311, -69, 153, 466, 452,
	453, 454, 451, 308, 459, 457, 455, 218, 456, 84,
	118, 116, 117, 134, -89, -114, 137, 119, 135, 136,
	121, 139, 138, 149, 142, 143, 144, 145, 146, 147,
	148, 140, 141, 152, 127, 128, 129, 130, 131, 132,
	133, -182, -290, -132, 160, 161, -117, -117, -117, -117,
	-117, -117, -117, -117, -117, -117, -290, 159, -290, -290,
	-290, -290, -290, -290, -290, -290, -138, -89, -290, -294,
	-290, -294, -123, -290, -294, -123, -294, -123, -294, -294,
	-123, -294, -123, -294, -294, -123, -290, -290, -290, -290,
	-290, -290, -290, -2, -3, -126, -211, -280, -281, -109,
	-106, -290, 235, -147, -6, -2, -67, -80, 61, 62,
	-82, 22, 36, 65, 63, 21, -291, 85, -291, -164,
	-291, 59, 41, 90, 90, -58, -2, 84, 19, -143,
	-145, -89, 12, -200, -199, 23, -197, 90, 159, 96,
	12, -107, 27, -106, -91, -93, -94, -95, -109, -133,
	-290, 12, -99, -100, -106, -108, -202, 84, 241, -177,
	-214, -179, -178, 325, 327, 127, -201, -197, 90, 29,
	85, 84, -106, -216, -219, -221, -220, -222, -217, -218,
	264, 265, 153, 268, 270, 271, 272, 273, 274, 275,
	276, 277, 278, 279, 30, 196, 260, 261, 262, 263,
	280, 281, 282, 283, 284, 285, 286, 287, 247, 266,
	355, 248, 249, 250, 251, 252, 253, 255, 256, 257,
	258, 259, -271, -268, 83, 85, 84, -223, 83, -83,
	173, -268, 174, 174, 174, -58, 344, -243, -243, 204,
	-31, -28, -264, 16, -27, -28, 167, 104, 105, 164,
	83, -232, 83, -241, -271, -268, 83, 115, 179, 114,
	-240, -237, -240, -241, -268, -134, -197, -202, -268, 115,
	115, -170, -197, -170, -170, 21, -170, 21, -170, 21,
	91, -197, -170, 21, -170, 21, -170, 21, -170, 21,
	-170, 21, 29, 76, 77, 29, 79, 80, 81, -134,
	-134, -232, -174, -106, -268, 91, 91, -243, -243, 91,
	90, 90, 90, -243, -243, 91, 90, -204, -202, 90,
	-274, 190, 232, 234, 91, 91, 91, 91, 29, 90,
	-275, 29, 473, 472, 474, 475, 476, 91, 29, 91,
	29, 91, -197, 83, -106, -86, 222, 162, 164, 167,
	74, 90, 236, 127, 42, 84, 176, 173, -268, -189,
	178, -189, -203, -202, -195, 90, -89, -239, 12, 137,
	-207, -207, -187, -106, -239, -207, -187, -106, -187, -187,
	-187, -187, -207, -207, -207, -187, -202, -202, -106, -106,
	-106, -106, -106, -106, -106, -212, -212, -212, -188, 135,
	-187, 451, 74, -210, 244, 278, 445, 446, 447, 84,
	357, -99, 451, 451, 451, 451, 451, 451, -89, -89,
	-89, -89, -124, 100, 119, 101, 102, -117, -125, -129,
	-132, 95, 137, 135, 136, 121, -117, -117, -117, -117,
	-117, -117, -117, -117, -117, -117, -117, -117, -117, -117,
	-117, -213, -268, 90, 153, -268, -116, -116, -197, -78,
	22, 36, -77, -79, -198, -203, -195, -77, -77, -89,
	-89, -134, 90, -77, -134, 90, -77, -77, -72, 22,
	36, -136, -137, 123, -134, -291, -117, -197, -197, -77,
	-78, -78, -77, -77, -164, -291, 84, -282, 327, 328,
	449, -205, 207, -204, 23, -127, -126, 90, 57, -77,
	-82, 61, 62, -291, 60, 90, -224, -174, -89, -89,
	84, -146, 25, 26, -106, -199, 144, -203, -106, -169,
	207, -106, 30, 84, -102, -104, -103, -105, 64, 68,
	70, 65, 66, 67, 71, -208, 23, -91, -3, -2,
	-290, -106, -99, -292, 84, 12, 75, -292, 84, 159,
	-177, -179, 84, 326, 328, 329, 74, 103, -89, -225,
	152, -250, -249, -248, -232, -234, -235, -236, 85, -150,
	-88, 38, -228, 292, 291, -223, -223, -223, -223, -223,
	-224, -224, -224, -224, 83, 83, -223, -223, -223, -223,
	-226, 83, -226, -226, -227, 83, -227, -261, -89, -258,
	-257, -255, -256, 183, 97, 357, 75, -253, -146, 91,
	-86, -190, 178, -259, -256, -268, -268, -268, -190, -268,
	90, -268, 90, 84, 17, -233, -232, -43, 232, -263,
	207, -260, -254, -241, 115, -240, -241, -241, 159, -268,
	84, 27, 108, 108, 108, 108, 357, 164, 30, -232,
	-43, -213, 176, -213, -213, 90, 90, -186, 481, -99,
	-85, 224, 127, 213, 213, 173, 173, 226, -106, 237,
	238, 236, 21, 225, 227, 229, 215, -106, -106, -189,
	74, -101, -106, 24, -202, -106, -187, -187, -106, -187,
	-187, 90, -106, -197, -69, 327, 357, 20, -70, 20,
	100, 101, 102, -125, -117, -117, -117, -76, 197, 118,
	-291, -291, -77, -77, 84, -290, 159, -291, -291, 84,
	75, 23, 12, 12, -291, 12, 12, -291, -291, -77,
	-139, -137, 125, -89, -291, -291, 84, 84, -291, -291,
	-291, -291, -291, -281, 448, 328, -110, 72, 177, 73,
	-290, -204, -291, -118, -197, 91, 94, -149, -90, -92,
	12, -82, -224, -153, -158, -184, -268, 90, 153, -145,
	159, -111, 13, -115, 30, 55, -5, -290, -290, -172,
	-176, -134, -93, -94, -94, -93, -94, 64, 64, 64,
	69, 64, 69, 64, -103, -202, -291, -291, -3, -169,
	75, -91, -106, -91, -108, -202, 144, -178, -180, 330,
	327, 333, -268, 90, 84, -248, -236, -287, 100, 119,
	29, 74, 289, 97, -285, -286, 179, 114, 115, 191,
	23, 39, -229, 293, -224, -224, -225, -225, -225, -225,
	-231, 90, -231, 91, 91, 85, -34, -29, -30, 31,
	78, -255, -243, 90, 37, -197, 85, -85, -106, 119,
	74, -259, -259, -259, -202, 16, -166, -197, 84, 85,
	-135, 233, 85, -197, 85, 83, -241, -241, -198, -197,
	-290, 173, 29, 29, -43, -135, -225, -268, 483, 482,
	85, 175, 231, -87, 340, 90, 86, -106, -106, -106,
	-106, -106, 167, 164, 216, 176, -99, -106, 84, -63,
	192, 187, -207, -207, 31, 327, 460, 458, -76, 118,
	-117, -117, -291, -291, -79, -78, -198, -215, 153, 264,
	196, 262, 258, 278, 269, 291, 260, 292, -213, -215,
	-117, -117, -117, -117, 354, -142, 126, -89, 124, -117,
	-117, 174, 174, 174, -170, -181, 20, 12, 55, 55,
	-90, -111, -91, -82, -156, 444, -161, 44, -159, -160,
	45, -157, 46, 54, 144, -147, -89, -171, 74, -172,
	-128, -130, -129, -290, -165, -291, -197, -170, -111, 84,
	127, -97, -96, 74, 75, -98, 74, -96, 64, 64,
	-291, -111, -91, -111, -111, 159, 327, 331, 332, -248,
	100, -117, 10, 90, 115, 115, -106, 83, -225, -225,
	85, 84, 85, 84, 85, 84, -191, 394, 119, -30,
	-29, -243, -243, 91, -268, 175, 24, -106, 74, 74,
	74, 17, 84, -232, -134, 55, -258, -166, -262, -263,
	-106, -116, -135, -106, -84, 222, 230, 83, 87, -270,
	75, 213, 289, 213, -106, -63, -34, -106, -187, -187,
	31, -268, -117, -291, -291, -223, -223, -223, -227, -223,
	252, -223, 252, -291, -291, 20, 20, 20, 20, -290,
	-68, 350, -89, 84, 84, -290, -290, -290, -291, -106,
	-111, -140, 14, -153, 49, 270, -163, -162, 53, 45,
	-160, 17, 47, 17, 28, -171, 84, -291, -291, 84,
	55, 159, -291, -142, -176, -89, -89, 83, -89, -142,
	-111, -120, 83, -117, -224, 90, -224, 91, 91, 394,
	29, 79, 80, 81, 29, 76, 77, -106, -106, -106,
	-106, -166, -197, 209, 85, -291, 84, -230, 357, 360,
	-167, 83, 85, -267, 357, -269, -268, -197, -197, -197,
	-224, -268, -117, -117, -117, -117, -117, -147, 90, -117,
	-117, -168, -291, -197, 179, -168, -168, -205, -140, -141,
	15, 17, -154, 51, -152, 50, -152, -162, 17, 17,
	90, 17, 90, 115, -130, 55, -5, -197, -128, -197,
	-147, -166, -147, -166, 85, -225, -225, 85, 85, -167,
	210, -286, -263, 361, 361, 23, -166, -266, -265, -198,
	83, 75, -291, -291, -291, -291, -71, 137, 357, -291,
	-291, -291, 84, -291, -291, -291, -110, -141, -89, -126,
	-155, 52, 74, 103, 90, 90, 90, 10, -128, 159,
	85, 85, -151, 23, -290, -5, 85, 84, 127, -166,
	-106, -291, 355, 71, 358, -197, 179, 74, 103, -172,
	-197, -277, -278, 74, -287, -284, 100, 119, 97, -285,
	109, 110, -5, -117, 206, -61, 357, -265, -247, -198,
	90, 91, 85, 60, 356, 359, -278, 74, 11, 10,
	100, 90, -61, -291, -291, -62, 221, 448, -270, 60,
	-276, 192, 187, 190, 30, -276, 184, -267, 357, 186,
	29, 100, 223, 358, 359,
}

var yyDef = [...]int{
	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 54, 56, 57, 590, 590, 590, 590,
	590, 590, 0, 0, 590, -2, -2, 590, 995, 0,
	590, 0, 0, -2, 523, 524, 0, 526, -2, 0,
	0, 535, 1415, 1415, 585, 0, 0, 0, 0, 0,
	590, 859, 590, 0, 69, 70, 541, 542, 543, 49,
	1413, 1, 3, 55, 59, 0, 0, 0, 46, 868,
	0, 62, 0, 0, 594, 0, 592, 0, 978, 978,
	978, 0, 100, 101, 0, 0, 0, -2, 104, -2,
	128, 129, 0, 133, 397, 358, 400, 356, 386, -2,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 251, 251, 0, 0, -2, 349,
	349, 349, 0, 0, 0, 383, 980, 304, 251, 251,
	0, 251, 251, 251, 251, 0, 0, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 885, 132, 996, 993, 994, 35, 36, 37,
	1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 0, 972, 0, 453, 680,
	0, 514, 514, 0, 514, 514, 514, 514, 0, 0,
	0, 465, 0, 0, 0, 0, 511, 0, 0, 484,
	486, 0, 511, 0, 494, 0, 498, 514, 1416, 1416,
	1416, 963, 0, 508, 506, 520, 521, 503, 504, 522,
	525, 0, 530, 533, 989, 990, 0, 548, 0, 1217,
	540, 553, 554, 0, 586, 587, 40, 731, 690, 0,
	696, 698, 0, 733, 734, 735, 736, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 763, 764,
	765, 766, 844, 845, 846, 847, 848, 849, 850, 851,
	700, 701, 841, 0, 952, 730, 0, 0, 0, 0,
	0, 0, 0, 0, 832, 0, 801, 801, 801, 801,
	801, 801, 801, 801, 801, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 1415, 0, 563, 0, 0,
	868, 0, 860, -2, 0, 0, 0, 61, 60, 904,
	0, 0, 0, 47, 869, 51, 53, 590, 0, 870,
	0, 595, 596, 0, 619, 623, 0, 591, 0, 0,
	979, 0, 0, 86, 0, 1377, 956, -2, -2, 0,
	0, 991, 992, 965, -2, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
	1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073,
	1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
	1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093,
	1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103,
	1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113,
	1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123,
	1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133,
	1134, 1135, 1136, 1137, -2, 0, 0, 142, 143, 0,
	38, 277, 0, 138, 0, 271, 223, 885, 0, 0,
	0, 0, 0, 590, 0, 973, 123, 124, 130, 131,
	251, 251, 0, 132, 132, 365, 366, 367, 0, 0,
	-2, 275, 0, 350, 0, 0, 265, 265, 269, 267,
	268, 0, 0, 0, 0, 0, 0, 377, 0, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 437,
	0, 252, 0, 395, 396, 305, 0, 0, 0, 0,
	375, 376, 0, 0, 981, 982, 0, 0, 251, 251,
	0, 0, 0, 0, 251, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 898, 0, 0, 0, -2, 0, 445,
	0, 0, 0, 974, 974, 452, 0, 454, 455, 0,
	0, 456, 0, 511, 511, 509, 510, 458, 459, 460,
	461, 514, 0, 0, 260, 261, 262, 511, 514, 0,
	514, 514, 514, 514, 511, 511, 511, 514, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1416, 1416, 1416,
	517, 514, 0, 495, 496, 499, 500, 1417, 1418, 1010,
	501, 502, 964, 531, 534, 551, 549, 550, 552, 544,
	545, 546, 547, 0, 565, 566, 571, 0, 0, 0,
	0, 577, 578, 579, 0, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 718, 719, 720, 721, 722, 723,
	724, 697, 0, 711, 0, 0, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 0, 603, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 0, 833, 0, 784,
	0, 785, 793, 0, 786, 794, 787, 795, 788, 789,
	796, 790, 797, 791, 792, 798, 0, 0, 0, 603,
	603, 0, 0, 730, 0, 0, 41, 555, 556, 0,
	663, 984, 0, 45, 50, 52, 0, 0, -2, -2,
	606, 612, 613, 614, 615, 616, 42, 1414, 43, 0,
	58, 0, 0, 235, 907, 605, 0, 0, 0, 861,
	862, 865, 0, 620, 624, 0, 626, 627, 0, 593,
	0, 84, 0, 679, 0, 631, 633, 634, 635, 661,
	0, 0, 0, 0, 80, 82, 680, 0, 1377, 962,
	0, 88, 89, 0, 0, 0, 239, 967, 968, 969,
	-2, 258, 0, -2, 230, 174, 175, 176, 223, 178,
	223, 223, 223, 223, 235, 235, 235, 235, 206, 207,
	208, 209, 210, 0, 0, 193, 223, 223, 223, 223,
	213, 214, 215, 216, 217, 218, 219, 220, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 225, 225, 225,
	227, 227, 0, 39, 0, 243, 0, 865, 0, 898,
	976, 986, 0, 0, 0, 976, 106, 0, 0, 398,
	359, 387, 399, 0, 362, 363, -2, 0, 0, 349,
	0, 351, 0, 259, 0, -2, 0, 269, 0, 265,
	269, 266, 269, 257, 270, 379, 841, 0, 380, 381,
	0, 417, 649, 0, 0, 0, 0, 0, 423, 424,
	425, 0, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 388, 389, 390, 391, 392, 393, 394, 0,
	0, 351, 0, 384, 0, 306, 307, 0, 0, 310,
	311, 312, 313, 0, 0, 316, 317, 318, 666, 667,
	319, 343, 344, 345, 320, 321, 322, 323, 324, 325,
	326, 337, 338, 339, 340, 341, 342, 327, 328, 329,
	330, 331, 334, 0, 116, 889, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 974, 0, 0,
	0, 0, 681, 997, 998, 515, 516, 0, 263, 264,
	514, 514, 462, 485, 0, 514, 466, 487, 467, 469,
	468, 470, 489, 490, 514, 473, 512, 513, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 491, 0,
	492, 493, 0, 0, 532, 536, 537, 538, 539, 0,
	0, 568, 573, 574, 575, 576, 588, 581, 732, 691,
	692, 693, 695, 712, 0, 714, 716, 702, 703, 727,
	728, 729, 0, 0, 0, 0, 725, 707, 0, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 752, 816, 817, 818, 0, 750, 751, 762, 0,
	0, 0, 604, 617, 842, 0, -2, 0, 0, 0,
	0, 735, 844, 0, 735, 844, 0, 0, 0, 601,
	602, 839, 836, 0, 0, 802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 951, 0, 558, 559, 561,
	0, 683, 0, 664, 0, 0, 985, 564, 0, 628,
	607, 610, 611, 44, 905, 235, 927, 0, 871, 872,
	0, 864, 866, 867, 63, 625, 621, 0, 688, 0,
	0, 678, 0, 0, 0, 0, 0, 0, 668, 0,
	0, 671, 0, 0, 0, 0, 662, 0, 0, 0,
	0, -2, 0, 0, 0, 76, 77, 0, 0, 0,
	957, 87, 0, 0, 92, 93, 958, 959, 960, 961,
	0, 125, -2, 301, 144, 146, 147, 148, 139, 283,
	0, 0, 233, 231, 232, 177, 235, 235, 200, 201,
	239, 239, 239, 239, 0, 0, 194, 195, 196, 197,
	188, 0, 189, 190, 191, 0, 192, 276, 0, 873,
	244, 245, 247, 251, 0, 0, 0, 272, 273, 0,
	889, 0, 0, 0, 987, 986, 986, 986, 0, 134,
	135, 136, 137, 132, 0, 0, 140, 353, 352, 0,
	0, 274, 0, 0, 269, 269, 254, 255, 0, 382,
	0, 0, 419, 420, 421, 422, 0, 0, 0, 351,
	353, 239, 0, 308, 309, 314, 315, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	413, 414, 415, 886, 887, 888, 0, 0, 446, 0,
	0, 293, 78, 975, 451, 511, 472, 488, 511, 464,
	471, 518, 497, 528, 572, 0, 0, 0, 580, 0,
	713, 715, 717, 704, 725, 708, 0, 705, 0, 0,
	699, 767, 0, 0, 0, 603, 0, 771, 772, 0,
	0, 0, 0, 0, 809, 0, 0, 810, 0, 859,
	0, 837, 0, 0, 783, 803, 0, 0, 804, 805,
	806, 807, 808, 557, 560, 562, 639, 0, 0, 0,
	0, 665, 983, 0, 852, 0, 0, 628, 688, 629,
	0, 608, 909, 908, 921, 934, 236, 237, 238, 863,
	0, 868, 0, 945, 0, 0, 937, 0, 0, 688,
	953, 0, 632, 657, 659, 0, 654, 669, 670, 672,
	0, 674, 0, 676, 677, 636, 637, 638, 0, 688,
	0, 688, 81, 688, 83, 0, 682, 90, 91, 0,
	0, 97, 240, 241, 132, 303, 145, 149, 154, 0,
	0, 0, 158, 0, 160, 284, 0, 170, 172, 0,
	0, 152, 173, 234, 239, 239, 202, 203, 204, 205,
	0, 221, 0, 0, 0, 296, 102, 877, 876, 251,
	251, 246, 0, 249, 0, 988, 224, 0, 115, 0,
	0, 0, 0, 0, 121, 0, 357, 643, 0, 368,
	369, 0, 416, 0, 243, 0, 253, 256, 842, 650,
	0, 0, 370, 0, 353, 373, 374, 385, 335, 336,
	333, 0, 0, 899, 900, 0, 903, 107, 405, 407,
	406, 410, 0, 0, 403, 0, 293, 873, 0, 450,
	294, 295, 514, 514, 567, 0, 570, 0, 706, 0,
	726, 709, 768, 769, 618, 0, 843, 0, 223, 223,
	822, 223, 227, 825, 223, 827, 223, 830, 0, 0,
	0, 0, 0, 0, 0, 834, 782, 840, 0, 0,
	0, 0, 0, 0, 0, 0, 970, 971, 853, 854,
	688, 855, 630, 609, 927, 0, 920, 0, -2, 929,
	0, 0, 0, 935, 622, 64, 689, 67, 0, 945,
	936, 947, 949, 0, 0, 0, 941, 0, 859, 0,
	0, 651, 658, 0, 0, 652, 0, 653, 673, 675,
	-2, 859, 688, 74, 75, 0, 94, 95, 96, 302,
	155, 156, 0, 159, 169, 171, 0, 0, 198, 199,
	235, 0, 235, 0, 228, 0, 285, 297, 0, 874,
	875, 0, 0, 248, 250, 0, 977, 117, 0, 0,
	0, 0, 0, 141, 354, 0, 242, 0, 0, 441,
	438, 371, 372, 641, 890, 891, 892, 0, 902, 110,
	0, 0, 0, 0, 447, 448, 449, 79, 457, 463,
	569, 589, 710, 770, 773, 819, 235, 823, 824, 826,
	828, 829, 831, 775, 774, 0, 0, 0, 0, 0,
	868, 0, 838, 0, 0, 0, 0, 0, 663, 48,
	855, 857, 0, 914, 912, 912, 922, 923, 0, 0,
	930, 0, 0, 0, 0, 68, 0, 950, 0, 0,
	0, 0, 85, 868, 954, 955, 655, 0, 660, 868,
	73, 157, 0, 0, 239, 222, 239, 0, 0, 298,
	878, 879, 880, 881, 882, 883, 884, 641, 118, 119,
	120, 360, 644, 0, 0, 418, 0, 426, 0, 0,
	0, 0, 901, 404, 0, 108, 109, 0, 0, 409,
	820, 821, 0, 0, 0, 0, 811, 0, 835, 0,
	0, 0, 685, 645, 646, 0, 0, 683, 857, 66,
	0, 0, 917, 0, 910, 913, 911, 924, 0, 0,
	931, 0, 933, 0, 948, 0, 940, 943, 939, 942,
	71, 0, 72, 0, 163, 211, 212, 226, 229, 0,
	0, 278, 442, 439, 440, 0, 0, 111, 112, 0,
	0, 0, 776, 778, 777, 779, 0, 0, 0, 781,
	799, 800, 0, 684, 686, 687, 640, 65, 858, 856,
	906, 0, 915, 916, 925, 926, 932, 0, 938, 0,
	656, 279, 283, 0, 0, 893, 642, 0, 0, 0,
	411, 780, 0, 0, 0, 647, 648, 918, 919, 946,
	944, 280, 281, 0, 150, 164, 165, 0, 0, 168,
	161, 162, 893, 0, 0, 401, 895, 113, 114, 346,
	347, 348, 107, 812, 0, 815, 282, 0, 0, 0,
	166, 167, 103, 443, 444, 0, 896, 897, 110, 813,
	286, 288, 289, 0, 0, 287, 0, 408, 0, 290,
	291, 292, 894, 0, 814,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 120, 3, 3, 3, 147, 139, 3,
	83, 85, 144, 142, 84, 143, 159, 145, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 484,
	128, 127, 129, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 149, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 138, 3, 150,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 121, 122, 123, 124, 125,
	126, 130, 131, 132, 133, 134, 135, 136, 137, 140,
	141, 146, 148, 151, 152, 153, 154, 155, 156, 157,
	158, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:439
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:444
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:445
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:449
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:482
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:488
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:492
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:496
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:501
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:505
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:511
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:517
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:522
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:526
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:530
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:553
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:559
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:564
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:570
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:576
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:580
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:584
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:588
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:592
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:598
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:602
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:607
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:611
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:617
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:621
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:626
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:632
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:638
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:645
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:651
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:659
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:663
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:671
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:683
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:695
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:699
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:705
		{
			yyLOCAL = &Update{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: yyDollar[4].tableExprsUnion(), Exprs: yyDollar[6].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:711
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:715
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:719
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:723
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:728
		{
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:729
		{
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:733
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:737
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:743
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:747
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:753
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:757
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:762
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:766
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:772
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:778
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:782
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:788
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:792
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:798
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:802
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:806
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:812
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:816
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:820
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:824
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:830
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:834
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:840
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:846
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:853
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:866
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:873
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:877
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:882
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:886
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:892
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:897
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:902
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:908
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:913
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:919
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:925
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:932
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:939
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:944
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:949
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:954
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:961
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:968
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:979
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:989
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:995
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:999
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1003
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1007
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1013
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1017
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1023
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1027
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1033
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1037
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1044
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1048
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1054
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1058
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1064
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1069
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1074
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1078
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1083
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1087
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1091
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1097
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1103
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1111
		{
			yyVAL.str = ""
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1115
		{
			yyVAL.str = ""
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1124
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1128
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1134
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1140
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1145
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1150
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1155
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1160
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1167
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1171
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1176
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1180
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1185
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1191
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1197
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1202
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1209
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1213
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1217
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1221
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1227
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1238
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1243
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1249
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1253
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1261
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1265
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1277
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1281
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1287
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1293
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1299
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1305
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1311
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1319
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1341
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1345
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1357
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1361
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1365
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1369
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1373
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1377
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1381
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1385
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1389
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 211:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 212:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1398
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1404
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1408
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1412
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1416
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1420
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1424
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1428
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1432
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1438
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1443
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1448
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1452
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1457
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 226:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1461
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1469
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1473
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 229:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1479
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1487
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1491
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1495
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1500
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1504
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1509
		{
			yyVAL.str = ""
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1513
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1517
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1521
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = ""
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 242:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1541
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1550
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1556
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1560
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1566
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1570
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1575
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1579
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1585
		{
			yyVAL.str = ""
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1589
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1595
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1599
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1603
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1607
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1611
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = ""
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = yyDollar[2].str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = "key"
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = yyDollar[1].str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1669
		{
			yyVAL.str = ""
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1679
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1683
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1689
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1695
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1699
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1705
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1709
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1715
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1721
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1725
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1729
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1733
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1738
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1742
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1748
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1754
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1760
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1766
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1770
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1774
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1778
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1782
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = ""
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1800
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1804
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1808
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1817
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1823
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1827
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1831
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1837
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1841
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1847
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1851
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1855
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1859
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1863
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1867
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1871
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1875
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1879
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1883
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1887
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1891
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1895
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1899
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1903
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1907
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1911
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1915
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1919
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1923
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1927
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1931
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1935
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1939
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1943
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1947
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1951
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1955
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1960
		{
			yyVAL.str = ""
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1964
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1968
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1991
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2000
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2006
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2010
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2015
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2019
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2028
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2032
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2036
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2040
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 360:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2044
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2050
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2054
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2058
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2064
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2068
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2072
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2076
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2080
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2084
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2088
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2092
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2096
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2100
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2104
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2108
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2112
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2116
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2120
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2124
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2128
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2132
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2136
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2140
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2144
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2148
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2154
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2158
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2164
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2168
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2172
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2176
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2180
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2184
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2188
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2192
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2196
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2202
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2208
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2215
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2222
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2228
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2232
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2239
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2246
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2258
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2268
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2272
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2276
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2289
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2299
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2303
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2314
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2321
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2328
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2335
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2343
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2347
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2351
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2355
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2359
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2363
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2367
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2371
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2375
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2379
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2383
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2387
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2391
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2395
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2399
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2403
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2407
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2411
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2415
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2419
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2423
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2427
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2432
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2447
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2451
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 443:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2457
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2461
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2467
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2473
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2477
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2483
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2487
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2496
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2500
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2506
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2510
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2515
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2521
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2525
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2529
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2533
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2537
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2541
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2545
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2549
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2553
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2557
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2561
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2565
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2569
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2573
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2577
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2581
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2585
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2589
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2593
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2597
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2601
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2605
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2609
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2613
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2617
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2621
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2625
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2629
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2633
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2637
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2641
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2645
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2649
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2653
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2657
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2661
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2665
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2670
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2674
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2678
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2682
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2686
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2690
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2694
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2699
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2713
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2717
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2721
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2727
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2731
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2737
		{
			yyVAL.str = ""
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2741
		{
			yyVAL.str = "extended "
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2747
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2751
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2761
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2767
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2771
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2775
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2785
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2789
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2799
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2805
		{
			yyVAL.empty = struct{}{}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2809
		{
			yyVAL.empty = struct{}{}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2813
		{
			yyVAL.empty = struct{}{}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2819
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2823
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2829
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2833
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2839
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2845
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2849
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2854
		{
			yyVAL.empty = struct{}{}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2856
		{
			yyVAL.empty = struct{}{}
		}
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2859
		{
			yyVAL.empty = struct{}{}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2861
		{
			yyVAL.empty = struct{}{}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2866
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2872
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2877
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2881
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2885
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2889
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2893
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2897
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2903
		{
			yyVAL.str = yyDollar[1].str
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2907
		{
			yyVAL.str = yyDollar[1].str
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2911
		{
			yyVAL.str = yyDollar[1].str
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2917
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2921
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2925
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2929
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2934
		{
			yyVAL.str = ""
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2938
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2942
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2948
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2952
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2958
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2962
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2968
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:2974
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2978
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:2984
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2990
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2994
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2998
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3002
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3008
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3014
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3020
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3024
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3028
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3032
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3036
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3040
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3046
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3050
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3056
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3060
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3064
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3068
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3076
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3080
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3084
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3088
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3092
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3105
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3109
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3113
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3118
		{
			yyVAL.str = ""
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3122
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3127
		{
			setAllowComments(yylex, true)
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3131
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3137
		{
			yyVAL.strs = nil
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3141
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3147
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3151
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3155
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3160
		{
			yyVAL.str = ""
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3164
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3168
		{
			yyVAL.str = SQLCacheStr
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3173
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3177
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3181
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3186
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3190
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3195
		{
			yyVAL.strs = nil
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3199
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3203
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3207
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3211
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3217
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.str = SQLCacheStr
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3225
		{
			yyVAL.str = DistinctStr
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3229
		{
			yyVAL.str = DistinctStr
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3233
		{
			yyVAL.str = StraightJoinHint
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3237
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3241
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3247
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3251
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3257
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3261
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3265
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3269
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3274
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3278
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3282
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3289
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3294
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3298
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3304
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3310
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3314
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3324
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3328
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3332
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3338
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3344
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3348
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3357
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3363
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3367
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3373
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3377
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3381
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3385
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3391
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3395
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3408
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3412
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3416
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3420
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3426
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3428
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3432
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3434
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3438
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3440
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3443
		{
			yyVAL.empty = struct{}{}
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3445
		{
			yyVAL.empty = struct{}{}
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3448
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3452
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3456
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3463
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3469
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3473
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3477
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3483
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3489
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3493
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3497
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3501
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3507
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3511
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3521
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3525
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3531
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3535
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3541
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3550
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3554
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3558
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3562
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3567
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3571
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3577
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3581
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3585
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3589
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3593
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3597
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3601
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3605
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3621
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3625
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3631
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3635
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3639
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3643
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3647
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3651
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3655
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3659
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3663
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3667
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3673
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3677
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3681
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3685
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3689
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3693
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3699
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3703
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3707
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3711
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3715
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3719
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3723
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3732
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3738
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3742
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3746
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3753
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3759
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3763
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3769
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3773
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3777
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3781
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3785
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3789
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3793
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3797
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3801
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3805
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3809
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3813
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3817
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3821
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3825
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3829
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3833
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3837
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3841
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3845
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3849
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3853
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3857
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3861
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3865
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3869
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3873
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3877
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3881
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3885
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3903
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3907
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3911
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3915
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3925
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3929
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3933
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3937
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3941
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3945
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3949
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3953
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3957
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3961
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3965
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3969
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3973
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3977
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3987
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3991
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3995
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4000
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4005
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4010
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4016
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4021
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4026
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4030
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4034
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4039
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4044
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4049
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4053
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4057
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4067
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4077
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4081
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4085
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4089
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4093
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4097
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4101
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4107
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4111
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4115
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4119
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4123
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4129
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4133
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4137
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4143
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4147
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4151
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4155
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4159
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4163
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4169
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4173
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4177
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4181
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4185
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4189
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4193
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4202
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4207
		{
			yyVAL.str = string("")
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4211
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4217
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4221
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4227
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4232
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4236
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4242
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4246
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4250
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4256
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4260
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4264
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4268
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4272
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4276
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4280
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4285
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4291
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4300
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4304
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4314
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4323
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4332
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4338
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4344
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4348
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4354
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4359
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4363
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4367
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4376
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4382
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4386
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4390
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4399
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4403
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4407
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4411
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4418
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4422
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4426
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4430
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4436
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4440
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4444
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = ""
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4453
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4457
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4461
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4466
		{
			yyVAL.str = ""
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4470
		{
			yyVAL.str = yyDollar[3].str
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4485
		{
			yyVAL.str = ""
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4489
		{
			yyVAL.str = yyDollar[2].str
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4494
		{
			yyVAL.str = "cascaded"
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4498
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4507
		{
			yyVAL.str = ""
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4511
		{
			yyVAL.str = yyDollar[3].str
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4521
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4525
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4529
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4535
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4539
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4545
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4549
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4553
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4558
		{
			yyVAL.str = ""
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4562
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4566
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4571
		{
			yyVAL.str = ""
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4575
		{
			yyVAL.str = " header"
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4580
		{
			yyVAL.str = ""
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4584
		{
			yyVAL.str = " manifest on"
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4588
		{
			yyVAL.str = " manifest off"
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4593
		{
			yyVAL.str = ""
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4597
		{
			yyVAL.str = " overwrite on"
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4601
		{
			yyVAL.str = " overwrite off"
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4607
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4612
		{
			yyVAL.str = ""
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4616
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4622
		{
			yyVAL.str = yyDollar[1].str
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4626
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4632
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4636
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = ""
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4651
		{
			yyVAL.str = yyDollar[1].str
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4655
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4661
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4665
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4669
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4674
		{
			yyVAL.str = ""
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4678
		{
			yyVAL.str = " optionally"
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4691
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4695
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4699
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4703
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4707
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4713
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4717
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4721
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4725
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4734
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4740
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4744
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4750
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4754
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4760
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4766
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4776
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4780
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4786
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4792
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4796
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4802
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4806
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4810
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4814
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4818
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4826
		{
			yyVAL.str = "charset"
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4836
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4840
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4844
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4853
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4855
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4858
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4860
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4863
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4865
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4868
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4870
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4873
		{
			yyVAL.empty = struct{}{}
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.empty = struct{}{}
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4877
		{
			yyVAL.empty = struct{}{}
		}
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4881
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4886
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4890
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4897
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4901
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4907
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4911
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4918
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4924
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4928
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4934
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4938
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4945
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5384
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5393
		{
			decNesting(yylex)
		}
	case 1415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5398
		{
			skipToEnd(yylex)
		}
	case 1416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5403
		{
			skipToEnd(yylex)
		}
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5407
		{
			skipToEnd(yylex)
		}
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5411
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
